test_start mixer_test_nonsync_port

#instantiate mixer
OMX_GetHandle    mixer OMX.ST.AFM.mixer

#OMX_SetConfig mixer  ENS_IndexConfigTraceSetting nTraceEnable=0xff nParentHandle=0x11


#Disable all unused mixer ports
OMX_SendCommand mixer OMX_CommandPortDisable 2
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandPortDisable 2
OMX_SendCommand mixer OMX_CommandPortDisable 3
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandPortDisable 3
OMX_SendCommand mixer OMX_CommandPortDisable 4
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandPortDisable 4
OMX_SendCommand mixer OMX_CommandPortDisable 5
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandPortDisable 5
OMX_SendCommand mixer OMX_CommandPortDisable 6
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandPortDisable 6
OMX_SendCommand mixer OMX_CommandPortDisable 7
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandPortDisable 7
OMX_SendCommand mixer OMX_CommandPortDisable 8
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandPortDisable 8

# configure mixer
OMX_SetParameter    mixer OMX_IndexParamAudioPcm nPortIndex=1 nChannels=1 nSamplingRate=8000 eEndian=OMX_EndianBig eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter    mixer OMX_IndexParamAudioPcm nPortIndex=0 nChannels=1 nSamplingRate=8000 eEndian=OMX_EndianBig eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter    mixer OMX_IndexParamAudioSynchronized nPortIndex=1 bIsSynchronized=OMX_FALSE

MMTE_attach_io       mixer 1 MEM $(AUDIO_STREAMS)/samplerateconv/streams/Portal_8m.pcm 0 0 0
MMTE_set_nb_buffer   mixer 1 5
alias OUTPUT_FILE   $(OUTPUT_DIR)/mixer_nonsync.out
alias REFFILE       $(AUDIO_STREAMS)/mixer/streams/mixer_nonsync.out.ref
MMTE_attach_io       mixer 0 MEM $(OUTPUT_FILE) 2000000 0 0
MMTE_set_nb_buffer   mixer 0 5

# Go to Idle
OMX_SendCommand mixer  OMX_CommandStateSet OMX_StateIdle
MMTE_AllocateBuffers mixer 0
MMTE_AllocateBuffers mixer 1
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandStateSet OMX_StateIdle

#TEST_LAUNCHER_CMD: ignore OMX_ErrorUnderflow

# Go to Executing 
OMX_SendCommand mixer  OMX_CommandStateSet OMX_StateExecuting
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandStateSet OMX_StateExecuting

# wait until our input buffers have been processed
MMTE_wait_transfer mixer 1
MMTE_wait_transfer mixer 0

# mixer should generate underflow event on port 1 as no more input buffers are provided
MMTE_WaitEvent mixer OMX_EventError OMX_ErrorUnderflow 1

MMTE_resume_transfer mixer 0 3

MMTE_wait_transfer mixer 0

# pause the mixer to stop any buffer exchange
OMX_SendCommand mixer  OMX_CommandStateSet OMX_StatePause
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandStateSet OMX_StatePause

# flush events to get rid of any queued underflow event
MMTE_FlushReceivedEvent

# Go to Executing 
OMX_SendCommand mixer  OMX_CommandStateSet OMX_StateExecuting
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandStateSet OMX_StateExecuting

# send some more buffers on port 0
MMTE_resume_transfer mixer 0 3
# wait until our input buffers have been processed


# mixer should generate underflow events on port 1 as no more input buffers are provided
# check that at least 2 events are generated
MMTE_WaitEvent mixer OMX_EventError OMX_ErrorUnderflow 1
MMTE_WaitEvent mixer OMX_EventError OMX_ErrorUnderflow 1

MMTE_wait_transfer mixer 0

# pause the mixer to stop any buffer exchange
OMX_SendCommand mixer  OMX_CommandStateSet OMX_StatePause
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandStateSet OMX_StatePause

#TEST_LAUNCHER_CMD: consider OMX_ErrorUnderflow

# flush events to get rid of any queued underflow event
MMTE_FlushReceivedEvent

# pause input port
OMX_SetConfig mixer OMX_IndexConfigAudioPortpause nPortIndex=1 bIsPaused=OMX_TRUE 

# enable input port 2 (Synchronized)
OMX_SetParameter    mixer OMX_IndexParamAudioPcm nPortIndex=2 nChannels=1 nSamplingRate=8000 eEndian=OMX_EndianBig eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter    mixer OMX_IndexParamAudioSynchronized nPortIndex=2 bIsSynchronized=OMX_TRUE
MMTE_attach_io       mixer 2 MEM $(AUDIO_STREAMS)/samplerateconv/streams/Portal_8m.pcm 0 0 0
OMX_SendCommand mixer OMX_CommandPortEnable  2
MMTE_AllocateBuffers mixer 2
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandPortEnable 2


# Go to Executing 
OMX_SendCommand mixer  OMX_CommandStateSet OMX_StateExecuting
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandStateSet OMX_StateExecuting

# wait a bit. No UNderflow should be reported for port 1 as port is paused

OMX_SendCommand mixer  OMX_CommandStateSet OMX_StateIdle
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandStateSet OMX_StateIdle


OMX_SendCommand mixer OMX_CommandStateSet OMX_StateLoaded
MMTE_FreeBuffers mixer 0
MMTE_FreeBuffers mixer 1
MMTE_FreeBuffers mixer 2
MMTE_WaitEvent mixer OMX_EventCmdComplete OMX_CommandStateSet OMX_StateLoaded

OMX_FreeHandle mixer


mmte_check_CBmessage

MMTE_CheckMemoryStatus


test_end
