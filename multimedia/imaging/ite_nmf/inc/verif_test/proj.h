
#ifndef _PROJ_H_
#define _PROJ_H_

/****************************************************************************************
*                     Copyright STMicroelectronics
*              All rights reserved, COMPANY CONFIDENTIAL
*     Unauthorized reproduction and communication strictly prohibited
*----------------------------------------------------------------------------------------
*                   System Platforms Group - IP&Design/SPG
*----------------------------------------------------------------------------------------
*  This C header file was automatically generated by 'spirit2regtest' utility from the
*  SPIRIT description of the component.
*
*  Purpose : It declares C preprocessor definitions for component, register and 
*            register fields parameters
*
*  Generated by spirit2regtest v1.7.6
*
*  PLEASE DO NOT MODIFY THIS FILE
****************************************************************************************/


/*
* Component section
* Purpose : defines macros for component
*           specific informations
*/

#define PROJ_VENDOR                                         ("st.com")
#define PROJ_LIBRARY                                        ("orphan_component")
#define PROJ_NAME                                           ("PROJ")
#define PROJ_VERSION                                        ("0.0")

/*
* Address Block : PROJ
*/

#define PROJ_PROJ_BASE_ADDR                                 (0x54200)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : PROJ_ENR
*/

#define PROJ_PROJ_ENR_SIZE                                  (16)
#define PROJ_PROJ_ENR_OFFSET                                (PROJ_PROJ_BASE_ADDR + 0x00)
#define PROJ_PROJ_ENR_RESET_VALUE                           (0x00)
#define PROJ_PROJ_ENR_BITFIELD_MASK                         (0x0003)
#define PROJ_PROJ_ENR_RWMASK                                (0x0003)
#define PROJ_PROJ_ENR_ROMASK                                (0x0000)
#define PROJ_PROJ_ENR_WOMASK                                (0x0000)
#define PROJ_PROJ_ENR_UNUSED_MASK                           (0xFFFC)
#define PROJ_PROJ_ENR_HCP_OFFSET                            (0x0000)
#define PROJ_PROJ_ENR_HCP_WIDTH                             (1)
#define PROJ_PROJ_ENR_HCP_MASK                              (0x0001)
#define PROJ_PROJ_ENR_VCP_OFFSET                            (0x0001)
#define PROJ_PROJ_ENR_VCP_WIDTH                             (1)
#define PROJ_PROJ_ENR_VCP_MASK                              (0x0002)

/*
* Register : PROJ_ITS
*/

#define PROJ_PROJ_ITS_SIZE                                  (16)
#define PROJ_PROJ_ITS_OFFSET                                (PROJ_PROJ_BASE_ADDR + 0x10)
#define PROJ_PROJ_ITS_RESET_VALUE                           (0x00)
#define PROJ_PROJ_ITS_BITFIELD_MASK                         (0x000B)
#define PROJ_PROJ_ITS_RWMASK                                (0x0000)
#define PROJ_PROJ_ITS_ROMASK                                (0x000B)
#define PROJ_PROJ_ITS_WOMASK                                (0x0000)
#define PROJ_PROJ_ITS_UNUSED_MASK                           (0xFFF4)
#define PROJ_PROJ_ITS_HCP_EOT_OFFSET                        (0x0000)
#define PROJ_PROJ_ITS_HCP_EOT_WIDTH                         (1)
#define PROJ_PROJ_ITS_HCP_EOT_MASK                          (0x0001)
#define PROJ_PROJ_ITS_HCP_EOT_B_0x0                         (0x0000)
#define PROJ_PROJ_ITS_HCP_EOT_B_0x1                         (0x0001)
#define PROJ_PROJ_ITS_VCP_EOT_OFFSET                        (0x0001)
#define PROJ_PROJ_ITS_VCP_EOT_WIDTH                         (1)
#define PROJ_PROJ_ITS_VCP_EOT_MASK                          (0x0002)
#define PROJ_PROJ_ITS_VCP_EOT_B_0x0                         (0x0000)
#define PROJ_PROJ_ITS_VCP_EOT_B_0x1                         (0x0001)
#define PROJ_PROJ_ITS_VCP_ERR_OFFSET                        (0x0003)
#define PROJ_PROJ_ITS_VCP_ERR_WIDTH                         (1)
#define PROJ_PROJ_ITS_VCP_ERR_MASK                          (0x0008)
#define PROJ_PROJ_ITS_VCP_ERR_B_0x0                         (0x0000)
#define PROJ_PROJ_ITS_VCP_ERR_B_0x1                         (0x0001)

/*
* Register : PROJ_ITS_BCLR
*/

#define PROJ_PROJ_ITS_BCLR_SIZE                             (16)
#define PROJ_PROJ_ITS_BCLR_OFFSET                           (PROJ_PROJ_BASE_ADDR + 0x12)
#define PROJ_PROJ_ITS_BCLR_RESET_VALUE                      (0x00)
#define PROJ_PROJ_ITS_BCLR_BITFIELD_MASK                    (0x000B)
#define PROJ_PROJ_ITS_BCLR_RWMASK                           (0x0000)
#define PROJ_PROJ_ITS_BCLR_ROMASK                           (0x0000)
#define PROJ_PROJ_ITS_BCLR_WOMASK                           (0x000B)
#define PROJ_PROJ_ITS_BCLR_UNUSED_MASK                      (0xFFF4)
#define PROJ_PROJ_ITS_BCLR_HCP_EOT_OFFSET                   (0x0000)
#define PROJ_PROJ_ITS_BCLR_HCP_EOT_WIDTH                    (1)
#define PROJ_PROJ_ITS_BCLR_HCP_EOT_MASK                     (0x0001)
#define PROJ_PROJ_ITS_BCLR_HCP_EOT_B_0x0                    (0x0000)
#define PROJ_PROJ_ITS_BCLR_HCP_EOT_B_0x1                    (0x0001)
#define PROJ_PROJ_ITS_BCLR_VCP_EOT_OFFSET                   (0x0001)
#define PROJ_PROJ_ITS_BCLR_VCP_EOT_WIDTH                    (1)
#define PROJ_PROJ_ITS_BCLR_VCP_EOT_MASK                     (0x0002)
#define PROJ_PROJ_ITS_BCLR_VCP_EOT_B_0x0                    (0x0000)
#define PROJ_PROJ_ITS_BCLR_VCP_EOT_B_0x1                    (0x0001)
#define PROJ_PROJ_ITS_BCLR_VCP_ERR_OFFSET                   (0x0003)
#define PROJ_PROJ_ITS_BCLR_VCP_ERR_WIDTH                    (1)
#define PROJ_PROJ_ITS_BCLR_VCP_ERR_MASK                     (0x0008)
#define PROJ_PROJ_ITS_BCLR_VCP_ERR_B_0x0                    (0x0000)
#define PROJ_PROJ_ITS_BCLR_VCP_ERR_B_0x1                    (0x0001)

/*
* Register : PROJ_ITS_BSET
*/

#define PROJ_PROJ_ITS_BSET_SIZE                             (16)
#define PROJ_PROJ_ITS_BSET_OFFSET                           (PROJ_PROJ_BASE_ADDR + 0x14)
#define PROJ_PROJ_ITS_BSET_RESET_VALUE                      (0x00)
#define PROJ_PROJ_ITS_BSET_BITFIELD_MASK                    (0x000B)
#define PROJ_PROJ_ITS_BSET_RWMASK                           (0x0000)
#define PROJ_PROJ_ITS_BSET_ROMASK                           (0x0000)
#define PROJ_PROJ_ITS_BSET_WOMASK                           (0x000B)
#define PROJ_PROJ_ITS_BSET_UNUSED_MASK                      (0xFFF4)
#define PROJ_PROJ_ITS_BSET_HCP_EOT_OFFSET                   (0x0000)
#define PROJ_PROJ_ITS_BSET_HCP_EOT_WIDTH                    (1)
#define PROJ_PROJ_ITS_BSET_HCP_EOT_MASK                     (0x0001)
#define PROJ_PROJ_ITS_BSET_HCP_EOT_B_0x0                    (0x0000)
#define PROJ_PROJ_ITS_BSET_HCP_EOT_B_0x1                    (0x0001)
#define PROJ_PROJ_ITS_BSET_VCP_EOT_OFFSET                   (0x0001)
#define PROJ_PROJ_ITS_BSET_VCP_EOT_WIDTH                    (1)
#define PROJ_PROJ_ITS_BSET_VCP_EOT_MASK                     (0x0002)
#define PROJ_PROJ_ITS_BSET_VCP_EOT_B_0x0                    (0x0000)
#define PROJ_PROJ_ITS_BSET_VCP_EOT_B_0x1                    (0x0001)
#define PROJ_PROJ_ITS_BSET_VCP_ERR_OFFSET                   (0x0003)
#define PROJ_PROJ_ITS_BSET_VCP_ERR_WIDTH                    (1)
#define PROJ_PROJ_ITS_BSET_VCP_ERR_MASK                     (0x0008)
#define PROJ_PROJ_ITS_BSET_VCP_ERR_B_0x0                    (0x0000)
#define PROJ_PROJ_ITS_BSET_VCP_ERR_B_0x1                    (0x0001)

/*
* Register : PROJ_ITM
*/

#define PROJ_PROJ_ITM_SIZE                                  (16)
#define PROJ_PROJ_ITM_OFFSET                                (PROJ_PROJ_BASE_ADDR + 0x16)
#define PROJ_PROJ_ITM_RESET_VALUE                           (0x00)
#define PROJ_PROJ_ITM_BITFIELD_MASK                         (0x000B)
#define PROJ_PROJ_ITM_RWMASK                                (0x0000)
#define PROJ_PROJ_ITM_ROMASK                                (0x000B)
#define PROJ_PROJ_ITM_WOMASK                                (0x0000)
#define PROJ_PROJ_ITM_UNUSED_MASK                           (0xFFF4)
#define PROJ_PROJ_ITM_HCP_EOT_OFFSET                        (0x0000)
#define PROJ_PROJ_ITM_HCP_EOT_WIDTH                         (1)
#define PROJ_PROJ_ITM_HCP_EOT_MASK                          (0x0001)
#define PROJ_PROJ_ITM_HCP_EOT_B_0x0                         (0x0000)
#define PROJ_PROJ_ITM_HCP_EOT_B_0x1                         (0x0001)
#define PROJ_PROJ_ITM_VCP_EOT_OFFSET                        (0x0001)
#define PROJ_PROJ_ITM_VCP_EOT_WIDTH                         (1)
#define PROJ_PROJ_ITM_VCP_EOT_MASK                          (0x0002)
#define PROJ_PROJ_ITM_VCP_EOT_B_0x0                         (0x0000)
#define PROJ_PROJ_ITM_VCP_EOT_B_0x1                         (0x0001)
#define PROJ_PROJ_ITM_VCP_ERR_OFFSET                        (0x0003)
#define PROJ_PROJ_ITM_VCP_ERR_WIDTH                         (1)
#define PROJ_PROJ_ITM_VCP_ERR_MASK                          (0x0008)
#define PROJ_PROJ_ITM_VCP_ERR_B_0x0                         (0x0000)
#define PROJ_PROJ_ITM_VCP_ERR_B_0x1                         (0x0001)

/*
* Register : PROJ_ITM_BCLR
*/

#define PROJ_PROJ_ITM_BCLR_SIZE                             (16)
#define PROJ_PROJ_ITM_BCLR_OFFSET                           (PROJ_PROJ_BASE_ADDR + 0x18)
#define PROJ_PROJ_ITM_BCLR_RESET_VALUE                      (0x00)
#define PROJ_PROJ_ITM_BCLR_BITFIELD_MASK                    (0x000B)
#define PROJ_PROJ_ITM_BCLR_RWMASK                           (0x0000)
#define PROJ_PROJ_ITM_BCLR_ROMASK                           (0x0000)
#define PROJ_PROJ_ITM_BCLR_WOMASK                           (0x000B)
#define PROJ_PROJ_ITM_BCLR_UNUSED_MASK                      (0xFFF4)
#define PROJ_PROJ_ITM_BCLR_HCP_EOT_OFFSET                   (0x0000)
#define PROJ_PROJ_ITM_BCLR_HCP_EOT_WIDTH                    (1)
#define PROJ_PROJ_ITM_BCLR_HCP_EOT_MASK                     (0x0001)
#define PROJ_PROJ_ITM_BCLR_HCP_EOT_B_0x0                    (0x0000)
#define PROJ_PROJ_ITM_BCLR_HCP_EOT_B_0x1                    (0x0001)
#define PROJ_PROJ_ITM_BCLR_VCP_EOT_OFFSET                   (0x0001)
#define PROJ_PROJ_ITM_BCLR_VCP_EOT_WIDTH                    (1)
#define PROJ_PROJ_ITM_BCLR_VCP_EOT_MASK                     (0x0002)
#define PROJ_PROJ_ITM_BCLR_VCP_EOT_B_0x0                    (0x0000)
#define PROJ_PROJ_ITM_BCLR_VCP_EOT_B_0x1                    (0x0001)
#define PROJ_PROJ_ITM_BCLR_VCP_ERR_OFFSET                   (0x0003)
#define PROJ_PROJ_ITM_BCLR_VCP_ERR_WIDTH                    (1)
#define PROJ_PROJ_ITM_BCLR_VCP_ERR_MASK                     (0x0008)
#define PROJ_PROJ_ITM_BCLR_VCP_ERR_B_0x0                    (0x0000)
#define PROJ_PROJ_ITM_BCLR_VCP_ERR_B_0x1                    (0x0001)

/*
* Register : PROJ_ITM_BSET
*/

#define PROJ_PROJ_ITM_BSET_SIZE                             (16)
#define PROJ_PROJ_ITM_BSET_OFFSET                           (PROJ_PROJ_BASE_ADDR + 0x1A)
#define PROJ_PROJ_ITM_BSET_RESET_VALUE                      (0x00)
#define PROJ_PROJ_ITM_BSET_BITFIELD_MASK                    (0x000B)
#define PROJ_PROJ_ITM_BSET_RWMASK                           (0x0000)
#define PROJ_PROJ_ITM_BSET_ROMASK                           (0x0000)
#define PROJ_PROJ_ITM_BSET_WOMASK                           (0x000B)
#define PROJ_PROJ_ITM_BSET_UNUSED_MASK                      (0xFFF4)
#define PROJ_PROJ_ITM_BSET_HCP_EOT_OFFSET                   (0x0000)
#define PROJ_PROJ_ITM_BSET_HCP_EOT_WIDTH                    (1)
#define PROJ_PROJ_ITM_BSET_HCP_EOT_MASK                     (0x0001)
#define PROJ_PROJ_ITM_BSET_HCP_EOT_B_0x0                    (0x0000)
#define PROJ_PROJ_ITM_BSET_HCP_EOT_B_0x1                    (0x0001)
#define PROJ_PROJ_ITM_BSET_VCP_EOT_OFFSET                   (0x0001)
#define PROJ_PROJ_ITM_BSET_VCP_EOT_WIDTH                    (1)
#define PROJ_PROJ_ITM_BSET_VCP_EOT_MASK                     (0x0002)
#define PROJ_PROJ_ITM_BSET_VCP_EOT_B_0x0                    (0x0000)
#define PROJ_PROJ_ITM_BSET_VCP_EOT_B_0x1                    (0x0001)
#define PROJ_PROJ_ITM_BSET_VCP_ERR_OFFSET                   (0x0003)
#define PROJ_PROJ_ITM_BSET_VCP_ERR_WIDTH                    (1)
#define PROJ_PROJ_ITM_BSET_VCP_ERR_MASK                     (0x0008)
#define PROJ_PROJ_ITM_BSET_VCP_ERR_B_0x0                    (0x0000)
#define PROJ_PROJ_ITM_BSET_VCP_ERR_B_0x1                    (0x0001)

/*
* Register : PROJ_HSIZE
*/

#define PROJ_PROJ_HSIZE_SIZE                                (16)
#define PROJ_PROJ_HSIZE_OFFSET                              (PROJ_PROJ_BASE_ADDR + 0x20)
#define PROJ_PROJ_HSIZE_RESET_VALUE                         (0x00)
#define PROJ_PROJ_HSIZE_BITFIELD_MASK                       (0x1FF0)
#define PROJ_PROJ_HSIZE_RWMASK                              (0x1FF0)
#define PROJ_PROJ_HSIZE_ROMASK                              (0x0000)
#define PROJ_PROJ_HSIZE_WOMASK                              (0x0000)
#define PROJ_PROJ_HSIZE_UNUSED_MASK                         (0xE00F)
#define PROJ_PROJ_HSIZE_HSIZE_OFFSET                        (0x0004)
#define PROJ_PROJ_HSIZE_HSIZE_WIDTH                         (9)
#define PROJ_PROJ_HSIZE_HSIZE_MASK                          (0x1FF0)

/*
* Register : PROJ_VSIZE
*/

#define PROJ_PROJ_VSIZE_SIZE                                (16)
#define PROJ_PROJ_VSIZE_OFFSET                              (PROJ_PROJ_BASE_ADDR + 0x22)
#define PROJ_PROJ_VSIZE_RESET_VALUE                         (0x00)
#define PROJ_PROJ_VSIZE_BITFIELD_MASK                       (0x1FF0)
#define PROJ_PROJ_VSIZE_RWMASK                              (0x1FF0)
#define PROJ_PROJ_VSIZE_ROMASK                              (0x0000)
#define PROJ_PROJ_VSIZE_WOMASK                              (0x0000)
#define PROJ_PROJ_VSIZE_UNUSED_MASK                         (0xE00F)
#define PROJ_PROJ_VSIZE_VSIZE_OFFSET                        (0x0004)
#define PROJ_PROJ_VSIZE_VSIZE_WIDTH                         (9)
#define PROJ_PROJ_VSIZE_VSIZE_MASK                          (0x1FF0)

/*
* Register : PROJ_GCF_W_DIS
*/

#define PROJ_PROJ_GCF_W_DIS_SIZE                            (16)
#define PROJ_PROJ_GCF_W_DIS_OFFSET                          (PROJ_PROJ_BASE_ADDR + 0x30)
#define PROJ_PROJ_GCF_W_DIS_RESET_VALUE                     (0x00)
#define PROJ_PROJ_GCF_W_DIS_BITFIELD_MASK                   (0x0001)
#define PROJ_PROJ_GCF_W_DIS_RWMASK                          (0x0001)
#define PROJ_PROJ_GCF_W_DIS_ROMASK                          (0x0000)
#define PROJ_PROJ_GCF_W_DIS_WOMASK                          (0x0000)
#define PROJ_PROJ_GCF_W_DIS_UNUSED_MASK                     (0xFFFE)
#define PROJ_PROJ_GCF_W_DIS_GCF_W_DIS_OFFSET                (0x0000)
#define PROJ_PROJ_GCF_W_DIS_GCF_W_DIS_WIDTH                 (1)
#define PROJ_PROJ_GCF_W_DIS_GCF_W_DIS_MASK                  (0x0001)
#define PROJ_PROJ_GCF_W_DIS_GCF_W_DIS_B_0x0                 (0x0000)
#define PROJ_PROJ_GCF_W_DIS_GCF_W_DIS_B_0x1                 (0x0001)

/*
* Register : PROJ_ENDIAN
*/

#define PROJ_PROJ_ENDIAN_SIZE                               (16)
#define PROJ_PROJ_ENDIAN_OFFSET                             (PROJ_PROJ_BASE_ADDR + 0x40)
#define PROJ_PROJ_ENDIAN_RESET_VALUE                        (0x00)
#define PROJ_PROJ_ENDIAN_BITFIELD_MASK                      (0x0001)
#define PROJ_PROJ_ENDIAN_RWMASK                             (0x0001)
#define PROJ_PROJ_ENDIAN_ROMASK                             (0x0000)
#define PROJ_PROJ_ENDIAN_WOMASK                             (0x0000)
#define PROJ_PROJ_ENDIAN_UNUSED_MASK                        (0xFFFE)
#define PROJ_PROJ_ENDIAN_ENDIAN_OFFSET                      (0x0000)
#define PROJ_PROJ_ENDIAN_ENDIAN_WIDTH                       (1)
#define PROJ_PROJ_ENDIAN_ENDIAN_MASK                        (0x0001)
#define PROJ_PROJ_ENDIAN_ENDIAN_B_0x0                       (0x0000)
#define PROJ_PROJ_ENDIAN_ENDIAN_B_0x1                       (0x0001)

#endif /* _PROJ_H_ */
