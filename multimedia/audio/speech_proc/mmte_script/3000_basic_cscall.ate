#######################################################################################################
# This script tests the CS-Call and speech_proc connection (test ARM prop com)
#
# Audio Network Description:
#                                +--------------+
#   +--------------+             |             4| --> DL_OUT_FILE
#   |              |             |              |
#   |           ..0| ----------> |1             |
#   |   CS-Call .  |             |  speechproc 2X
#   |           ..1| <---------  /3             |
#   |              |             |              |
#   +--------------+             |             0| <-- UL_IN_FILE
#                                +--------------+
# Script's arguments:
#   None
#######################################################################################################

alias TEST_ID SP_3000

test_start SP_3000 cscall_speech_proc
goto_end_on_error

#I/Os parameters
alias SAMPLING_RATE   8000
alias NB_CHANNELS     1

alias UL_IN_FILE      $(AUDIO_STREAMS)/speech_proc/streams/T04.INP

alias DL_OUT_FILE     $(OUTPUT_DIR)/$(TEST_ID).downlink.pcm
alias DL_OUT_SIZE     3000000

alias CS_OUT    0
alias CS_IN     1
alias CS_CTL    2

alias SP_UL_IN  0
alias SP_DL_IN  1
alias SP_REF_IN 2
alias SP_UL_OUT 3
alias SP_DL_OUT 4
alias SP_CTRL   5

# trace level
# Generic  : 1-ERROR  2-WARNING  4-FLOW  8-DEBUG  16-API  32-OMX-API  64-OMX-BUFFER  128-RESERVED
# specific : 256-PCM-DL-IN  512-PCM-DL-OUT  1024-PCM-UL-IN  2048-PCM-REF-IN  4096-PCM-UL-OUT
if "$($1)" != ""
  alias TRACE_LEVEL $($1)
else
  alias TRACE_LEVEL 0
endif

# clean previous OMX event if any 
MMTE_FlushReceivedEvent

#start test
#CSCALL
OMX_GetHandle    cscall  OMX.ST.AFM.cscall

OMX_SetParameter cscall  OMX_IndexParamPortDefinition nPortIndex=$(CS_IN)  nBufferCountActual=2
OMX_SetParameter cscall  OMX_IndexParamPortDefinition nPortIndex=$(CS_OUT) nBufferCountActual=2
OMX_SetParameter cscall  OMX_IndexParamAudioPcm nPortIndex=$(CS_IN)  nChannels=$(NB_CHANNELS) eEndian=OMX_EndianLittle nSamplingRate=$(SAMPLING_RATE)
OMX_SetParameter cscall  OMX_IndexParamAudioPcm nPortIndex=$(CS_OUT) nChannels=$(NB_CHANNELS) eEndian=OMX_EndianLittle nSamplingRate=$(SAMPLING_RATE)

#Setting Config for Loops
OMX_SetConfig    cscall  OMX_Symbian_IndexConfigAudioSpeechLoops bLoopUplinkDownlinkAlg=1

#Setting Config for received callback when speech codec is enabled
OMX_SetConfig    cscall  OMX_IndexConfigCallbackRequest nIndex=OMX_Symbian_IndexConfigAudioCodecEnabled bEnable=OMX_TRUE
#Setting Config for received callback when speech codec is disabled
OMX_SetConfig    cscall  OMX_IndexConfigCallbackRequest nIndex=OMX_Symbian_IndexConfigAudioCodecDisabled bEnable=OMX_TRUE
# activate trace
if $(TRACE_LEVEL) > 0
  OMX_SetConfig cscall ENS_IndexConfigTraceSetting nTraceEnable=$(TRACE_LEVEL)
endif

# Disable all ports
OMX_SendCommand  cscall  OMX_CommandPortDisable $(CS_IN)
MMTE_WaitEvent   cscall  OMX_EventCmdComplete OMX_CommandPortDisable $(CS_IN)
OMX_SendCommand  cscall  OMX_CommandPortDisable $(CS_OUT)
MMTE_WaitEvent   cscall  OMX_EventCmdComplete OMX_CommandPortDisable $(CS_OUT)
OMX_SendCommand  cscall  OMX_CommandPortDisable $(CS_CTL)
MMTE_WaitEvent   cscall  OMX_EventCmdComplete OMX_CommandPortDisable $(CS_CTL)


# Speech Processing
OMX_GetHandle    speechproc  OMX.ST.AFM.speech_proc
# configure port
OMX_SetParameter speechproc  OMX_IndexParamPortDefinition nPortIndex=$(SP_UL_IN)  nBufferCountActual=2
OMX_SetParameter speechproc  OMX_IndexParamPortDefinition nPortIndex=$(SP_DL_IN)  nBufferCountActual=2
OMX_SetParameter speechproc  OMX_IndexParamPortDefinition nPortIndex=$(SP_REF_IN) nBufferCountActual=2
OMX_SetParameter speechproc  OMX_IndexParamPortDefinition nPortIndex=$(SP_UL_OUT) nBufferCountActual=2
OMX_SetParameter speechproc  OMX_IndexParamPortDefinition nPortIndex=$(SP_DL_OUT) nBufferCountActual=2
OMX_SetParameter speechproc  OMX_IndexParamAudioPcm       nPortIndex=$(SP_UL_IN)  nChannels=1 eEndian=OMX_EndianLittle nSamplingRate=8000 eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter speechproc  OMX_IndexParamAudioPcm       nPortIndex=$(SP_DL_IN)  nChannels=1 eEndian=OMX_EndianLittle nSamplingRate=8000 eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter speechproc  OMX_IndexParamAudioPcm       nPortIndex=$(SP_REF_IN) nChannels=1 eEndian=OMX_EndianLittle nSamplingRate=8000 eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter speechproc  OMX_IndexParamAudioPcm       nPortIndex=$(SP_UL_OUT) nChannels=1 eEndian=OMX_EndianLittle nSamplingRate=8000 eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter speechproc  OMX_IndexParamAudioPcm       nPortIndex=$(SP_DL_OUT) nChannels=1 eEndian=OMX_EndianLittle nSamplingRate=8000 eChannelMapping[0]=OMX_AUDIO_ChannelCF

# Disable all ports
OMX_SendCommand speechproc OMX_CommandPortDisable $(SP_DL_IN)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_DL_IN)
OMX_SendCommand speechproc OMX_CommandPortDisable $(SP_DL_OUT)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_DL_OUT)
OMX_SendCommand speechproc OMX_CommandPortDisable $(SP_UL_IN)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_UL_IN)
OMX_SendCommand speechproc OMX_CommandPortDisable $(SP_UL_OUT)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_UL_OUT)
OMX_SendCommand speechproc OMX_CommandPortDisable $(SP_REF_IN)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_REF_IN)
#OMX_SendCommand speechproc OMX_CommandPortDisable $(SP_CTRL)
#MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_CTRL)

# Activate bypass mode
OMX_SetParameter  speechproc AFM.Param.SpeechProc bBypassUplink=OMX_TRUE bBypassDownlink=OMX_TRUE



# connect all
OMX_SetupTunnel  cscall     $(CS_OUT)    speechproc $(SP_DL_IN)
OMX_SetupTunnel  speechproc $(SP_UL_OUT) cscall     $(CS_IN)

ate_attach_io speechproc  $(SP_DL_OUT) MEM $(DL_OUT_FILE) $(DL_OUT_SIZE) 0
ate_attach_io speechproc  $(SP_UL_IN)  MEM $(UL_IN_FILE)  0              1 


# break loop so that transition from loaded->idle, idle->executing and executing->idle goes well
OMX_SetParameter speechproc OMX_IndexParamCompBufferSupplier nPortIndex=$(SP_UL_OUT) eBufferSupplier=OMX_BufferSupplyInput
OMX_SetParameter cscall     OMX_IndexParamCompBufferSupplier nPortIndex=$(CS_IN)     eBufferSupplier=OMX_BufferSupplyInput

# Put network in idle state
OMX_SendCommand	speechproc OMX_CommandStateSet OMX_StateIdle
MMTE_WaitEvent speechproc OMX_EventCmdComplete OMX_CommandStateSet OMX_StateIdle

OMX_SendCommand	cscall OMX_CommandStateSet OMX_StateIdle
MMTE_WaitEvent cscall OMX_EventCmdComplete OMX_CommandStateSet OMX_StateIdle


# Put network in executing state
OMX_SendCommand	speechproc OMX_CommandStateSet OMX_StateExecuting
MMTE_WaitEvent speechproc OMX_EventCmdComplete OMX_CommandStateSet OMX_StateExecuting

OMX_SendCommand	cscall OMX_CommandStateSet OMX_StateExecuting
MMTE_WaitEvent cscall OMX_EventCmdComplete OMX_CommandStateSet OMX_StateExecuting


# enable port
OMX_SendCommand speechproc OMX_CommandPortEnable  $(SP_DL_OUT)
MMTE_AllocateBuffers speechproc $(SP_DL_OUT)
MMTE_WaitEvent speechproc OMX_EventCmdComplete OMX_CommandPortEnable $(SP_DL_OUT)

OMX_SendCommand speechproc OMX_CommandPortEnable  $(SP_DL_IN)
OMX_SendCommand cscall     OMX_CommandPortEnable  $(CS_OUT)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortEnable $(SP_DL_IN)
MMTE_WaitEvent  cscall     OMX_EventCmdComplete OMX_CommandPortEnable $(CS_OUT)

OMX_SendCommand speechproc OMX_CommandPortEnable  $(SP_UL_OUT)
OMX_SendCommand cscall     OMX_CommandPortEnable  $(CS_IN)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortEnable $(SP_UL_OUT)
MMTE_WaitEvent  cscall     OMX_EventCmdComplete OMX_CommandPortEnable $(CS_IN)


OMX_SendCommand speechproc OMX_CommandPortEnable  $(SP_UL_IN)
MMTE_AllocateBuffers speechproc $(SP_UL_IN)
MMTE_WaitEvent speechproc OMX_EventCmdComplete OMX_CommandPortEnable $(SP_UL_IN)


#Setting Config for Speech Codec Request
OMX_SetConfig    cscall  AFM_IndexConfigCscallSpeechCodecReq nCodingType=OMX_AUDIO_CodingAMR nBandModeTypeDecoder=OMX_AUDIO_AMRBandModeNB3
#Setting Config for Speech Timing Request + launch 5s loopback call
OMX_SetConfig    cscall  AFM_IndexConfigCscallSpeechTimingReq nDeliveryTime=30000

#Wait for callback when speech codec is enabled : CALL_START!
MMTE_WaitEvent cscall OMX_EventIndexSettingChanged OMX_ALL OMX_Symbian_IndexConfigAudioCodecEnabled

mmte_sleep 5000

#Setting Config for Speech Codec Request
OMX_SetConfig    cscall  AFM_IndexConfigCscallSpeechCodecReq nCodingType=OMX_AUDIO_CodingUnused

#Wait for callback when speech codec is disabled : CALL END!
MMTE_WaitEvent cscall OMX_EventIndexSettingChanged OMX_ALL OMX_Symbian_IndexConfigAudioCodecDisabled

MMTE_WaitEvent speechproc OMX_EventBufferFlag $(SP_DL_OUT)
#Setting Config for Speech Codec Request Complete


#disable ports
OMX_SendCommand speechproc OMX_CommandPortDisable $(SP_UL_IN)
MMTE_wait_nontunneled_buffers speechproc $(SP_UL_IN)
MMTE_FreeBuffers speechproc $(SP_UL_IN)
MMTE_WaitEvent speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_UL_IN)

OMX_SendCommand cscall     OMX_CommandPortDisable  $(CS_IN)
OMX_SendCommand speechproc OMX_CommandPortDisable  $(SP_UL_OUT)
MMTE_WaitEvent  cscall     OMX_EventCmdComplete OMX_CommandPortDisable $(CS_IN)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_UL_OUT)

OMX_SendCommand cscall     OMX_CommandPortDisable  $(CS_OUT)
OMX_SendCommand speechproc OMX_CommandPortDisable  $(SP_DL_IN)
MMTE_WaitEvent  cscall     OMX_EventCmdComplete OMX_CommandPortDisable $(CS_OUT)
MMTE_WaitEvent  speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_DL_IN)

OMX_SendCommand speechproc OMX_CommandPortDisable $(SP_DL_OUT)
MMTE_wait_nontunneled_buffers speechproc $(SP_DL_OUT)
MMTE_FreeBuffers speechproc $(SP_DL_OUT)
MMTE_WaitEvent speechproc OMX_EventCmdComplete OMX_CommandPortDisable $(SP_DL_OUT)


# Put back network in idle state
MMTE_DispatchState OMX_StateIdle speechproc cscall

# put network in Loaded state
MMTE_DispatchState OMX_StateLoaded speechproc cscall

OMX_FreeHandle speechproc
OMX_FreeHandle cscall

MMTE_CheckMemoryStatus

# clean remaining OMX event
MMTE_FlushReceivedEvent

# remove aliases
unalias UL_IN_FILE
unalias DL_OUT_FILE
unalias DL_OUT_SIZE
unalias SP_UL_IN  
unalias SP_DL_IN  
unalias SP_REF_IN 
unalias SP_UL_OUT 
unalias SP_DL_OUT
unalias SP_CTRL  
unalias CS_OUT
unalias CS_IN
unalias CS_CTL
unalias TEST_ID
test_end
