Sign Tool CLI A2(1)
===================

NAME
----
Sign Tool A2 - required to sign the software used by ST Ericsson(tm) HW.

SYNOPSIS
--------
*sign-tool-a2* [-h] [-v] [-f] [-e] [-c] -t target -p package input output

DESCRIPTION
-----------
It is necessary to sign the software to be able to flash software
to the mobile equipment. This is a requirement regardless
of whether it is loaders, app or acc SW. During the sign process
it is possible to encrypt and/or compress a loader as well.

As default this tool will decide output file format through the
suffix placed at end of the input file.
This behaviour can be altered by adding this argument,
--format KIND, where KIND is replaced with the format used.
*NOTICE:* This is not same as -s or --ptype.

Run with --test if is is necessary to test the sign procedure
without overwriting the target.

It is necessary to set a list of sign servers to use in
the $SIGNSERVER environment.

ENVIRONMENT VARIABLES
---------------------
It is necessary to set *SIGNSERVER and *SIGNPACKAGEROOT* environment
variables if a sign server is going to be used to do the signing.

It is necessary to set *LOCAL_SIGNPACKAGEROOT* and *LOCAL_KEYROOT*
environment variables if local signing (user have access to keys)
is used.

For more informations see file:signing.html[ Step by step information about setting up sign server ]

OPTIONS
-------
*-h, --help*::
    Show this main page.

*-e, --encrypt*::
    Encrypt the signed loader.

*-c, --compress*::
    Compress the signed loader.

*-t, --target*='TARGET CPU'::
    Set target CPU, possible values: app, acc.

*-p, --sign-package*::
    Set sign package to use.

*-l, --list*::
    List sign packages on sign server.

*-i, --in-format*='INFORMAT'::
    Set the kind of input file format.
    Possible arguments: bin, a01, z01, p01, elf.

*-o, --out-format*='OUTFORMAT'::
    Set the kind of output file format.
    Possible arguments: ssw, ldr.

*-d, --dryrun*::
    To enable fake mode. The software will never be signed.
    Combine with -v to see what will happen fake when mode is disabled.

*-v, --verbose*::
    To enable visual output to stdout.

*-f, --force*::
    Force overwrite if output already
    exists.

*-b, --test*::
    Same as -f -v
		
*--local*::
    Disables the use of sign server and uses local sign packages and
    keys. This requires LOCAL_KEYROOT and LOCAL_SIGNPACKAGEROOT system
    variables to be set. To enable loader encryption, also
    LOCAL_ENCRYPTIONKEYROOT shall be set.

*-ss, --sign-servers* '<sign-servers_list>'::
	Overwrites the value for the enviroment variable SIGNSERVER
	
*-spr, --sign-package-root* '<path_to_sign-package-root>'::
	Overwrites the value for the enviroment variable SIGNPACKAGEROOT	
	
*-lspr, --local-sign-package-root* '<path_to_local-sign-package-root>'::
	Overwrites the value for the enviroment variable LOCAL_SIGNPACKAGEROOT

*-lkr, --local-key-root* '<path_to_local-key-root>'::
	Overwrites the value for the enviroment variable LOCAL_KEYROOT
	
*-lekr, --local-encription-key-root* '<path_to_local-encription-key-root>'::
	Overwrites the value for the enviroment variable LOCAL_ENCRYPTIONKEYROOT
	
ADVANCED OPTIONS
----------------
*-m, --mac-mode*='MAC MODE'::
    Set MAC mode, possible argument: Config, 2ndSBC, 3rdSBC, 4thSBC, SW, License, Mac7, Mac8.
    *Defaults to 2ndSBC*

*-s, --sw-type*='SW TYPE'::
    Set SW type, possible argument: image, loader, prologue, generic, archive, elf, flash.
    *Defaults to image*

*--interactive*='INTERACTIVE MODE'::
    Set Interactive load bit, possible argument: static, interactive.
    *Defaults to static*

*--app-sec*='APP SEC'::
    Set Application security, possible argument: on, off, dataLoading, pafDependent.
    *Defaults to on*

*--hdr-sec*='HEADER SEC'::
    Set Header security, possible argument: storeAsIs=0xdestAddr, replaceSign=0xdestAddr, verifyOnly.
    *Defaults to verifyOnly*

*--ptype*='MEMORY TYPE'::
    Set payload type, possible argument: nand, nor, physical.
    *Defaults to nand*

*--addr-format*::
    Set address format(Only for NAND and physical), possible argument: pagesonly, pagesand4Bredundant.
    4B can be used instead of pagesand4Bredundant, with the same behavior.
    *Defaults to pagesonly*

*--debug*::
    Enable debug in the signed file
    *Default: disabled*

*--disable-etx-real*::
    Disable the ETX level real time.

*-x, --enable-etx-real*::
    Enable ETX level real time.
    *This is default*

*--disable-etx-header*::
    Disable ETX level header updated.

*-u, --enable-etx-header*::
    Enable ETX level header updated.
    *This is default*

*--short-mac*::
    Enable short MAC header.
    *Default: disabled*

*-a, --anti-rollback*::
    Require anti-rollback.
    *Default: disabled*

*--align*::
    Enable alignment.
    *Default: disabled*

*--s3-length*='DEC VALUE'::
    Set S3 length, will only work if input filetype is a01.
    Possible argument: 32b.
    *Defaults to 32*

*--sw-version*='DEC VALUE'::
    SW version (dec).
    *Defaults to ? FIXME*

EXAMPLES
--------

Command line signing
~~~~~~~~~~~~~~~~~~~~

Signing software with target acc:
*sign-tool-a2* -t acc -p CUST_19_DB3350_DEVELOPMENT \~/cxc000000_CS_ACC_3SBC.a01 \~/cxc000000_CS_ACC_3SBC.ssw

Sign and encrypt loader:
*sign-tool-a2* -e -t acc -p CUST_19_DB3350_DEVELOPMENT \~/android/loaders/acc_preloader.bin \~/android/loaders/acc_preloader.ldr

EXIT STATUS
-----------
sign-tool-a2 returns a zero exit status if it succeeds during signing.
A non zero is returned in case of failure.

*0*::
    Success

*1*::
    Unknown error

*2*::
    No sign server specified, add a list to
    env. var. $SIGNSERVER.
    (Will never return this value in fake mode.)

*3*::
    Could not access the sign server

*4*::
    Access to sign package denied.
