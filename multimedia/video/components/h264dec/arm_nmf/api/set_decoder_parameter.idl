// Common interface between splitter and decoder 
#include <arm_codec_type.idt>

interface h264dec.arm_nmf.api.set_decoder_parameter {

void set_memory_ctxt(t_uint16 ack, void *mem_ctxt);
void set_nParallelDeblocking(t_uint16 ack, t_uint16 nParallelDeblocking);
void set_SupportedExtension(t_uint16 ack, t_uint32 nSupportedExtension);
void set_Framerate(t_uint16 ack, t_uint32 nFramerate);
void set_Thumbnail(t_uint16 ack, t_uint16 bThumbnailGeneration);
void set_ImmediateRelease(t_uint16 ack, t_uint16 bImmediateRelease);
void set_RestrictLevel(t_uint16 ack, t_uint16 level, t_uint16 is1080pCapable);
// +CR324558 CHANGE START FOR
void set_picsize(t_uint16 ack, t_uint16 pic_width, t_uint16 pic_height, t_uint32 dpb_size);
// -CR324558 CHANGE END OF
void set_par(t_uint16 ack, t_uint16 par_width, t_uint16 par_height);
void set_cropping(	t_uint16 ack, 
                    t_uint16 frame_cropping_flag, 
		  			t_uint16 frame_crop_right, 
		  			t_uint16 frame_crop_left, 
		  			t_uint16 frame_crop_top, 
		  			t_uint16 frame_crop_bottom);
void set_colorspace(t_uint16 ack, t_uint16 colorspace);
void set_error_map(t_uint16 ack, t_uint8* error_map);
void set_sva_bypass(t_uint16 ack, t_uint16 sva_bypass);

}
