; Initiate the database
; Assumes the database is initially empty

; don't fsync() every write
PRAGMA synchronous=OFF;
PRAGMA temp_store=memory;


; Create the tables

  CREATE TABLE GlobalSettings (Name TEXT PRIMARY KEY, Data TEXT);

  CREATE TABLE DeviceMap (Name TEXT PRIMARY KEY, InternalName TEXT,
    FOREIGN KEY (InternalName) REFERENCES Device(Name));

  CREATE TABLE Device
   (Name TEXT PRIMARY KEY, AppEffectChainName TEXT, CommonEffectChainName TEXT,
   IOTemplateName TEXT, IOHandler TEXT, PreEffect TEXT, ExternalDelay INTEGER,
   Direction TEXT);

  CREATE TABLE EffectChainDef
   (Name TEXT,
    TemplateName TEXT,
    Position INTEGER,
    FOREIGN KEY (TemplateName) REFERENCES Template_OMXName(Name));

  CREATE TABLE Template_OMXName
   (Name TEXT PRIMARY KEY,
    OMXName TEXT);

  CREATE TABLE Template_Config
   (Name TEXT, ConfigType TEXT, IndexName TEXT,
   StructDef TEXT, StructData TEXT);

  CREATE TABLE StructData
   (Name TEXT, Param TEXT, Value TEXT);

  CREATE TABLE StructDef
   (Name TEXT, Param TEXT, Type TEXT, Size INTEGER, Offset INTEGER);

  CREATE TABLE SpeechConfig
   (InDev TEXT, OutDev TEXT, SampleRate INTEGER,
    InDevEffectChainName TEXT, OutDevEffectChainName TEXT,
    SpeechTemplateName TEXT, SidetonePreset TEXT, ANCPreset TEXT,
    FOREIGN KEY(InDev) REFERENCES Device(Name),
    FOREIGN KEY(OutDev) REFERENCES Device(Name),
    FOREIGN KEY(ANCPreset) REFERENCES HW_Settings_ANC(Preset));

; Tables for Alsactrl >>>>>>>>>>>>>>>

  CREATE TABLE HW_Settings_Combo
   (Codec TEXT KEY, Dev1 TEXT, Dev2 TEXT, Dev3 TEXT, Dev4 TEXT, Dev5 TEXT, Dev6 TEXT, Idx_Data INTEGER);
  CREATE TABLE HW_Settings_Combo_D2D
   (Codec TEXT KEY, Src TEXT, Dst TEXT, Idx_Data INTEGER);
  CREATE TABLE HW_Settings_GDev
   (Device TEXT KEY, Idx_Data INTEGER);
  CREATE TABLE HW_Settings_SDev
   (Device TEXT KEY, Idx_Data INTEGER);
  CREATE TABLE HW_Settings_Data
   (Idx INTEGER PRIMARY KEY, Data TEXT);
  CREATE TABLE HW_Settings_Data_D2D
   (Idx INTEGER PRIMARY KEY, Data TEXT);
  CREATE TABLE HW_Settings_FIR
   (Preset TEXT PRIMARY KEY, Gain INTEGER,
                     c0 INTEGER,   c1 INTEGER,   c2 INTEGER,   c3 INTEGER,   c4 INTEGER,   c5 INTEGER,   c6 INTEGER,   c7 INTEGER,
                     c8 INTEGER,   c9 INTEGER,   c10 INTEGER,  c11 INTEGER,  c12 INTEGER,  c13 INTEGER,  c14 INTEGER,  c15 INTEGER,
                     c16 INTEGER,  c17 INTEGER,  c18 INTEGER,  c19 INTEGER,  c20 INTEGER,  c21 INTEGER,  c22 INTEGER,  c23 INTEGER,
                     c24 INTEGER,  c25 INTEGER,  c26 INTEGER,  c27 INTEGER,  c28 INTEGER,  c29 INTEGER,  c30 INTEGER,  c31 INTEGER,
                     c32 INTEGER,  c33 INTEGER,  c34 INTEGER,  c35 INTEGER,  c36 INTEGER,  c37 INTEGER,  c38 INTEGER,  c39 INTEGER,
                     c40 INTEGER,  c41 INTEGER,  c42 INTEGER,  c43 INTEGER,  c44 INTEGER,  c45 INTEGER,  c46 INTEGER,  c47 INTEGER,
                     c48 INTEGER,  c49 INTEGER,  c50 INTEGER,  c51 INTEGER,  c52 INTEGER,  c53 INTEGER,  c54 INTEGER,  c55 INTEGER,
                     c56 INTEGER,  c57 INTEGER,  c58 INTEGER,  c59 INTEGER,  c60 INTEGER,  c61 INTEGER,  c62 INTEGER,  c63 INTEGER,
                     c64 INTEGER,  c65 INTEGER,  c66 INTEGER,  c67 INTEGER,  c68 INTEGER,  c69 INTEGER,  c70 INTEGER,  c71 INTEGER,
                     c72 INTEGER,  c73 INTEGER,  c74 INTEGER,  c75 INTEGER,  c76 INTEGER,  c77 INTEGER,  c78 INTEGER,  c79 INTEGER,
                     c80 INTEGER,  c81 INTEGER,  c82 INTEGER,  c83 INTEGER,  c84 INTEGER,  c85 INTEGER,  c86 INTEGER,  c87 INTEGER,
                     c88 INTEGER,  c89 INTEGER,  c90 INTEGER,  c91 INTEGER,  c92 INTEGER,  c93 INTEGER,  c94 INTEGER,  c95 INTEGER,
                     c96 INTEGER,  c97 INTEGER,  c98 INTEGER,  c99 INTEGER,  c100 INTEGER, c101 INTEGER, c102 INTEGER, c103 INTEGER,
                     c104 INTEGER, c105 INTEGER, c106 INTEGER, c107 INTEGER, c108 INTEGER, c109 INTEGER, c110 INTEGER, c111 INTEGER,
                     c112 INTEGER, c113 INTEGER, c114 INTEGER, c115 INTEGER, c116 INTEGER, c117 INTEGER, c118 INTEGER, c119 INTEGER,
                     c120 INTEGER, c121 INTEGER, c122 INTEGER, c123 INTEGER, c124 INTEGER, c125 INTEGER, c126 INTEGER, c127 INTEGER); 

  CREATE TABLE HW_Settings_ANC
   (Preset TEXT PRIMARY KEY,
                     c0 INTEGER,   c1 INTEGER,   c2 INTEGER,   c3 INTEGER,   c4 INTEGER,   c5 INTEGER,   c6 INTEGER,   c7 INTEGER,
                     c8 INTEGER,   c9 INTEGER,   c10 INTEGER,  c11 INTEGER,  c12 INTEGER,  c13 INTEGER,  c14 INTEGER,  c15 INTEGER,
                     c16 INTEGER,  c17 INTEGER,  c18 INTEGER,  c19 INTEGER,  c20 INTEGER,  c21 INTEGER,  c22 INTEGER,  c23 INTEGER,
                     c24 INTEGER,  c25 INTEGER,  c26 INTEGER,  c27 INTEGER,  c28 INTEGER,  c29 INTEGER,  c30 INTEGER,  c31 INTEGER,
                     c32 INTEGER,  c33 INTEGER,  c34 INTEGER,  c35 INTEGER,  c36 INTEGER,  c37 INTEGER,  c38 INTEGER,  c39 INTEGER,
                     c40 INTEGER,  c41 INTEGER,  c42 INTEGER);

  CREATE TABLE HW_Settings_Mics
   (Dev TEXT PRIMARY KEY, Type TEXT, NMics INTEGER, Mic0 TEXT, Mic1 TEXT, Mic2 TEXT, Mic3 TEXT, Mic4 TEXT, Mic5 TEXT);

  CREATE INDEX EffectChainDefName ON EffectChainDef(Name);

  CREATE INDEX Template_ConfigName ON Template_Config(Name);

  CREATE INDEX StructDataName  ON StructData(Name);
  CREATE INDEX StructDataParam ON StructData(Param);

  CREATE INDEX StructDefName  ON StructDef(Name);
  CREATE INDEX StructDefParam ON StructDef(Param);

  CREATE INDEX EffectChainDefNameTemplateName ON EffectChainDef(Name, TemplateName);

  CREATE INDEX SpeechConfigInDevOutDev ON SpeechConfig(InDev, OutDev, SampleRate);

  CREATE INDEX HW_Settings_ComboIdx ON HW_Settings_Combo(Codec, Dev1, Dev2, Dev3, Dev4, Dev5, Dev6);

  CREATE INDEX HW_Settings_ComboIdx_D2D ON HW_Settings_Combo_D2D(Codec, Src, Dst);
; Clean up database
VACUUM
