/*
 * Copyright (C) ST-Ericsson SA 2010. All rights reserved.
 * This code is ST-Ericsson proprietary and confidential.
 * Any use of the code for whatever purpose is subject to
 * specific written permission of ST-Ericsson SA.
 */

#ifndef INCLUSION_GUARD_T_SYSTEM_H
#define INCLUSION_GUARD_T_SYSTEM_H

/*************************************************************************
*
* DESCRIPTION:
*  
* This file should contain system wide declarations that doesn't have
* to be portable (all portable types shall be defined in t_basicdefinitions.h).
*
* System function category defines also the interface that 
* should be used to obtain the various system's identification strings.
* The device identification strings should not be accessed directly. Instead,
* a Do_ function has been defined to obtain values for these strings. 
* The idea is that the user of these strings will not have to modify their
* code if they are moved to an other CPU (in a multi CPU product).
* Notice that there are strings generated by the build tool that are not
* customizable.
*
* It is assumed that the .c source file (c_device_indentification_strings.c) that 
* contains the constant string definitions will be delivered to the platform customer. 
* This file should then be modified/compiled/linked with the rest of the delivered platform 
* object files by the customer when configuring the platform in a given end product.
*
* NOTE: THIS FILE SHALL BE KEPT AS SMALL AS POSSIBLE!!!
*       PUTTING SOMETHING HERE MEANS THAT YOU HAVE
*       INVESTIGATED ALL OTHER POSSIBILITIES AND FOUND
*       THAT THIS IS THE ONLY PLACE THAT REMAINS!!!!  
*
*************************************************************************/

#include "t_basicdefinitions.h"
#include "t_catdefinitions.h"

/** The definition of the System category id. */
#define CAT_ID_SYSTEM 4
CAT_INTERVAL_DEFINITION(CAT_ID_SYSTEM)

/**
* The definition of ASCII type to use in platform.
*/
typedef uint8 ASCII_t;

/**
* The EEPROM and SIM values.
*
* @param EEPROM The EEPROM value. Note that this value must not be altered (used as index in arrays).
* @param SIM    The SIM value. Note that this value must not be altered (used as index in arrays).
*/
enum
{
  EEPROM = 0,
  SIM    = 1
};

/**
* The definition of Memory_e type to use in platform.
*/
typedef uint8 Memory_e;

/** The max size, in bytes, for the vendor name system identification string. */
#define SYS_MAX_SIZE_VENDOR_NAME             17

/** The max size, in bytes, for the vendor id PNP system identification string. */
#define SYS_MAX_SIZE_VENDOR_ID_PNP           4

/** The max size, in bytes, for the vendor id USB system identification string. */
#define SYS_MAX_SIZE_VENDOR_ID_USB           5

/** The max size, in bytes, for the vendor id Bluetooth system identification string. */
#define SYS_MAX_SIZE_VENDOR_ID_BLUETOOTH     5

/** The max size, in bytes, for the product name system identification string. */
#define SYS_MAX_SIZE_PRODUCT_NAME            41

/** The max size, in bytes, for the product id system identification string. */
#define SYS_MAX_SIZE_PRODUCT_ID              5

/** The max size, in bytes, for the modem IFC system identification string. */
#define SYS_MAX_SIZE_MODEM_IFC_DESCR         100

/** The max size, in bytes, for the OBEX IFC system identification string. */
#define SYS_MAX_SIZE_OBEX_IFC_DESCR_USB      100

/** The max size, in bytes, for the device management IFC system identification string. */
#define SYS_MAX_SIZE_DEV_MGMT_IFC_DESCR_USB  100

/** The max size, in bytes, for the USB product version system identification string. */
#define SYS_MAX_SIZE_USB_PRODUCT_VERSION     5

/** The max size, in bytes, for the Bluetooth pc driver URL system identification string. */
#define SYS_MAX_SIZE_BT_PC_DRIVER_URL        256

/** The max size, in bytes, for the Bluetooth documentation URL identification string. */
#define SYS_MAX_SIZE_BT_DOCUMENTATION_URL    256

/** The max size, in bytes, for the product version identification string. */
#define SYS_MAX_SIZE_PRODUCT_VERSION         5

/** The max size, in bytes, for the Bluetooth vendor id system identification string. */
#define SYS_MAX_SIZE_BT_VENDOR_ID_SOURCE     5

/** The max size, in bytes, for the SW id (Date + Time + Label + Variant) system identification string. */
#define SYS_MAX_SIZE_SW_ID                   100

/** The max size, in bytes, for the SW product id (Label + Variant) system identification string. */
#define SYS_MAX_SIZE_SW_PRODUCT_ID           100

/** The max size, in bytes, for the SW version (Label) system identification string. */
#define SYS_MAX_SIZE_SW_VERSION              100

/** The max size, in bytes, for the build info product nbr (e.g. CXC123456) system identification string. */
#define SYS_MAX_SIZE_BUILDINFO_PRODUCT_NBR   32

/** The max size, in bytes, for the mass storage vendor USB system identification string. */
#define SYS_MAX_SIZE_MASS_STORAGE_VENDOR_DESCR_USB  11

/** The max size, in bytes, for the mass storage product USB system identification string. */
#define SYS_MAX_SIZE_MASS_STORAGE_PRODUCT_DESCR_USB 17

/** The max size, in bytes, for the SIC product USB system identification string. */
#define SYS_MAX_SIZE_SIC_PRODUCT_DESCR_USB          64

/** The max size, in bytes, for the CDC ethernet IFC USB system identification string. */
#define SYS_MAX_SIZE_CDC_ETH_IFC_DESCR_USB          64

/** The max size, in bytes, for the Ethernet data IFC USB system identification string. */
#define SYS_MAX_SIZE_ETH_DATA_IFC_DESCR_USB         64

/** The max size, in bytes, for the Ethernet comm IFC USB system identification string. */
#define SYS_MAX_SIZE_ETH_COMM_IFC_DESCR_USB         64

/** The max size, in bytes, for the Ethernet nil setting IFC usb system identification string. */
#define SYS_MAX_SIZE_ETH_NILSETTING_IFC_DESCR_USB   64

/** The max size, in bytes, for the Ethernet bulk data USB system identification string. */
#define SYS_MAX_SIZE_ETH_BULKDATA_DESCR_USB         64

/** The max size, in bytes, for the Ethernet bulk data wrapper USB system identification string. */
#define SYS_MAX_SIZE_ETH_BULKDATA_WRAPPER_DESCR_USB 64

/** The max size, in bytes, for the MTP product description system identification string. */
#define SYS_MAX_SIZE_MTP_PRODUCT_DESCR              256

/** The max size, in bytes, for the MTP vendor name system identification string. */
#define SYS_MAX_SIZE_MTP_VENDOR_NAME                256

#ifndef SKIP_IN_REF_MAN
/** Defines for backwards compatibility. */
#define SYS_MAX_SIZE_MANUFACTURER     SYS_MAX_SIZE_VENDOR_NAME
#define SYS_MAX_SIZE_PNP_EISA_ID      SYS_MAX_SIZE_VENDOR_ID_PNP
#define SYS_MAX_SIZE_DEVICE_MODEL_ID  SYS_MAX_SIZE_PRODUCT_NAME
#define SYS_MAX_SIZE_PNP_PRODUCT_ID   SYS_MAX_SIZE_PRODUCT_ID
#define SYS_MAX_SIZE_SW_VERSION_DATE  SYS_MAX_SIZE_SW_VERSION

#endif // SKIP_IN_REF_MAN

/**
 * This enum lists all the available system id strings that can be read.
 *
 * @param SYS_VENDOR_NAME                     The name of the system vendor.
 * @param SYS_VENDOR_ID_PNP                   The PNP vendor id.
 * @param SYS_VENDOR_ID_USB                   The id of the USB vendor.
 * @param SYS_VENDOR_ID_BLUETOOTH             The id of the BT vendor.
 * @param SYS_PRODUCT_NAME                    The name of the product.
 * @param SYS_PRODUCT_ID_IRDA                 The product id if IrDA.
 * @param SYS_PRODUCT_ID_USB                  The USB product id.
 * @param SYS_PRODUCT_ID_USB_MSC_ONLY         The USB MSC only product id.
 * @param SYS_PRODUCT_ID_BLUETOOTH            The BT product id.
 * @param SYS_PRODUCT_ID_RS232                The RS232 product id.
 * @param SYS_PRODUCT_ID_USB_SIC_ONLY         The USB SIC only product id (PID for SIC device class).
 * 
 * @param SYS_MODEM_IFC_DESCR_IRDA            The modem interface description for IrDA.
 * @param SYS_MODEM_IFC_DESCR_USB             The modem interface description for USB.
 * @param SYS_MODEM_IFC_DESCR_BLUETOOTH       The modem interface description for BT.
 * @param SYS_MODEM_IFC_DESCR_RS232           The modem interface description for RS232.
 * @param SYS_MODEM_IFC_DESCR_USB_DATA        The modem interface description for USB data.

 * @param SYS_OBEX_IFC_DESCR_USB              The obex interface description for USB.
 * @param SYS_DEV_MGMT_IFC_DESCR_USB          The device management interface description for USB.

 * @param SYS_USB_PRODUCT_VERSION             The USB product version.

 * @param SYS_BT_PC_DRIVER_URL                The bluetooth pc driver URL.
 * @param SYS_BT_DOCUMENTATION_URL            The bluetooth documentation URL.
 * @param SYS_PRODUCT_VERSION                 The product version.
 * @param SYS_BT_VENDOR_ID_SOURCE             The bluetooth vendor id source.

 * @param SYS_SW_ID                           The software id.
 * @param SYS_SW_PRODUCT_ID                   The software product id.
 * @param SYS_SW_VERSION                      The software version.
 * @param SYS_BUILDINFO_PRODUCT_NBR           The build info product number.

 * @param SYS_MASS_STORAGE_VENDOR_DESCR_USB   The mass storage vendor description for USB.
 * @param SYS_MASS_STORAGE_PRODUCT_DESCR_USB  The mass storage product description for USB.

 * @param SYS_SIC_PRODUCT_DESCR_USB           The name of USB SIC product description.
 * @param SYS_CDC_ETH_IFC_DESCR_USB           The name of USB CDC Ethernet class master interface.
 * @param SYS_ETH_DATA_IFC_DESCR_USB          The name of USB Ethernet Data class master interface.
 * @param SYS_ETH_COMM_IFC_DESCR_USB          The name of USB Ethernet Communication class master interface.
 * @param SYS_ETH_NILSETTING_IFC_DESCR_USB    The name of USB Ethernet Communication class data interface, alternate setting 0.
 * @param SYS_ETH_BULKDATA_DESCR_USB          The name of USB Ethernet Communication class data interface, alternate setting 1 - used for bulk data.
 * @param SYS_ETH_BULKDATA_WRAPPER_DESCR_USB  The name of USB Ethernet Communication class data interface, alternate setting 2 - used for bulk data wrapper.
 * @param SYS_MTP_PRODUCT_DESCR               Product name while connecting ME as MTP device. Used in DeviceInfo dataset Model field.
 * @param SYS_MTP_VENDOR_NAME                 Human-readable string that identifies the manufacturer of MTP device. 
 *                                            See Manufacturer field of DeviceInfo Dataset in MTP specification.
 * 
 * @param SYS_NUMBER_OF_PARAMETERS The number of system strings. Should always be last.
 */
typedef enum
{
  SYS_VENDOR_NAME,        
  SYS_MANUFACTURER = SYS_VENDOR_NAME,                      // obsolete

  SYS_VENDOR_ID_PNP,
  SYS_PNP_EISA_ID  = SYS_VENDOR_ID_PNP,                    // obsolete

  SYS_VENDOR_ID_USB,
  SYS_VENDOR_ID_BLUETOOTH,

  SYS_PRODUCT_NAME,
  SYS_DEVICE_MODEL_ID = SYS_PRODUCT_NAME,                  // obsolete

  SYS_PRODUCT_ID_IRDA,
  SYS_PNP_PRODUCT_ID_IRDA      = SYS_PRODUCT_ID_IRDA,      // obsolete
  SYS_PRODUCT_ID_USB,
  SYS_PNP_PRODUCT_ID_USB       = SYS_PRODUCT_ID_USB,       // obsolete
  SYS_PRODUCT_ID_USB_MSC_ONLY,
  SYS_PRODUCT_ID_BLUETOOTH,
  SYS_PNP_PRODUCT_ID_BLUETOOTH = SYS_PRODUCT_ID_BLUETOOTH, // obsolete
  SYS_PRODUCT_ID_RS232,
  SYS_PNP_PRODUCT_ID_RS232     = SYS_PRODUCT_ID_RS232,     // obsolete
  SYS_PRODUCT_ID_USB_SIC_ONLY,

  SYS_MODEM_IFC_DESCR_IRDA,
  SYS_MODEM_IFC_DESCR_USB,
  SYS_MODEM_IFC_DESCR_BLUETOOTH,
  SYS_MODEM_IFC_DESCR_RS232,
  SYS_MODEM_IFC_DESCR_USB_DATA,

  SYS_OBEX_IFC_DESCR_USB,
  SYS_DEV_MGMT_IFC_DESCR_USB,

  SYS_USB_PRODUCT_VERSION,                                 // obsolete

  SYS_BT_PC_DRIVER_URL,
  SYS_BT_DOCUMENTATION_URL,
  SYS_PRODUCT_VERSION,
  SYS_BT_VENDOR_ID_SOURCE,

  SYS_SW_ID,
  SYS_SW_PRODUCT_ID,
  SYS_SW_VERSION,
  SYS_SW_VERSION_DATE = SYS_SW_VERSION, // Obsolete. Use SYS_SW_VERSION.
  SYS_BUILDINFO_PRODUCT_NBR,

  SYS_MASS_STORAGE_VENDOR_DESCR_USB,
  SYS_MASS_STORAGE_PRODUCT_DESCR_USB,

  SYS_SIC_PRODUCT_DESCR_USB,
  SYS_CDC_ETH_IFC_DESCR_USB,
  SYS_ETH_DATA_IFC_DESCR_USB,
  SYS_ETH_COMM_IFC_DESCR_USB,
  SYS_ETH_NILSETTING_IFC_DESCR_USB,
  SYS_ETH_BULKDATA_DESCR_USB,
  SYS_ETH_BULKDATA_WRAPPER_DESCR_USB,
  SYS_MTP_PRODUCT_DESCR,
  SYS_MTP_VENDOR_NAME,

  SYS_NUMBER_OF_PARAMETERS
} Sys_ParameterId_t;

/**
 * This enum lists all the available system id strings that can be read. These enums are used to retrieve the
 * system strings in a different version.
 *
 * @param SYS_STR_VENDOR_NAME                     The name of the system vendor.
 * @param SYS_STR_VENDOR_ID_PNP                   The PNP vendor id.
 * @param SYS_STR_VENDOR_ID_USB                   The id of the USB vendor.
 * @param SYS_STR_VENDOR_ID_BLUETOOTH             The id of the BT vendor.
 * @param SYS_STR_PRODUCT_NAME                    The name of the product.
 * @param SYS_STR_PRODUCT_ID_IRDA                 The product id if IrDA.
 * @param SYS_STR_PRODUCT_ID_USB                  The USB product id.
 * @param SYS_STR_PRODUCT_ID_USB_MSC_ONLY         The USB MSC only product id.
 * @param SYS_STR_PRODUCT_ID_BLUETOOTH            The BT product id.
 * @param SYS_STR_PRODUCT_ID_RS232                The RS232 product id.
 * @param SYS_STR_PRODUCT_ID_USB_SIC_ONLY         The USB SIC only product id (PID for SIC device class).
 * 
 * @param SYS_STR_MODEM_IFC_DESCR_IRDA            The modem interface description for IrDA.
 * @param SYS_STR_MODEM_IFC_DESCR_USB             The modem interface description for USB.
 * @param SYS_STR_MODEM_IFC_DESCR_BLUETOOTH       The modem interface description for BT.
 * @param SYS_STR_MODEM_IFC_DESCR_RS232           The modem interface description for RS232.
 * @param SYS_STR_MODEM_IFC_DESCR_USB_DATA        The modem interface description for USB data.

 * @param SYS_STR_OBEX_IFC_DESCR_USB              The obex interface description for USB.
 * @param SYS_STR_DEV_MGMT_IFC_DESCR_USB          The device management interface description for USB.

 * @param SYS_STR_USB_PRODUCT_VERSION             The USB product version.

 * @param SYS_STR_BT_PC_DRIVER_URL                The bluetooth pc driver URL.
 * @param SYS_STR_BT_DOCUMENTATION_URL            The bluetooth documentation URL.
 * @param SYS_STR_PRODUCT_VERSION                 The product version.
 * @param SYS_STR_BT_VENDOR_ID_SOURCE             The bluetooth vendor id source.

 * @param SYS_STR_BUILDINFO_DATETIME              The build info date and time.
 * @param SYS_STR_BUILDINFO_SIGNUM                The build info signum.
 * @param SYS_STR_BUILDINFO_LABEL                 The build info label.
 * @param SYS_STR_BUILDINFO_VARIANT               The build info variant.
 * @param SYS_STR_BUILDINFO_PRODUCT_NBR           The build info product number.

 * @param SYS_STR_MASS_STORAGE_VENDOR_DESCR_USB   The mass storage vendor description for USB.
 * @param SYS_STR_MASS_STORAGE_PRODUCT_DESCR_USB  The mass storage product description for USB.
 * @param SYS_STR_SIC_PRODUCT_DESCR_USB           The name of USB SIC product description.
 * @param SYS_STR_CDC_ETH_IFC_DESCR_USB           The name of USB CDC Ethernet class master interface.
 * @param SYS_STR_ETH_DATA_IFC_DESCR_USB          The name of USB Ethernet Data class master interface.
 * @param SYS_STR_ETH_COMM_IFC_DESCR_USB          The name of USB Ethernet Communication class master interface.
 * @param SYS_STR_ETH_NILSETTING_IFC_DESCR_USB    The name of USB Ethernet Communication class data interface, alternate setting 0.
 * @param SYS_STR_ETH_BULKDATA_DESCR_USB          The name of USB Ethernet Communication class data interface, alternate setting 1 - used for bulk data.
 * @param SYS_STR_ETH_BULKDATA_WRAPPER_DESCR_USB  The name of USB Ethernet Communication class data interface, alternate setting 2 - used for bulk data wrapper.
 * @param SYS_STR_MTP_PRODUCT_DESCR               Product name while connecting ME as MTP device. Used in DeviceInfo dataset Model field.
 * @param SYS_STR_MTP_VENDOR_NAME                 Human-readable string that identifies the manufacturer of MTP device. 
 *                                                See Manufacturer field of DeviceInfo Dataset in MTP specification.
 * 
 * @param SYS_STR_NUMBER_OF_PARAMETERS The number of system strings. Should always be last.
 */
typedef enum
{
  SYS_STR_VENDOR_NAME,        

  SYS_STR_VENDOR_ID_PNP,

  SYS_STR_VENDOR_ID_USB,
  SYS_STR_VENDOR_ID_BLUETOOTH,

  SYS_STR_PRODUCT_NAME,

  SYS_STR_PRODUCT_ID_IRDA,
  SYS_STR_PRODUCT_ID_USB,
  SYS_STR_PRODUCT_ID_USB_MSC_ONLY,
  SYS_STR_PRODUCT_ID_BLUETOOTH,
  SYS_STR_PRODUCT_ID_RS232,
  SYS_STR_PRODUCT_ID_USB_SIC_ONLY,

  SYS_STR_MODEM_IFC_DESCR_IRDA,
  SYS_STR_MODEM_IFC_DESCR_USB,
  SYS_STR_MODEM_IFC_DESCR_BLUETOOTH,
  SYS_STR_MODEM_IFC_DESCR_RS232,
  SYS_STR_MODEM_IFC_DESCR_USB_DATA,

  SYS_STR_OBEX_IFC_DESCR_USB,
  SYS_STR_DEV_MGMT_IFC_DESCR_USB,

  SYS_STR_USB_PRODUCT_VERSION,

  SYS_STR_BT_PC_DRIVER_URL,
  SYS_STR_BT_DOCUMENTATION_URL,
  SYS_STR_PRODUCT_VERSION,
  SYS_STR_BT_VENDOR_ID_SOURCE,

  SYS_STR_BUILDINFO_DATETIME,
  SYS_STR_BUILDINFO_SIGNUM,
  SYS_STR_BUILDINFO_LABEL,
  SYS_STR_BUILDINFO_VARIANT,
  SYS_STR_BUILDINFO_PRODUCT_NBR,

  SYS_STR_MASS_STORAGE_VENDOR_DESCR_USB,
  SYS_STR_MASS_STORAGE_PRODUCT_DESCR_USB,
  SYS_STR_SIC_PRODUCT_DESCR_USB,
  SYS_STR_CDC_ETH_IFC_DESCR_USB,
  SYS_STR_ETH_DATA_IFC_DESCR_USB,
  SYS_STR_ETH_COMM_IFC_DESCR_USB,
  SYS_STR_ETH_NILSETTING_IFC_DESCR_USB,
  SYS_STR_ETH_BULKDATA_DESCR_USB,
  SYS_STR_ETH_BULKDATA_WRAPPER_DESCR_USB,
  SYS_STR_MTP_PRODUCT_DESCR,
  SYS_STR_MTP_VENDOR_NAME,

  SYS_STR_NUMBER_OF_PARAMETERS
} Sys_ParameterStringId_t;

/**
 * Return type when reading the system identification strings.
 *
 * @param SYS_OK                        The source string was entirely copied into destination string.
 * @param SYS_ERROR_INVALID_PARAMETERS  One of the input parameters are incorrect.
 */
typedef enum
{
  SYS_OK,
  SYS_ERROR_INVALID_PARAMETERS
} Sys_Result_t;

#endif //INCLUSION_GUARD_T_SYSTEM_H
