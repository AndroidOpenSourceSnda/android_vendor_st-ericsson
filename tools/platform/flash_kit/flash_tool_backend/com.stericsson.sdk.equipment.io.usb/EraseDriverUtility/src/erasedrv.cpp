/*
 * erasedrv.cpp
 *
 *  Created on: 25.11.2009
 *      Author: rohacmic
 */
#include "erasedrv.h"

void usage(char * executable) {
	_tprintf(TEXT("\n\nUSAGE: %s"), executable);
	_tprintf(TEXT(" <option> <inf_file_name>\n\n"));
	_tprintf(TEXT("Options:\n"));
	_tprintf(TEXT(SWITCH_OPT_GET));
	_tprintf(TEXT(" : will show installed inf file related references generated by Windows\n"));
	_tprintf(TEXT(SWITCH_OPT_REMOVE));
	_tprintf(TEXT(" : remove all inf file related references generated by Windows\n\n"));
	_tprintf(TEXT("<inf_file_name> : path to *.inf file which is already installed in your operating system"));
}

int parseOption(char * opt) {
	if (strcmp(opt, SWITCH_OPT_GET) == 0) {
		return OPT_GET;
	} else if (strcmp(opt, SWITCH_OPT_REMOVE) == 0) {
		return OPT_REMOVE;
	} else {
		return OPT_UNDEF;
	}
}

int fetchCopiedOEM(const char * installedInf, TCHAR * destinationInfFile) {
	TCHAR sourceInfFile[MAX_PATH];
    PTSTR destinationInfFileComponent = NULL;
    PTSTR filePart = NULL;

    GetFullPathName(installedInf, MAX_PATH, sourceInfFile, &filePart);

	FILE * f = fopen(sourceInfFile, "r");
	if (f == NULL) {
    	errorLog("Given inf file '%s' doesn't exist!", sourceInfFile);
    	exit(-1);
	} else {
		fclose(f);
	}

	int ret = SetupCopyOEMInf(sourceInfFile,
	                         NULL,
	                         SPOST_PATH,
	                         SP_COPY_REPLACEONLY,
	                         destinationInfFile,
	                         MAX_PATH,
	                         NULL,
	                         &destinationInfFileComponent);

	if (!ret) {
		warnLog("Cannot find oemXXX.inf! Given inf file is currently not installed in your OS, nothing to remove!", sourceInfFile);
		exit(-1);
	}

	return ret;
}

int removeOEMFiles(TCHAR * oemInfFile) {
	size_t oemFilePathLength = _tcslen(oemInfFile);
	TCHAR * oemPnfFile = new TCHAR[oemFilePathLength + 1]; //including null terminating

	_tcsncpy(oemPnfFile, oemInfFile, oemFilePathLength - 4);
	_tcsncpy(oemPnfFile + (oemFilePathLength - 4) * sizeof(TCHAR), ".pnf", 5);

	FILE * f = fopen(oemPnfFile, "r");
	if (f == NULL) {
		errorLog("Cannot found appropriate .pnf file: '%s' doesn't exist!", oemPnfFile);
		exit(-1);
	} else {
		fclose(f);
	}

	infoLog("Files for deletion: \n\t%s\n\t%s", oemInfFile, oemPnfFile);

//On Windows XP and higher versions should be called SetupUninstallOEMInf instead of simple deleting files
//Unfortunately it doesn't worked neither on XP nor on Vista
//For more info see: http://support.microsoft.com/kb/813449

//  DWORD dwVersion = 0;
//	DWORD dwMajorVersion = 0;
//	DWORD dwMinorVersion = 0;
//	DWORD dwBuild = 0;
//
//    dwVersion = GetVersion();
//
//    // Get the Windows version.
//
//    dwMajorVersion = (DWORD)(LOBYTE(LOWORD(dwVersion)));
//    dwMinorVersion = (DWORD)(HIBYTE(LOWORD(dwVersion)));
//
//    if (dwVersion < 0x80000000)
//        dwBuild = (DWORD)(HIWORD(dwVersion));
//
//    if ((dwMajorVersion == 5) && (dwMinorVersion == 0)) {
//    	infoLog("Win2k system");
//		#define _WIN32_WINNT 0x0500
//    } else {
//		#define _WIN32_WINNT 0x0501 //WinXP, should be same also for higher versions
//    }
//
//#if _WIN32_WINNT > 0x0500
//    	infoLog("WinXP and higher system..");
//    	if (!SetupUninstallOEMInf(oemInfFile, 1, 0)) {
//    		infoLog("SetupUninstallOEMInf failed with error: %d", GetLastError());
//    	} else {
//    		infoLog("OEM files has been removed from your OS successfully..");
//    	}
//#else
//	if (DeleteFile(oemPnfFile) == 0) {
//		errorLog("Attempt to delete files '%s' failed: %d", oemPnfFile, GetLastError());
//	} else {
//		infoLog("File '%s' has been deleted successfuly", oemPnfFile);
//	}
//
//	if (DeleteFile(oemInfFile) == 0) {
//		errorLog("Attempt to delete files '%s' failed: %d", oemInfFile, GetLastError());
//	} else {
//		infoLog("File '%s' has been deleted successfuly", oemInfFile);
//	}
//#endif


	if (DeleteFile(oemPnfFile) == 0) {
		errorLog("Attempt to delete files '%s' failed: %d", oemPnfFile, GetLastError());
	} else {
		infoLog("File '%s' has been deleted successfuly", oemPnfFile);
	}

	if (DeleteFile(oemInfFile) == 0) {
		errorLog("Attempt to delete files '%s' failed: %d", oemInfFile, GetLastError());
	} else {
		infoLog("File '%s' has been deleted successfuly", oemInfFile);
	}

	delete oemPnfFile;
	return 0;
}

int __cdecl main(int argc, char * argv[]) {
	_tprintf("\n---- %s", PRG_NAME);
	if (argc < 3) {
		usage(argv[0]);
		return -1;
	}

	TCHAR destinationOEMInfFile[MAX_PATH];
	switch (parseOption(argv[1])) {
	case OPT_GET:
		infoLog("Attempt to fetch oemXXX.inf file associated with '%s'", argv[2]);
		fetchCopiedOEM(argv[2], destinationOEMInfFile);
		infoLog("Associated file has been found: '%s'", destinationOEMInfFile);
		break;
	case OPT_REMOVE:
		fetchCopiedOEM(argv[2], destinationOEMInfFile);
		removeOEMFiles(destinationOEMInfFile);
		break;
	case OPT_UNDEF:
		errorLog("Unknown option '%s'!", argv[1]);
		return -1;
	}

	return 0;
}
