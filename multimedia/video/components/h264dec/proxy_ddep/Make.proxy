# vim:syntax=make:
# -*- Mode: Makefile -*-

#-------------------------------
# Default Config
#-------------------------------

## The MMDSP code is board specific
MMDSP_CODE_IS_BOARD_SPECIFIC:=true

include $(MMROOT)/shared/makefiles/Make.config
include $(MMROOT)/video/makefiles/Make.config

COMPONENT_TOP_DIR=..
TARGET=rvct

#----------------------------
#     Entry for Make.rules
#
#VPATH    : Search Path for prerequisites.(see default value in Make.rules)
#CFLAGS   : Extra flags to give to the C compiler. (see default value in Make.rules)
#CXXFLAGS : Extra flags to give to the C++ compiler. (see default value in Make.rules)
#CPPFLAGS : Extra flags to give to the C preprocessor.(see default value in Make.rules)
#
#DEP_DEP  : Dependencies of dependency files.
#           (for example generated header file before generating *.d)
#TOBECLEAN: List of files you want to delete on realclean target.
#
#LIBNAME  : Name of the library without the prefix lib.
#LIBOBJ   : List of object file to put in the lib
#
#EXENAME  : Name of executable
#EXEOBJ   : List of object file needed to build executable
#         For multiple executable, suffix these to variable with _1, _2 ...
#
#LOCALLIBS: list of local libraries to be linked with executable
#
#----------------------------

ifdef NO_HAMAC
CPPFLAGS   += -DNO_HAMAC
SUFFIX      =_sw
else
SUFFIX      =
endif

# OST trace capability
include ../make.ost_conf
OST_SRC_DIR = src
OST_COMPONENT_ID = $(OST_COMPONENT_ID_HOST)
OST_DICO_NAME = $(OST_COMPONENT_NAME)_host
CPPFLAGS  += -I$(MMROOT)/video/components/h264dec/inc/autogentraces

CPPFLAGS  += -D__H264DEC__  -D__$(SVA_SUBSYSTEM)__
CPPFLAGS  += -Iinc_not_exported
ifneq ($(MYMMSYSTEM),symbian)
CPPFLAGS  += -I$(MM_IDT_DIR)
endif
CPPFLAGS  += -I$(MMROOT)/video/vfm
CPPFLAGS  += -I$(MMROOT)/video/components/common/inc
CPPFLAGS  += -I$(MMROOT)/video/components/common/nmf/arm/inc
CPPFLAGS  += -I../arm_nmf/inc
CPPFLAGS  += -I$(MMROOT)/video/components/h264dec/mpc/share/$(SVA_SUBSYSTEM)
CPPFLAGS  += -I$(BUILD_INTERMEDIATES_DIR)/../$(NMF_REPO_DIR)/$(MMPLATFORM)

ifeq ($(MYMMSYSTEM),symbian)
CPPFLAGS  += -I../nmf_repository/$(MMPLATFORM)
CPPFLAGS  += -I../nmf_repository/generated/proxynmf$(SUFFIX)/src
CPPFLAGS  += -I../nmf_repository/$(MMDSPPROCESSOR)
CPPFLAGS  += -I../..
else
endif

CPPFLAGS += -D_CACHE_OPT_

#ifdef STE_H264DEC_DPB_CONFIG \
CPPFLAGS += -D_STE_H264DEC_DPB_CONFIGURATION=$(STE_H264DEC_DPB_CONFIG)\
else \
CPPFLAGS += -D_STE_H264DEC_DPB_CONFIGURATION=0 \
endif

CPPFLAGS += -D_STE_H264DEC_DPB_CONFIGURATION=2

CPPFLAGS+= -DNMF_BUILD
// CPPFLAGS += -DPACKET_VIDEO_SUPPORT

LIBOBJ   = \
		H264Dec_Proxy \
		H264Dec_ParamAndConfig \
		H264Dec_Port \
		H264Dec_NmfHost_ProcessingComponent

# Stubs and Skeletons
VPATH += ../nmf_repository/$(MMDSPPROCESSOR)/host
ifndef NO_HAMAC
ifneq ($(findstring 5500,$(PLATFORM)),5500)
LIBOBJ += video_h264dec_ddep_cpp-mpc2user-skels
LIBOBJ += video_h264dec_ddep_cpp-user2mpc-stubs
LIBOBJ += video_h264dec_h264dec-mpc2user-skels
endif
endif

OBJ_EXT     = o$(SUFFIX)
CPPFLAGS   += -O3
CPPFLAGS   += -I$(MMROOT)/video/components/h264dec/nmf_repository/$(MMPLATFORM)/h264dec_arm_nmf_h264dec$(SUFFIX)/src
LIBNAME     = st_h264dec_ddep$(SUFFIX)
INSTALL_LIB = libst_h264dec_ddep$(SUFFIX).a
LIBTOADD    = $(MMROOT)/video/nmf_repository/$(MMPLATFORM)/h264dec/arm_nmf/proxynmf$(SUFFIX).a
ifndef NO_HAMAC
LIBTOADD2   = $(MMROOT)/video/nmf_repository/$(MMPLATFORM)/h264dec/mpc/composite/h264decmpc.a
else
LIBTOADD2   = $(LIBTOADD)
endif

HEADER=

GROUP_PATH = $(MMROOT)/video/components/h264dec
ifdef NO_HAMAC
GROUP_NAME = $(SYMBIAN_VARIANT_NAME)/group/sw
SYMBIAN_PRJNAME = h264swdecoder
SYMBIAN_BLD_EXTRA_MMP += "h264swproxynmf_$(SYMBIAN_VARIANT_NAME).mmp"
SYMBIAN_SYSTEMSTATICLIB += "h264swproxynmf_$(SYMBIAN_VARIANT_NAME).lib"
#elf4nmf_EXPORT_DIR =    # Define empty because nothing to export
SYMBIAN_EXTRA_MMP_FLAG += "DEFFILE ../../../eabi/h264swdecoder.def"
else
GROUP_NAME = $(SYMBIAN_VARIANT_NAME)/group/hw
SYMBIAN_PRJNAME = h264hwdecoder
SYMBIAN_BLD_EXTRA_MMP += "h264hwproxynmf_$(SYMBIAN_VARIANT_NAME).mmp"
SYMBIAN_SYSTEMSTATICLIB += "h264hwproxynmf_$(SYMBIAN_VARIANT_NAME).lib"
elf4nmf_EXPORT_DIR = nmf
SYMBIAN_EXTRA_MMP_FLAG += "DEFFILE ../../../eabi/h264hwdecoder.def"
endif
SYMBIAN_EXTRA_MMP_FLAG += "EPOCALLOWDLLDATA"
SYMBIAN_EXTRA_MMP_FLAG += "SMPSAFE"
SYMBIAN_EXTRA_MMP_FLAG += "OPTION armcc --cpp"
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/assp/nomadik/nmf/share
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/osi/shared
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/osi/shared/nmf
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/osi/shared/host
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/osi/video
SYMBIAN_USERINCLUDE_EXTRA += "../../../arm_nmf/api"
SYMBIAN_SYSTEMLIB += omxilenswrapper.lib
SYMBIAN_SYSTEMLIB += omxilmmhwbuffer.lib
SYMBIAN_SYSTEMLIB += hostee.lib
SYMBIAN_SYSTEMLIB += st_vfm.lib
SYMBIAN_SYSTEMLIB += st_ens.lib
SYMBIAN_SYSTEMLIB += cm_user_api.lib
SYMBIAN_SYSTEMLIB += euser.lib
SYMBIAN_SYSTEMLIB += stuutils.lib
SYMBIAN_SYSTEMLIB += ost_wrapper.lib
SYMBIAN_SYSTEMSTATICLIB += omxilensservices.lib
SYMBIAN_SYSTEMSTATICLIB += omxilosalservices.lib
video_EXPORTDIR = inc


SYMBIAN_ALL=symb-prj
ifeq ($(MYMMSYSTEM),symbian)
todo: lib SYMBIAN_ALL
else
EXTRA_ALL=merge
todo: lib merge
endif


#-------------------------------
# Generic Rules
#-------------------------------
include $(MMROOT)/shared/makefiles/Make.rules
include $(MMROOT)/video/makefiles/Make.symbian.rules

#-------------------------------
# local Rules
#-------------------------------
merge:
	@echo Merging codec and proxy in the same library
	\rm -rf libtmp;mkdir libtmp;cd libtmp;$(AR) -x $(LIBTOADD)
	cd libtmp;$(AR) -x $(LIBTOADD2)
	$(VERCHAR)$(AR) $(AR_OPTION) $(LIBRARY)  libtmp/*;\rm -rf libtmp

