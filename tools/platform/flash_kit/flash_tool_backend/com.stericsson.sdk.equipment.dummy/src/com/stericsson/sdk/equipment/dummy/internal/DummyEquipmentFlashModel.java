package com.stericsson.sdk.equipment.dummy.internal;

import java.io.UnsupportedEncodingException;
import java.util.ArrayList;
import java.util.List;

import com.stericsson.sdk.equipment.model.IEquipmentFlashModel;
import com.stericsson.sdk.loader.communication.types.ListDevicesType;
import com.stericsson.sdk.loader.communication.types.subtypes.Device;

/**
 * @author xtomlju
 */
public class DummyEquipmentFlashModel implements IEquipmentFlashModel {

    /** */
    private List<Device> devices;

    /**
     * Constructor
     * 
     * @param flashDevices
     *            Flash devices
     */
    public DummyEquipmentFlashModel(ListDevicesType flashDevices) {
        devices = flashDevices.getDevices();
    }

    /**
     * {@inheritDoc}
     */
    public String[] getFlashDeviceNames(String filter) {

        List<String> result = new ArrayList<String>();

        for (Device device : devices) {
            if (filter != null) {
                if (filter.contains(device.getType())) {
                    result.add(device.getPath());
                }
            } else {
                result.add(device.getPath());
            }
        }

        String[] returnArray = new String[result.size()];
        for (int i = 0; i < result.size(); i++) {
            returnArray[i] = (String) result.get(i);
        }

        return returnArray;
    }

    /**
     * {@inheritDoc}
     */
    public long getLength(String deviceName) {

        long result = -1;
        Device device = findDevice(deviceName);

        if (device != null) {
            result = device.getLength();
        }

        return result;
    }

    /**
     * {@inheritDoc}
     */
    public long getStart(String deviceName) {

        long result = -1;
        Device device = findDevice(deviceName);

        if (device != null) {
            result = device.getStart();
        }

        return result;
    }

    /**
     * {@inheritDoc}
     */
    public String getType(String deviceName) {

        String result = "Unknown";
        Device device = findDevice(deviceName);

        if (device != null) {
            result = device.getType();
        }

        return result;
    }

    /**
     * {@inheritDoc}
     */
    public long getBlockSize(String deviceName) {

        long result = -1;
        Device device = findDevice(deviceName);

        if (device != null) {
            result = device.getBlockSize();
        }

        return result;
    }

    /**
     * 
     * @param deviceName
     * @return
     */
    private Device findDevice(String deviceName) {

        Device result = null;

        for (Device device : devices) {
            if (device.getPath().compareToIgnoreCase(deviceName) == 0) {
                result = device;
                break;
            }
        }

        return result;
    }

    /**
     * {@inheritDoc}
     */
    public String getReport() {
        byte[] reportBytes =
            new byte[] {
                60, 83, 84, 65, 82, 84, 32, 79, 70, 32, 70, 76, 65, 83, 72, 73, 78, 71, 32, 82, 69, 80, 79, 82, 84, 62,
                10, 10, 35, 35, 35, 35, 35, 32, 73, 78, 73, 84, 73, 65, 76, 73, 90, 73, 78, 71, 32, 70, 76, 65, 83, 72,
                73, 78, 71, 32, 35, 35, 35, 35, 35, 10, 10, 79, 112, 101, 110, 105, 110, 103, 32, 102, 108, 97, 115,
                104, 32, 97, 114, 99, 104, 105, 118, 101, 46, 46, 46, 32, 68, 79, 78, 69, 33, 10, 79, 112, 101, 110,
                105, 110, 103, 32, 115, 105, 103, 110, 97, 116, 117, 114, 101, 46, 46, 46, 32, 68, 79, 78, 69, 33, 10,
                82, 101, 97, 100, 105, 110, 103, 32, 115, 105, 103, 110, 97, 116, 117, 114, 101, 46, 46, 46, 32, 68,
                79, 78, 69, 33, 10, 79, 112, 101, 110, 105, 110, 103, 32, 109, 97, 110, 105, 102, 101, 115, 116, 46,
                46, 46, 32, 68, 79, 78, 69, 33, 10, 82, 101, 97, 100, 105, 110, 103, 32, 109, 97, 110, 105, 102, 101,
                115, 116, 46, 46, 46, 32, 68, 79, 78, 69, 33, 10, 86, 101, 114, 115, 105, 111, 110, 105, 110, 103, 32,
                105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 32, 102, 111, 117, 110, 100, 46, 10, 10, 68, 105,
                115, 112, 108, 97, 121, 105, 110, 103, 32, 118, 101, 114, 115, 105, 111, 110, 32, 105, 110, 102, 111,
                114, 109, 97, 116, 105, 111, 110, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 10, 88, 45, 76, 79, 65, 68,
                69, 82, 32, 32, 32, 32, 58, 32, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 86, 101, 114, 115, 105,
                111, 110, 105, 110, 103, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 13, 10, 67, 117, 116, 32, 73,
                68, 61, 48, 48, 56, 53, 48, 48, 65, 48, 13, 10, 66, 105, 98, 32, 86, 101, 114, 115, 105, 111, 110, 61,
                48, 52, 48, 57, 48, 50, 13, 10, 66, 105, 112, 32, 86, 101, 114, 115, 105, 111, 110, 58, 50, 32, 82,
                101, 118, 105, 115, 105, 111, 110, 58, 49, 46, 54, 10, 73, 83, 83, 87, 32, 32, 32, 32, 32, 32, 32, 32,
                58, 32, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 86, 101, 114, 115, 105, 111, 110, 105, 110,
                103, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 13, 10, 67, 117, 116, 32, 73, 68, 61, 48, 48, 56,
                53, 48, 48, 65, 48, 13, 10, 66, 105, 98, 32, 86, 101, 114, 115, 105, 111, 110, 61, 48, 52, 48, 57, 48,
                50, 13, 10, 66, 105, 112, 32, 86, 101, 114, 115, 105, 111, 110, 58, 50, 32, 82, 101, 118, 105, 115,
                105, 111, 110, 58, 49, 46, 53, 10, 77, 69, 77, 95, 73, 78, 73, 84, 32, 32, 32, 32, 58, 32, 95, 95, 95,
                95, 95, 95, 95, 95, 95, 95, 95, 95, 86, 101, 114, 115, 105, 111, 110, 105, 110, 103, 95, 95, 95, 95,
                95, 95, 95, 95, 95, 95, 95, 95, 13, 10, 77, 69, 77, 95, 73, 78, 73, 84, 95, 100, 98, 56, 53, 48, 48,
                97, 48, 95, 115, 111, 99, 95, 115, 101, 116, 116, 105, 110, 103, 115, 95, 52, 48, 48, 109, 104, 122,
                46, 99, 95, 70, 101, 98, 32, 32, 49, 32, 50, 48, 49, 48, 47, 49, 49, 58, 50, 53, 58, 49, 55, 10, 80,
                87, 82, 95, 77, 71, 84, 32, 32, 32, 32, 32, 58, 32, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 86,
                101, 114, 115, 105, 111, 110, 105, 110, 103, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 95, 13, 10,
                67, 117, 116, 32, 73, 68, 61, 48, 48, 56, 53, 48, 48, 65, 48, 13, 10, 66, 105, 98, 32, 86, 101, 114,
                115, 105, 111, 110, 61, 48, 48, 48, 48, 48, 49, 13, 10, 66, 105, 112, 32, 86, 101, 114, 115, 105, 111,
                110, 58, 49, 32, 82, 101, 118, 105, 115, 105, 111, 110, 58, 48, 46, 49, 50, 10, 48, 44, 32, 48, 120,
                48, 48, 9, 116, 32, 32, 32, 58, 32, 47, 102, 108, 97, 115, 104, 48, 44, 32, 48, 120, 48, 48, 65, 66,
                48, 48, 48, 48, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 10, 10, 10, 72, 97, 110, 100, 108, 105, 110,
                103, 32, 98, 111, 111, 116, 95, 105, 109, 97, 103, 101, 95, 120, 45, 108, 111, 97, 100, 101, 114, 46,
                98, 105, 110, 10, 35, 32, 87, 114, 105, 116, 105, 110, 103, 32, 105, 109, 97, 103, 101, 32, 116, 111,
                32, 116, 97, 114, 103, 101, 116, 58, 32, 47, 98, 111, 111, 116, 48, 47, 84, 79, 67, 47, 88, 45, 76, 79,
                65, 68, 69, 82, 44, 32, 48, 120, 48, 48, 48, 48, 50, 65, 49, 48, 10, 35, 32, 67, 114, 101, 97, 116,
                101, 100, 32, 84, 79, 67, 32, 101, 110, 116, 114, 121, 32, 34, 88, 45, 76, 79, 65, 68, 69, 82, 34, 10,
                10, 72, 97, 110, 100, 108, 105, 110, 103, 32, 109, 101, 109, 95, 105, 110, 105, 116, 46, 98, 105, 110,
                10, 35, 32, 87, 114, 105, 116, 105, 110, 103, 32, 105, 109, 97, 103, 101, 32, 116, 111, 32, 116, 97,
                114, 103, 101, 116, 58, 32, 47, 102, 108, 97, 115, 104, 48, 47, 84, 79, 67, 47, 77, 69, 77, 95, 73, 78,
                73, 84, 44, 32, 48, 120, 48, 48, 48, 56, 48, 48, 48, 48, 10, 35, 32, 67, 114, 101, 97, 116, 101, 100,
                32, 84, 79, 67, 32, 101, 110, 116, 114, 121, 32, 34, 77, 69, 77, 95, 73, 78, 73, 84, 34, 10, 10, 72,
                97, 110, 100, 108, 105, 110, 103, 32, 112, 111, 119, 101, 114, 95, 109, 97, 110, 97, 103, 101, 109,
                101, 110, 116, 46, 98, 105, 110, 10, 35, 32, 87, 114, 105, 116, 105, 110, 103, 32, 105, 109, 97, 103,
                101, 32, 116, 111, 32, 116, 97, 114, 103, 101, 116, 58, 32, 47, 102, 108, 97, 115, 104, 48, 47, 84, 79,
                67, 47, 80, 87, 82, 95, 77, 71, 84, 44, 32, 48, 120, 48, 48, 48, 57, 48, 48, 48, 48, 10, 35, 32, 67,
                114, 101, 97, 116, 101, 100, 32, 84, 79, 67, 32, 101, 110, 116, 114, 121, 32, 34, 80, 87, 82, 95, 77,
                71, 84, 34, 10, 10, 72, 97, 110, 100, 108, 105, 110, 103, 32, 110, 111, 114, 109, 97, 108, 46, 98, 105,
                110, 10, 35, 32, 87, 114, 105, 116, 105, 110, 103, 32, 105, 109, 97, 103, 101, 32, 116, 111, 32, 116,
                97, 114, 103, 101, 116, 58, 32, 47, 102, 108, 97, 115, 104, 48, 47, 84, 79, 67, 47, 78, 79, 82, 77, 65,
                76, 44, 32, 48, 120, 48, 48, 65, 66, 48, 48, 48, 48, 10, 35, 32, 67, 114, 101, 97, 116, 101, 100, 32,
                84, 79, 67, 32, 101, 110, 116, 114, 121, 32, 34, 78, 79, 82, 77, 65, 76, 34, 10, 10, 87, 114, 105, 116,
                105, 110, 103, 32, 84, 79, 67, 44, 32, 83, 117, 98, 84, 79, 67, 32, 97, 110, 100, 32, 66, 111, 111,
                116, 32, 73, 109, 97, 103, 101, 46, 46, 46, 68, 79, 78, 69, 33, 10, 10, 70, 108, 97, 115, 104, 105,
                110, 103, 32, 99, 111, 109, 112, 108, 101, 116, 101, 100, 32, 115, 117, 99, 99, 101, 115, 115, 102,
                117, 108, 108, 121, 33, 10, 10, 35, 35, 35, 35, 35, 32, 68, 105, 115, 112, 108, 97, 121, 105, 110, 103,
                32, 84, 79, 67, 32, 115, 116, 114, 117, 99, 116, 117, 114, 101, 32, 35, 35, 35, 35, 35, 10, 10, 91, 47,
                84, 79, 67, 93, 10, 10, 73, 116, 101, 109, 32, 78, 111, 32, 32, 32, 32, 32, 32, 32, 32, 32, 73, 116,
                101, 109, 32, 32, 32, 32, 32, 83, 116, 97, 114, 116, 32, 65, 100, 100, 114, 32, 32, 32, 32, 32, 32, 32,
                32, 32, 32, 83, 105, 122, 101, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 69, 110, 116, 114, 121, 32, 80,
                111, 105, 110, 116, 32, 32, 32, 32, 32, 76, 111, 97, 100, 32, 65, 100, 100, 114, 32, 32, 32, 32, 32,
                32, 32, 32, 32, 70, 108, 97, 103, 115, 10, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
                45, 45, 45, 45, 45, 45, 45, 10, 32, 32, 32, 32, 48, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 73,
                83, 83, 87, 32, 32, 32, 32, 48, 120, 48, 48, 48, 48, 48, 50, 48, 48, 32, 32, 32, 32, 48, 120, 48, 48,
                48, 48, 50, 56, 49, 48, 32, 66, 121, 116, 101, 115, 32, 32, 32, 32, 32, 48, 120, 48, 48, 48, 48, 48,
                48, 48, 48, 32, 32, 32, 32, 32, 48, 120, 70, 70, 70, 70, 70, 70, 70, 70, 32, 32, 32, 32, 32, 48, 120,
                48, 48, 48, 48, 48, 48, 48, 48, 10, 32, 32, 32, 32, 49, 32, 32, 32, 32, 32, 32, 32, 32, 88, 45, 76, 79,
                65, 68, 69, 82, 32, 32, 32, 32, 48, 120, 48, 48, 48, 48, 50, 65, 49, 48, 32, 32, 32, 32, 48, 120, 48,
                48, 48, 48, 49, 54, 70, 52, 32, 66, 121, 116, 101, 115, 32, 32, 32, 32, 32, 48, 120, 48, 48, 48, 48,
                48, 48, 48, 48, 32, 32, 32, 32, 32, 48, 120, 70, 70, 70, 70, 70, 70, 70, 70, 32, 32, 32, 32, 32, 48,
                120, 48, 48, 48, 48, 48, 48, 48, 48, 10, 32, 32, 32, 32, 50, 32, 32, 32, 32, 32, 32, 32, 32, 77, 69,
                77, 95, 73, 78, 73, 84, 32, 32, 32, 32, 48, 120, 48, 48, 48, 56, 48, 48, 48, 48, 32, 32, 32, 32, 48,
                120, 48, 48, 48, 48, 48, 66, 57, 48, 32, 66, 121, 116, 101, 115, 32, 32, 32, 32, 32, 48, 120, 48, 48,
                48, 48, 48, 48, 48, 48, 32, 32, 32, 32, 32, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48, 32, 32, 32, 32,
                32, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48, 10, 32, 32, 32, 32, 51, 32, 32, 32, 32, 32, 32, 32, 32,
                32, 80, 87, 82, 95, 77, 71, 84, 32, 32, 32, 32, 48, 120, 48, 48, 48, 57, 48, 48, 48, 48, 32, 32, 32,
                32, 48, 120, 48, 48, 48, 48, 54, 48, 66, 48, 32, 66, 121, 116, 101, 115, 32, 32, 32, 32, 32, 48, 120,
                48, 48, 48, 48, 48, 48, 48, 48, 32, 32, 32, 32, 32, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48, 32, 32,
                32, 32, 32, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48, 10, 32, 32, 32, 32, 52, 32, 32, 32, 32, 32, 32,
                32, 32, 32, 32, 78, 79, 82, 77, 65, 76, 32, 32, 32, 32, 48, 120, 48, 48, 65, 66, 48, 48, 48, 48, 32,
                32, 32, 32, 48, 120, 48, 48, 48, 49, 67, 68, 52, 48, 32, 66, 121, 116, 101, 115, 32, 32, 32, 32, 32,
                48, 120, 48, 48, 48, 48, 48, 48, 48, 48, 32, 32, 32, 32, 32, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48,
                32, 32, 32, 32, 32, 48, 120, 48, 48, 48, 48, 48, 48, 48, 48, 10, 10, 83, 117, 98, 32, 84, 79, 67, 32,
                110, 111, 116, 32, 102, 111, 117, 110, 100, 46, 10, 10, 60, 69, 78, 68, 32, 79, 70, 32, 70, 76, 65, 83,
                72, 73, 78, 71, 32, 82, 69, 80, 79, 82, 84, 62};

        String reportFromBytes = "";
        try {
            reportFromBytes = new String(reportBytes, "UTF-8");
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }

        return reportFromBytes;

    }
}
