***************************************
* Nomadik Multiprocessing Framework   *
***************************************
    "Compile, c'est gagne" (M. Guene)
    "La doc, c'est le code" (J.-P. Fassino)

Author:         Jean-Philippe Fassino & NMF Team
Organization:   MMD

1   GENERAL INFORMATIONS

1.1 Release number:

Release number: 2.9.0 "Maredsous"
Date:           October 01th, 2010

1.2 Board configuration:

    Successfully tested configuration:
        - STn8500 SVA & SIA (Only flashed with UBoot)
            * MOP500-ED & HREF-ED V1.0
            * MOP500 V1.0 & HREF V1.0
            * MOP500 V1.1 & HREF V1.1
            * MOP500 V2.0

    Not 100% successfully tested configuration:

    Not (or no more) supported configuration:
        - STn8500 SVA & SIA
            * SVP 2.0 (only 90% of test suite passed !)
                Issue in TLM IP HSEM
                STM IP trace not available
            * SVP 2.2 (only 90% of test suite passed !)
                Issue in TLM IP HSEM
                Argc/Argv not supported
            * SVP 2.3 (No more tested)
            * SVP 2.4 (No more tested)
            * SVP 3.2.0
                Issue in MMDSP simulator where code execution in ESRAM failed
            * SVP 3.2.4
                Issue in MMDSP simulator where 16bits based accessed failed
            * PEPS 8500
                PEPS SIA with an ED mapping + MMDSP V1


1.3 First level support contact:

1.4 Symbian baseport version:

    Not relevant

1.5 Tools versioning:

    See MMENV for more information.

    ARM compiler version:
        - RVCT 4.0 for 8500

    MMDSP compiler version
        - MMDSP Toolset 4.3.0

    - Java SE Runtime Environment
        http://java.sun.com
        At least JRE 1.5 or JRE 6 (on Linux please use at least JRE 6 due to JVM bug regarding execution access rights)


2   COMMON COMPONENT LIST VERSIONING:

    - RODOS
        http://gnx772:8080/dokuwiki/doku.php?id=mmf:tools:rodos


3   RELEASE CONTENT

    See tools/doc/file_hierarchies.txt about file tree organization !

    - Toolbox

    - Component Manager

    - Execution Engine


3.1 Component Manager
  
    - Audio ECR: Put big structure pass from host to MPC on DDR instead of stack
      By convention, structure bigger than 32 MMDSP word are put in DDR.
      
    - Audio ECR: Add CM_BindComponentAsynchronousEx API.
      This method allow to specify where the event fifo must be allocated:
        t_cm_error CM_BindComponentAsynchronousEx(
            const t_cm_instance_handle client,
            const char* requiredItfClientName,
            const t_cm_instance_handle server,
            const char* providedItfServerName,
            t_uint32 fifosize,
            t_cm_mpc_memory_type eventMemType)
      Parameter eventMemType can take as value:
            CM_MM_MPC_TCM24_X, CM_MM_MPC_SDRAM24, CM_MM_MPC_ESRAM24
      This method can be used to save XRAM memory by putting event in DDR.

    - Audio ECR: Add CM_BindComponentFromUserEx API.
      This method allow to specify where the event fifo of the remote communication must be allocated:
        t_cm_error CM_BindComponentFromUserEx(
            const t_cm_instance_handle server,
            const char* providedItfServerName,
            t_uint32 fifosize,
            t_cm_mpc_memory_type eventMemType,
            t_cm_interface_desc* itfref)
      Parameter eventMemType can take as value:
            CM_MM_MPC_TCM24_X, CM_MM_MPC_SDRAM24, CM_MM_MPC_ESRAM24
      This method can be used to save XRAM memory by putting event in DDR.

    - Enhance CM_DestroyComponent() and check that all provided interfaces have been
      unbound, and gracefully fail if some are still in use.
    
    - Power Step v2
        * Remove ULP Mode
        * Use PRCMU timer for perfmeter
        * Put perfmeter data in DDR in order to use it when MMDSP in retention mode (deep sleep)
    
    - Video ECR: Singleton behavior enhance to deal with multiprocess management
        * Same instance handle is returned.
        * First instance of the singleton is instantiated in the domain passed as parameter
        * Binding is immutable and thus first binding will be the winner, other binding must be exactly the same for coherence purpose
        * Component is start during the first start
        * Component is stop during the last stop
        * Each interface required by the singleton is really unbinded when the last binded interface is really unbinded
        * Component is really destroy when the last handle is destroyed
      Internally client action is memorized in order to correctly manage singleton in multi-process management.
        * For that each Instance/Start/Bind is memorized internally for each client process ID.
    
    - Fix 30400 CM_AllocMpcMemory fails to align correctly on 64KB
        Note: If you have do workaround to be fair with internal bug, the alignment 
        used now could be double. Please check that in your code.
         

3.2 MPC Execution Engine

    - Audio ECR: Improvement to interface for big config structs to avoid unnecessary stack need
      In order to don't waste TCM stack, parameters of method containing one parameter bigger 
      than 32 word will be put and marshal in DDR instead of stack.
      Note: to fully exploit this feature and take only few word of stack during ARM -> DSP call,
            don't forget to pass big structure parameter as reference.
      It will be automatic and transparent for users.
      
    - Audio ECR: MMDSP Stub now performance stack computation request for its own processing according interface type.
      Thus, you don't have to declared anymore this stack size in the called component.  

    
3.3 Host Execution Engine

    - Imaging ECR: Add primitive overwritten mechanisms
      FIX VI 29372  Add C++ derivation capabilities for processing component
      simpleWrapped* simpleWrappedCreate(simple *pComp=0x0);


3.4 OS integration guidelines

    - CM_ENGINE_BindComponentAsynchronous & CM_OS_BindComponentAsynchronous take a new parameter:
        "t_cm_mpc_memory_type eventMemType" as the last one
        
    - CM_ENGINE_BindComponentFromCMCore & CM_OS_BindComponentFromCMCore take a new parameter:
        "t_cm_mpc_memory_type eventMemType" 
        
    - CM_ENGINE_(Un)Bindxxx(), CM_ENGINE_Start/StopComponent now take clientId (PID) as parameter.
    

3.5 Tools

    - Bug Fix in generated code which was wrong when using referenced interface on interface with
      prefix or collection.
      
    - By default, verbosity has been decrease and executed command are not fully displayed
        Use --verbose to display full command
        Or set NMF_VERBOSE=TRUE as environment variable
        

3.6 Programming model


3.7 Linux & Symbian


3.8 Examples


3.9 Packaging


4   DEFECT STATUS

    Defects must be logged on VI:
        http://gnb500137.gnb.st.com/VIWebDev/default.asp
            /Dev/OS and Platform/Multimedia/COMMON/NMF/**
            _Support if category unknown


4.1 Fixed defect list

    31291   Issue with Singleton Components
    30736   Lots of coverity issue in NMF generated code
    30578   t_power test crashes in cm
    30400   CM_AllocMpcMemory fails to align correctly on 64KB
    30080   Bug in message send to PRCMUFW
    29908   Issue with Multi-instance and multi-process
    29479   CR: Reduce DSP stack usage with big structure passed to DSP component in EXT Mem
    29372   Add C++ derivation capabilities for processing component
    29219   Display error as strings instead error number
    29175   Enhance CM_GetMpcMemoryStatus with EE stack sizes
    28954   Enhancement: add memory placement for bindings
    28748   UnbindToMpc do not reset subcomponent itf


4.2 Active defect list

    26043   Functions in a Static-Required-Interface of an NMF ARM component giving linking error, when compiled in NMF-MMTE
    23121   setConfig argument passing by pointer instead of structure
    20810   "#pragma interface" is not set automatically by the nmf toolset when calling a method in a referenced interface
    20440   No way to compile some files with specific options


5   COMPILATION RULES

5.1 Compilation procedure & options

    Compilation options is fully based on MMENV.


5.2 Compilation configurability

    EXPORT_SHARED: can be re-defined for exporting API in a specific manner
    IMPORT_SHARED: can be re-defined for importing API in a specific manner


5.3 Installation

    Please define components.txt using RODOS.


6   QA CHECK STATUS

6.1 Compilation warning / error

    - Component manager
        All warnings and errors removed.


6.2 Code Static analysis result

    - Component manager
        Coverity done (each remaining issue could be explained).


6.3 Symbian Creasy scheduler check (valid until dual core ED mode supported)

    Done.

6.4 Confidentiality safe

    Done.

7   DOCUMENTS

    Test report available at:
        http://gnx2487:9000/
