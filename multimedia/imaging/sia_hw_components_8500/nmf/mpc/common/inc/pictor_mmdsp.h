
#ifndef _PICTORV2_IN_H_
#define _PICTORV2_IN_H_

/****************************************************************************************
*                     Copyright STMicroelectronics
*              All rights reserved, COMPANY CONFIDENTIAL
*     Unauthorized reproduction and communication strictly prohibited
*----------------------------------------------------------------------------------------
*                   System Platforms Group - IP&Design/SPG
*----------------------------------------------------------------------------------------
*  This C header file was automatically generated by 'spirit2regtest' utility from the
*  SPIRIT description of the component.
*
*  Purpose : It declares C preprocessor definitions for component, register and 
*            register fields parameters
*
*  Generated by spirit2regtest v1.7.6
*

*  WARNING This file has been modify by /vobs/NOMADIK_SIA/VERIFICATION/SETUP/UTILS/byte2double.pl to adapte :
*     header address byte to address double-byte
*     for xbus/mmdsp target
*  (SIA Team )

*  PLEASE DO NOT MODIFY THIS FILE
****************************************************************************************/


/*
* Component section
* Purpose : defines macros for component
*           specific informations
*/

#define pictorv2_in_VENDOR                                  ("st.com")
#define pictorv2_in_LIBRARY                                 ("orphan_component")
#define pictorv2_in_NAME                                    ("pictorv2_in")
#define pictorv2_in_VERSION                                 ("0.0")

/*
* Address Block : MASTER_CCI
*/

#define pictorv2_in_MASTER_CCI_BASE_ADDR                    (0x0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : MASTER_CCI_ENABLE
*/

#define MASTER_CCI_ENABLE_SIZE       (8)
#define MASTER_CCI_ENABLE_OFFSET     (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x00)
#define MASTER_CCI_ENABLE_RESET_VALUE (0x00)
#define MASTER_CCI_ENABLE_BITFIELD_MASK (0x11)
#define MASTER_CCI_ENABLE_RWMASK     (0x11)
#define MASTER_CCI_ENABLE_ROMASK     (0x00)
#define MASTER_CCI_ENABLE_WOMASK     (0x00)
#define MASTER_CCI_ENABLE_UNUSED_MASK (0xEE)
#define MASTER_CCI_ENABLE_enable_OFFSET (0x00)
#define MASTER_CCI_ENABLE_enable_WIDTH (1)
#define MASTER_CCI_ENABLE_enable_MASK (0x01)
#define MASTER_CCI_ENABLE_enable_DISABLE (0x00)
#define MASTER_CCI_ENABLE_enable_ENABLE (0x01)
#define MASTER_CCI_ENABLE_soft_reset_OFFSET (0x04)
#define MASTER_CCI_ENABLE_soft_reset_WIDTH (1)
#define MASTER_CCI_ENABLE_soft_reset_MASK (0x10)

/*
* Register : MASTER_CCI_DEVICE_ID
*/

#define MASTER_CCI_DEVICE_ID_SIZE    (16)
#define MASTER_CCI_DEVICE_ID_OFFSET  (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x02)
#define MASTER_CCI_DEVICE_ID_RESET_VALUE (0x0000)
#define MASTER_CCI_DEVICE_ID_BITFIELD_MASK (0xFFFF)
#define MASTER_CCI_DEVICE_ID_RWMASK  (0xFFFF)
#define MASTER_CCI_DEVICE_ID_ROMASK  (0x0000)
#define MASTER_CCI_DEVICE_ID_WOMASK  (0x0000)
#define MASTER_CCI_DEVICE_ID_UNUSED_MASK (0x0000)
#define MASTER_CCI_DEVICE_ID_device_id_reg_OFFSET (0x0000)
#define MASTER_CCI_DEVICE_ID_device_id_reg_WIDTH (16)
#define MASTER_CCI_DEVICE_ID_device_id_reg_MASK (0xFFFF)

/*
* Register : MASTER_CCI_INDEX
*/

#define MASTER_CCI_INDEX_SIZE        (16)
#define MASTER_CCI_INDEX_OFFSET      (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x04)
#define MASTER_CCI_INDEX_RESET_VALUE (0x0000)
#define MASTER_CCI_INDEX_BITFIELD_MASK (0xFFFF)
#define MASTER_CCI_INDEX_RWMASK      (0xFFFF)
#define MASTER_CCI_INDEX_ROMASK      (0x0000)
#define MASTER_CCI_INDEX_WOMASK      (0x0000)
#define MASTER_CCI_INDEX_UNUSED_MASK (0x0000)
#define MASTER_CCI_INDEX_index_reg_OFFSET (0x0000)
#define MASTER_CCI_INDEX_index_reg_WIDTH (16)
#define MASTER_CCI_INDEX_index_reg_MASK (0xFFFF)

/*
* Register : MASTER_CCI_CONTROL
*/

#define MASTER_CCI_CONTROL_SIZE      (16)
#define MASTER_CCI_CONTROL_OFFSET    (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x06)
#define MASTER_CCI_CONTROL_RESET_VALUE (0x0200)
#define MASTER_CCI_CONTROL_BITFIELD_MASK (0x03FF)
#define MASTER_CCI_CONTROL_RWMASK    (0x03FF)
#define MASTER_CCI_CONTROL_ROMASK    (0x0000)
#define MASTER_CCI_CONTROL_WOMASK    (0x0000)
#define MASTER_CCI_CONTROL_UNUSED_MASK (0xFC00)
#define MASTER_CCI_CONTROL_write_OFFSET (0x0000)
#define MASTER_CCI_CONTROL_write_WIDTH (1)
#define MASTER_CCI_CONTROL_write_MASK (0x0001)
#define MASTER_CCI_CONTROL_read_OFFSET (0x0001)
#define MASTER_CCI_CONTROL_read_WIDTH (1)
#define MASTER_CCI_CONTROL_read_MASK (0x0002)
#define MASTER_CCI_CONTROL_repeated_start_OFFSET (0x0002)
#define MASTER_CCI_CONTROL_repeated_start_WIDTH (1)
#define MASTER_CCI_CONTROL_repeated_start_MASK (0x0004)
#define MASTER_CCI_CONTROL_data_count_OFFSET (0x0003)
#define MASTER_CCI_CONTROL_data_count_WIDTH (5)
#define MASTER_CCI_CONTROL_data_count_MASK (0x00F8)
#define MASTER_CCI_CONTROL_single_byte_index_OFFSET (0x0008)
#define MASTER_CCI_CONTROL_single_byte_index_WIDTH (1)
#define MASTER_CCI_CONTROL_single_byte_index_MASK (0x0100)
#define MASTER_CCI_CONTROL_single_byte_index_B_0x0 (0x0000)
#define MASTER_CCI_CONTROL_single_byte_index_B_0x1 (0x0001)
#define MASTER_CCI_CONTROL_single_byte_device_id_OFFSET (0x0009)
#define MASTER_CCI_CONTROL_single_byte_device_id_WIDTH (1)
#define MASTER_CCI_CONTROL_single_byte_device_id_MASK (0x0200)
#define MASTER_CCI_CONTROL_single_byte_device_id_B_0x0 (0x0000)
#define MASTER_CCI_CONTROL_single_byte_device_id_B_0x1 (0x0001)

/*
* Register : MASTER_CCI_STATUS
*/

#define MASTER_CCI_STATUS_SIZE       (8)
#define MASTER_CCI_STATUS_OFFSET     (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x08)
#define MASTER_CCI_STATUS_RESET_VALUE (0x04)
#define MASTER_CCI_STATUS_BITFIELD_MASK (0x8F)
#define MASTER_CCI_STATUS_RWMASK     (0x80)
#define MASTER_CCI_STATUS_ROMASK     (0x0F)
#define MASTER_CCI_STATUS_WOMASK     (0x00)
#define MASTER_CCI_STATUS_UNUSED_MASK (0x70)
#define MASTER_CCI_STATUS_busy_OFFSET (0x00)
#define MASTER_CCI_STATUS_busy_WIDTH (1)
#define MASTER_CCI_STATUS_busy_MASK  (0x01)
#define MASTER_CCI_STATUS_fifo_full_OFFSET (0x01)
#define MASTER_CCI_STATUS_fifo_full_WIDTH (1)
#define MASTER_CCI_STATUS_fifo_full_MASK (0x02)
#define MASTER_CCI_STATUS_fifo_empty_OFFSET (0x02)
#define MASTER_CCI_STATUS_fifo_empty_WIDTH (1)
#define MASTER_CCI_STATUS_fifo_empty_MASK (0x04)
#define MASTER_CCI_STATUS_error_OFFSET (0x03)
#define MASTER_CCI_STATUS_error_WIDTH (1)
#define MASTER_CCI_STATUS_error_MASK (0x08)
#define MASTER_CCI_STATUS_clr_error_OFFSET (0x07)
#define MASTER_CCI_STATUS_clr_error_WIDTH (1)
#define MASTER_CCI_STATUS_clr_error_MASK (0x80)

/*
* Register : MASTER_CCI_WRITE_DATA0
*/

#define MASTER_CCI_WRITE_DATA0_SIZE  (32)
#define MASTER_CCI_WRITE_DATA0_OFFSET (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x0a)
#define MASTER_CCI_WRITE_DATA0_RESET_VALUE (0x00)
#define MASTER_CCI_WRITE_DATA0_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_WRITE_DATA0_RWMASK (0x00000000)
#define MASTER_CCI_WRITE_DATA0_ROMASK (0x00000000)
#define MASTER_CCI_WRITE_DATA0_WOMASK (0xFFFFFFFF)
#define MASTER_CCI_WRITE_DATA0_UNUSED_MASK (0x00000000)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore0_OFFSET (0x00000000)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore0_WIDTH (8)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore0_MASK (0x000000FF)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore1_OFFSET (0x00000008)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore1_WIDTH (8)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore1_MASK (0x0000FF00)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore2_OFFSET (0x00000010)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore2_WIDTH (8)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore2_MASK (0x00FF0000)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore3_OFFSET (0x00000018)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore3_WIDTH (8)
#define MASTER_CCI_WRITE_DATA0_fifo_datastore3_MASK (0xFF000000)

/*
* Register : MASTER_CCI_WRITE_DATA1
*/

#define MASTER_CCI_WRITE_DATA1_SIZE  (32)
#define MASTER_CCI_WRITE_DATA1_OFFSET (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x0c)
#define MASTER_CCI_WRITE_DATA1_RESET_VALUE (0x00)
#define MASTER_CCI_WRITE_DATA1_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_WRITE_DATA1_RWMASK (0x00000000)
#define MASTER_CCI_WRITE_DATA1_ROMASK (0x00000000)
#define MASTER_CCI_WRITE_DATA1_WOMASK (0xFFFFFFFF)
#define MASTER_CCI_WRITE_DATA1_UNUSED_MASK (0x00000000)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore0_OFFSET (0x00000000)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore0_WIDTH (8)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore0_MASK (0x000000FF)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore1_OFFSET (0x00000008)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore1_WIDTH (8)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore1_MASK (0x0000FF00)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore2_OFFSET (0x00000010)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore2_WIDTH (8)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore2_MASK (0x00FF0000)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore3_OFFSET (0x00000018)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore3_WIDTH (8)
#define MASTER_CCI_WRITE_DATA1_fifo_datastore3_MASK (0xFF000000)

/*
* Register : MASTER_CCI_WRITE_DATA2
*/

#define MASTER_CCI_WRITE_DATA2_SIZE  (32)
#define MASTER_CCI_WRITE_DATA2_OFFSET (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x0e)
#define MASTER_CCI_WRITE_DATA2_RESET_VALUE (0x00)
#define MASTER_CCI_WRITE_DATA2_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_WRITE_DATA2_RWMASK (0x00000000)
#define MASTER_CCI_WRITE_DATA2_ROMASK (0x00000000)
#define MASTER_CCI_WRITE_DATA2_WOMASK (0xFFFFFFFF)
#define MASTER_CCI_WRITE_DATA2_UNUSED_MASK (0x00000000)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore0_OFFSET (0x00000000)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore0_WIDTH (8)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore0_MASK (0x000000FF)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore1_OFFSET (0x00000008)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore1_WIDTH (8)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore1_MASK (0x0000FF00)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore2_OFFSET (0x00000010)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore2_WIDTH (8)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore2_MASK (0x00FF0000)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore3_OFFSET (0x00000018)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore3_WIDTH (8)
#define MASTER_CCI_WRITE_DATA2_fifo_datastore3_MASK (0xFF000000)

/*
* Register : MASTER_CCI_WRITE_DATA3
*/

#define MASTER_CCI_WRITE_DATA3_SIZE  (32)
#define MASTER_CCI_WRITE_DATA3_OFFSET (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x10)
#define MASTER_CCI_WRITE_DATA3_RESET_VALUE (0x00)
#define MASTER_CCI_WRITE_DATA3_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_WRITE_DATA3_RWMASK (0x00000000)
#define MASTER_CCI_WRITE_DATA3_ROMASK (0x00000000)
#define MASTER_CCI_WRITE_DATA3_WOMASK (0xFFFFFFFF)
#define MASTER_CCI_WRITE_DATA3_UNUSED_MASK (0x00000000)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore0_OFFSET (0x00000000)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore0_WIDTH (8)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore0_MASK (0x000000FF)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore1_OFFSET (0x00000008)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore1_WIDTH (8)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore1_MASK (0x0000FF00)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore2_OFFSET (0x00000010)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore2_WIDTH (8)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore2_MASK (0x00FF0000)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore3_OFFSET (0x00000018)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore3_WIDTH (8)
#define MASTER_CCI_WRITE_DATA3_fifo_datastore3_MASK (0xFF000000)

/*
* Register : MASTER_CCI_READ_DATA0
*/

#define MASTER_CCI_READ_DATA0_SIZE   (32)
#define MASTER_CCI_READ_DATA0_OFFSET (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x12)
#define MASTER_CCI_READ_DATA0_RESET_VALUE (0x00)
#define MASTER_CCI_READ_DATA0_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_READ_DATA0_RWMASK (0x00000000)
#define MASTER_CCI_READ_DATA0_ROMASK (0xFFFFFFFF)
#define MASTER_CCI_READ_DATA0_WOMASK (0x00000000)
#define MASTER_CCI_READ_DATA0_UNUSED_MASK (0x00000000)
#define MASTER_CCI_READ_DATA0_fifo_datastore0_OFFSET (0x00000000)
#define MASTER_CCI_READ_DATA0_fifo_datastore0_WIDTH (8)
#define MASTER_CCI_READ_DATA0_fifo_datastore0_MASK (0x000000FF)
#define MASTER_CCI_READ_DATA0_fifo_datastore1_OFFSET (0x00000008)
#define MASTER_CCI_READ_DATA0_fifo_datastore1_WIDTH (8)
#define MASTER_CCI_READ_DATA0_fifo_datastore1_MASK (0x0000FF00)
#define MASTER_CCI_READ_DATA0_fifo_datastore2_OFFSET (0x00000010)
#define MASTER_CCI_READ_DATA0_fifo_datastore2_WIDTH (8)
#define MASTER_CCI_READ_DATA0_fifo_datastore2_MASK (0x00FF0000)
#define MASTER_CCI_READ_DATA0_fifo_datastore3_OFFSET (0x00000018)
#define MASTER_CCI_READ_DATA0_fifo_datastore3_WIDTH (8)
#define MASTER_CCI_READ_DATA0_fifo_datastore3_MASK (0xFF000000)

/*
* Register : MASTER_CCI_READ_DATA1
*/

#define MASTER_CCI_READ_DATA1_SIZE   (32)
#define MASTER_CCI_READ_DATA1_OFFSET (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x14)
#define MASTER_CCI_READ_DATA1_RESET_VALUE (0x00)
#define MASTER_CCI_READ_DATA1_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_READ_DATA1_RWMASK (0x00000000)
#define MASTER_CCI_READ_DATA1_ROMASK (0xFFFFFFFF)
#define MASTER_CCI_READ_DATA1_WOMASK (0x00000000)
#define MASTER_CCI_READ_DATA1_UNUSED_MASK (0x00000000)
#define MASTER_CCI_READ_DATA1_fifo_datastore0_OFFSET (0x00000000)
#define MASTER_CCI_READ_DATA1_fifo_datastore0_WIDTH (8)
#define MASTER_CCI_READ_DATA1_fifo_datastore0_MASK (0x000000FF)
#define MASTER_CCI_READ_DATA1_fifo_datastore1_OFFSET (0x00000008)
#define MASTER_CCI_READ_DATA1_fifo_datastore1_WIDTH (8)
#define MASTER_CCI_READ_DATA1_fifo_datastore1_MASK (0x0000FF00)
#define MASTER_CCI_READ_DATA1_fifo_datastore2_OFFSET (0x00000010)
#define MASTER_CCI_READ_DATA1_fifo_datastore2_WIDTH (8)
#define MASTER_CCI_READ_DATA1_fifo_datastore2_MASK (0x00FF0000)
#define MASTER_CCI_READ_DATA1_fifo_datastore3_OFFSET (0x00000018)
#define MASTER_CCI_READ_DATA1_fifo_datastore3_WIDTH (8)
#define MASTER_CCI_READ_DATA1_fifo_datastore3_MASK (0xFF000000)

/*
* Register : MASTER_CCI_READ_DATA2
*/

#define MASTER_CCI_READ_DATA2_SIZE   (32)
#define MASTER_CCI_READ_DATA2_OFFSET (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x16)
#define MASTER_CCI_READ_DATA2_RESET_VALUE (0x00)
#define MASTER_CCI_READ_DATA2_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_READ_DATA2_RWMASK (0x00000000)
#define MASTER_CCI_READ_DATA2_ROMASK (0xFFFFFFFF)
#define MASTER_CCI_READ_DATA2_WOMASK (0x00000000)
#define MASTER_CCI_READ_DATA2_UNUSED_MASK (0x00000000)
#define MASTER_CCI_READ_DATA2_fifo_datastore0_OFFSET (0x00000000)
#define MASTER_CCI_READ_DATA2_fifo_datastore0_WIDTH (8)
#define MASTER_CCI_READ_DATA2_fifo_datastore0_MASK (0x000000FF)
#define MASTER_CCI_READ_DATA2_fifo_datastore1_OFFSET (0x00000008)
#define MASTER_CCI_READ_DATA2_fifo_datastore1_WIDTH (8)
#define MASTER_CCI_READ_DATA2_fifo_datastore1_MASK (0x0000FF00)
#define MASTER_CCI_READ_DATA2_fifo_datastore2_OFFSET (0x00000010)
#define MASTER_CCI_READ_DATA2_fifo_datastore2_WIDTH (8)
#define MASTER_CCI_READ_DATA2_fifo_datastore2_MASK (0x00FF0000)
#define MASTER_CCI_READ_DATA2_fifo_datastore3_OFFSET (0x00000018)
#define MASTER_CCI_READ_DATA2_fifo_datastore3_WIDTH (8)
#define MASTER_CCI_READ_DATA2_fifo_datastore3_MASK (0xFF000000)

/*
* Register : MASTER_CCI_READ_DATA3
*/

#define MASTER_CCI_READ_DATA3_SIZE   (32)
#define MASTER_CCI_READ_DATA3_OFFSET (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x18)
#define MASTER_CCI_READ_DATA3_RESET_VALUE (0x00)
#define MASTER_CCI_READ_DATA3_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_READ_DATA3_RWMASK (0x00000000)
#define MASTER_CCI_READ_DATA3_ROMASK (0xFFFFFFFF)
#define MASTER_CCI_READ_DATA3_WOMASK (0x00000000)
#define MASTER_CCI_READ_DATA3_UNUSED_MASK (0x00000000)
#define MASTER_CCI_READ_DATA3_fifo_datastore0_OFFSET (0x00000000)
#define MASTER_CCI_READ_DATA3_fifo_datastore0_WIDTH (8)
#define MASTER_CCI_READ_DATA3_fifo_datastore0_MASK (0x000000FF)
#define MASTER_CCI_READ_DATA3_fifo_datastore1_OFFSET (0x00000008)
#define MASTER_CCI_READ_DATA3_fifo_datastore1_WIDTH (8)
#define MASTER_CCI_READ_DATA3_fifo_datastore1_MASK (0x0000FF00)
#define MASTER_CCI_READ_DATA3_fifo_datastore2_OFFSET (0x00000010)
#define MASTER_CCI_READ_DATA3_fifo_datastore2_WIDTH (8)
#define MASTER_CCI_READ_DATA3_fifo_datastore2_MASK (0x00FF0000)
#define MASTER_CCI_READ_DATA3_fifo_datastore3_OFFSET (0x00000018)
#define MASTER_CCI_READ_DATA3_fifo_datastore3_WIDTH (8)
#define MASTER_CCI_READ_DATA3_fifo_datastore3_MASK (0xFF000000)

/*
* Register : MASTER_CCI_FSM_STATE
*/

#define MASTER_CCI_FSM_STATE_SIZE    (8)
#define MASTER_CCI_FSM_STATE_OFFSET  (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x1a)
#define MASTER_CCI_FSM_STATE_RESET_VALUE (0x00)
#define MASTER_CCI_FSM_STATE_BITFIELD_MASK (0x1F)
#define MASTER_CCI_FSM_STATE_RWMASK  (0x00)
#define MASTER_CCI_FSM_STATE_ROMASK  (0x1F)
#define MASTER_CCI_FSM_STATE_WOMASK  (0x00)
#define MASTER_CCI_FSM_STATE_UNUSED_MASK (0xE0)
#define MASTER_CCI_FSM_STATE_state_OFFSET (0x00)
#define MASTER_CCI_FSM_STATE_state_WIDTH (5)
#define MASTER_CCI_FSM_STATE_state_MASK (0x1F)

/*
* Register : MASTER_CCI_TIMING1
*/

#define MASTER_CCI_TIMING1_SIZE      (32)
#define MASTER_CCI_TIMING1_OFFSET    (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x1c)
#define MASTER_CCI_TIMING1_RESET_VALUE (0x200F0606)
#define MASTER_CCI_TIMING1_BITFIELD_MASK (0xFFFFFFFF)
#define MASTER_CCI_TIMING1_RWMASK    (0xFFFFFFFF)
#define MASTER_CCI_TIMING1_ROMASK    (0x00000000)
#define MASTER_CCI_TIMING1_WOMASK    (0x00000000)
#define MASTER_CCI_TIMING1_UNUSED_MASK (0x00000000)
#define MASTER_CCI_TIMING1_time_fall_OFFSET (0x00000000)
#define MASTER_CCI_TIMING1_time_fall_WIDTH (8)
#define MASTER_CCI_TIMING1_time_fall_MASK (0x000000FF)
#define MASTER_CCI_TIMING1_time_rise_OFFSET (0x00000008)
#define MASTER_CCI_TIMING1_time_rise_WIDTH (8)
#define MASTER_CCI_TIMING1_time_rise_MASK (0x0000FF00)
#define MASTER_CCI_TIMING1_t_high_OFFSET (0x00000010)
#define MASTER_CCI_TIMING1_t_high_WIDTH (8)
#define MASTER_CCI_TIMING1_t_high_MASK (0x00FF0000)
#define MASTER_CCI_TIMING1_t_buffer_OFFSET (0x00000018)
#define MASTER_CCI_TIMING1_t_buffer_WIDTH (8)
#define MASTER_CCI_TIMING1_t_buffer_MASK (0xFF000000)

/*
* Register : MASTER_CCI_TIMING2
*/

#define MASTER_CCI_TIMING2_SIZE      (16)
#define MASTER_CCI_TIMING2_OFFSET    (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x1e)
#define MASTER_CCI_TIMING2_RESET_VALUE (0x0415)
#define MASTER_CCI_TIMING2_BITFIELD_MASK (0xFFFF)
#define MASTER_CCI_TIMING2_RWMASK    (0xFFFF)
#define MASTER_CCI_TIMING2_ROMASK    (0x0000)
#define MASTER_CCI_TIMING2_WOMASK    (0x0000)
#define MASTER_CCI_TIMING2_UNUSED_MASK (0x0000)
#define MASTER_CCI_TIMING2_t_hd_dat_OFFSET (0x0000)
#define MASTER_CCI_TIMING2_t_hd_dat_WIDTH (8)
#define MASTER_CCI_TIMING2_t_hd_dat_MASK (0x00FF)
#define MASTER_CCI_TIMING2_t_su_dat_OFFSET (0x0008)
#define MASTER_CCI_TIMING2_t_su_dat_WIDTH (8)
#define MASTER_CCI_TIMING2_t_su_dat_MASK (0xFF00)

/*
* Register : MASTER_CCI_TIMING3
*/

#define MASTER_CCI_TIMING3_SIZE      (32)
#define MASTER_CCI_TIMING3_OFFSET    (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x20)
#define MASTER_CCI_TIMING3_RESET_VALUE (0x10100E)
#define MASTER_CCI_TIMING3_BITFIELD_MASK (0x00FFFFFF)
#define MASTER_CCI_TIMING3_RWMASK    (0x00FFFFFF)
#define MASTER_CCI_TIMING3_ROMASK    (0x00000000)
#define MASTER_CCI_TIMING3_WOMASK    (0x00000000)
#define MASTER_CCI_TIMING3_UNUSED_MASK (0xFF000000)
#define MASTER_CCI_TIMING3_t_hd_sta_OFFSET (0x00000000)
#define MASTER_CCI_TIMING3_t_hd_sta_WIDTH (8)
#define MASTER_CCI_TIMING3_t_hd_sta_MASK (0x000000FF)
#define MASTER_CCI_TIMING3_t_su_sta_OFFSET (0x00000008)
#define MASTER_CCI_TIMING3_t_su_sta_WIDTH (8)
#define MASTER_CCI_TIMING3_t_su_sta_MASK (0x0000FF00)
#define MASTER_CCI_TIMING3_t_su_sto_OFFSET (0x00000010)
#define MASTER_CCI_TIMING3_t_su_sto_WIDTH (8)
#define MASTER_CCI_TIMING3_t_su_sto_MASK (0x00FF0000)

/*
* Register : MASTER_CCI_DFV
*/

#define MASTER_CCI_DFV_SIZE          (8)
#define MASTER_CCI_DFV_OFFSET        (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x22)
#define MASTER_CCI_DFV_RESET_VALUE   (0x0)
#define MASTER_CCI_DFV_BITFIELD_MASK (0x07)
#define MASTER_CCI_DFV_RWMASK        (0x07)
#define MASTER_CCI_DFV_ROMASK        (0x00)
#define MASTER_CCI_DFV_WOMASK        (0x00)
#define MASTER_CCI_DFV_UNUSED_MASK   (0xF8)
#define MASTER_CCI_DFV_dfv_enable_OFFSET (0x00)
#define MASTER_CCI_DFV_dfv_enable_WIDTH (1)
#define MASTER_CCI_DFV_dfv_enable_MASK (0x01)
#define MASTER_CCI_DFV_dfv_eop_interrupt_OFFSET (0x01)
#define MASTER_CCI_DFV_dfv_eop_interrupt_WIDTH (1)
#define MASTER_CCI_DFV_dfv_eop_interrupt_MASK (0x02)
#define MASTER_CCI_DFV_dfv_error_interrupt_OFFSET (0x02)
#define MASTER_CCI_DFV_dfv_error_interrupt_WIDTH (1)
#define MASTER_CCI_DFV_dfv_error_interrupt_MASK (0x04)

/*
* Register : MASTER_CCI_TRANSFER
*/

#define MASTER_CCI_TRANSFER_SIZE     (8)
#define MASTER_CCI_TRANSFER_OFFSET   (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x24)
#define MASTER_CCI_TRANSFER_RESET_VALUE (0x0)
#define MASTER_CCI_TRANSFER_BITFIELD_MASK (0x07)
#define MASTER_CCI_TRANSFER_RWMASK   (0x07)
#define MASTER_CCI_TRANSFER_ROMASK   (0x00)
#define MASTER_CCI_TRANSFER_WOMASK   (0x00)
#define MASTER_CCI_TRANSFER_UNUSED_MASK (0xF8)
#define MASTER_CCI_TRANSFER_device_id_valid_OFFSET (0x00)
#define MASTER_CCI_TRANSFER_device_id_valid_WIDTH (1)
#define MASTER_CCI_TRANSFER_device_id_valid_MASK (0x01)
#define MASTER_CCI_TRANSFER_start_transfer_OFFSET (0x01)
#define MASTER_CCI_TRANSFER_start_transfer_WIDTH (1)
#define MASTER_CCI_TRANSFER_start_transfer_MASK (0x02)
#define MASTER_CCI_TRANSFER_fifo_wr_fill_OFFSET (0x02)
#define MASTER_CCI_TRANSFER_fifo_wr_fill_WIDTH (1)
#define MASTER_CCI_TRANSFER_fifo_wr_fill_MASK (0x04)

/*
* Register : MASTER_CCI_ERR_MGMT
*/

#define MASTER_CCI_ERR_MGMT_SIZE     (8)
#define MASTER_CCI_ERR_MGMT_OFFSET   (pictorv2_in_MASTER_CCI_BASE_ADDR + 0x26)
#define MASTER_CCI_ERR_MGMT_RESET_VALUE (0x00)
#define MASTER_CCI_ERR_MGMT_BITFIELD_MASK (0x07)
#define MASTER_CCI_ERR_MGMT_RWMASK   (0x00)
#define MASTER_CCI_ERR_MGMT_ROMASK   (0x07)
#define MASTER_CCI_ERR_MGMT_WOMASK   (0x00)
#define MASTER_CCI_ERR_MGMT_UNUSED_MASK (0xF8)
#define MASTER_CCI_ERR_MGMT_error_mgmt_value_OFFSET (0x00)
#define MASTER_CCI_ERR_MGMT_error_mgmt_value_WIDTH (3)
#define MASTER_CCI_ERR_MGMT_error_mgmt_value_MASK (0x07)


/*
* Address Block : USER_IF
*/

#define pictorv2_in_USER_IF_BASE_ADDR                       (0x30U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : USER_IF_ENABLE
*/

#define USER_IF_ENABLE_SIZE             (8)
#define USER_IF_ENABLE_OFFSET           (pictorv2_in_USER_IF_BASE_ADDR + 0x00)
#define USER_IF_ENABLE_RESET_VALUE      (0x01)
#define USER_IF_ENABLE_BITFIELD_MASK    (0x11)
#define USER_IF_ENABLE_RWMASK           (0x11)
#define USER_IF_ENABLE_ROMASK           (0x00)
#define USER_IF_ENABLE_WOMASK           (0x00)
#define USER_IF_ENABLE_UNUSED_MASK      (0xEE)
#define USER_IF_ENABLE_enable_OFFSET    (0x00)
#define USER_IF_ENABLE_enable_WIDTH     (1)
#define USER_IF_ENABLE_enable_MASK      (0x01)
#define USER_IF_ENABLE_enable_DISABLE   (0x00)
#define USER_IF_ENABLE_enable_ENABLE    (0x01)
#define USER_IF_ENABLE_soft_reset_OFFSET (0x04)
#define USER_IF_ENABLE_soft_reset_WIDTH (1)
#define USER_IF_ENABLE_soft_reset_MASK  (0x10)
#define USER_IF_ENABLE_soft_reset_B_0x0 (0x00)
#define USER_IF_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : USER_IF_PAGE_ELEMENT
*/

#define USER_IF_PAGE_ELEMENT_SIZE       (16)
#define USER_IF_PAGE_ELEMENT_OFFSET     (pictorv2_in_USER_IF_BASE_ADDR + 0x02)
#define USER_IF_PAGE_ELEMENT_RESET_VALUE (0x00)
#define USER_IF_PAGE_ELEMENT_BITFIELD_MASK (0xFFFF)
#define USER_IF_PAGE_ELEMENT_RWMASK     (0xFFFF)
#define USER_IF_PAGE_ELEMENT_ROMASK     (0x0000)
#define USER_IF_PAGE_ELEMENT_WOMASK     (0x0000)
#define USER_IF_PAGE_ELEMENT_UNUSED_MASK (0x0000)
#define USER_IF_PAGE_ELEMENT_page_element_OFFSET (0x0000)
#define USER_IF_PAGE_ELEMENT_page_element_WIDTH (16)
#define USER_IF_PAGE_ELEMENT_page_element_MASK (0xFFFF)

/*
* Register : USER_IF_OPC
*/

#define USER_IF_OPC_SIZE                (16)
#define USER_IF_OPC_OFFSET              (pictorv2_in_USER_IF_BASE_ADDR + 0x04)
#define USER_IF_OPC_RESET_VALUE         (0x0000)
#define USER_IF_OPC_BITFIELD_MASK       (0xFFFF)
#define USER_IF_OPC_RWMASK              (0xFFFF)
#define USER_IF_OPC_ROMASK              (0x0000)
#define USER_IF_OPC_WOMASK              (0x0000)
#define USER_IF_OPC_UNUSED_MASK         (0x0000)
#define USER_IF_OPC_opcode_OFFSET       (0x0000)
#define USER_IF_OPC_opcode_WIDTH        (8)
#define USER_IF_OPC_opcode_MASK         (0x00FF)
#define USER_IF_OPC_transaction_id_OFFSET (0x0008)
#define USER_IF_OPC_transaction_id_WIDTH (8)
#define USER_IF_OPC_transaction_id_MASK (0xFF00)

/*
* Register : USER_IF_WR_DATA
*/

#define USER_IF_WR_DATA_SIZE            (32)
#define USER_IF_WR_DATA_OFFSET          (pictorv2_in_USER_IF_BASE_ADDR + 0x06)
#define USER_IF_WR_DATA_RESET_VALUE     (0x0000)
#define USER_IF_WR_DATA_BITFIELD_MASK   (0xFFFFFFFF)
#define USER_IF_WR_DATA_RWMASK          (0xFFFFFFFF)
#define USER_IF_WR_DATA_ROMASK          (0x00000000)
#define USER_IF_WR_DATA_WOMASK          (0x00000000)
#define USER_IF_WR_DATA_UNUSED_MASK     (0x00000000)
#define USER_IF_WR_DATA_wr_data_OFFSET  (0x00000000)
#define USER_IF_WR_DATA_wr_data_WIDTH   (32)
#define USER_IF_WR_DATA_wr_data_MASK    (0xFFFFFFFF)

/*
* Register : USER_IF_RD_DATA
*/

#define USER_IF_RD_DATA_SIZE            (32)
#define USER_IF_RD_DATA_OFFSET          (pictorv2_in_USER_IF_BASE_ADDR + 0x08)
#define USER_IF_RD_DATA_RESET_VALUE     (0x0000)
#define USER_IF_RD_DATA_BITFIELD_MASK   (0xFFFFFFFF)
#define USER_IF_RD_DATA_RWMASK          (0xFFFFFFFF)
#define USER_IF_RD_DATA_ROMASK          (0x00000000)
#define USER_IF_RD_DATA_WOMASK          (0x00000000)
#define USER_IF_RD_DATA_UNUSED_MASK     (0x00000000)
#define USER_IF_RD_DATA_rd_data_OFFSET  (0x00000000)
#define USER_IF_RD_DATA_rd_data_WIDTH   (32)
#define USER_IF_RD_DATA_rd_data_MASK    (0xFFFFFFFF)

/*
* Register : USER_IF_ACK
*/

#define USER_IF_ACK_SIZE                (16)
#define USER_IF_ACK_OFFSET              (pictorv2_in_USER_IF_BASE_ADDR + 0x0a)
#define USER_IF_ACK_RESET_VALUE         (0x0000)
#define USER_IF_ACK_BITFIELD_MASK       (0xFFFF)
#define USER_IF_ACK_RWMASK              (0xFFFF)
#define USER_IF_ACK_ROMASK              (0x0000)
#define USER_IF_ACK_WOMASK              (0x0000)
#define USER_IF_ACK_UNUSED_MASK         (0x0000)
#define USER_IF_ACK_opcode_completed_OFFSET (0x0000)
#define USER_IF_ACK_opcode_completed_WIDTH (8)
#define USER_IF_ACK_opcode_completed_MASK (0x00FF)
#define USER_IF_ACK_transaction_id_completed_OFFSET (0x0008)
#define USER_IF_ACK_transaction_id_completed_WIDTH (8)
#define USER_IF_ACK_transaction_id_completed_MASK (0xFF00)

/*
* Register : USER_IF_DFV
*/

#define USER_IF_DFV_SIZE                (8)
#define USER_IF_DFV_OFFSET              (pictorv2_in_USER_IF_BASE_ADDR + 0x0c)
#define USER_IF_DFV_RESET_VALUE         (0x0000)
#define USER_IF_DFV_BITFIELD_MASK       (0x03)
#define USER_IF_DFV_RWMASK              (0x03)
#define USER_IF_DFV_ROMASK              (0x00)
#define USER_IF_DFV_WOMASK              (0x00)
#define USER_IF_DFV_UNUSED_MASK         (0xFC)
#define USER_IF_DFV_dfv_enable_OFFSET   (0x00)
#define USER_IF_DFV_dfv_enable_WIDTH    (1)
#define USER_IF_DFV_dfv_enable_MASK     (0x01)
#define USER_IF_DFV_dfv_enable_DISABLE  (0x00)
#define USER_IF_DFV_dfv_enable_ENABLE   (0x01)
#define USER_IF_DFV_dfv_interrupt_OFFSET (0x01)
#define USER_IF_DFV_dfv_interrupt_WIDTH (1)
#define USER_IF_DFV_dfv_interrupt_MASK  (0x02)


/*
* Address Block : GPIO
*/

#define pictorv2_in_GPIO_BASE_ADDR                          (0x40U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : GPIO_ENABLE
*/

#define GPIO_ENABLE_SIZE                   (8)
#define GPIO_ENABLE_OFFSET                 (pictorv2_in_GPIO_BASE_ADDR + 0x00)
#define GPIO_ENABLE_RESET_VALUE            (0x00)
#define GPIO_ENABLE_BITFIELD_MASK          (0x11)
#define GPIO_ENABLE_RWMASK                 (0x11)
#define GPIO_ENABLE_ROMASK                 (0x00)
#define GPIO_ENABLE_WOMASK                 (0x00)
#define GPIO_ENABLE_UNUSED_MASK            (0xEE)
#define GPIO_ENABLE_gpio_enable_OFFSET     (0x00)
#define GPIO_ENABLE_gpio_enable_WIDTH      (1)
#define GPIO_ENABLE_gpio_enable_MASK       (0x01)
#define GPIO_ENABLE_gpio_enable_DISABLE    (0x00)
#define GPIO_ENABLE_gpio_enable_ENABLE     (0x01)
#define GPIO_ENABLE_soft_reset_OFFSET      (0x04)
#define GPIO_ENABLE_soft_reset_WIDTH       (1)
#define GPIO_ENABLE_soft_reset_MASK        (0x10)
#define GPIO_ENABLE_soft_reset_DISABLE     (0x00)
#define GPIO_ENABLE_soft_reset_ENABLE      (0x01)

/*
* Register : GPIO_TIMER_CTRL
*/

#define GPIO_TIMER_CTRL_SIZE               (8)
#define GPIO_TIMER_CTRL_OFFSET             (pictorv2_in_GPIO_BASE_ADDR + 0x02)
#define GPIO_TIMER_CTRL_RESET_VALUE        (0x00)
#define GPIO_TIMER_CTRL_BITFIELD_MASK      (0x1F)
#define GPIO_TIMER_CTRL_RWMASK             (0x1F)
#define GPIO_TIMER_CTRL_ROMASK             (0x00)
#define GPIO_TIMER_CTRL_WOMASK             (0x00)
#define GPIO_TIMER_CTRL_UNUSED_MASK        (0xE0)
#define GPIO_TIMER_CTRL_timer0_enable_OFFSET (0x00)
#define GPIO_TIMER_CTRL_timer0_enable_WIDTH (1)
#define GPIO_TIMER_CTRL_timer0_enable_MASK (0x01)
#define GPIO_TIMER_CTRL_timer0_enable_DISABLE (0x00)
#define GPIO_TIMER_CTRL_timer0_enable_ENABLE (0x01)
#define GPIO_TIMER_CTRL_timer1_enable_OFFSET (0x01)
#define GPIO_TIMER_CTRL_timer1_enable_WIDTH (1)
#define GPIO_TIMER_CTRL_timer1_enable_MASK (0x02)
#define GPIO_TIMER_CTRL_timer1_enable_DISABLE (0x00)
#define GPIO_TIMER_CTRL_timer1_enable_ENABLE (0x01)
#define GPIO_TIMER_CTRL_timer2_enable_OFFSET (0x02)
#define GPIO_TIMER_CTRL_timer2_enable_WIDTH (1)
#define GPIO_TIMER_CTRL_timer2_enable_MASK (0x04)
#define GPIO_TIMER_CTRL_timer2_enable_DISABLE (0x00)
#define GPIO_TIMER_CTRL_timer2_enable_ENABLE (0x01)
#define GPIO_TIMER_CTRL_timer3_enable_OFFSET (0x03)
#define GPIO_TIMER_CTRL_timer3_enable_WIDTH (1)
#define GPIO_TIMER_CTRL_timer3_enable_MASK (0x08)
#define GPIO_TIMER_CTRL_timer3_enable_DISABLE (0x00)
#define GPIO_TIMER_CTRL_timer3_enable_ENABLE (0x01)
#define GPIO_TIMER_CTRL_idptimer_enable_OFFSET (0x04)
#define GPIO_TIMER_CTRL_idptimer_enable_WIDTH (1)
#define GPIO_TIMER_CTRL_idptimer_enable_MASK (0x10)
#define GPIO_TIMER_CTRL_idptimer_enable_DISABLE (0x00)
#define GPIO_TIMER_CTRL_idptimer_enable_ENABLE (0x01)

/*
* Register : GPIO_CHANNEL_START
*/

#define GPIO_CHANNEL_START_SIZE            (8)
#define GPIO_CHANNEL_START_OFFSET          (pictorv2_in_GPIO_BASE_ADDR + 0x04)
#define GPIO_CHANNEL_START_RESET_VALUE     (0x00)
#define GPIO_CHANNEL_START_BITFIELD_MASK   (0xFF)
#define GPIO_CHANNEL_START_RWMASK          (0xFF)
#define GPIO_CHANNEL_START_ROMASK          (0x00)
#define GPIO_CHANNEL_START_WOMASK          (0x00)
#define GPIO_CHANNEL_START_UNUSED_MASK     (0x00)
#define GPIO_CHANNEL_START_channel0_start_OFFSET (0x00)
#define GPIO_CHANNEL_START_channel0_start_WIDTH (1)
#define GPIO_CHANNEL_START_channel0_start_MASK (0x01)
#define GPIO_CHANNEL_START_channel0_start_NO_EFFECT (0x00)
#define GPIO_CHANNEL_START_channel0_start_CHANNEL_START (0x01)
#define GPIO_CHANNEL_START_channel1_start_OFFSET (0x01)
#define GPIO_CHANNEL_START_channel1_start_WIDTH (1)
#define GPIO_CHANNEL_START_channel1_start_MASK (0x02)
#define GPIO_CHANNEL_START_channel1_start_NO_EFFECT (0x00)
#define GPIO_CHANNEL_START_channel1_start_CHANNEL_START (0x01)
#define GPIO_CHANNEL_START_channel2_start_OFFSET (0x02)
#define GPIO_CHANNEL_START_channel2_start_WIDTH (1)
#define GPIO_CHANNEL_START_channel2_start_MASK (0x04)
#define GPIO_CHANNEL_START_channel2_start_NO_EFFECT (0x00)
#define GPIO_CHANNEL_START_channel2_start_CHANNEL_START (0x01)
#define GPIO_CHANNEL_START_channel3_start_OFFSET (0x03)
#define GPIO_CHANNEL_START_channel3_start_WIDTH (1)
#define GPIO_CHANNEL_START_channel3_start_MASK (0x08)
#define GPIO_CHANNEL_START_channel3_start_NO_EFFECT (0x00)
#define GPIO_CHANNEL_START_channel3_start_CHANNEL_START (0x01)
#define GPIO_CHANNEL_START_channel4_start_OFFSET (0x04)
#define GPIO_CHANNEL_START_channel4_start_WIDTH (1)
#define GPIO_CHANNEL_START_channel4_start_MASK (0x10)
#define GPIO_CHANNEL_START_channel4_start_NO_EFFECT (0x00)
#define GPIO_CHANNEL_START_channel4_start_CHANNEL_START (0x01)
#define GPIO_CHANNEL_START_channel5_start_OFFSET (0x05)
#define GPIO_CHANNEL_START_channel5_start_WIDTH (1)
#define GPIO_CHANNEL_START_channel5_start_MASK (0x20)
#define GPIO_CHANNEL_START_channel5_start_NO_EFFECT (0x00)
#define GPIO_CHANNEL_START_channel5_start_CHANNEL_START (0x01)
#define GPIO_CHANNEL_START_channel6_start_OFFSET (0x06)
#define GPIO_CHANNEL_START_channel6_start_WIDTH (1)
#define GPIO_CHANNEL_START_channel6_start_MASK (0x40)
#define GPIO_CHANNEL_START_channel6_start_NO_EFFECT (0x00)
#define GPIO_CHANNEL_START_channel6_start_CHANNEL_START (0x01)
#define GPIO_CHANNEL_START_channel7_start_OFFSET (0x07)
#define GPIO_CHANNEL_START_channel7_start_WIDTH (1)
#define GPIO_CHANNEL_START_channel7_start_MASK (0x80)
#define GPIO_CHANNEL_START_channel7_start_NO_EFFECT (0x00)
#define GPIO_CHANNEL_START_channel7_start_CHANNEL_START (0x01)

/*
* Register : GPIO_CHANNEL_STOP
*/

#define GPIO_CHANNEL_STOP_SIZE             (8)
#define GPIO_CHANNEL_STOP_OFFSET           (pictorv2_in_GPIO_BASE_ADDR + 0x06)
#define GPIO_CHANNEL_STOP_RESET_VALUE      (0x00)
#define GPIO_CHANNEL_STOP_BITFIELD_MASK    (0xFF)
#define GPIO_CHANNEL_STOP_RWMASK           (0xFF)
#define GPIO_CHANNEL_STOP_ROMASK           (0x00)
#define GPIO_CHANNEL_STOP_WOMASK           (0x00)
#define GPIO_CHANNEL_STOP_UNUSED_MASK      (0x00)
#define GPIO_CHANNEL_STOP_channel0_stop_OFFSET (0x00)
#define GPIO_CHANNEL_STOP_channel0_stop_WIDTH (1)
#define GPIO_CHANNEL_STOP_channel0_stop_MASK (0x01)
#define GPIO_CHANNEL_STOP_channel0_stop_NO_EFFECT (0x00)
#define GPIO_CHANNEL_STOP_channel0_stop_CHANNEL_STOP (0x01)
#define GPIO_CHANNEL_STOP_channel1_stop_OFFSET (0x01)
#define GPIO_CHANNEL_STOP_channel1_stop_WIDTH (1)
#define GPIO_CHANNEL_STOP_channel1_stop_MASK (0x02)
#define GPIO_CHANNEL_STOP_channel1_stop_NO_EFFECT (0x00)
#define GPIO_CHANNEL_STOP_channel1_stop_CHANNEL_STOP (0x01)
#define GPIO_CHANNEL_STOP_channel2_stop_OFFSET (0x02)
#define GPIO_CHANNEL_STOP_channel2_stop_WIDTH (1)
#define GPIO_CHANNEL_STOP_channel2_stop_MASK (0x04)
#define GPIO_CHANNEL_STOP_channel2_stop_NO_EFFECT (0x00)
#define GPIO_CHANNEL_STOP_channel2_stop_CHANNEL_STOP (0x01)
#define GPIO_CHANNEL_STOP_channel3_stop_OFFSET (0x03)
#define GPIO_CHANNEL_STOP_channel3_stop_WIDTH (1)
#define GPIO_CHANNEL_STOP_channel3_stop_MASK (0x08)
#define GPIO_CHANNEL_STOP_channel3_stop_NO_EFFECT (0x00)
#define GPIO_CHANNEL_STOP_channel3_stop_CHANNEL_STOP (0x01)
#define GPIO_CHANNEL_STOP_channel4_stop_OFFSET (0x04)
#define GPIO_CHANNEL_STOP_channel4_stop_WIDTH (1)
#define GPIO_CHANNEL_STOP_channel4_stop_MASK (0x10)
#define GPIO_CHANNEL_STOP_channel4_stop_NO_EFFECT (0x00)
#define GPIO_CHANNEL_STOP_channel4_stop_CHANNEL_STOP (0x01)
#define GPIO_CHANNEL_STOP_channel5_stop_OFFSET (0x05)
#define GPIO_CHANNEL_STOP_channel5_stop_WIDTH (1)
#define GPIO_CHANNEL_STOP_channel5_stop_MASK (0x20)
#define GPIO_CHANNEL_STOP_channel5_stop_NO_EFFECT (0x00)
#define GPIO_CHANNEL_STOP_channel5_stop_CHANNEL_STOP (0x01)
#define GPIO_CHANNEL_STOP_channel6_stop_OFFSET (0x06)
#define GPIO_CHANNEL_STOP_channel6_stop_WIDTH (1)
#define GPIO_CHANNEL_STOP_channel6_stop_MASK (0x40)
#define GPIO_CHANNEL_STOP_channel6_stop_NO_EFFECT (0x00)
#define GPIO_CHANNEL_STOP_channel6_stop_CHANNEL_STOP (0x01)
#define GPIO_CHANNEL_STOP_channel7_stop_OFFSET (0x07)
#define GPIO_CHANNEL_STOP_channel7_stop_WIDTH (1)
#define GPIO_CHANNEL_STOP_channel7_stop_MASK (0x80)
#define GPIO_CHANNEL_STOP_channel7_stop_NO_EFFECT (0x00)
#define GPIO_CHANNEL_STOP_channel7_stop_CHANNEL_STOP (0x01)

/*
* Register : GPIO_CHANNEL_RESET
*/

#define GPIO_CHANNEL_RESET_SIZE            (8)
#define GPIO_CHANNEL_RESET_OFFSET          (pictorv2_in_GPIO_BASE_ADDR + 0x08)
#define GPIO_CHANNEL_RESET_RESET_VALUE     (0x00)
#define GPIO_CHANNEL_RESET_BITFIELD_MASK   (0xFF)
#define GPIO_CHANNEL_RESET_RWMASK          (0xFF)
#define GPIO_CHANNEL_RESET_ROMASK          (0x00)
#define GPIO_CHANNEL_RESET_WOMASK          (0x00)
#define GPIO_CHANNEL_RESET_UNUSED_MASK     (0x00)
#define GPIO_CHANNEL_RESET_channel0_reset_OFFSET (0x00)
#define GPIO_CHANNEL_RESET_channel0_reset_WIDTH (1)
#define GPIO_CHANNEL_RESET_channel0_reset_MASK (0x01)
#define GPIO_CHANNEL_RESET_channel0_reset_NO_EFFECT (0x00)
#define GPIO_CHANNEL_RESET_channel0_reset_CHANNEL_RESET (0x01)
#define GPIO_CHANNEL_RESET_channel1_reset_OFFSET (0x01)
#define GPIO_CHANNEL_RESET_channel1_reset_WIDTH (1)
#define GPIO_CHANNEL_RESET_channel1_reset_MASK (0x02)
#define GPIO_CHANNEL_RESET_channel1_reset_NO_EFFECT (0x00)
#define GPIO_CHANNEL_RESET_channel1_reset_CHANNEL_RESET (0x01)
#define GPIO_CHANNEL_RESET_channel2_reset_OFFSET (0x02)
#define GPIO_CHANNEL_RESET_channel2_reset_WIDTH (1)
#define GPIO_CHANNEL_RESET_channel2_reset_MASK (0x04)
#define GPIO_CHANNEL_RESET_channel2_reset_NO_EFFECT (0x00)
#define GPIO_CHANNEL_RESET_channel2_reset_CHANNEL_RESET (0x01)
#define GPIO_CHANNEL_RESET_channel3_reset_OFFSET (0x03)
#define GPIO_CHANNEL_RESET_channel3_reset_WIDTH (1)
#define GPIO_CHANNEL_RESET_channel3_reset_MASK (0x08)
#define GPIO_CHANNEL_RESET_channel3_reset_NO_EFFECT (0x00)
#define GPIO_CHANNEL_RESET_channel3_reset_CHANNEL_RESET (0x01)
#define GPIO_CHANNEL_RESET_channel4_reset_OFFSET (0x04)
#define GPIO_CHANNEL_RESET_channel4_reset_WIDTH (1)
#define GPIO_CHANNEL_RESET_channel4_reset_MASK (0x10)
#define GPIO_CHANNEL_RESET_channel4_reset_NO_EFFECT (0x00)
#define GPIO_CHANNEL_RESET_channel4_reset_CHANNEL_RESET (0x01)
#define GPIO_CHANNEL_RESET_channel5_reset_OFFSET (0x05)
#define GPIO_CHANNEL_RESET_channel5_reset_WIDTH (1)
#define GPIO_CHANNEL_RESET_channel5_reset_MASK (0x20)
#define GPIO_CHANNEL_RESET_channel5_reset_NO_EFFECT (0x00)
#define GPIO_CHANNEL_RESET_channel5_reset_CHANNEL_RESET (0x01)
#define GPIO_CHANNEL_RESET_channel6_reset_OFFSET (0x06)
#define GPIO_CHANNEL_RESET_channel6_reset_WIDTH (1)
#define GPIO_CHANNEL_RESET_channel6_reset_MASK (0x40)
#define GPIO_CHANNEL_RESET_channel6_reset_NO_EFFECT (0x00)
#define GPIO_CHANNEL_RESET_channel6_reset_CHANNEL_RESET (0x01)
#define GPIO_CHANNEL_RESET_channel7_reset_OFFSET (0x07)
#define GPIO_CHANNEL_RESET_channel7_reset_WIDTH (1)
#define GPIO_CHANNEL_RESET_channel7_reset_MASK (0x80)
#define GPIO_CHANNEL_RESET_channel7_reset_NO_EFFECT (0x00)
#define GPIO_CHANNEL_RESET_channel7_reset_CHANNEL_RESET (0x01)

/*
* Register : GPIO_CHANNEL_POLARITY
*/

#define GPIO_CHANNEL_POLARITY_SIZE         (8)
#define GPIO_CHANNEL_POLARITY_OFFSET       (pictorv2_in_GPIO_BASE_ADDR + 0x0a)
#define GPIO_CHANNEL_POLARITY_RESET_VALUE  (0x00)
#define GPIO_CHANNEL_POLARITY_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL_POLARITY_RWMASK       (0xFF)
#define GPIO_CHANNEL_POLARITY_ROMASK       (0x00)
#define GPIO_CHANNEL_POLARITY_WOMASK       (0x00)
#define GPIO_CHANNEL_POLARITY_UNUSED_MASK  (0x00)
#define GPIO_CHANNEL_POLARITY_channel0_polar_OFFSET (0x00)
#define GPIO_CHANNEL_POLARITY_channel0_polar_WIDTH (1)
#define GPIO_CHANNEL_POLARITY_channel0_polar_MASK (0x01)
#define GPIO_CHANNEL_POLARITY_channel0_polar_ACTIVE_HIGH (0x00)
#define GPIO_CHANNEL_POLARITY_channel0_polar_ACTIVE_LOW (0x01)
#define GPIO_CHANNEL_POLARITY_channel1_polar_OFFSET (0x01)
#define GPIO_CHANNEL_POLARITY_channel1_polar_WIDTH (1)
#define GPIO_CHANNEL_POLARITY_channel1_polar_MASK (0x02)
#define GPIO_CHANNEL_POLARITY_channel1_polar_ACTIVE_HIGH (0x00)
#define GPIO_CHANNEL_POLARITY_channel1_polar_ACTIVE_LOW (0x01)
#define GPIO_CHANNEL_POLARITY_channel2_polar_OFFSET (0x02)
#define GPIO_CHANNEL_POLARITY_channel2_polar_WIDTH (1)
#define GPIO_CHANNEL_POLARITY_channel2_polar_MASK (0x04)
#define GPIO_CHANNEL_POLARITY_channel2_polar_ACTIVE_HIGH (0x00)
#define GPIO_CHANNEL_POLARITY_channel2_polar_ACTIVE_LOW (0x01)
#define GPIO_CHANNEL_POLARITY_channel3_polar_OFFSET (0x03)
#define GPIO_CHANNEL_POLARITY_channel3_polar_WIDTH (1)
#define GPIO_CHANNEL_POLARITY_channel3_polar_MASK (0x08)
#define GPIO_CHANNEL_POLARITY_channel3_polar_ACTIVE_HIGH (0x00)
#define GPIO_CHANNEL_POLARITY_channel3_polar_ACTIVE_LOW (0x01)
#define GPIO_CHANNEL_POLARITY_channel4_polar_OFFSET (0x04)
#define GPIO_CHANNEL_POLARITY_channel4_polar_WIDTH (1)
#define GPIO_CHANNEL_POLARITY_channel4_polar_MASK (0x10)
#define GPIO_CHANNEL_POLARITY_channel4_polar_ACTIVE_HIGH (0x00)
#define GPIO_CHANNEL_POLARITY_channel4_polar_ACTIVE_LOW (0x01)
#define GPIO_CHANNEL_POLARITY_channel5_polar_OFFSET (0x05)
#define GPIO_CHANNEL_POLARITY_channel5_polar_WIDTH (1)
#define GPIO_CHANNEL_POLARITY_channel5_polar_MASK (0x20)
#define GPIO_CHANNEL_POLARITY_channel5_polar_ACTIVE_HIGH (0x00)
#define GPIO_CHANNEL_POLARITY_channel5_polar_ACTIVE_LOW (0x01)
#define GPIO_CHANNEL_POLARITY_channel6_polar_OFFSET (0x06)
#define GPIO_CHANNEL_POLARITY_channel6_polar_WIDTH (1)
#define GPIO_CHANNEL_POLARITY_channel6_polar_MASK (0x40)
#define GPIO_CHANNEL_POLARITY_channel6_polar_ACTIVE_HIGH (0x00)
#define GPIO_CHANNEL_POLARITY_channel6_polar_ACTIVE_LOW (0x01)
#define GPIO_CHANNEL_POLARITY_channel7_polar_OFFSET (0x07)
#define GPIO_CHANNEL_POLARITY_channel7_polar_WIDTH (1)
#define GPIO_CHANNEL_POLARITY_channel7_polar_MASK (0x80)
#define GPIO_CHANNEL_POLARITY_channel7_polar_ACTIVE_HIGH (0x00)
#define GPIO_CHANNEL_POLARITY_channel7_polar_ACTIVE_LOW (0x01)

/*
* Register : GPIO_OUTPUT_CONFIG
*/

#define GPIO_OUTPUT_CONFIG_SIZE            (8)
#define GPIO_OUTPUT_CONFIG_OFFSET          (pictorv2_in_GPIO_BASE_ADDR + 0x0c)
#define GPIO_OUTPUT_CONFIG_RESET_VALUE     (0x00)
#define GPIO_OUTPUT_CONFIG_BITFIELD_MASK   (0xFF)
#define GPIO_OUTPUT_CONFIG_RWMASK          (0xFF)
#define GPIO_OUTPUT_CONFIG_ROMASK          (0x00)
#define GPIO_OUTPUT_CONFIG_WOMASK          (0x00)
#define GPIO_OUTPUT_CONFIG_UNUSED_MASK     (0x00)
#define GPIO_OUTPUT_CONFIG_gpo0_config_OFFSET (0x00)
#define GPIO_OUTPUT_CONFIG_gpo0_config_WIDTH (1)
#define GPIO_OUTPUT_CONFIG_gpo0_config_MASK (0x01)
#define GPIO_OUTPUT_CONFIG_gpo0_config_GPO_CHANNEL (0x00)
#define GPIO_OUTPUT_CONFIG_gpo0_config_GPO_REGISTER (0x01)
#define GPIO_OUTPUT_CONFIG_gpo1_config_OFFSET (0x01)
#define GPIO_OUTPUT_CONFIG_gpo1_config_WIDTH (1)
#define GPIO_OUTPUT_CONFIG_gpo1_config_MASK (0x02)
#define GPIO_OUTPUT_CONFIG_gpo1_config_GPO_CHANNEL (0x00)
#define GPIO_OUTPUT_CONFIG_gpo1_config_GPO_REGISTER (0x01)
#define GPIO_OUTPUT_CONFIG_gpo2_config_OFFSET (0x02)
#define GPIO_OUTPUT_CONFIG_gpo2_config_WIDTH (1)
#define GPIO_OUTPUT_CONFIG_gpo2_config_MASK (0x04)
#define GPIO_OUTPUT_CONFIG_gpo2_config_GPO_CHANNEL (0x00)
#define GPIO_OUTPUT_CONFIG_gpo2_config_GPO_REGISTER (0x01)
#define GPIO_OUTPUT_CONFIG_gpo3_config_OFFSET (0x03)
#define GPIO_OUTPUT_CONFIG_gpo3_config_WIDTH (1)
#define GPIO_OUTPUT_CONFIG_gpo3_config_MASK (0x08)
#define GPIO_OUTPUT_CONFIG_gpo3_config_GPO_CHANNEL (0x00)
#define GPIO_OUTPUT_CONFIG_gpo3_config_GPO_REGISTER (0x01)
#define GPIO_OUTPUT_CONFIG_gpo4_config_OFFSET (0x04)
#define GPIO_OUTPUT_CONFIG_gpo4_config_WIDTH (1)
#define GPIO_OUTPUT_CONFIG_gpo4_config_MASK (0x10)
#define GPIO_OUTPUT_CONFIG_gpo4_config_GPO_CHANNEL (0x00)
#define GPIO_OUTPUT_CONFIG_gpo4_config_GPO_REGISTER (0x01)
#define GPIO_OUTPUT_CONFIG_gpo5_config_OFFSET (0x05)
#define GPIO_OUTPUT_CONFIG_gpo5_config_WIDTH (1)
#define GPIO_OUTPUT_CONFIG_gpo5_config_MASK (0x20)
#define GPIO_OUTPUT_CONFIG_gpo5_config_GPO_CHANNEL (0x00)
#define GPIO_OUTPUT_CONFIG_gpo5_config_GPO_REGISTER (0x01)
#define GPIO_OUTPUT_CONFIG_gpo6_config_OFFSET (0x06)
#define GPIO_OUTPUT_CONFIG_gpo6_config_WIDTH (1)
#define GPIO_OUTPUT_CONFIG_gpo6_config_MASK (0x40)
#define GPIO_OUTPUT_CONFIG_gpo6_config_GPO_CHANNEL (0x00)
#define GPIO_OUTPUT_CONFIG_gpo6_config_GPO_REGISTER (0x01)
#define GPIO_OUTPUT_CONFIG_gpo7_config_OFFSET (0x07)
#define GPIO_OUTPUT_CONFIG_gpo7_config_WIDTH (1)
#define GPIO_OUTPUT_CONFIG_gpo7_config_MASK (0x80)
#define GPIO_OUTPUT_CONFIG_gpo7_config_GPO_CHANNEL (0x00)
#define GPIO_OUTPUT_CONFIG_gpo7_config_GPO_REGISTER (0x01)

/*
* Register : GPIO_CHANNEL_CONFIG
*/

#define GPIO_CHANNEL_CONFIG_SIZE           (8)
#define GPIO_CHANNEL_CONFIG_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x0e)
#define GPIO_CHANNEL_CONFIG_RESET_VALUE    (0x00)
#define GPIO_CHANNEL_CONFIG_BITFIELD_MASK  (0xFF)
#define GPIO_CHANNEL_CONFIG_RWMASK         (0xFF)
#define GPIO_CHANNEL_CONFIG_ROMASK         (0x00)
#define GPIO_CHANNEL_CONFIG_WOMASK         (0x00)
#define GPIO_CHANNEL_CONFIG_UNUSED_MASK    (0x00)
#define GPIO_CHANNEL_CONFIG_channel0_config_OFFSET (0x00)
#define GPIO_CHANNEL_CONFIG_channel0_config_WIDTH (1)
#define GPIO_CHANNEL_CONFIG_channel0_config_MASK (0x01)
#define GPIO_CHANNEL_CONFIG_channel0_config_CHANNEL_PWM (0x00)
#define GPIO_CHANNEL_CONFIG_channel0_config_CHANNEL_SEQSHIFT (0x01)
#define GPIO_CHANNEL_CONFIG_channel1_config_OFFSET (0x01)
#define GPIO_CHANNEL_CONFIG_channel1_config_WIDTH (1)
#define GPIO_CHANNEL_CONFIG_channel1_config_MASK (0x02)
#define GPIO_CHANNEL_CONFIG_channel1_config_CHANNEL_PWM (0x00)
#define GPIO_CHANNEL_CONFIG_channel1_config_CHANNEL_SEQSHIFT (0x01)
#define GPIO_CHANNEL_CONFIG_channel2_config_OFFSET (0x02)
#define GPIO_CHANNEL_CONFIG_channel2_config_WIDTH (1)
#define GPIO_CHANNEL_CONFIG_channel2_config_MASK (0x04)
#define GPIO_CHANNEL_CONFIG_channel2_config_CHANNEL_PWM (0x00)
#define GPIO_CHANNEL_CONFIG_channel2_config_CHANNEL_SEQSHIFT (0x01)
#define GPIO_CHANNEL_CONFIG_channel3_config_OFFSET (0x03)
#define GPIO_CHANNEL_CONFIG_channel3_config_WIDTH (1)
#define GPIO_CHANNEL_CONFIG_channel3_config_MASK (0x08)
#define GPIO_CHANNEL_CONFIG_channel3_config_CHANNEL_PWM (0x00)
#define GPIO_CHANNEL_CONFIG_channel3_config_CHANNEL_SEQSHIFT (0x01)
#define GPIO_CHANNEL_CONFIG_channel4_config_OFFSET (0x04)
#define GPIO_CHANNEL_CONFIG_channel4_config_WIDTH (1)
#define GPIO_CHANNEL_CONFIG_channel4_config_MASK (0x10)
#define GPIO_CHANNEL_CONFIG_channel4_config_CHANNEL_PWM (0x00)
#define GPIO_CHANNEL_CONFIG_channel4_config_CHANNEL_SEQSHIFT (0x01)
#define GPIO_CHANNEL_CONFIG_channel5_config_OFFSET (0x05)
#define GPIO_CHANNEL_CONFIG_channel5_config_WIDTH (1)
#define GPIO_CHANNEL_CONFIG_channel5_config_MASK (0x20)
#define GPIO_CHANNEL_CONFIG_channel5_config_CHANNEL_PWM (0x00)
#define GPIO_CHANNEL_CONFIG_channel5_config_CHANNEL_SEQSHIFT (0x01)
#define GPIO_CHANNEL_CONFIG_channel6_config_OFFSET (0x06)
#define GPIO_CHANNEL_CONFIG_channel6_config_WIDTH (1)
#define GPIO_CHANNEL_CONFIG_channel6_config_MASK (0x40)
#define GPIO_CHANNEL_CONFIG_channel6_config_CHANNEL_PWM (0x00)
#define GPIO_CHANNEL_CONFIG_channel6_config_CHANNEL_SEQSHIFT (0x01)
#define GPIO_CHANNEL_CONFIG_channel7_config_OFFSET (0x07)
#define GPIO_CHANNEL_CONFIG_channel7_config_WIDTH (1)
#define GPIO_CHANNEL_CONFIG_channel7_config_MASK (0x80)
#define GPIO_CHANNEL_CONFIG_channel7_config_CHANNEL_PWM (0x00)
#define GPIO_CHANNEL_CONFIG_channel7_config_CHANNEL_SEQSHIFT (0x01)

/*
* Register : GPIO_CHANNEL_PAIRING
*/

#define GPIO_CHANNEL_PAIRING_SIZE          (8)
#define GPIO_CHANNEL_PAIRING_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x10)
#define GPIO_CHANNEL_PAIRING_RESET_VALUE   (0x00)
#define GPIO_CHANNEL_PAIRING_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL_PAIRING_RWMASK        (0xFF)
#define GPIO_CHANNEL_PAIRING_ROMASK        (0x00)
#define GPIO_CHANNEL_PAIRING_WOMASK        (0x00)
#define GPIO_CHANNEL_PAIRING_UNUSED_MASK   (0x00)
#define GPIO_CHANNEL_PAIRING_channel_pairing0_OFFSET (0x00)
#define GPIO_CHANNEL_PAIRING_channel_pairing0_WIDTH (2)
#define GPIO_CHANNEL_PAIRING_channel_pairing0_MASK (0x03)
#define GPIO_CHANNEL_PAIRING_channel_pairing0_PAIRING_NONE (0x00)
#define GPIO_CHANNEL_PAIRING_channel_pairing0_PAIRING_INVERT (0x01)
#define GPIO_CHANNEL_PAIRING_channel_pairing0_PAIRING_HALFSHIFT (0x02)
#define GPIO_CHANNEL_PAIRING_channel_pairing0_PAIRING_OR (0x03)
#define GPIO_CHANNEL_PAIRING_channel_pairing1_OFFSET (0x02)
#define GPIO_CHANNEL_PAIRING_channel_pairing1_WIDTH (2)
#define GPIO_CHANNEL_PAIRING_channel_pairing1_MASK (0x0C)
#define GPIO_CHANNEL_PAIRING_channel_pairing1_PAIRING_NONE (0x00)
#define GPIO_CHANNEL_PAIRING_channel_pairing1_PAIRING_INVERT (0x01)
#define GPIO_CHANNEL_PAIRING_channel_pairing1_PAIRING_HALFSHIFT (0x02)
#define GPIO_CHANNEL_PAIRING_channel_pairing1_PAIRING_OR (0x03)
#define GPIO_CHANNEL_PAIRING_channel_pairing2_OFFSET (0x04)
#define GPIO_CHANNEL_PAIRING_channel_pairing2_WIDTH (2)
#define GPIO_CHANNEL_PAIRING_channel_pairing2_MASK (0x30)
#define GPIO_CHANNEL_PAIRING_channel_pairing2_PAIRING_NONE (0x00)
#define GPIO_CHANNEL_PAIRING_channel_pairing2_PAIRING_INVERT (0x01)
#define GPIO_CHANNEL_PAIRING_channel_pairing2_PAIRING_HALFSHIFT (0x02)
#define GPIO_CHANNEL_PAIRING_channel_pairing2_PAIRING_OR (0x03)
#define GPIO_CHANNEL_PAIRING_channel_pairing3_OFFSET (0x06)
#define GPIO_CHANNEL_PAIRING_channel_pairing3_WIDTH (2)
#define GPIO_CHANNEL_PAIRING_channel_pairing3_MASK (0xC0)
#define GPIO_CHANNEL_PAIRING_channel_pairing3_PAIRING_NONE (0x00)
#define GPIO_CHANNEL_PAIRING_channel_pairing3_PAIRING_INVERT (0x01)
#define GPIO_CHANNEL_PAIRING_channel_pairing3_PAIRING_HALFSHIFT (0x02)
#define GPIO_CHANNEL_PAIRING_channel_pairing3_PAIRING_OR (0x03)

/*
* Register : GPIO_INTR_DEBUG
*/

#define GPIO_INTR_DEBUG_SIZE               (8)
#define GPIO_INTR_DEBUG_OFFSET             (pictorv2_in_GPIO_BASE_ADDR + 0x12)
#define GPIO_INTR_DEBUG_RESET_VALUE        (0x00)
#define GPIO_INTR_DEBUG_BITFIELD_MASK      (0x01)
#define GPIO_INTR_DEBUG_RWMASK             (0x01)
#define GPIO_INTR_DEBUG_ROMASK             (0x00)
#define GPIO_INTR_DEBUG_WOMASK             (0x00)
#define GPIO_INTR_DEBUG_UNUSED_MASK        (0xFE)
#define GPIO_INTR_DEBUG_intr_debug_OFFSET  (0x00)
#define GPIO_INTR_DEBUG_intr_debug_WIDTH   (1)
#define GPIO_INTR_DEBUG_intr_debug_MASK    (0x01)
#define GPIO_INTR_DEBUG_intr_debug_B_0x0   (0x00)
#define GPIO_INTR_DEBUG_intr_debug_B_0x1   (0x01)

/*
* Register : GPIO_CHANNEL_SRC
*/

#define GPIO_CHANNEL_SRC_SIZE              (32)
#define GPIO_CHANNEL_SRC_OFFSET            (pictorv2_in_GPIO_BASE_ADDR + 0x14)
#define GPIO_CHANNEL_SRC_RESET_VALUE       (0x00)
#define GPIO_CHANNEL_SRC_BITFIELD_MASK     (0x00FFFFFF)
#define GPIO_CHANNEL_SRC_RWMASK            (0x00FFFFFF)
#define GPIO_CHANNEL_SRC_ROMASK            (0x00000000)
#define GPIO_CHANNEL_SRC_WOMASK            (0x00000000)
#define GPIO_CHANNEL_SRC_UNUSED_MASK       (0xFF000000)
#define GPIO_CHANNEL_SRC_channel0_src_OFFSET (0x00000000)
#define GPIO_CHANNEL_SRC_channel0_src_WIDTH (3)
#define GPIO_CHANNEL_SRC_channel0_src_MASK (0x00000007)
#define GPIO_CHANNEL_SRC_channel0_src_B_0x0 (0x00000000)
#define GPIO_CHANNEL_SRC_channel0_src_B_0x1 (0x00000001)
#define GPIO_CHANNEL_SRC_channel0_src_B_0x2 (0x00000002)
#define GPIO_CHANNEL_SRC_channel0_src_B_0x3 (0x00000003)
#define GPIO_CHANNEL_SRC_channel1_src_OFFSET (0x00000003)
#define GPIO_CHANNEL_SRC_channel1_src_WIDTH (3)
#define GPIO_CHANNEL_SRC_channel1_src_MASK (0x00000038)
#define GPIO_CHANNEL_SRC_channel1_src_B_0x0 (0x00000000)
#define GPIO_CHANNEL_SRC_channel1_src_B_0x1 (0x00000001)
#define GPIO_CHANNEL_SRC_channel1_src_B_0x2 (0x00000002)
#define GPIO_CHANNEL_SRC_channel1_src_B_0x3 (0x00000003)
#define GPIO_CHANNEL_SRC_channel2_src_OFFSET (0x00000006)
#define GPIO_CHANNEL_SRC_channel2_src_WIDTH (3)
#define GPIO_CHANNEL_SRC_channel2_src_MASK (0x000001C0)
#define GPIO_CHANNEL_SRC_channel2_src_B_0x0 (0x00000000)
#define GPIO_CHANNEL_SRC_channel2_src_B_0x1 (0x00000001)
#define GPIO_CHANNEL_SRC_channel2_src_B_0x2 (0x00000002)
#define GPIO_CHANNEL_SRC_channel2_src_B_0x3 (0x00000003)
#define GPIO_CHANNEL_SRC_channel3_src_OFFSET (0x00000009)
#define GPIO_CHANNEL_SRC_channel3_src_WIDTH (3)
#define GPIO_CHANNEL_SRC_channel3_src_MASK (0x00000E00)
#define GPIO_CHANNEL_SRC_channel3_src_B_0x0 (0x00000000)
#define GPIO_CHANNEL_SRC_channel3_src_B_0x1 (0x00000001)
#define GPIO_CHANNEL_SRC_channel3_src_B_0x2 (0x00000002)
#define GPIO_CHANNEL_SRC_channel3_src_B_0x3 (0x00000003)
#define GPIO_CHANNEL_SRC_channel4_src_OFFSET (0x0000000c)
#define GPIO_CHANNEL_SRC_channel4_src_WIDTH (3)
#define GPIO_CHANNEL_SRC_channel4_src_MASK (0x00007000)
#define GPIO_CHANNEL_SRC_channel4_src_B_0x0 (0x00000000)
#define GPIO_CHANNEL_SRC_channel4_src_B_0x1 (0x00000001)
#define GPIO_CHANNEL_SRC_channel4_src_B_0x2 (0x00000002)
#define GPIO_CHANNEL_SRC_channel4_src_B_0x3 (0x00000003)
#define GPIO_CHANNEL_SRC_channel5_src_OFFSET (0x0000000f)
#define GPIO_CHANNEL_SRC_channel5_src_WIDTH (3)
#define GPIO_CHANNEL_SRC_channel5_src_MASK (0x00038000)
#define GPIO_CHANNEL_SRC_channel5_src_B_0x0 (0x00000000)
#define GPIO_CHANNEL_SRC_channel5_src_B_0x1 (0x00000001)
#define GPIO_CHANNEL_SRC_channel5_src_B_0x2 (0x00000002)
#define GPIO_CHANNEL_SRC_channel5_src_B_0x3 (0x00000003)
#define GPIO_CHANNEL_SRC_channel6_src_OFFSET (0x00000012)
#define GPIO_CHANNEL_SRC_channel6_src_WIDTH (3)
#define GPIO_CHANNEL_SRC_channel6_src_MASK (0x001C0000)
#define GPIO_CHANNEL_SRC_channel6_src_B_0x0 (0x00000000)
#define GPIO_CHANNEL_SRC_channel6_src_B_0x1 (0x00000001)
#define GPIO_CHANNEL_SRC_channel6_src_B_0x2 (0x00000002)
#define GPIO_CHANNEL_SRC_channel6_src_B_0x3 (0x00000003)
#define GPIO_CHANNEL_SRC_channel7_src_OFFSET (0x00000015)
#define GPIO_CHANNEL_SRC_channel7_src_WIDTH (3)
#define GPIO_CHANNEL_SRC_channel7_src_MASK (0x00E00000)
#define GPIO_CHANNEL_SRC_channel7_src_B_0x0 (0x00000000)
#define GPIO_CHANNEL_SRC_channel7_src_B_0x1 (0x00000001)
#define GPIO_CHANNEL_SRC_channel7_src_B_0x2 (0x00000002)
#define GPIO_CHANNEL_SRC_channel7_src_B_0x3 (0x00000003)

/*
* Register : GPIO_INT_SRC
*/

#define GPIO_INT_SRC_SIZE                  (16)
#define GPIO_INT_SRC_OFFSET                (pictorv2_in_GPIO_BASE_ADDR + 0x16)
#define GPIO_INT_SRC_RESET_VALUE           (0x00)
#define GPIO_INT_SRC_BITFIELD_MASK         (0x0FFF)
#define GPIO_INT_SRC_RWMASK                (0x0FFF)
#define GPIO_INT_SRC_ROMASK                (0x0000)
#define GPIO_INT_SRC_WOMASK                (0x0000)
#define GPIO_INT_SRC_UNUSED_MASK           (0xF000)
#define GPIO_INT_SRC_int0_src_OFFSET       (0x0000)
#define GPIO_INT_SRC_int0_src_WIDTH        (3)
#define GPIO_INT_SRC_int0_src_MASK         (0x0007)
#define GPIO_INT_SRC_int0_src_SRC_TIMER0   (0x0000)
#define GPIO_INT_SRC_int0_src_SRC_TIMER1   (0x0001)
#define GPIO_INT_SRC_int0_src_SRC_TIMER2   (0x0002)
#define GPIO_INT_SRC_int0_src_SRC_TIMER3   (0x0003)
#define GPIO_INT_SRC_int1_src_OFFSET       (0x0003)
#define GPIO_INT_SRC_int1_src_WIDTH        (3)
#define GPIO_INT_SRC_int1_src_MASK         (0x0038)
#define GPIO_INT_SRC_int1_src_SRC_TIMER0   (0x0000)
#define GPIO_INT_SRC_int1_src_SRC_TIMER1   (0x0001)
#define GPIO_INT_SRC_int1_src_SRC_TIMER2   (0x0002)
#define GPIO_INT_SRC_int1_src_SRC_TIMER3   (0x0003)
#define GPIO_INT_SRC_int2_src_OFFSET       (0x0006)
#define GPIO_INT_SRC_int2_src_WIDTH        (3)
#define GPIO_INT_SRC_int2_src_MASK         (0x01C0)
#define GPIO_INT_SRC_int2_src_SRC_TIMER0   (0x0000)
#define GPIO_INT_SRC_int2_src_SRC_TIMER1   (0x0001)
#define GPIO_INT_SRC_int2_src_SRC_TIMER2   (0x0002)
#define GPIO_INT_SRC_int2_src_SRC_TIMER3   (0x0003)
#define GPIO_INT_SRC_int3_src_OFFSET       (0x0009)
#define GPIO_INT_SRC_int3_src_WIDTH        (3)
#define GPIO_INT_SRC_int3_src_MASK         (0x0E00)
#define GPIO_INT_SRC_int3_src_SRC_TIMER0   (0x0000)
#define GPIO_INT_SRC_int3_src_SRC_TIMER1   (0x0001)
#define GPIO_INT_SRC_int3_src_SRC_TIMER2   (0x0002)
#define GPIO_INT_SRC_int3_src_SRC_TIMER3   (0x0003)

/*
* Register : GPIO_INT0_TRIGGER
*/

#define GPIO_INT0_TRIGGER_SIZE             (32)
#define GPIO_INT0_TRIGGER_OFFSET           (pictorv2_in_GPIO_BASE_ADDR + 0x18)
#define GPIO_INT0_TRIGGER_RESET_VALUE      (0x00)
#define GPIO_INT0_TRIGGER_BITFIELD_MASK    (0xFFFFFFFF)
#define GPIO_INT0_TRIGGER_RWMASK           (0xFFFFFFFF)
#define GPIO_INT0_TRIGGER_ROMASK           (0x00000000)
#define GPIO_INT0_TRIGGER_WOMASK           (0x00000000)
#define GPIO_INT0_TRIGGER_UNUSED_MASK      (0x00000000)
#define GPIO_INT0_TRIGGER_count_low_OFFSET (0x00000000)
#define GPIO_INT0_TRIGGER_count_low_WIDTH  (16)
#define GPIO_INT0_TRIGGER_count_low_MASK   (0x0000FFFF)
#define GPIO_INT0_TRIGGER_count_high_OFFSET (0x00000010)
#define GPIO_INT0_TRIGGER_count_high_WIDTH (16)
#define GPIO_INT0_TRIGGER_count_high_MASK  (0xFFFF0000)

/*
* Register : GPIO_INT0_TRIGGER_EX
*/

#define GPIO_INT0_TRIGGER_EX_SIZE          (16)
#define GPIO_INT0_TRIGGER_EX_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x1a)
#define GPIO_INT0_TRIGGER_EX_RESET_VALUE   (0x00)
#define GPIO_INT0_TRIGGER_EX_BITFIELD_MASK (0x03FF)
#define GPIO_INT0_TRIGGER_EX_RWMASK        (0x03FF)
#define GPIO_INT0_TRIGGER_EX_ROMASK        (0x0000)
#define GPIO_INT0_TRIGGER_EX_WOMASK        (0x0000)
#define GPIO_INT0_TRIGGER_EX_UNUSED_MASK   (0xFC00)
#define GPIO_INT0_TRIGGER_EX_count_ext_OFFSET (0x0000)
#define GPIO_INT0_TRIGGER_EX_count_ext_WIDTH (8)
#define GPIO_INT0_TRIGGER_EX_count_ext_MASK (0x00FF)
#define GPIO_INT0_TRIGGER_EX_repeat_OFFSET (0x0008)
#define GPIO_INT0_TRIGGER_EX_repeat_WIDTH  (2)
#define GPIO_INT0_TRIGGER_EX_repeat_MASK   (0x0300)
#define GPIO_INT0_TRIGGER_EX_repeat_B_0x0  (0x0000)
#define GPIO_INT0_TRIGGER_EX_repeat_B_0x1  (0x0001)

/*
* Register : GPIO_INT1_TRIGGER
*/

#define GPIO_INT1_TRIGGER_SIZE             (32)
#define GPIO_INT1_TRIGGER_OFFSET           (pictorv2_in_GPIO_BASE_ADDR + 0x1c)
#define GPIO_INT1_TRIGGER_RESET_VALUE      (0x00)
#define GPIO_INT1_TRIGGER_BITFIELD_MASK    (0xFFFFFFFF)
#define GPIO_INT1_TRIGGER_RWMASK           (0xFFFFFFFF)
#define GPIO_INT1_TRIGGER_ROMASK           (0x00000000)
#define GPIO_INT1_TRIGGER_WOMASK           (0x00000000)
#define GPIO_INT1_TRIGGER_UNUSED_MASK      (0x00000000)
#define GPIO_INT1_TRIGGER_count_low_OFFSET (0x00000000)
#define GPIO_INT1_TRIGGER_count_low_WIDTH  (16)
#define GPIO_INT1_TRIGGER_count_low_MASK   (0x0000FFFF)
#define GPIO_INT1_TRIGGER_count_high_OFFSET (0x00000010)
#define GPIO_INT1_TRIGGER_count_high_WIDTH (16)
#define GPIO_INT1_TRIGGER_count_high_MASK  (0xFFFF0000)

/*
* Register : GPIO_INT1_TRIGGER_EX
*/

#define GPIO_INT1_TRIGGER_EX_SIZE          (16)
#define GPIO_INT1_TRIGGER_EX_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x1e)
#define GPIO_INT1_TRIGGER_EX_RESET_VALUE   (0x00)
#define GPIO_INT1_TRIGGER_EX_BITFIELD_MASK (0x03FF)
#define GPIO_INT1_TRIGGER_EX_RWMASK        (0x03FF)
#define GPIO_INT1_TRIGGER_EX_ROMASK        (0x0000)
#define GPIO_INT1_TRIGGER_EX_WOMASK        (0x0000)
#define GPIO_INT1_TRIGGER_EX_UNUSED_MASK   (0xFC00)
#define GPIO_INT1_TRIGGER_EX_count_ext_OFFSET (0x0000)
#define GPIO_INT1_TRIGGER_EX_count_ext_WIDTH (8)
#define GPIO_INT1_TRIGGER_EX_count_ext_MASK (0x00FF)
#define GPIO_INT1_TRIGGER_EX_repeat_OFFSET (0x0008)
#define GPIO_INT1_TRIGGER_EX_repeat_WIDTH  (2)
#define GPIO_INT1_TRIGGER_EX_repeat_MASK   (0x0300)
#define GPIO_INT1_TRIGGER_EX_repeat_B_0x0  (0x0000)
#define GPIO_INT1_TRIGGER_EX_repeat_B_0x1  (0x0001)

/*
* Register : GPIO_INT2_TRIGGER
*/

#define GPIO_INT2_TRIGGER_SIZE             (32)
#define GPIO_INT2_TRIGGER_OFFSET           (pictorv2_in_GPIO_BASE_ADDR + 0x20)
#define GPIO_INT2_TRIGGER_RESET_VALUE      (0x00)
#define GPIO_INT2_TRIGGER_BITFIELD_MASK    (0xFFFFFFFF)
#define GPIO_INT2_TRIGGER_RWMASK           (0xFFFFFFFF)
#define GPIO_INT2_TRIGGER_ROMASK           (0x00000000)
#define GPIO_INT2_TRIGGER_WOMASK           (0x00000000)
#define GPIO_INT2_TRIGGER_UNUSED_MASK      (0x00000000)
#define GPIO_INT2_TRIGGER_count_low_OFFSET (0x00000000)
#define GPIO_INT2_TRIGGER_count_low_WIDTH  (16)
#define GPIO_INT2_TRIGGER_count_low_MASK   (0x0000FFFF)
#define GPIO_INT2_TRIGGER_count_high_OFFSET (0x00000010)
#define GPIO_INT2_TRIGGER_count_high_WIDTH (16)
#define GPIO_INT2_TRIGGER_count_high_MASK  (0xFFFF0000)

/*
* Register : GPIO_INT2_TRIGGER_EX
*/

#define GPIO_INT2_TRIGGER_EX_SIZE          (16)
#define GPIO_INT2_TRIGGER_EX_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x22)
#define GPIO_INT2_TRIGGER_EX_RESET_VALUE   (0x00)
#define GPIO_INT2_TRIGGER_EX_BITFIELD_MASK (0x03FF)
#define GPIO_INT2_TRIGGER_EX_RWMASK        (0x03FF)
#define GPIO_INT2_TRIGGER_EX_ROMASK        (0x0000)
#define GPIO_INT2_TRIGGER_EX_WOMASK        (0x0000)
#define GPIO_INT2_TRIGGER_EX_UNUSED_MASK   (0xFC00)
#define GPIO_INT2_TRIGGER_EX_count_ext_OFFSET (0x0000)
#define GPIO_INT2_TRIGGER_EX_count_ext_WIDTH (8)
#define GPIO_INT2_TRIGGER_EX_count_ext_MASK (0x00FF)
#define GPIO_INT2_TRIGGER_EX_repeat_OFFSET (0x0008)
#define GPIO_INT2_TRIGGER_EX_repeat_WIDTH  (2)
#define GPIO_INT2_TRIGGER_EX_repeat_MASK   (0x0300)
#define GPIO_INT2_TRIGGER_EX_repeat_B_0x0  (0x0000)
#define GPIO_INT2_TRIGGER_EX_repeat_B_0x1  (0x0001)

/*
* Register : GPIO_INT3_TRIGGER
*/

#define GPIO_INT3_TRIGGER_SIZE             (32)
#define GPIO_INT3_TRIGGER_OFFSET           (pictorv2_in_GPIO_BASE_ADDR + 0x24)
#define GPIO_INT3_TRIGGER_RESET_VALUE      (0x00)
#define GPIO_INT3_TRIGGER_BITFIELD_MASK    (0xFFFFFFFF)
#define GPIO_INT3_TRIGGER_RWMASK           (0xFFFFFFFF)
#define GPIO_INT3_TRIGGER_ROMASK           (0x00000000)
#define GPIO_INT3_TRIGGER_WOMASK           (0x00000000)
#define GPIO_INT3_TRIGGER_UNUSED_MASK      (0x00000000)
#define GPIO_INT3_TRIGGER_count_low_OFFSET (0x00000000)
#define GPIO_INT3_TRIGGER_count_low_WIDTH  (16)
#define GPIO_INT3_TRIGGER_count_low_MASK   (0x0000FFFF)
#define GPIO_INT3_TRIGGER_count_high_OFFSET (0x00000010)
#define GPIO_INT3_TRIGGER_count_high_WIDTH (16)
#define GPIO_INT3_TRIGGER_count_high_MASK  (0xFFFF0000)

/*
* Register : GPIO_INT3_TRIGGER_EX
*/

#define GPIO_INT3_TRIGGER_EX_SIZE          (16)
#define GPIO_INT3_TRIGGER_EX_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x26)
#define GPIO_INT3_TRIGGER_EX_RESET_VALUE   (0x00)
#define GPIO_INT3_TRIGGER_EX_BITFIELD_MASK (0x03FF)
#define GPIO_INT3_TRIGGER_EX_RWMASK        (0x03FF)
#define GPIO_INT3_TRIGGER_EX_ROMASK        (0x0000)
#define GPIO_INT3_TRIGGER_EX_WOMASK        (0x0000)
#define GPIO_INT3_TRIGGER_EX_UNUSED_MASK   (0xFC00)
#define GPIO_INT3_TRIGGER_EX_count_ext_OFFSET (0x0000)
#define GPIO_INT3_TRIGGER_EX_count_ext_WIDTH (8)
#define GPIO_INT3_TRIGGER_EX_count_ext_MASK (0x00FF)
#define GPIO_INT3_TRIGGER_EX_repeat_OFFSET (0x0008)
#define GPIO_INT3_TRIGGER_EX_repeat_WIDTH  (2)
#define GPIO_INT3_TRIGGER_EX_repeat_MASK   (0x0300)
#define GPIO_INT3_TRIGGER_EX_repeat_B_0x0  (0x0000)
#define GPIO_INT3_TRIGGER_EX_repeat_B_0x1  (0x0001)

/*
* Register : GPIO_EVENT_TRIGGER
*/

#define GPIO_EVENT_TRIGGER_SIZE            (16)
#define GPIO_EVENT_TRIGGER_OFFSET          (pictorv2_in_GPIO_BASE_ADDR + 0x28)
#define GPIO_EVENT_TRIGGER_RESET_VALUE     (0x100)
#define GPIO_EVENT_TRIGGER_BITFIELD_MASK   (0x01FF)
#define GPIO_EVENT_TRIGGER_RWMASK          (0x01FF)
#define GPIO_EVENT_TRIGGER_ROMASK          (0x0000)
#define GPIO_EVENT_TRIGGER_WOMASK          (0x0000)
#define GPIO_EVENT_TRIGGER_UNUSED_MASK     (0xFE00)
#define GPIO_EVENT_TRIGGER_event_trigger_OFFSET (0x0000)
#define GPIO_EVENT_TRIGGER_event_trigger_WIDTH (8)
#define GPIO_EVENT_TRIGGER_event_trigger_MASK (0x00FF)
#define GPIO_EVENT_TRIGGER_event_src_OFFSET (0x0008)
#define GPIO_EVENT_TRIGGER_event_src_WIDTH (1)
#define GPIO_EVENT_TRIGGER_event_src_MASK  (0x0100)
#define GPIO_EVENT_TRIGGER_event_src_EVENT_SRC_ADC (0x0000)
#define GPIO_EVENT_TRIGGER_event_src_EVENT_SRC_GPI (0x0001)

/*
* Register : GPIO_TIMER_PRESCALE
*/

#define GPIO_TIMER_PRESCALE_SIZE           (16)
#define GPIO_TIMER_PRESCALE_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x2a)
#define GPIO_TIMER_PRESCALE_RESET_VALUE    (0x00)
#define GPIO_TIMER_PRESCALE_BITFIELD_MASK  (0xFFFF)
#define GPIO_TIMER_PRESCALE_RWMASK         (0xFFFF)
#define GPIO_TIMER_PRESCALE_ROMASK         (0x0000)
#define GPIO_TIMER_PRESCALE_WOMASK         (0x0000)
#define GPIO_TIMER_PRESCALE_UNUSED_MASK    (0x0000)
#define GPIO_TIMER_PRESCALE_timer0_prescale_OFFSET (0x0000)
#define GPIO_TIMER_PRESCALE_timer0_prescale_WIDTH (4)
#define GPIO_TIMER_PRESCALE_timer0_prescale_MASK (0x000F)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x0 (0x0000)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x1 (0x0001)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x2 (0x0002)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x3 (0x0003)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x4 (0x0004)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x5 (0x0005)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x6 (0x0006)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x7 (0x0007)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x8 (0x0008)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0x9 (0x0009)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0xA (0x000A)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0xB (0x000B)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0xC (0x000C)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0xD (0x000D)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0xE (0x000E)
#define GPIO_TIMER_PRESCALE_timer0_prescale_B_0xF (0x000F)
#define GPIO_TIMER_PRESCALE_timer1_prescale_OFFSET (0x0004)
#define GPIO_TIMER_PRESCALE_timer1_prescale_WIDTH (4)
#define GPIO_TIMER_PRESCALE_timer1_prescale_MASK (0x00F0)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x0 (0x0000)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x1 (0x0001)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x2 (0x0002)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x3 (0x0003)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x4 (0x0004)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x5 (0x0005)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x6 (0x0006)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x7 (0x0007)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x8 (0x0008)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0x9 (0x0009)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0xA (0x000A)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0xB (0x000B)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0xC (0x000C)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0xD (0x000D)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0xE (0x000E)
#define GPIO_TIMER_PRESCALE_timer1_prescale_B_0xF (0x000F)
#define GPIO_TIMER_PRESCALE_timer2_prescale_OFFSET (0x0008)
#define GPIO_TIMER_PRESCALE_timer2_prescale_WIDTH (4)
#define GPIO_TIMER_PRESCALE_timer2_prescale_MASK (0x0F00)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x0 (0x0000)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x1 (0x0001)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x2 (0x0002)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x3 (0x0003)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x4 (0x0004)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x5 (0x0005)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x6 (0x0006)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x7 (0x0007)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x8 (0x0008)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0x9 (0x0009)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0xA (0x000A)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0xB (0x000B)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0xC (0x000C)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0xD (0x000D)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0xE (0x000E)
#define GPIO_TIMER_PRESCALE_timer2_prescale_B_0xF (0x000F)
#define GPIO_TIMER_PRESCALE_timer3_prescale_OFFSET (0x000c)
#define GPIO_TIMER_PRESCALE_timer3_prescale_WIDTH (4)
#define GPIO_TIMER_PRESCALE_timer3_prescale_MASK (0xF000)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x0 (0x0000)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x1 (0x0001)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x2 (0x0002)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x3 (0x0003)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x4 (0x0004)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x5 (0x0005)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x6 (0x0006)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x7 (0x0007)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x8 (0x0008)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0x9 (0x0009)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0xA (0x000A)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0xB (0x000B)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0xC (0x000C)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0xD (0x000D)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0xE (0x000E)
#define GPIO_TIMER_PRESCALE_timer3_prescale_B_0xF (0x000F)

/*
* Register : GPIO_DEBOUNCE_CTRL
*/

#define GPIO_DEBOUNCE_CTRL_SIZE            (8)
#define GPIO_DEBOUNCE_CTRL_OFFSET          (pictorv2_in_GPIO_BASE_ADDR + 0x2c)
#define GPIO_DEBOUNCE_CTRL_RESET_VALUE     (0x00)
#define GPIO_DEBOUNCE_CTRL_BITFIELD_MASK   (0xF1)
#define GPIO_DEBOUNCE_CTRL_RWMASK          (0xF1)
#define GPIO_DEBOUNCE_CTRL_ROMASK          (0x00)
#define GPIO_DEBOUNCE_CTRL_WOMASK          (0x00)
#define GPIO_DEBOUNCE_CTRL_UNUSED_MASK     (0x0E)
#define GPIO_DEBOUNCE_CTRL_debounce_enable_OFFSET (0x00)
#define GPIO_DEBOUNCE_CTRL_debounce_enable_WIDTH (1)
#define GPIO_DEBOUNCE_CTRL_debounce_enable_MASK (0x01)
#define GPIO_DEBOUNCE_CTRL_debounce_enable_DISABLE (0x00)
#define GPIO_DEBOUNCE_CTRL_debounce_enable_ENABLE (0x01)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_OFFSET (0x04)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_WIDTH (4)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_MASK (0xF0)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x0 (0x00)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x1 (0x01)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x2 (0x02)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x3 (0x03)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x4 (0x04)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x5 (0x05)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x6 (0x06)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x7 (0x07)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x8 (0x08)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0x9 (0x09)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0xA (0x0A)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0xB (0x0B)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0xC (0x0C)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0xD (0x0D)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0xE (0x0E)
#define GPIO_DEBOUNCE_CTRL_debounce_prescale_B_0xF (0x0F)

/*
* Register : GPIO_DEBOUNCE_PERIOD
*/

#define GPIO_DEBOUNCE_PERIOD_SIZE          (16)
#define GPIO_DEBOUNCE_PERIOD_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x2e)
#define GPIO_DEBOUNCE_PERIOD_RESET_VALUE   (0x00)
#define GPIO_DEBOUNCE_PERIOD_BITFIELD_MASK (0xFFFF)
#define GPIO_DEBOUNCE_PERIOD_RWMASK        (0xFFFF)
#define GPIO_DEBOUNCE_PERIOD_ROMASK        (0x0000)
#define GPIO_DEBOUNCE_PERIOD_WOMASK        (0x0000)
#define GPIO_DEBOUNCE_PERIOD_UNUSED_MASK   (0x0000)
#define GPIO_DEBOUNCE_PERIOD_debounce_period_OFFSET (0x0000)
#define GPIO_DEBOUNCE_PERIOD_debounce_period_WIDTH (16)
#define GPIO_DEBOUNCE_PERIOD_debounce_period_MASK (0xFFFF)

/*
* Register : GPIO_IDP_FRAME_COUNT
*/

#define GPIO_IDP_FRAME_COUNT_SIZE          (8)
#define GPIO_IDP_FRAME_COUNT_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x30)
#define GPIO_IDP_FRAME_COUNT_RESET_VALUE   (0x00)
#define GPIO_IDP_FRAME_COUNT_BITFIELD_MASK (0xFF)
#define GPIO_IDP_FRAME_COUNT_RWMASK        (0x00)
#define GPIO_IDP_FRAME_COUNT_ROMASK        (0xFF)
#define GPIO_IDP_FRAME_COUNT_WOMASK        (0x00)
#define GPIO_IDP_FRAME_COUNT_UNUSED_MASK   (0x00)
#define GPIO_IDP_FRAME_COUNT_frame_count_OFFSET (0x00)
#define GPIO_IDP_FRAME_COUNT_frame_count_WIDTH (8)
#define GPIO_IDP_FRAME_COUNT_frame_count_MASK (0xFF)

/*
* Register : GPIO_GPI
*/

#define GPIO_GPI_SIZE                      (16)
#define GPIO_GPI_OFFSET                    (pictorv2_in_GPIO_BASE_ADDR + 0x32)
#define GPIO_GPI_RESET_VALUE               (0x00)
#define GPIO_GPI_BITFIELD_MASK             (0xFFFF)
#define GPIO_GPI_RWMASK                    (0x0000)
#define GPIO_GPI_ROMASK                    (0xFFFF)
#define GPIO_GPI_WOMASK                    (0x0000)
#define GPIO_GPI_UNUSED_MASK               (0x0000)
#define GPIO_GPI_gpi_OFFSET                (0x0000)
#define GPIO_GPI_gpi_WIDTH                 (16)
#define GPIO_GPI_gpi_MASK                  (0xFFFF)

/*
* Register : GPIO_GPO
*/

#define GPIO_GPO_SIZE                      (16)
#define GPIO_GPO_OFFSET                    (pictorv2_in_GPIO_BASE_ADDR + 0x34)
#define GPIO_GPO_RESET_VALUE               (0x00)
#define GPIO_GPO_BITFIELD_MASK             (0xFFFF)
#define GPIO_GPO_RWMASK                    (0xFFFF)
#define GPIO_GPO_ROMASK                    (0x0000)
#define GPIO_GPO_WOMASK                    (0x0000)
#define GPIO_GPO_UNUSED_MASK               (0x0000)
#define GPIO_GPO_gpo_OFFSET                (0x0000)
#define GPIO_GPO_gpo_WIDTH                 (16)
#define GPIO_GPO_gpo_MASK                  (0xFFFF)
#define GPIO_GPO_gpo_B_0x0                 (0x0000)
#define GPIO_GPO_gpo_B_0x1                 (0x0001)

/*
* Register : GPIO_GPD
*/

#define GPIO_GPD_SIZE                      (16)
#define GPIO_GPD_OFFSET                    (pictorv2_in_GPIO_BASE_ADDR + 0x36)
#define GPIO_GPD_RESET_VALUE               (0x00)
#define GPIO_GPD_BITFIELD_MASK             (0xFFFF)
#define GPIO_GPD_RWMASK                    (0xFFFF)
#define GPIO_GPD_ROMASK                    (0x0000)
#define GPIO_GPD_WOMASK                    (0x0000)
#define GPIO_GPD_UNUSED_MASK               (0x0000)
#define GPIO_GPD_gpd_OFFSET                (0x0000)
#define GPIO_GPD_gpd_WIDTH                 (16)
#define GPIO_GPD_gpd_MASK                  (0xFFFF)
#define GPIO_GPD_gpd_DIR_INPUT             (0x0000)
#define GPIO_GPD_gpd_DIR_OUTPUT            (0x0001)

/*
* Register : GPIO_CHANNEL0_CTRL0
*/

#define GPIO_CHANNEL0_CTRL0_SIZE           (32)
#define GPIO_CHANNEL0_CTRL0_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x38)
#define GPIO_CHANNEL0_CTRL0_RESET_VALUE    (0x00)
#define GPIO_CHANNEL0_CTRL0_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL0_CTRL0_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL0_CTRL0_ROMASK         (0x00000000)
#define GPIO_CHANNEL0_CTRL0_WOMASK         (0x00000000)
#define GPIO_CHANNEL0_CTRL0_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL0_CTRL0_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL0_CTRL0_lo_WIDTH       (16)
#define GPIO_CHANNEL0_CTRL0_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL0_CTRL0_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL0_CTRL0_hi_WIDTH       (16)
#define GPIO_CHANNEL0_CTRL0_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL0_CTRL0_EXT
*/

#define GPIO_CHANNEL0_CTRL0_EXT_SIZE       (8)
#define GPIO_CHANNEL0_CTRL0_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x3a)
#define GPIO_CHANNEL0_CTRL0_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL0_CTRL0_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL0_CTRL0_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL0_CTRL0_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL0_CTRL0_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL0_CTRL0_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL0_CTRL0_EXT_ctrl0_ext_OFFSET (0x00)
#define GPIO_CHANNEL0_CTRL0_EXT_ctrl0_ext_WIDTH (8)
#define GPIO_CHANNEL0_CTRL0_EXT_ctrl0_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL0_CTRL1
*/

#define GPIO_CHANNEL0_CTRL1_SIZE           (32)
#define GPIO_CHANNEL0_CTRL1_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x3c)
#define GPIO_CHANNEL0_CTRL1_RESET_VALUE    (0x00)
#define GPIO_CHANNEL0_CTRL1_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL0_CTRL1_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL0_CTRL1_ROMASK         (0x00000000)
#define GPIO_CHANNEL0_CTRL1_WOMASK         (0x00000000)
#define GPIO_CHANNEL0_CTRL1_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL0_CTRL1_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL0_CTRL1_lo_WIDTH       (16)
#define GPIO_CHANNEL0_CTRL1_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL0_CTRL1_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL0_CTRL1_hi_WIDTH       (16)
#define GPIO_CHANNEL0_CTRL1_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL0_CTRL1_EXT
*/

#define GPIO_CHANNEL0_CTRL1_EXT_SIZE       (8)
#define GPIO_CHANNEL0_CTRL1_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x3e)
#define GPIO_CHANNEL0_CTRL1_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL0_CTRL1_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL0_CTRL1_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL0_CTRL1_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL0_CTRL1_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL0_CTRL1_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL0_CTRL1_EXT_ctrl1_ext_OFFSET (0x00)
#define GPIO_CHANNEL0_CTRL1_EXT_ctrl1_ext_WIDTH (8)
#define GPIO_CHANNEL0_CTRL1_EXT_ctrl1_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL0_REPEAT
*/

#define GPIO_CHANNEL0_REPEAT_SIZE          (16)
#define GPIO_CHANNEL0_REPEAT_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x40)
#define GPIO_CHANNEL0_REPEAT_RESET_VALUE   (0x00)
#define GPIO_CHANNEL0_REPEAT_BITFIELD_MASK (0x03FF)
#define GPIO_CHANNEL0_REPEAT_RWMASK        (0x03FF)
#define GPIO_CHANNEL0_REPEAT_ROMASK        (0x0000)
#define GPIO_CHANNEL0_REPEAT_WOMASK        (0x0000)
#define GPIO_CHANNEL0_REPEAT_UNUSED_MASK   (0xFC00)
#define GPIO_CHANNEL0_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL0_REPEAT_repeat_WIDTH  (8)
#define GPIO_CHANNEL0_REPEAT_repeat_MASK   (0x00FF)
#define GPIO_CHANNEL0_REPEAT_line_mode_OFFSET (0x0008)
#define GPIO_CHANNEL0_REPEAT_line_mode_WIDTH (1)
#define GPIO_CHANNEL0_REPEAT_line_mode_MASK (0x0100)
#define GPIO_CHANNEL0_REPEAT_line_mode_LINE_REPEAT (0x0000)
#define GPIO_CHANNEL0_REPEAT_line_mode_FRAME_REPEAT (0x0001)
#define GPIO_CHANNEL0_REPEAT_until_OFFSET  (0x0009)
#define GPIO_CHANNEL0_REPEAT_until_WIDTH   (1)
#define GPIO_CHANNEL0_REPEAT_until_MASK    (0x0200)
#define GPIO_CHANNEL0_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL0_REPEAT_until_ENABLE  (0x0001)

/*
* Register : GPIO_CHANNEL1_CTRL0
*/

#define GPIO_CHANNEL1_CTRL0_SIZE           (32)
#define GPIO_CHANNEL1_CTRL0_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x42)
#define GPIO_CHANNEL1_CTRL0_RESET_VALUE    (0x00)
#define GPIO_CHANNEL1_CTRL0_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL1_CTRL0_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL1_CTRL0_ROMASK         (0x00000000)
#define GPIO_CHANNEL1_CTRL0_WOMASK         (0x00000000)
#define GPIO_CHANNEL1_CTRL0_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL1_CTRL0_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL1_CTRL0_lo_WIDTH       (16)
#define GPIO_CHANNEL1_CTRL0_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL1_CTRL0_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL1_CTRL0_hi_WIDTH       (16)
#define GPIO_CHANNEL1_CTRL0_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL1_CTRL0_EXT
*/

#define GPIO_CHANNEL1_CTRL0_EXT_SIZE       (8)
#define GPIO_CHANNEL1_CTRL0_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x44)
#define GPIO_CHANNEL1_CTRL0_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL1_CTRL0_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL1_CTRL0_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL1_CTRL0_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL1_CTRL0_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL1_CTRL0_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL1_CTRL0_EXT_ctrl0_ext_OFFSET (0x00)
#define GPIO_CHANNEL1_CTRL0_EXT_ctrl0_ext_WIDTH (8)
#define GPIO_CHANNEL1_CTRL0_EXT_ctrl0_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL1_CTRL1
*/

#define GPIO_CHANNEL1_CTRL1_SIZE           (32)
#define GPIO_CHANNEL1_CTRL1_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x46)
#define GPIO_CHANNEL1_CTRL1_RESET_VALUE    (0x00)
#define GPIO_CHANNEL1_CTRL1_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL1_CTRL1_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL1_CTRL1_ROMASK         (0x00000000)
#define GPIO_CHANNEL1_CTRL1_WOMASK         (0x00000000)
#define GPIO_CHANNEL1_CTRL1_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL1_CTRL1_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL1_CTRL1_lo_WIDTH       (16)
#define GPIO_CHANNEL1_CTRL1_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL1_CTRL1_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL1_CTRL1_hi_WIDTH       (16)
#define GPIO_CHANNEL1_CTRL1_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL1_CTRL1_EXT
*/

#define GPIO_CHANNEL1_CTRL1_EXT_SIZE       (8)
#define GPIO_CHANNEL1_CTRL1_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x48)
#define GPIO_CHANNEL1_CTRL1_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL1_CTRL1_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL1_CTRL1_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL1_CTRL1_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL1_CTRL1_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL1_CTRL1_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL1_CTRL1_EXT_ctrl1_ext_OFFSET (0x00)
#define GPIO_CHANNEL1_CTRL1_EXT_ctrl1_ext_WIDTH (8)
#define GPIO_CHANNEL1_CTRL1_EXT_ctrl1_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL1_REPEAT
*/

#define GPIO_CHANNEL1_REPEAT_SIZE          (16)
#define GPIO_CHANNEL1_REPEAT_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x4a)
#define GPIO_CHANNEL1_REPEAT_RESET_VALUE   (0x00)
#define GPIO_CHANNEL1_REPEAT_BITFIELD_MASK (0x03FF)
#define GPIO_CHANNEL1_REPEAT_RWMASK        (0x03FF)
#define GPIO_CHANNEL1_REPEAT_ROMASK        (0x0000)
#define GPIO_CHANNEL1_REPEAT_WOMASK        (0x0000)
#define GPIO_CHANNEL1_REPEAT_UNUSED_MASK   (0xFC00)
#define GPIO_CHANNEL1_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL1_REPEAT_repeat_WIDTH  (8)
#define GPIO_CHANNEL1_REPEAT_repeat_MASK   (0x00FF)
#define GPIO_CHANNEL1_REPEAT_line_mode_OFFSET (0x0008)
#define GPIO_CHANNEL1_REPEAT_line_mode_WIDTH (1)
#define GPIO_CHANNEL1_REPEAT_line_mode_MASK (0x0100)
#define GPIO_CHANNEL1_REPEAT_line_mode_LINE_REPEAT (0x0000)
#define GPIO_CHANNEL1_REPEAT_line_mode_FRAME_REPEAT (0x0001)
#define GPIO_CHANNEL1_REPEAT_until_OFFSET  (0x0009)
#define GPIO_CHANNEL1_REPEAT_until_WIDTH   (1)
#define GPIO_CHANNEL1_REPEAT_until_MASK    (0x0200)
#define GPIO_CHANNEL1_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL1_REPEAT_until_ENABLE  (0x0001)

/*
* Register : GPIO_CHANNEL2_CTRL0
*/

#define GPIO_CHANNEL2_CTRL0_SIZE           (32)
#define GPIO_CHANNEL2_CTRL0_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x4c)
#define GPIO_CHANNEL2_CTRL0_RESET_VALUE    (0x00)
#define GPIO_CHANNEL2_CTRL0_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL2_CTRL0_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL2_CTRL0_ROMASK         (0x00000000)
#define GPIO_CHANNEL2_CTRL0_WOMASK         (0x00000000)
#define GPIO_CHANNEL2_CTRL0_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL2_CTRL0_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL2_CTRL0_lo_WIDTH       (16)
#define GPIO_CHANNEL2_CTRL0_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL2_CTRL0_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL2_CTRL0_hi_WIDTH       (16)
#define GPIO_CHANNEL2_CTRL0_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL2_CTRL0_EXT
*/

#define GPIO_CHANNEL2_CTRL0_EXT_SIZE       (8)
#define GPIO_CHANNEL2_CTRL0_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x4e)
#define GPIO_CHANNEL2_CTRL0_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL2_CTRL0_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL2_CTRL0_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL2_CTRL0_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL2_CTRL0_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL2_CTRL0_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL2_CTRL0_EXT_ctrl0_ext_OFFSET (0x00)
#define GPIO_CHANNEL2_CTRL0_EXT_ctrl0_ext_WIDTH (8)
#define GPIO_CHANNEL2_CTRL0_EXT_ctrl0_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL2_CTRL1
*/

#define GPIO_CHANNEL2_CTRL1_SIZE           (32)
#define GPIO_CHANNEL2_CTRL1_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x50)
#define GPIO_CHANNEL2_CTRL1_RESET_VALUE    (0x00)
#define GPIO_CHANNEL2_CTRL1_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL2_CTRL1_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL2_CTRL1_ROMASK         (0x00000000)
#define GPIO_CHANNEL2_CTRL1_WOMASK         (0x00000000)
#define GPIO_CHANNEL2_CTRL1_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL2_CTRL1_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL2_CTRL1_lo_WIDTH       (16)
#define GPIO_CHANNEL2_CTRL1_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL2_CTRL1_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL2_CTRL1_hi_WIDTH       (16)
#define GPIO_CHANNEL2_CTRL1_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL2_CTRL1_EXT
*/

#define GPIO_CHANNEL2_CTRL1_EXT_SIZE       (8)
#define GPIO_CHANNEL2_CTRL1_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x52)
#define GPIO_CHANNEL2_CTRL1_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL2_CTRL1_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL2_CTRL1_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL2_CTRL1_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL2_CTRL1_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL2_CTRL1_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL2_CTRL1_EXT_ctrl1_ext_OFFSET (0x00)
#define GPIO_CHANNEL2_CTRL1_EXT_ctrl1_ext_WIDTH (8)
#define GPIO_CHANNEL2_CTRL1_EXT_ctrl1_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL2_REPEAT
*/

#define GPIO_CHANNEL2_REPEAT_SIZE          (16)
#define GPIO_CHANNEL2_REPEAT_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x54)
#define GPIO_CHANNEL2_REPEAT_RESET_VALUE   (0x00)
#define GPIO_CHANNEL2_REPEAT_BITFIELD_MASK (0x03FF)
#define GPIO_CHANNEL2_REPEAT_RWMASK        (0x03FF)
#define GPIO_CHANNEL2_REPEAT_ROMASK        (0x0000)
#define GPIO_CHANNEL2_REPEAT_WOMASK        (0x0000)
#define GPIO_CHANNEL2_REPEAT_UNUSED_MASK   (0xFC00)
#define GPIO_CHANNEL2_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL2_REPEAT_repeat_WIDTH  (8)
#define GPIO_CHANNEL2_REPEAT_repeat_MASK   (0x00FF)
#define GPIO_CHANNEL2_REPEAT_line_mode_OFFSET (0x0008)
#define GPIO_CHANNEL2_REPEAT_line_mode_WIDTH (1)
#define GPIO_CHANNEL2_REPEAT_line_mode_MASK (0x0100)
#define GPIO_CHANNEL2_REPEAT_line_mode_LINE_REPEAT (0x0000)
#define GPIO_CHANNEL2_REPEAT_line_mode_FRAME_REPEAT (0x0001)
#define GPIO_CHANNEL2_REPEAT_until_OFFSET  (0x0009)
#define GPIO_CHANNEL2_REPEAT_until_WIDTH   (1)
#define GPIO_CHANNEL2_REPEAT_until_MASK    (0x0200)
#define GPIO_CHANNEL2_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL2_REPEAT_until_ENABLE  (0x0001)

/*
* Register : GPIO_CHANNEL3_CTRL0
*/

#define GPIO_CHANNEL3_CTRL0_SIZE           (32)
#define GPIO_CHANNEL3_CTRL0_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x56)
#define GPIO_CHANNEL3_CTRL0_RESET_VALUE    (0x00)
#define GPIO_CHANNEL3_CTRL0_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL3_CTRL0_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL3_CTRL0_ROMASK         (0x00000000)
#define GPIO_CHANNEL3_CTRL0_WOMASK         (0x00000000)
#define GPIO_CHANNEL3_CTRL0_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL3_CTRL0_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL3_CTRL0_lo_WIDTH       (16)
#define GPIO_CHANNEL3_CTRL0_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL3_CTRL0_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL3_CTRL0_hi_WIDTH       (16)
#define GPIO_CHANNEL3_CTRL0_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL3_CTRL0_EXT
*/

#define GPIO_CHANNEL3_CTRL0_EXT_SIZE       (8)
#define GPIO_CHANNEL3_CTRL0_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x58)
#define GPIO_CHANNEL3_CTRL0_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL3_CTRL0_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL3_CTRL0_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL3_CTRL0_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL3_CTRL0_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL3_CTRL0_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL3_CTRL0_EXT_ctrl0_ext_OFFSET (0x00)
#define GPIO_CHANNEL3_CTRL0_EXT_ctrl0_ext_WIDTH (8)
#define GPIO_CHANNEL3_CTRL0_EXT_ctrl0_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL3_CTRL1
*/

#define GPIO_CHANNEL3_CTRL1_SIZE           (32)
#define GPIO_CHANNEL3_CTRL1_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x5a)
#define GPIO_CHANNEL3_CTRL1_RESET_VALUE    (0x00)
#define GPIO_CHANNEL3_CTRL1_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL3_CTRL1_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL3_CTRL1_ROMASK         (0x00000000)
#define GPIO_CHANNEL3_CTRL1_WOMASK         (0x00000000)
#define GPIO_CHANNEL3_CTRL1_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL3_CTRL1_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL3_CTRL1_lo_WIDTH       (16)
#define GPIO_CHANNEL3_CTRL1_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL3_CTRL1_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL3_CTRL1_hi_WIDTH       (16)
#define GPIO_CHANNEL3_CTRL1_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL3_CTRL1_EXT
*/

#define GPIO_CHANNEL3_CTRL1_EXT_SIZE       (8)
#define GPIO_CHANNEL3_CTRL1_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x5c)
#define GPIO_CHANNEL3_CTRL1_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL3_CTRL1_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL3_CTRL1_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL3_CTRL1_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL3_CTRL1_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL3_CTRL1_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL3_CTRL1_EXT_ctrl1_ext_OFFSET (0x00)
#define GPIO_CHANNEL3_CTRL1_EXT_ctrl1_ext_WIDTH (8)
#define GPIO_CHANNEL3_CTRL1_EXT_ctrl1_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL3_REPEAT
*/

#define GPIO_CHANNEL3_REPEAT_SIZE          (16)
#define GPIO_CHANNEL3_REPEAT_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x5e)
#define GPIO_CHANNEL3_REPEAT_RESET_VALUE   (0x00)
#define GPIO_CHANNEL3_REPEAT_BITFIELD_MASK (0x03FF)
#define GPIO_CHANNEL3_REPEAT_RWMASK        (0x03FF)
#define GPIO_CHANNEL3_REPEAT_ROMASK        (0x0000)
#define GPIO_CHANNEL3_REPEAT_WOMASK        (0x0000)
#define GPIO_CHANNEL3_REPEAT_UNUSED_MASK   (0xFC00)
#define GPIO_CHANNEL3_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL3_REPEAT_repeat_WIDTH  (8)
#define GPIO_CHANNEL3_REPEAT_repeat_MASK   (0x00FF)
#define GPIO_CHANNEL3_REPEAT_line_mode_OFFSET (0x0008)
#define GPIO_CHANNEL3_REPEAT_line_mode_WIDTH (1)
#define GPIO_CHANNEL3_REPEAT_line_mode_MASK (0x0100)
#define GPIO_CHANNEL3_REPEAT_line_mode_LINE_REPEAT (0x0000)
#define GPIO_CHANNEL3_REPEAT_line_mode_FRAME_REPEAT (0x0001)
#define GPIO_CHANNEL3_REPEAT_until_OFFSET  (0x0009)
#define GPIO_CHANNEL3_REPEAT_until_WIDTH   (1)
#define GPIO_CHANNEL3_REPEAT_until_MASK    (0x0200)
#define GPIO_CHANNEL3_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL3_REPEAT_until_ENABLE  (0x0001)

/*
* Register : GPIO_CHANNEL4_CTRL0
*/

#define GPIO_CHANNEL4_CTRL0_SIZE           (32)
#define GPIO_CHANNEL4_CTRL0_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x60)
#define GPIO_CHANNEL4_CTRL0_RESET_VALUE    (0x00)
#define GPIO_CHANNEL4_CTRL0_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL4_CTRL0_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL4_CTRL0_ROMASK         (0x00000000)
#define GPIO_CHANNEL4_CTRL0_WOMASK         (0x00000000)
#define GPIO_CHANNEL4_CTRL0_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL4_CTRL0_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL4_CTRL0_lo_WIDTH       (16)
#define GPIO_CHANNEL4_CTRL0_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL4_CTRL0_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL4_CTRL0_hi_WIDTH       (16)
#define GPIO_CHANNEL4_CTRL0_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL4_CTRL0_EXT
*/

#define GPIO_CHANNEL4_CTRL0_EXT_SIZE       (8)
#define GPIO_CHANNEL4_CTRL0_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x62)
#define GPIO_CHANNEL4_CTRL0_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL4_CTRL0_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL4_CTRL0_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL4_CTRL0_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL4_CTRL0_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL4_CTRL0_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL4_CTRL0_EXT_ctrl0_ext_OFFSET (0x00)
#define GPIO_CHANNEL4_CTRL0_EXT_ctrl0_ext_WIDTH (8)
#define GPIO_CHANNEL4_CTRL0_EXT_ctrl0_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL4_CTRL1
*/

#define GPIO_CHANNEL4_CTRL1_SIZE           (32)
#define GPIO_CHANNEL4_CTRL1_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x64)
#define GPIO_CHANNEL4_CTRL1_RESET_VALUE    (0x00)
#define GPIO_CHANNEL4_CTRL1_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL4_CTRL1_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL4_CTRL1_ROMASK         (0x00000000)
#define GPIO_CHANNEL4_CTRL1_WOMASK         (0x00000000)
#define GPIO_CHANNEL4_CTRL1_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL4_CTRL1_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL4_CTRL1_lo_WIDTH       (16)
#define GPIO_CHANNEL4_CTRL1_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL4_CTRL1_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL4_CTRL1_hi_WIDTH       (16)
#define GPIO_CHANNEL4_CTRL1_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL4_CTRL1_EXT
*/

#define GPIO_CHANNEL4_CTRL1_EXT_SIZE       (8)
#define GPIO_CHANNEL4_CTRL1_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x66)
#define GPIO_CHANNEL4_CTRL1_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL4_CTRL1_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL4_CTRL1_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL4_CTRL1_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL4_CTRL1_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL4_CTRL1_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL4_CTRL1_EXT_ctrl1_ext_OFFSET (0x00)
#define GPIO_CHANNEL4_CTRL1_EXT_ctrl1_ext_WIDTH (8)
#define GPIO_CHANNEL4_CTRL1_EXT_ctrl1_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL4_REPEAT
*/

#define GPIO_CHANNEL4_REPEAT_SIZE          (16)
#define GPIO_CHANNEL4_REPEAT_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x68)
#define GPIO_CHANNEL4_REPEAT_RESET_VALUE   (0x00)
#define GPIO_CHANNEL4_REPEAT_BITFIELD_MASK (0x03FF)
#define GPIO_CHANNEL4_REPEAT_RWMASK        (0x03FF)
#define GPIO_CHANNEL4_REPEAT_ROMASK        (0x0000)
#define GPIO_CHANNEL4_REPEAT_WOMASK        (0x0000)
#define GPIO_CHANNEL4_REPEAT_UNUSED_MASK   (0xFC00)
#define GPIO_CHANNEL4_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL4_REPEAT_repeat_WIDTH  (8)
#define GPIO_CHANNEL4_REPEAT_repeat_MASK   (0x00FF)
#define GPIO_CHANNEL4_REPEAT_line_mode_OFFSET (0x0008)
#define GPIO_CHANNEL4_REPEAT_line_mode_WIDTH (1)
#define GPIO_CHANNEL4_REPEAT_line_mode_MASK (0x0100)
#define GPIO_CHANNEL4_REPEAT_line_mode_LINE_REPEAT (0x0000)
#define GPIO_CHANNEL4_REPEAT_line_mode_FRAME_REPEAT (0x0001)
#define GPIO_CHANNEL4_REPEAT_until_OFFSET  (0x0009)
#define GPIO_CHANNEL4_REPEAT_until_WIDTH   (1)
#define GPIO_CHANNEL4_REPEAT_until_MASK    (0x0200)
#define GPIO_CHANNEL4_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL4_REPEAT_until_ENABLE  (0x0001)

/*
* Register : GPIO_CHANNEL5_CTRL0
*/

#define GPIO_CHANNEL5_CTRL0_SIZE           (32)
#define GPIO_CHANNEL5_CTRL0_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x6a)
#define GPIO_CHANNEL5_CTRL0_RESET_VALUE    (0x00)
#define GPIO_CHANNEL5_CTRL0_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL5_CTRL0_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL5_CTRL0_ROMASK         (0x00000000)
#define GPIO_CHANNEL5_CTRL0_WOMASK         (0x00000000)
#define GPIO_CHANNEL5_CTRL0_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL5_CTRL0_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL5_CTRL0_lo_WIDTH       (16)
#define GPIO_CHANNEL5_CTRL0_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL5_CTRL0_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL5_CTRL0_hi_WIDTH       (16)
#define GPIO_CHANNEL5_CTRL0_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL5_CTRL0_EXT
*/

#define GPIO_CHANNEL5_CTRL0_EXT_SIZE       (8)
#define GPIO_CHANNEL5_CTRL0_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x6c)
#define GPIO_CHANNEL5_CTRL0_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL5_CTRL0_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL5_CTRL0_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL5_CTRL0_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL5_CTRL0_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL5_CTRL0_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL5_CTRL0_EXT_ctrl0_ext_OFFSET (0x00)
#define GPIO_CHANNEL5_CTRL0_EXT_ctrl0_ext_WIDTH (8)
#define GPIO_CHANNEL5_CTRL0_EXT_ctrl0_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL5_CTRL1
*/

#define GPIO_CHANNEL5_CTRL1_SIZE           (32)
#define GPIO_CHANNEL5_CTRL1_OFFSET         (pictorv2_in_GPIO_BASE_ADDR + 0x6e)
#define GPIO_CHANNEL5_CTRL1_RESET_VALUE    (0x00)
#define GPIO_CHANNEL5_CTRL1_BITFIELD_MASK  (0xFFFFFFFF)
#define GPIO_CHANNEL5_CTRL1_RWMASK         (0xFFFFFFFF)
#define GPIO_CHANNEL5_CTRL1_ROMASK         (0x00000000)
#define GPIO_CHANNEL5_CTRL1_WOMASK         (0x00000000)
#define GPIO_CHANNEL5_CTRL1_UNUSED_MASK    (0x00000000)
#define GPIO_CHANNEL5_CTRL1_lo_OFFSET      (0x00000000)
#define GPIO_CHANNEL5_CTRL1_lo_WIDTH       (16)
#define GPIO_CHANNEL5_CTRL1_lo_MASK        (0x0000FFFF)
#define GPIO_CHANNEL5_CTRL1_hi_OFFSET      (0x00000010)
#define GPIO_CHANNEL5_CTRL1_hi_WIDTH       (16)
#define GPIO_CHANNEL5_CTRL1_hi_MASK        (0xFFFF0000)

/*
* Register : GPIO_CHANNEL5_CTRL1_EXT
*/

#define GPIO_CHANNEL5_CTRL1_EXT_SIZE       (8)
#define GPIO_CHANNEL5_CTRL1_EXT_OFFSET     (pictorv2_in_GPIO_BASE_ADDR + 0x70)
#define GPIO_CHANNEL5_CTRL1_EXT_RESET_VALUE (0x00)
#define GPIO_CHANNEL5_CTRL1_EXT_BITFIELD_MASK (0xFF)
#define GPIO_CHANNEL5_CTRL1_EXT_RWMASK     (0xFF)
#define GPIO_CHANNEL5_CTRL1_EXT_ROMASK     (0x00)
#define GPIO_CHANNEL5_CTRL1_EXT_WOMASK     (0x00)
#define GPIO_CHANNEL5_CTRL1_EXT_UNUSED_MASK (0x00)
#define GPIO_CHANNEL5_CTRL1_EXT_ctrl1_ext_OFFSET (0x00)
#define GPIO_CHANNEL5_CTRL1_EXT_ctrl1_ext_WIDTH (8)
#define GPIO_CHANNEL5_CTRL1_EXT_ctrl1_ext_MASK (0xFF)

/*
* Register : GPIO_CHANNEL5_REPEAT
*/

#define GPIO_CHANNEL5_REPEAT_SIZE          (16)
#define GPIO_CHANNEL5_REPEAT_OFFSET        (pictorv2_in_GPIO_BASE_ADDR + 0x72)
#define GPIO_CHANNEL5_REPEAT_RESET_VALUE   (0x00)
#define GPIO_CHANNEL5_REPEAT_BITFIELD_MASK (0x03FF)
#define GPIO_CHANNEL5_REPEAT_RWMASK        (0x03FF)
#define GPIO_CHANNEL5_REPEAT_ROMASK        (0x0000)
#define GPIO_CHANNEL5_REPEAT_WOMASK        (0x0000)
#define GPIO_CHANNEL5_REPEAT_UNUSED_MASK   (0xFC00)
#define GPIO_CHANNEL5_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL5_REPEAT_repeat_WIDTH  (8)
#define GPIO_CHANNEL5_REPEAT_repeat_MASK   (0x00FF)
#define GPIO_CHANNEL5_REPEAT_line_mode_OFFSET (0x0008)
#define GPIO_CHANNEL5_REPEAT_line_mode_WIDTH (1)
#define GPIO_CHANNEL5_REPEAT_line_mode_MASK (0x0100)
#define GPIO_CHANNEL5_REPEAT_line_mode_LINE_REPEAT (0x0000)
#define GPIO_CHANNEL5_REPEAT_line_mode_FRAME_REPEAT (0x0001)
#define GPIO_CHANNEL5_REPEAT_until_OFFSET  (0x0009)
#define GPIO_CHANNEL5_REPEAT_until_WIDTH   (1)
#define GPIO_CHANNEL5_REPEAT_until_MASK    (0x0200)
#define GPIO_CHANNEL5_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL5_REPEAT_until_ENABLE  (0x0001)

/*
* Register : GPIO_CHANNEL6_STG_ENABLE
*/

#define GPIO_CHANNEL6_STG_ENABLE_SIZE      (8)
#define GPIO_CHANNEL6_STG_ENABLE_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x74)
#define GPIO_CHANNEL6_STG_ENABLE_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG_ENABLE_BITFIELD_MASK (0x07)
#define GPIO_CHANNEL6_STG_ENABLE_RWMASK    (0x07)
#define GPIO_CHANNEL6_STG_ENABLE_ROMASK    (0x00)
#define GPIO_CHANNEL6_STG_ENABLE_WOMASK    (0x00)
#define GPIO_CHANNEL6_STG_ENABLE_UNUSED_MASK (0xF8)
#define GPIO_CHANNEL6_STG_ENABLE_stage0_enable_OFFSET (0x00)
#define GPIO_CHANNEL6_STG_ENABLE_stage0_enable_WIDTH (1)
#define GPIO_CHANNEL6_STG_ENABLE_stage0_enable_MASK (0x01)
#define GPIO_CHANNEL6_STG_ENABLE_stage0_enable_DISABLE (0x00)
#define GPIO_CHANNEL6_STG_ENABLE_stage0_enable_ENABLE (0x01)
#define GPIO_CHANNEL6_STG_ENABLE_stage1_enable_OFFSET (0x01)
#define GPIO_CHANNEL6_STG_ENABLE_stage1_enable_WIDTH (1)
#define GPIO_CHANNEL6_STG_ENABLE_stage1_enable_MASK (0x02)
#define GPIO_CHANNEL6_STG_ENABLE_stage1_enable_DISABLE (0x00)
#define GPIO_CHANNEL6_STG_ENABLE_stage1_enable_ENABLE (0x01)
#define GPIO_CHANNEL6_STG_ENABLE_stage2_enable_OFFSET (0x02)
#define GPIO_CHANNEL6_STG_ENABLE_stage2_enable_WIDTH (1)
#define GPIO_CHANNEL6_STG_ENABLE_stage2_enable_MASK (0x04)
#define GPIO_CHANNEL6_STG_ENABLE_stage2_enable_DISABLE (0x00)
#define GPIO_CHANNEL6_STG_ENABLE_stage2_enable_ENABLE (0x01)

/*
* Register : GPIO_CHANNEL6_STG0_CTRL0
*/

#define GPIO_CHANNEL6_STG0_CTRL0_SIZE      (32)
#define GPIO_CHANNEL6_STG0_CTRL0_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x76)
#define GPIO_CHANNEL6_STG0_CTRL0_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG0_CTRL0_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG0_CTRL0_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG0_CTRL0_ROMASK    (0x00000000)
#define GPIO_CHANNEL6_STG0_CTRL0_WOMASK    (0x00000000)
#define GPIO_CHANNEL6_STG0_CTRL0_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL6_STG0_CTRL0_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL6_STG0_CTRL0_lo_WIDTH  (16)
#define GPIO_CHANNEL6_STG0_CTRL0_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL6_STG0_CTRL0_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL6_STG0_CTRL0_hi_WIDTH  (16)
#define GPIO_CHANNEL6_STG0_CTRL0_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL6_STG0_CTRL1
*/

#define GPIO_CHANNEL6_STG0_CTRL1_SIZE      (32)
#define GPIO_CHANNEL6_STG0_CTRL1_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x78)
#define GPIO_CHANNEL6_STG0_CTRL1_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG0_CTRL1_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG0_CTRL1_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG0_CTRL1_ROMASK    (0x00000000)
#define GPIO_CHANNEL6_STG0_CTRL1_WOMASK    (0x00000000)
#define GPIO_CHANNEL6_STG0_CTRL1_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL6_STG0_CTRL1_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL6_STG0_CTRL1_lo_WIDTH  (16)
#define GPIO_CHANNEL6_STG0_CTRL1_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL6_STG0_CTRL1_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL6_STG0_CTRL1_hi_WIDTH  (16)
#define GPIO_CHANNEL6_STG0_CTRL1_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL6_STG0_REPEAT
*/

#define GPIO_CHANNEL6_STG0_REPEAT_SIZE     (16)
#define GPIO_CHANNEL6_STG0_REPEAT_OFFSET   (pictorv2_in_GPIO_BASE_ADDR + 0x7a)
#define GPIO_CHANNEL6_STG0_REPEAT_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG0_REPEAT_BITFIELD_MASK (0x01FF)
#define GPIO_CHANNEL6_STG0_REPEAT_RWMASK   (0x01FF)
#define GPIO_CHANNEL6_STG0_REPEAT_ROMASK   (0x0000)
#define GPIO_CHANNEL6_STG0_REPEAT_WOMASK   (0x0000)
#define GPIO_CHANNEL6_STG0_REPEAT_UNUSED_MASK (0xFE00)
#define GPIO_CHANNEL6_STG0_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL6_STG0_REPEAT_repeat_WIDTH (8)
#define GPIO_CHANNEL6_STG0_REPEAT_repeat_MASK (0x00FF)
#define GPIO_CHANNEL6_STG0_REPEAT_until_OFFSET (0x0008)
#define GPIO_CHANNEL6_STG0_REPEAT_until_WIDTH (1)
#define GPIO_CHANNEL6_STG0_REPEAT_until_MASK (0x0100)
#define GPIO_CHANNEL6_STG0_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL6_STG0_REPEAT_until_ENABLE (0x0001)

/*
* Register : GPIO_CHANNEL6_STG1_CTRL0
*/

#define GPIO_CHANNEL6_STG1_CTRL0_SIZE      (32)
#define GPIO_CHANNEL6_STG1_CTRL0_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x7c)
#define GPIO_CHANNEL6_STG1_CTRL0_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG1_CTRL0_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG1_CTRL0_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG1_CTRL0_ROMASK    (0x00000000)
#define GPIO_CHANNEL6_STG1_CTRL0_WOMASK    (0x00000000)
#define GPIO_CHANNEL6_STG1_CTRL0_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL6_STG1_CTRL0_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL6_STG1_CTRL0_lo_WIDTH  (16)
#define GPIO_CHANNEL6_STG1_CTRL0_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL6_STG1_CTRL0_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL6_STG1_CTRL0_hi_WIDTH  (16)
#define GPIO_CHANNEL6_STG1_CTRL0_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL6_STG1_CTRL1
*/

#define GPIO_CHANNEL6_STG1_CTRL1_SIZE      (32)
#define GPIO_CHANNEL6_STG1_CTRL1_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x7e)
#define GPIO_CHANNEL6_STG1_CTRL1_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG1_CTRL1_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG1_CTRL1_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG1_CTRL1_ROMASK    (0x00000000)
#define GPIO_CHANNEL6_STG1_CTRL1_WOMASK    (0x00000000)
#define GPIO_CHANNEL6_STG1_CTRL1_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL6_STG1_CTRL1_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL6_STG1_CTRL1_lo_WIDTH  (16)
#define GPIO_CHANNEL6_STG1_CTRL1_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL6_STG1_CTRL1_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL6_STG1_CTRL1_hi_WIDTH  (16)
#define GPIO_CHANNEL6_STG1_CTRL1_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL6_STG1_REPEAT
*/

#define GPIO_CHANNEL6_STG1_REPEAT_SIZE     (16)
#define GPIO_CHANNEL6_STG1_REPEAT_OFFSET   (pictorv2_in_GPIO_BASE_ADDR + 0x80)
#define GPIO_CHANNEL6_STG1_REPEAT_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG1_REPEAT_BITFIELD_MASK (0x01FF)
#define GPIO_CHANNEL6_STG1_REPEAT_RWMASK   (0x01FF)
#define GPIO_CHANNEL6_STG1_REPEAT_ROMASK   (0x0000)
#define GPIO_CHANNEL6_STG1_REPEAT_WOMASK   (0x0000)
#define GPIO_CHANNEL6_STG1_REPEAT_UNUSED_MASK (0xFE00)
#define GPIO_CHANNEL6_STG1_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL6_STG1_REPEAT_repeat_WIDTH (8)
#define GPIO_CHANNEL6_STG1_REPEAT_repeat_MASK (0x00FF)
#define GPIO_CHANNEL6_STG1_REPEAT_until_OFFSET (0x0008)
#define GPIO_CHANNEL6_STG1_REPEAT_until_WIDTH (1)
#define GPIO_CHANNEL6_STG1_REPEAT_until_MASK (0x0100)
#define GPIO_CHANNEL6_STG1_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL6_STG1_REPEAT_until_ENABLE (0x0001)

/*
* Register : GPIO_CHANNEL6_STG2_CTRL0
*/

#define GPIO_CHANNEL6_STG2_CTRL0_SIZE      (32)
#define GPIO_CHANNEL6_STG2_CTRL0_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x82)
#define GPIO_CHANNEL6_STG2_CTRL0_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG2_CTRL0_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG2_CTRL0_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG2_CTRL0_ROMASK    (0x00000000)
#define GPIO_CHANNEL6_STG2_CTRL0_WOMASK    (0x00000000)
#define GPIO_CHANNEL6_STG2_CTRL0_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL6_STG2_CTRL0_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL6_STG2_CTRL0_lo_WIDTH  (16)
#define GPIO_CHANNEL6_STG2_CTRL0_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL6_STG2_CTRL0_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL6_STG2_CTRL0_hi_WIDTH  (16)
#define GPIO_CHANNEL6_STG2_CTRL0_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL6_STG2_CTRL1
*/

#define GPIO_CHANNEL6_STG2_CTRL1_SIZE      (32)
#define GPIO_CHANNEL6_STG2_CTRL1_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x84)
#define GPIO_CHANNEL6_STG2_CTRL1_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG2_CTRL1_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG2_CTRL1_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL6_STG2_CTRL1_ROMASK    (0x00000000)
#define GPIO_CHANNEL6_STG2_CTRL1_WOMASK    (0x00000000)
#define GPIO_CHANNEL6_STG2_CTRL1_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL6_STG2_CTRL1_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL6_STG2_CTRL1_lo_WIDTH  (16)
#define GPIO_CHANNEL6_STG2_CTRL1_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL6_STG2_CTRL1_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL6_STG2_CTRL1_hi_WIDTH  (16)
#define GPIO_CHANNEL6_STG2_CTRL1_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL6_STG2_REPEAT
*/

#define GPIO_CHANNEL6_STG2_REPEAT_SIZE     (16)
#define GPIO_CHANNEL6_STG2_REPEAT_OFFSET   (pictorv2_in_GPIO_BASE_ADDR + 0x86)
#define GPIO_CHANNEL6_STG2_REPEAT_RESET_VALUE (0x00)
#define GPIO_CHANNEL6_STG2_REPEAT_BITFIELD_MASK (0x01FF)
#define GPIO_CHANNEL6_STG2_REPEAT_RWMASK   (0x01FF)
#define GPIO_CHANNEL6_STG2_REPEAT_ROMASK   (0x0000)
#define GPIO_CHANNEL6_STG2_REPEAT_WOMASK   (0x0000)
#define GPIO_CHANNEL6_STG2_REPEAT_UNUSED_MASK (0xFE00)
#define GPIO_CHANNEL6_STG2_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL6_STG2_REPEAT_repeat_WIDTH (8)
#define GPIO_CHANNEL6_STG2_REPEAT_repeat_MASK (0x00FF)
#define GPIO_CHANNEL6_STG2_REPEAT_until_OFFSET (0x0008)
#define GPIO_CHANNEL6_STG2_REPEAT_until_WIDTH (1)
#define GPIO_CHANNEL6_STG2_REPEAT_until_MASK (0x0100)
#define GPIO_CHANNEL6_STG2_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL6_STG2_REPEAT_until_ENABLE (0x0001)

/*
* Register : GPIO_CHANNEL7_STG_ENABLE
*/

#define GPIO_CHANNEL7_STG_ENABLE_SIZE      (8)
#define GPIO_CHANNEL7_STG_ENABLE_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x88)
#define GPIO_CHANNEL7_STG_ENABLE_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG_ENABLE_BITFIELD_MASK (0x07)
#define GPIO_CHANNEL7_STG_ENABLE_RWMASK    (0x07)
#define GPIO_CHANNEL7_STG_ENABLE_ROMASK    (0x00)
#define GPIO_CHANNEL7_STG_ENABLE_WOMASK    (0x00)
#define GPIO_CHANNEL7_STG_ENABLE_UNUSED_MASK (0xF8)
#define GPIO_CHANNEL7_STG_ENABLE_stage0_enable_OFFSET (0x00)
#define GPIO_CHANNEL7_STG_ENABLE_stage0_enable_WIDTH (1)
#define GPIO_CHANNEL7_STG_ENABLE_stage0_enable_MASK (0x01)
#define GPIO_CHANNEL7_STG_ENABLE_stage0_enable_DISABLE (0x00)
#define GPIO_CHANNEL7_STG_ENABLE_stage0_enable_ENABLE (0x01)
#define GPIO_CHANNEL7_STG_ENABLE_stage1_enable_OFFSET (0x01)
#define GPIO_CHANNEL7_STG_ENABLE_stage1_enable_WIDTH (1)
#define GPIO_CHANNEL7_STG_ENABLE_stage1_enable_MASK (0x02)
#define GPIO_CHANNEL7_STG_ENABLE_stage1_enable_DISABLE (0x00)
#define GPIO_CHANNEL7_STG_ENABLE_stage1_enable_ENABLE (0x01)
#define GPIO_CHANNEL7_STG_ENABLE_stage2_enable_OFFSET (0x02)
#define GPIO_CHANNEL7_STG_ENABLE_stage2_enable_WIDTH (1)
#define GPIO_CHANNEL7_STG_ENABLE_stage2_enable_MASK (0x04)
#define GPIO_CHANNEL7_STG_ENABLE_stage2_enable_DISABLE (0x00)
#define GPIO_CHANNEL7_STG_ENABLE_stage2_enable_ENABLE (0x01)

/*
* Register : GPIO_CHANNEL7_STG0_CTRL0
*/

#define GPIO_CHANNEL7_STG0_CTRL0_SIZE      (32)
#define GPIO_CHANNEL7_STG0_CTRL0_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x8a)
#define GPIO_CHANNEL7_STG0_CTRL0_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG0_CTRL0_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG0_CTRL0_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG0_CTRL0_ROMASK    (0x00000000)
#define GPIO_CHANNEL7_STG0_CTRL0_WOMASK    (0x00000000)
#define GPIO_CHANNEL7_STG0_CTRL0_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL7_STG0_CTRL0_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL7_STG0_CTRL0_lo_WIDTH  (16)
#define GPIO_CHANNEL7_STG0_CTRL0_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL7_STG0_CTRL0_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL7_STG0_CTRL0_hi_WIDTH  (16)
#define GPIO_CHANNEL7_STG0_CTRL0_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL7_STG0_CTRL1
*/

#define GPIO_CHANNEL7_STG0_CTRL1_SIZE      (32)
#define GPIO_CHANNEL7_STG0_CTRL1_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x8c)
#define GPIO_CHANNEL7_STG0_CTRL1_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG0_CTRL1_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG0_CTRL1_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG0_CTRL1_ROMASK    (0x00000000)
#define GPIO_CHANNEL7_STG0_CTRL1_WOMASK    (0x00000000)
#define GPIO_CHANNEL7_STG0_CTRL1_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL7_STG0_CTRL1_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL7_STG0_CTRL1_lo_WIDTH  (16)
#define GPIO_CHANNEL7_STG0_CTRL1_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL7_STG0_CTRL1_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL7_STG0_CTRL1_hi_WIDTH  (16)
#define GPIO_CHANNEL7_STG0_CTRL1_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL7_STG0_REPEAT
*/

#define GPIO_CHANNEL7_STG0_REPEAT_SIZE     (16)
#define GPIO_CHANNEL7_STG0_REPEAT_OFFSET   (pictorv2_in_GPIO_BASE_ADDR + 0x8e)
#define GPIO_CHANNEL7_STG0_REPEAT_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG0_REPEAT_BITFIELD_MASK (0x01FF)
#define GPIO_CHANNEL7_STG0_REPEAT_RWMASK   (0x01FF)
#define GPIO_CHANNEL7_STG0_REPEAT_ROMASK   (0x0000)
#define GPIO_CHANNEL7_STG0_REPEAT_WOMASK   (0x0000)
#define GPIO_CHANNEL7_STG0_REPEAT_UNUSED_MASK (0xFE00)
#define GPIO_CHANNEL7_STG0_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL7_STG0_REPEAT_repeat_WIDTH (8)
#define GPIO_CHANNEL7_STG0_REPEAT_repeat_MASK (0x00FF)
#define GPIO_CHANNEL7_STG0_REPEAT_until_OFFSET (0x0008)
#define GPIO_CHANNEL7_STG0_REPEAT_until_WIDTH (1)
#define GPIO_CHANNEL7_STG0_REPEAT_until_MASK (0x0100)
#define GPIO_CHANNEL7_STG0_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL7_STG0_REPEAT_until_ENABLE (0x0001)

/*
* Register : GPIO_CHANNEL7_STG1_CTRL0
*/

#define GPIO_CHANNEL7_STG1_CTRL0_SIZE      (32)
#define GPIO_CHANNEL7_STG1_CTRL0_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x90)
#define GPIO_CHANNEL7_STG1_CTRL0_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG1_CTRL0_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG1_CTRL0_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG1_CTRL0_ROMASK    (0x00000000)
#define GPIO_CHANNEL7_STG1_CTRL0_WOMASK    (0x00000000)
#define GPIO_CHANNEL7_STG1_CTRL0_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL7_STG1_CTRL0_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL7_STG1_CTRL0_lo_WIDTH  (16)
#define GPIO_CHANNEL7_STG1_CTRL0_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL7_STG1_CTRL0_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL7_STG1_CTRL0_hi_WIDTH  (16)
#define GPIO_CHANNEL7_STG1_CTRL0_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL7_STG1_CTRL1
*/

#define GPIO_CHANNEL7_STG1_CTRL1_SIZE      (32)
#define GPIO_CHANNEL7_STG1_CTRL1_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x92)
#define GPIO_CHANNEL7_STG1_CTRL1_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG1_CTRL1_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG1_CTRL1_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG1_CTRL1_ROMASK    (0x00000000)
#define GPIO_CHANNEL7_STG1_CTRL1_WOMASK    (0x00000000)
#define GPIO_CHANNEL7_STG1_CTRL1_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL7_STG1_CTRL1_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL7_STG1_CTRL1_lo_WIDTH  (16)
#define GPIO_CHANNEL7_STG1_CTRL1_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL7_STG1_CTRL1_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL7_STG1_CTRL1_hi_WIDTH  (16)
#define GPIO_CHANNEL7_STG1_CTRL1_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL7_STG1_REPEAT
*/

#define GPIO_CHANNEL7_STG1_REPEAT_SIZE     (16)
#define GPIO_CHANNEL7_STG1_REPEAT_OFFSET   (pictorv2_in_GPIO_BASE_ADDR + 0x94)
#define GPIO_CHANNEL7_STG1_REPEAT_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG1_REPEAT_BITFIELD_MASK (0x01FF)
#define GPIO_CHANNEL7_STG1_REPEAT_RWMASK   (0x01FF)
#define GPIO_CHANNEL7_STG1_REPEAT_ROMASK   (0x0000)
#define GPIO_CHANNEL7_STG1_REPEAT_WOMASK   (0x0000)
#define GPIO_CHANNEL7_STG1_REPEAT_UNUSED_MASK (0xFE00)
#define GPIO_CHANNEL7_STG1_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL7_STG1_REPEAT_repeat_WIDTH (8)
#define GPIO_CHANNEL7_STG1_REPEAT_repeat_MASK (0x00FF)
#define GPIO_CHANNEL7_STG1_REPEAT_until_OFFSET (0x0008)
#define GPIO_CHANNEL7_STG1_REPEAT_until_WIDTH (1)
#define GPIO_CHANNEL7_STG1_REPEAT_until_MASK (0x0100)
#define GPIO_CHANNEL7_STG1_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL7_STG1_REPEAT_until_ENABLE (0x0001)

/*
* Register : GPIO_CHANNEL7_STG2_CTRL0
*/

#define GPIO_CHANNEL7_STG2_CTRL0_SIZE      (32)
#define GPIO_CHANNEL7_STG2_CTRL0_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x96)
#define GPIO_CHANNEL7_STG2_CTRL0_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG2_CTRL0_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG2_CTRL0_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG2_CTRL0_ROMASK    (0x00000000)
#define GPIO_CHANNEL7_STG2_CTRL0_WOMASK    (0x00000000)
#define GPIO_CHANNEL7_STG2_CTRL0_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL7_STG2_CTRL0_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL7_STG2_CTRL0_lo_WIDTH  (16)
#define GPIO_CHANNEL7_STG2_CTRL0_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL7_STG2_CTRL0_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL7_STG2_CTRL0_hi_WIDTH  (16)
#define GPIO_CHANNEL7_STG2_CTRL0_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL7_STG2_CTRL1
*/

#define GPIO_CHANNEL7_STG2_CTRL1_SIZE      (32)
#define GPIO_CHANNEL7_STG2_CTRL1_OFFSET    (pictorv2_in_GPIO_BASE_ADDR + 0x98)
#define GPIO_CHANNEL7_STG2_CTRL1_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG2_CTRL1_BITFIELD_MASK (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG2_CTRL1_RWMASK    (0xFFFFFFFF)
#define GPIO_CHANNEL7_STG2_CTRL1_ROMASK    (0x00000000)
#define GPIO_CHANNEL7_STG2_CTRL1_WOMASK    (0x00000000)
#define GPIO_CHANNEL7_STG2_CTRL1_UNUSED_MASK (0x00000000)
#define GPIO_CHANNEL7_STG2_CTRL1_lo_OFFSET (0x00000000)
#define GPIO_CHANNEL7_STG2_CTRL1_lo_WIDTH  (16)
#define GPIO_CHANNEL7_STG2_CTRL1_lo_MASK   (0x0000FFFF)
#define GPIO_CHANNEL7_STG2_CTRL1_hi_OFFSET (0x00000010)
#define GPIO_CHANNEL7_STG2_CTRL1_hi_WIDTH  (16)
#define GPIO_CHANNEL7_STG2_CTRL1_hi_MASK   (0xFFFF0000)

/*
* Register : GPIO_CHANNEL7_STG2_REPEAT
*/

#define GPIO_CHANNEL7_STG2_REPEAT_SIZE     (16)
#define GPIO_CHANNEL7_STG2_REPEAT_OFFSET   (pictorv2_in_GPIO_BASE_ADDR + 0x9a)
#define GPIO_CHANNEL7_STG2_REPEAT_RESET_VALUE (0x00)
#define GPIO_CHANNEL7_STG2_REPEAT_BITFIELD_MASK (0x01FF)
#define GPIO_CHANNEL7_STG2_REPEAT_RWMASK   (0x01FF)
#define GPIO_CHANNEL7_STG2_REPEAT_ROMASK   (0x0000)
#define GPIO_CHANNEL7_STG2_REPEAT_WOMASK   (0x0000)
#define GPIO_CHANNEL7_STG2_REPEAT_UNUSED_MASK (0xFE00)
#define GPIO_CHANNEL7_STG2_REPEAT_repeat_OFFSET (0x0000)
#define GPIO_CHANNEL7_STG2_REPEAT_repeat_WIDTH (8)
#define GPIO_CHANNEL7_STG2_REPEAT_repeat_MASK (0x00FF)
#define GPIO_CHANNEL7_STG2_REPEAT_until_OFFSET (0x0008)
#define GPIO_CHANNEL7_STG2_REPEAT_until_WIDTH (1)
#define GPIO_CHANNEL7_STG2_REPEAT_until_MASK (0x0100)
#define GPIO_CHANNEL7_STG2_REPEAT_until_DISABLE (0x0000)
#define GPIO_CHANNEL7_STG2_REPEAT_until_ENABLE (0x0001)

/*
* Register : GPIO_DFV
*/

#define GPIO_DFV_SIZE                      (32)
#define GPIO_DFV_OFFSET                    (pictorv2_in_GPIO_BASE_ADDR + 0x9c)
#define GPIO_DFV_RESET_VALUE               (0x00)
#define GPIO_DFV_BITFIELD_MASK             (0x003FFFFF)
#define GPIO_DFV_RWMASK                    (0x003FFFFF)
#define GPIO_DFV_ROMASK                    (0x00000000)
#define GPIO_DFV_WOMASK                    (0x00000000)
#define GPIO_DFV_UNUSED_MASK               (0xFFC00000)
#define GPIO_DFV_dfv_enable_OFFSET         (0x00000000)
#define GPIO_DFV_dfv_enable_WIDTH          (1)
#define GPIO_DFV_dfv_enable_MASK           (0x00000001)
#define GPIO_DFV_dfv_timer0_interrupt_ctrl_OFFSET (0x00000001)
#define GPIO_DFV_dfv_timer0_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_timer0_interrupt_ctrl_MASK (0x00000002)
#define GPIO_DFV_dfv_timer1_interrupt_ctrl_OFFSET (0x00000002)
#define GPIO_DFV_dfv_timer1_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_timer1_interrupt_ctrl_MASK (0x00000004)
#define GPIO_DFV_dfv_timer2_interrupt_ctrl_OFFSET (0x00000003)
#define GPIO_DFV_dfv_timer2_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_timer2_interrupt_ctrl_MASK (0x00000008)
#define GPIO_DFV_dfv_timer3_interrupt_ctrl_OFFSET (0x00000004)
#define GPIO_DFV_dfv_timer3_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_timer3_interrupt_ctrl_MASK (0x00000010)
#define GPIO_DFV_dfv_trig_pulse_interrupt_ctrl_OFFSET (0x00000005)
#define GPIO_DFV_dfv_trig_pulse_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_trig_pulse_interrupt_ctrl_MASK (0x00000020)
#define GPIO_DFV_dfv_chnl0_comp_interrupt_ctrl_OFFSET (0x00000006)
#define GPIO_DFV_dfv_chnl0_comp_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl0_comp_interrupt_ctrl_MASK (0x00000040)
#define GPIO_DFV_dfv_chnl1_comp_interrupt_ctrl_OFFSET (0x00000007)
#define GPIO_DFV_dfv_chnl1_comp_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl1_comp_interrupt_ctrl_MASK (0x00000080)
#define GPIO_DFV_dfv_chnl2_comp_interrupt_ctrl_OFFSET (0x00000008)
#define GPIO_DFV_dfv_chnl2_comp_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl2_comp_interrupt_ctrl_MASK (0x00000100)
#define GPIO_DFV_dfv_chnl3_comp_interrupt_ctrl_OFFSET (0x00000009)
#define GPIO_DFV_dfv_chnl3_comp_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl3_comp_interrupt_ctrl_MASK (0x00000200)
#define GPIO_DFV_dfv_chnl4_comp_interrupt_ctrl_OFFSET (0x0000000a)
#define GPIO_DFV_dfv_chnl4_comp_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl4_comp_interrupt_ctrl_MASK (0x00000400)
#define GPIO_DFV_dfv_chnl5_comp_interrupt_ctrl_OFFSET (0x0000000b)
#define GPIO_DFV_dfv_chnl5_comp_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl5_comp_interrupt_ctrl_MASK (0x00000800)
#define GPIO_DFV_dfv_chnl6_comp_interrupt_ctrl_OFFSET (0x0000000c)
#define GPIO_DFV_dfv_chnl6_comp_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl6_comp_interrupt_ctrl_MASK (0x00001000)
#define GPIO_DFV_dfv_chnl7_comp_interrupt_ctrl_OFFSET (0x0000000d)
#define GPIO_DFV_dfv_chnl7_comp_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl7_comp_interrupt_ctrl_MASK (0x00002000)
#define GPIO_DFV_dfv_chnl0_strt_aborted_interrupt_ctrl_OFFSET (0x0000000e)
#define GPIO_DFV_dfv_chnl0_strt_aborted_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl0_strt_aborted_interrupt_ctrl_MASK (0x00004000)
#define GPIO_DFV_dfv_chnl1_strt_aborted_interrupt_ctrl_OFFSET (0x0000000f)
#define GPIO_DFV_dfv_chnl1_strt_aborted_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl1_strt_aborted_interrupt_ctrl_MASK (0x00008000)
#define GPIO_DFV_dfv_chnl2_strt_aborted_interrupt_ctrl_OFFSET (0x00000010)
#define GPIO_DFV_dfv_chnl2_strt_aborted_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl2_strt_aborted_interrupt_ctrl_MASK (0x00010000)
#define GPIO_DFV_dfv_chnl3_strt_aborted_interrupt_ctrl_OFFSET (0x00000011)
#define GPIO_DFV_dfv_chnl3_strt_aborted_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl3_strt_aborted_interrupt_ctrl_MASK (0x00020000)
#define GPIO_DFV_dfv_chnl4_strt_aborted_interrupt_ctrl_OFFSET (0x00000012)
#define GPIO_DFV_dfv_chnl4_strt_aborted_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl4_strt_aborted_interrupt_ctrl_MASK (0x00040000)
#define GPIO_DFV_dfv_chnl5_strt_aborted_interrupt_ctrl_OFFSET (0x00000013)
#define GPIO_DFV_dfv_chnl5_strt_aborted_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl5_strt_aborted_interrupt_ctrl_MASK (0x00080000)
#define GPIO_DFV_dfv_chnl6_strt_aborted_interrupt_ctrl_OFFSET (0x00000014)
#define GPIO_DFV_dfv_chnl6_strt_aborted_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl6_strt_aborted_interrupt_ctrl_MASK (0x00100000)
#define GPIO_DFV_dfv_chnl7_strt_aborted_interrupt_ctrl_OFFSET (0x00000015)
#define GPIO_DFV_dfv_chnl7_strt_aborted_interrupt_ctrl_WIDTH (1)
#define GPIO_DFV_dfv_chnl7_strt_aborted_interrupt_ctrl_MASK (0x00200000)


/*
* Address Block : PERIPH_CTRL
*/

#define pictorv2_in_PERIPH_CTRL_BASE_ADDR                   (0xf0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : PERIPH_CTRL_CTRL
*/

#define PERIPH_CTRL_CTRL_SIZE       (8)
#define PERIPH_CTRL_CTRL_OFFSET     (pictorv2_in_PERIPH_CTRL_BASE_ADDR + 0x02)
#define PERIPH_CTRL_CTRL_RESET_VALUE (0x0)
#define PERIPH_CTRL_CTRL_BITFIELD_MASK (0x03)
#define PERIPH_CTRL_CTRL_RWMASK     (0x03)
#define PERIPH_CTRL_CTRL_ROMASK     (0x00)
#define PERIPH_CTRL_CTRL_WOMASK     (0x00)
#define PERIPH_CTRL_CTRL_UNUSED_MASK (0xFC)
#define PERIPH_CTRL_CTRL_p_fetch_en_i_OFFSET (0x00)
#define PERIPH_CTRL_CTRL_p_fetch_en_i_WIDTH (1)
#define PERIPH_CTRL_CTRL_p_fetch_en_i_MASK (0x01)
#define PERIPH_CTRL_CTRL_wake_up_OFFSET (0x01)
#define PERIPH_CTRL_CTRL_wake_up_WIDTH (1)
#define PERIPH_CTRL_CTRL_wake_up_MASK (0x02)

/*
* Register : PERIPH_CTRL_CONFIG
*/

#define PERIPH_CTRL_CONFIG_SIZE     (8)
#define PERIPH_CTRL_CONFIG_OFFSET   (pictorv2_in_PERIPH_CTRL_BASE_ADDR + 0x04)
#define PERIPH_CTRL_CONFIG_RESET_VALUE (0x1)
#define PERIPH_CTRL_CONFIG_BITFIELD_MASK (0x07)
#define PERIPH_CTRL_CONFIG_RWMASK   (0x07)
#define PERIPH_CTRL_CONFIG_ROMASK   (0x00)
#define PERIPH_CTRL_CONFIG_WOMASK   (0x00)
#define PERIPH_CTRL_CONFIG_UNUSED_MASK (0xF8)
#define PERIPH_CTRL_CONFIG_en_idle_state_OFFSET (0x00)
#define PERIPH_CTRL_CONFIG_en_idle_state_WIDTH (1)
#define PERIPH_CTRL_CONFIG_en_idle_state_MASK (0x01)
#define PERIPH_CTRL_CONFIG_en_idle_state_B_0x0 (0x00)
#define PERIPH_CTRL_CONFIG_en_idle_state_B_0x1 (0x01)
#define PERIPH_CTRL_CONFIG_mfu_core_pri_i_OFFSET (0x01)
#define PERIPH_CTRL_CONFIG_mfu_core_pri_i_WIDTH (1)
#define PERIPH_CTRL_CONFIG_mfu_core_pri_i_MASK (0x02)
#define PERIPH_CTRL_CONFIG_mfu_core_pri_i_B_0x0 (0x00)
#define PERIPH_CTRL_CONFIG_mfu_core_pri_i_B_0x1 (0x01)
#define PERIPH_CTRL_CONFIG_it_disabling_mode_i_OFFSET (0x02)
#define PERIPH_CTRL_CONFIG_it_disabling_mode_i_WIDTH (1)
#define PERIPH_CTRL_CONFIG_it_disabling_mode_i_MASK (0x04)

/*
* Register : PERIPH_CTRL_STATUS
*/

#define PERIPH_CTRL_STATUS_SIZE     (8)
#define PERIPH_CTRL_STATUS_OFFSET   (pictorv2_in_PERIPH_CTRL_BASE_ADDR + 0x06)
#define PERIPH_CTRL_STATUS_RESET_VALUE (0x00)
#define PERIPH_CTRL_STATUS_BITFIELD_MASK (0x0F)
#define PERIPH_CTRL_STATUS_RWMASK   (0x00)
#define PERIPH_CTRL_STATUS_ROMASK   (0x0F)
#define PERIPH_CTRL_STATUS_WOMASK   (0x00)
#define PERIPH_CTRL_STATUS_UNUSED_MASK (0xF0)
#define PERIPH_CTRL_STATUS_idle_state_OFFSET (0x00)
#define PERIPH_CTRL_STATUS_idle_state_WIDTH (1)
#define PERIPH_CTRL_STATUS_idle_state_MASK (0x01)
#define PERIPH_CTRL_STATUS_idle_level_OFFSET (0x01)
#define PERIPH_CTRL_STATUS_idle_level_WIDTH (2)
#define PERIPH_CTRL_STATUS_idle_level_MASK (0x06)
#define PERIPH_CTRL_STATUS_oce_debug_o_OFFSET (0x03)
#define PERIPH_CTRL_STATUS_oce_debug_o_WIDTH (1)
#define PERIPH_CTRL_STATUS_oce_debug_o_MASK (0x08)


/*
* Address Block : ITM
*/

#define pictorv2_in_ITM_BASE_ADDR                           (0x100U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ITM_FW_EVENT0_STATUS
*/

#define ITM_FW_EVENT0_STATUS_SIZE           (32)
#define ITM_FW_EVENT0_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x00)
#define ITM_FW_EVENT0_STATUS_RESET_VALUE    (0x00000000)
#define ITM_FW_EVENT0_STATUS_BITFIELD_MASK  (0xFFFFFFFF)
#define ITM_FW_EVENT0_STATUS_RWMASK         (0x00000000)
#define ITM_FW_EVENT0_STATUS_ROMASK         (0xFFFFFFFF)
#define ITM_FW_EVENT0_STATUS_WOMASK         (0x00000000)
#define ITM_FW_EVENT0_STATUS_UNUSED_MASK    (0x00000000)
#define ITM_FW_EVENT0_STATUS_SRC0_STATUS_OFFSET (0x00000000)
#define ITM_FW_EVENT0_STATUS_SRC0_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC0_STATUS_MASK (0x00000001)
#define ITM_FW_EVENT0_STATUS_SRC1_STATUS_OFFSET (0x00000001)
#define ITM_FW_EVENT0_STATUS_SRC1_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC1_STATUS_MASK (0x00000002)
#define ITM_FW_EVENT0_STATUS_SRC2_STATUS_OFFSET (0x00000002)
#define ITM_FW_EVENT0_STATUS_SRC2_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC2_STATUS_MASK (0x00000004)
#define ITM_FW_EVENT0_STATUS_SRC3_STATUS_OFFSET (0x00000003)
#define ITM_FW_EVENT0_STATUS_SRC3_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC3_STATUS_MASK (0x00000008)
#define ITM_FW_EVENT0_STATUS_SRC4_STATUS_OFFSET (0x00000004)
#define ITM_FW_EVENT0_STATUS_SRC4_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC4_STATUS_MASK (0x00000010)
#define ITM_FW_EVENT0_STATUS_SRC5_STATUS_OFFSET (0x00000005)
#define ITM_FW_EVENT0_STATUS_SRC5_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC5_STATUS_MASK (0x00000020)
#define ITM_FW_EVENT0_STATUS_SRC6_STATUS_OFFSET (0x00000006)
#define ITM_FW_EVENT0_STATUS_SRC6_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC6_STATUS_MASK (0x00000040)
#define ITM_FW_EVENT0_STATUS_SRC7_STATUS_OFFSET (0x00000007)
#define ITM_FW_EVENT0_STATUS_SRC7_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC7_STATUS_MASK (0x00000080)
#define ITM_FW_EVENT0_STATUS_SRC8_STATUS_OFFSET (0x00000008)
#define ITM_FW_EVENT0_STATUS_SRC8_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC8_STATUS_MASK (0x00000100)
#define ITM_FW_EVENT0_STATUS_SRC9_STATUS_OFFSET (0x00000009)
#define ITM_FW_EVENT0_STATUS_SRC9_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC9_STATUS_MASK (0x00000200)
#define ITM_FW_EVENT0_STATUS_SRC10_STATUS_OFFSET (0x0000000a)
#define ITM_FW_EVENT0_STATUS_SRC10_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC10_STATUS_MASK (0x00000400)
#define ITM_FW_EVENT0_STATUS_SRC11_STATUS_OFFSET (0x0000000b)
#define ITM_FW_EVENT0_STATUS_SRC11_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC11_STATUS_MASK (0x00000800)
#define ITM_FW_EVENT0_STATUS_SRC12_STATUS_OFFSET (0x0000000c)
#define ITM_FW_EVENT0_STATUS_SRC12_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC12_STATUS_MASK (0x00001000)
#define ITM_FW_EVENT0_STATUS_SRC13_STATUS_OFFSET (0x0000000d)
#define ITM_FW_EVENT0_STATUS_SRC13_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC13_STATUS_MASK (0x00002000)
#define ITM_FW_EVENT0_STATUS_SRC14_STATUS_OFFSET (0x0000000e)
#define ITM_FW_EVENT0_STATUS_SRC14_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC14_STATUS_MASK (0x00004000)
#define ITM_FW_EVENT0_STATUS_SRC15_STATUS_OFFSET (0x0000000f)
#define ITM_FW_EVENT0_STATUS_SRC15_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC15_STATUS_MASK (0x00008000)
#define ITM_FW_EVENT0_STATUS_SRC16_STATUS_OFFSET (0x00000010)
#define ITM_FW_EVENT0_STATUS_SRC16_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC16_STATUS_MASK (0x00010000)
#define ITM_FW_EVENT0_STATUS_SRC17_STATUS_OFFSET (0x00000011)
#define ITM_FW_EVENT0_STATUS_SRC17_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC17_STATUS_MASK (0x00020000)
#define ITM_FW_EVENT0_STATUS_SRC18_STATUS_OFFSET (0x00000012)
#define ITM_FW_EVENT0_STATUS_SRC18_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC18_STATUS_MASK (0x00040000)
#define ITM_FW_EVENT0_STATUS_SRC19_STATUS_OFFSET (0x00000013)
#define ITM_FW_EVENT0_STATUS_SRC19_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC19_STATUS_MASK (0x00080000)
#define ITM_FW_EVENT0_STATUS_SRC20_STATUS_OFFSET (0x00000014)
#define ITM_FW_EVENT0_STATUS_SRC20_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC20_STATUS_MASK (0x00100000)
#define ITM_FW_EVENT0_STATUS_SRC21_STATUS_OFFSET (0x00000015)
#define ITM_FW_EVENT0_STATUS_SRC21_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC21_STATUS_MASK (0x00200000)
#define ITM_FW_EVENT0_STATUS_SRC22_STATUS_OFFSET (0x00000016)
#define ITM_FW_EVENT0_STATUS_SRC22_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC22_STATUS_MASK (0x00400000)
#define ITM_FW_EVENT0_STATUS_SRC23_STATUS_OFFSET (0x00000017)
#define ITM_FW_EVENT0_STATUS_SRC23_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC23_STATUS_MASK (0x00800000)
#define ITM_FW_EVENT0_STATUS_SRC24_STATUS_OFFSET (0x00000018)
#define ITM_FW_EVENT0_STATUS_SRC24_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC24_STATUS_MASK (0x01000000)
#define ITM_FW_EVENT0_STATUS_SRC25_STATUS_OFFSET (0x00000019)
#define ITM_FW_EVENT0_STATUS_SRC25_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC25_STATUS_MASK (0x02000000)
#define ITM_FW_EVENT0_STATUS_SRC26_STATUS_OFFSET (0x0000001a)
#define ITM_FW_EVENT0_STATUS_SRC26_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC26_STATUS_MASK (0x04000000)
#define ITM_FW_EVENT0_STATUS_SRC27_STATUS_OFFSET (0x0000001b)
#define ITM_FW_EVENT0_STATUS_SRC27_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC27_STATUS_MASK (0x08000000)
#define ITM_FW_EVENT0_STATUS_SRC28_STATUS_OFFSET (0x0000001c)
#define ITM_FW_EVENT0_STATUS_SRC28_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC28_STATUS_MASK (0x10000000)
#define ITM_FW_EVENT0_STATUS_SRC29_STATUS_OFFSET (0x0000001d)
#define ITM_FW_EVENT0_STATUS_SRC29_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC29_STATUS_MASK (0x20000000)
#define ITM_FW_EVENT0_STATUS_SRC30_STATUS_OFFSET (0x0000001e)
#define ITM_FW_EVENT0_STATUS_SRC30_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC30_STATUS_MASK (0x40000000)
#define ITM_FW_EVENT0_STATUS_SRC31_STATUS_OFFSET (0x0000001f)
#define ITM_FW_EVENT0_STATUS_SRC31_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_SRC31_STATUS_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT0_EN_STATUS
*/

#define ITM_FW_EVENT0_EN_STATUS_SIZE        (32)
#define ITM_FW_EVENT0_EN_STATUS_OFFSET      (pictorv2_in_ITM_BASE_ADDR + 0x02)
#define ITM_FW_EVENT0_EN_STATUS_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT0_EN_STATUS_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT0_EN_STATUS_RWMASK      (0x00000000)
#define ITM_FW_EVENT0_EN_STATUS_ROMASK      (0xFFFFFFFF)
#define ITM_FW_EVENT0_EN_STATUS_WOMASK      (0x00000000)
#define ITM_FW_EVENT0_EN_STATUS_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC0_EN_STATUS_OFFSET (0x00000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC0_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC0_EN_STATUS_MASK (0x00000001)
#define ITM_FW_EVENT0_EN_STATUS_SRC1_EN_STATUS_OFFSET (0x00000001)
#define ITM_FW_EVENT0_EN_STATUS_SRC1_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC1_EN_STATUS_MASK (0x00000002)
#define ITM_FW_EVENT0_EN_STATUS_SRC2_EN_STATUS_OFFSET (0x00000002)
#define ITM_FW_EVENT0_EN_STATUS_SRC2_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC2_EN_STATUS_MASK (0x00000004)
#define ITM_FW_EVENT0_EN_STATUS_SRC3_EN_STATUS_OFFSET (0x00000003)
#define ITM_FW_EVENT0_EN_STATUS_SRC3_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC3_EN_STATUS_MASK (0x00000008)
#define ITM_FW_EVENT0_EN_STATUS_SRC4_EN_STATUS_OFFSET (0x00000004)
#define ITM_FW_EVENT0_EN_STATUS_SRC4_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC4_EN_STATUS_MASK (0x00000010)
#define ITM_FW_EVENT0_EN_STATUS_SRC5_EN_STATUS_OFFSET (0x00000005)
#define ITM_FW_EVENT0_EN_STATUS_SRC5_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC5_EN_STATUS_MASK (0x00000020)
#define ITM_FW_EVENT0_EN_STATUS_SRC6_EN_STATUS_OFFSET (0x00000006)
#define ITM_FW_EVENT0_EN_STATUS_SRC6_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC6_EN_STATUS_MASK (0x00000040)
#define ITM_FW_EVENT0_EN_STATUS_SRC7_EN_STATUS_OFFSET (0x00000007)
#define ITM_FW_EVENT0_EN_STATUS_SRC7_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC7_EN_STATUS_MASK (0x00000080)
#define ITM_FW_EVENT0_EN_STATUS_SRC8_EN_STATUS_OFFSET (0x00000008)
#define ITM_FW_EVENT0_EN_STATUS_SRC8_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC8_EN_STATUS_MASK (0x00000100)
#define ITM_FW_EVENT0_EN_STATUS_SRC9_EN_STATUS_OFFSET (0x00000009)
#define ITM_FW_EVENT0_EN_STATUS_SRC9_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC9_EN_STATUS_MASK (0x00000200)
#define ITM_FW_EVENT0_EN_STATUS_SRC10_EN_STATUS_OFFSET (0x0000000a)
#define ITM_FW_EVENT0_EN_STATUS_SRC10_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC10_EN_STATUS_MASK (0x00000400)
#define ITM_FW_EVENT0_EN_STATUS_SRC11_EN_STATUS_OFFSET (0x0000000b)
#define ITM_FW_EVENT0_EN_STATUS_SRC11_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC11_EN_STATUS_MASK (0x00000800)
#define ITM_FW_EVENT0_EN_STATUS_SRC12_EN_STATUS_OFFSET (0x0000000c)
#define ITM_FW_EVENT0_EN_STATUS_SRC12_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC12_EN_STATUS_MASK (0x00001000)
#define ITM_FW_EVENT0_EN_STATUS_SRC13_EN_STATUS_OFFSET (0x0000000d)
#define ITM_FW_EVENT0_EN_STATUS_SRC13_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC13_EN_STATUS_MASK (0x00002000)
#define ITM_FW_EVENT0_EN_STATUS_SRC14_EN_STATUS_OFFSET (0x0000000e)
#define ITM_FW_EVENT0_EN_STATUS_SRC14_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC14_EN_STATUS_MASK (0x00004000)
#define ITM_FW_EVENT0_EN_STATUS_SRC15_EN_STATUS_OFFSET (0x0000000f)
#define ITM_FW_EVENT0_EN_STATUS_SRC15_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC15_EN_STATUS_MASK (0x00008000)
#define ITM_FW_EVENT0_EN_STATUS_SRC16_EN_STATUS_OFFSET (0x00000010)
#define ITM_FW_EVENT0_EN_STATUS_SRC16_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC16_EN_STATUS_MASK (0x00010000)
#define ITM_FW_EVENT0_EN_STATUS_SRC17_EN_STATUS_OFFSET (0x00000011)
#define ITM_FW_EVENT0_EN_STATUS_SRC17_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC17_EN_STATUS_MASK (0x00020000)
#define ITM_FW_EVENT0_EN_STATUS_SRC18_EN_STATUS_OFFSET (0x00000012)
#define ITM_FW_EVENT0_EN_STATUS_SRC18_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC18_EN_STATUS_MASK (0x00040000)
#define ITM_FW_EVENT0_EN_STATUS_SRC19_EN_STATUS_OFFSET (0x00000013)
#define ITM_FW_EVENT0_EN_STATUS_SRC19_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC19_EN_STATUS_MASK (0x00080000)
#define ITM_FW_EVENT0_EN_STATUS_SRC20_EN_STATUS_OFFSET (0x00000014)
#define ITM_FW_EVENT0_EN_STATUS_SRC20_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC20_EN_STATUS_MASK (0x00100000)
#define ITM_FW_EVENT0_EN_STATUS_SRC21_EN_STATUS_OFFSET (0x00000015)
#define ITM_FW_EVENT0_EN_STATUS_SRC21_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC21_EN_STATUS_MASK (0x00200000)
#define ITM_FW_EVENT0_EN_STATUS_SRC22_EN_STATUS_OFFSET (0x00000016)
#define ITM_FW_EVENT0_EN_STATUS_SRC22_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC22_EN_STATUS_MASK (0x00400000)
#define ITM_FW_EVENT0_EN_STATUS_SRC23_EN_STATUS_OFFSET (0x00000017)
#define ITM_FW_EVENT0_EN_STATUS_SRC23_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC23_EN_STATUS_MASK (0x00800000)
#define ITM_FW_EVENT0_EN_STATUS_SRC24_EN_STATUS_OFFSET (0x00000018)
#define ITM_FW_EVENT0_EN_STATUS_SRC24_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC24_EN_STATUS_MASK (0x01000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC25_EN_STATUS_OFFSET (0x00000019)
#define ITM_FW_EVENT0_EN_STATUS_SRC25_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC25_EN_STATUS_MASK (0x02000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC26_EN_STATUS_OFFSET (0x0000001a)
#define ITM_FW_EVENT0_EN_STATUS_SRC26_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC26_EN_STATUS_MASK (0x04000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC27_EN_STATUS_OFFSET (0x0000001b)
#define ITM_FW_EVENT0_EN_STATUS_SRC27_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC27_EN_STATUS_MASK (0x08000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC28_EN_STATUS_OFFSET (0x0000001c)
#define ITM_FW_EVENT0_EN_STATUS_SRC28_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC28_EN_STATUS_MASK (0x10000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC29_EN_STATUS_OFFSET (0x0000001d)
#define ITM_FW_EVENT0_EN_STATUS_SRC29_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC29_EN_STATUS_MASK (0x20000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC30_EN_STATUS_OFFSET (0x0000001e)
#define ITM_FW_EVENT0_EN_STATUS_SRC30_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC30_EN_STATUS_MASK (0x40000000)
#define ITM_FW_EVENT0_EN_STATUS_SRC31_EN_STATUS_OFFSET (0x0000001f)
#define ITM_FW_EVENT0_EN_STATUS_SRC31_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT0_EN_STATUS_SRC31_EN_STATUS_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT0_STATUS_BCLR
*/

#define ITM_FW_EVENT0_STATUS_BCLR_SIZE      (32)
#define ITM_FW_EVENT0_STATUS_BCLR_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x04)
#define ITM_FW_EVENT0_STATUS_BCLR_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT0_STATUS_BCLR_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT0_STATUS_BCLR_RWMASK    (0x00000000)
#define ITM_FW_EVENT0_STATUS_BCLR_ROMASK    (0x00000000)
#define ITM_FW_EVENT0_STATUS_BCLR_WOMASK    (0xFFFFFFFF)
#define ITM_FW_EVENT0_STATUS_BCLR_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC0_STATUS_BCLR_OFFSET (0x00000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC0_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC0_STATUS_BCLR_MASK (0x00000001)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC1_STATUS_BCLR_OFFSET (0x00000001)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC1_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC1_STATUS_BCLR_MASK (0x00000002)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC2_STATUS_BCLR_OFFSET (0x00000002)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC2_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC2_STATUS_BCLR_MASK (0x00000004)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC3_STATUS_BCLR_OFFSET (0x00000003)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC3_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC3_STATUS_BCLR_MASK (0x00000008)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC4_STATUS_BCLR_OFFSET (0x00000004)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC4_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC4_STATUS_BCLR_MASK (0x00000010)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC5_STATUS_BCLR_OFFSET (0x00000005)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC5_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC5_STATUS_BCLR_MASK (0x00000020)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC6_STATUS_BCLR_OFFSET (0x00000006)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC6_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC6_STATUS_BCLR_MASK (0x00000040)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC7_STATUS_BCLR_OFFSET (0x00000007)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC7_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC7_STATUS_BCLR_MASK (0x00000080)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC8_STATUS_BCLR_OFFSET (0x00000008)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC8_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC8_STATUS_BCLR_MASK (0x00000100)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC9_STATUS_BCLR_OFFSET (0x00000009)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC9_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC9_STATUS_BCLR_MASK (0x00000200)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC10_STATUS_BCLR_OFFSET (0x0000000a)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC10_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC10_STATUS_BCLR_MASK (0x00000400)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC11_STATUS_BCLR_OFFSET (0x0000000b)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC11_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC11_STATUS_BCLR_MASK (0x00000800)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC12_STATUS_BCLR_OFFSET (0x0000000c)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC12_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC12_STATUS_BCLR_MASK (0x00001000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC13_STATUS_BCLR_OFFSET (0x0000000d)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC13_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC13_STATUS_BCLR_MASK (0x00002000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC14_STATUS_BCLR_OFFSET (0x0000000e)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC14_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC14_STATUS_BCLR_MASK (0x00004000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC15_STATUS_BCLR_OFFSET (0x0000000f)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC15_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC15_STATUS_BCLR_MASK (0x00008000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC16_STATUS_BCLR_OFFSET (0x00000010)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC16_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC16_STATUS_BCLR_MASK (0x00010000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC17_STATUS_BCLR_OFFSET (0x00000011)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC17_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC17_STATUS_BCLR_MASK (0x00020000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC18_STATUS_BCLR_OFFSET (0x00000012)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC18_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC18_STATUS_BCLR_MASK (0x00040000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC19_STATUS_BCLR_OFFSET (0x00000013)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC19_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC19_STATUS_BCLR_MASK (0x00080000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC20_STATUS_BCLR_OFFSET (0x00000014)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC20_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC20_STATUS_BCLR_MASK (0x00100000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC21_STATUS_BCLR_OFFSET (0x00000015)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC21_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC21_STATUS_BCLR_MASK (0x00200000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC22_STATUS_BCLR_OFFSET (0x00000016)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC22_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC22_STATUS_BCLR_MASK (0x00400000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC23_STATUS_BCLR_OFFSET (0x00000017)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC23_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC23_STATUS_BCLR_MASK (0x00800000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC24_STATUS_BCLR_OFFSET (0x00000018)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC24_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC24_STATUS_BCLR_MASK (0x01000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC25_STATUS_BCLR_OFFSET (0x00000019)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC25_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC25_STATUS_BCLR_MASK (0x02000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC26_STATUS_BCLR_OFFSET (0x0000001a)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC26_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC26_STATUS_BCLR_MASK (0x04000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC27_STATUS_BCLR_OFFSET (0x0000001b)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC27_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC27_STATUS_BCLR_MASK (0x08000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC28_STATUS_BCLR_OFFSET (0x0000001c)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC28_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC28_STATUS_BCLR_MASK (0x10000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC29_STATUS_BCLR_OFFSET (0x0000001d)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC29_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC29_STATUS_BCLR_MASK (0x20000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC30_STATUS_BCLR_OFFSET (0x0000001e)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC30_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC30_STATUS_BCLR_MASK (0x40000000)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC31_STATUS_BCLR_OFFSET (0x0000001f)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC31_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BCLR_SRC31_STATUS_BCLR_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT0_STATUS_BSET
*/

#define ITM_FW_EVENT0_STATUS_BSET_SIZE      (32)
#define ITM_FW_EVENT0_STATUS_BSET_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x06)
#define ITM_FW_EVENT0_STATUS_BSET_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT0_STATUS_BSET_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT0_STATUS_BSET_RWMASK    (0x00000000)
#define ITM_FW_EVENT0_STATUS_BSET_ROMASK    (0x00000000)
#define ITM_FW_EVENT0_STATUS_BSET_WOMASK    (0xFFFFFFFF)
#define ITM_FW_EVENT0_STATUS_BSET_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC0_STATUS_BSET_OFFSET (0x00000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC0_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC0_STATUS_BSET_MASK (0x00000001)
#define ITM_FW_EVENT0_STATUS_BSET_SRC1_STATUS_BSET_OFFSET (0x00000001)
#define ITM_FW_EVENT0_STATUS_BSET_SRC1_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC1_STATUS_BSET_MASK (0x00000002)
#define ITM_FW_EVENT0_STATUS_BSET_SRC2_STATUS_BSET_OFFSET (0x00000002)
#define ITM_FW_EVENT0_STATUS_BSET_SRC2_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC2_STATUS_BSET_MASK (0x00000004)
#define ITM_FW_EVENT0_STATUS_BSET_SRC3_STATUS_BSET_OFFSET (0x00000003)
#define ITM_FW_EVENT0_STATUS_BSET_SRC3_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC3_STATUS_BSET_MASK (0x00000008)
#define ITM_FW_EVENT0_STATUS_BSET_SRC4_STATUS_BSET_OFFSET (0x00000004)
#define ITM_FW_EVENT0_STATUS_BSET_SRC4_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC4_STATUS_BSET_MASK (0x00000010)
#define ITM_FW_EVENT0_STATUS_BSET_SRC5_STATUS_BSET_OFFSET (0x00000005)
#define ITM_FW_EVENT0_STATUS_BSET_SRC5_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC5_STATUS_BSET_MASK (0x00000020)
#define ITM_FW_EVENT0_STATUS_BSET_SRC6_STATUS_BSET_OFFSET (0x00000006)
#define ITM_FW_EVENT0_STATUS_BSET_SRC6_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC6_STATUS_BSET_MASK (0x00000040)
#define ITM_FW_EVENT0_STATUS_BSET_SRC7_STATUS_BSET_OFFSET (0x00000007)
#define ITM_FW_EVENT0_STATUS_BSET_SRC7_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC7_STATUS_BSET_MASK (0x00000080)
#define ITM_FW_EVENT0_STATUS_BSET_SRC8_STATUS_BSET_OFFSET (0x00000008)
#define ITM_FW_EVENT0_STATUS_BSET_SRC8_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC8_STATUS_BSET_MASK (0x00000100)
#define ITM_FW_EVENT0_STATUS_BSET_SRC9_STATUS_BSET_OFFSET (0x00000009)
#define ITM_FW_EVENT0_STATUS_BSET_SRC9_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC9_STATUS_BSET_MASK (0x00000200)
#define ITM_FW_EVENT0_STATUS_BSET_SRC10_STATUS_BSET_OFFSET (0x0000000a)
#define ITM_FW_EVENT0_STATUS_BSET_SRC10_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC10_STATUS_BSET_MASK (0x00000400)
#define ITM_FW_EVENT0_STATUS_BSET_SRC11_STATUS_BSET_OFFSET (0x0000000b)
#define ITM_FW_EVENT0_STATUS_BSET_SRC11_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC11_STATUS_BSET_MASK (0x00000800)
#define ITM_FW_EVENT0_STATUS_BSET_SRC12_STATUS_BSET_OFFSET (0x0000000c)
#define ITM_FW_EVENT0_STATUS_BSET_SRC12_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC12_STATUS_BSET_MASK (0x00001000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC13_STATUS_BSET_OFFSET (0x0000000d)
#define ITM_FW_EVENT0_STATUS_BSET_SRC13_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC13_STATUS_BSET_MASK (0x00002000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC14_STATUS_BSET_OFFSET (0x0000000e)
#define ITM_FW_EVENT0_STATUS_BSET_SRC14_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC14_STATUS_BSET_MASK (0x00004000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC15_STATUS_BSET_OFFSET (0x0000000f)
#define ITM_FW_EVENT0_STATUS_BSET_SRC15_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC15_STATUS_BSET_MASK (0x00008000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC16_STATUS_BSET_OFFSET (0x00000010)
#define ITM_FW_EVENT0_STATUS_BSET_SRC16_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC16_STATUS_BSET_MASK (0x00010000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC17_STATUS_BSET_OFFSET (0x00000011)
#define ITM_FW_EVENT0_STATUS_BSET_SRC17_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC17_STATUS_BSET_MASK (0x00020000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC18_STATUS_BSET_OFFSET (0x00000012)
#define ITM_FW_EVENT0_STATUS_BSET_SRC18_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC18_STATUS_BSET_MASK (0x00040000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC19_STATUS_BSET_OFFSET (0x00000013)
#define ITM_FW_EVENT0_STATUS_BSET_SRC19_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC19_STATUS_BSET_MASK (0x00080000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC20_STATUS_BSET_OFFSET (0x00000014)
#define ITM_FW_EVENT0_STATUS_BSET_SRC20_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC20_STATUS_BSET_MASK (0x00100000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC21_STATUS_BSET_OFFSET (0x00000015)
#define ITM_FW_EVENT0_STATUS_BSET_SRC21_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC21_STATUS_BSET_MASK (0x00200000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC22_STATUS_BSET_OFFSET (0x00000016)
#define ITM_FW_EVENT0_STATUS_BSET_SRC22_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC22_STATUS_BSET_MASK (0x00400000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC23_STATUS_BSET_OFFSET (0x00000017)
#define ITM_FW_EVENT0_STATUS_BSET_SRC23_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC23_STATUS_BSET_MASK (0x00800000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC24_STATUS_BSET_OFFSET (0x00000018)
#define ITM_FW_EVENT0_STATUS_BSET_SRC24_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC24_STATUS_BSET_MASK (0x01000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC25_STATUS_BSET_OFFSET (0x00000019)
#define ITM_FW_EVENT0_STATUS_BSET_SRC25_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC25_STATUS_BSET_MASK (0x02000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC26_STATUS_BSET_OFFSET (0x0000001a)
#define ITM_FW_EVENT0_STATUS_BSET_SRC26_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC26_STATUS_BSET_MASK (0x04000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC27_STATUS_BSET_OFFSET (0x0000001b)
#define ITM_FW_EVENT0_STATUS_BSET_SRC27_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC27_STATUS_BSET_MASK (0x08000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC28_STATUS_BSET_OFFSET (0x0000001c)
#define ITM_FW_EVENT0_STATUS_BSET_SRC28_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC28_STATUS_BSET_MASK (0x10000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC29_STATUS_BSET_OFFSET (0x0000001d)
#define ITM_FW_EVENT0_STATUS_BSET_SRC29_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC29_STATUS_BSET_MASK (0x20000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC30_STATUS_BSET_OFFSET (0x0000001e)
#define ITM_FW_EVENT0_STATUS_BSET_SRC30_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC30_STATUS_BSET_MASK (0x40000000)
#define ITM_FW_EVENT0_STATUS_BSET_SRC31_STATUS_BSET_OFFSET (0x0000001f)
#define ITM_FW_EVENT0_STATUS_BSET_SRC31_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT0_STATUS_BSET_SRC31_STATUS_BSET_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT0_EN_BCLR
*/

#define ITM_FW_EVENT0_EN_BCLR_SIZE          (32)
#define ITM_FW_EVENT0_EN_BCLR_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x08)
#define ITM_FW_EVENT0_EN_BCLR_RESET_VALUE   (0x00000000)
#define ITM_FW_EVENT0_EN_BCLR_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT0_EN_BCLR_RWMASK        (0x00000000)
#define ITM_FW_EVENT0_EN_BCLR_ROMASK        (0x00000000)
#define ITM_FW_EVENT0_EN_BCLR_WOMASK        (0xFFFFFFFF)
#define ITM_FW_EVENT0_EN_BCLR_UNUSED_MASK   (0x00000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC0_EN_BCLR_OFFSET (0x00000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC0_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC0_EN_BCLR_MASK (0x00000001)
#define ITM_FW_EVENT0_EN_BCLR_SRC1_EN_BCLR_OFFSET (0x00000001)
#define ITM_FW_EVENT0_EN_BCLR_SRC1_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC1_EN_BCLR_MASK (0x00000002)
#define ITM_FW_EVENT0_EN_BCLR_SRC2_EN_BCLR_OFFSET (0x00000002)
#define ITM_FW_EVENT0_EN_BCLR_SRC2_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC2_EN_BCLR_MASK (0x00000004)
#define ITM_FW_EVENT0_EN_BCLR_SRC3_EN_BCLR_OFFSET (0x00000003)
#define ITM_FW_EVENT0_EN_BCLR_SRC3_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC3_EN_BCLR_MASK (0x00000008)
#define ITM_FW_EVENT0_EN_BCLR_SRC4_EN_BCLR_OFFSET (0x00000004)
#define ITM_FW_EVENT0_EN_BCLR_SRC4_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC4_EN_BCLR_MASK (0x00000010)
#define ITM_FW_EVENT0_EN_BCLR_SRC5_EN_BCLR_OFFSET (0x00000005)
#define ITM_FW_EVENT0_EN_BCLR_SRC5_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC5_EN_BCLR_MASK (0x00000020)
#define ITM_FW_EVENT0_EN_BCLR_SRC6_EN_BCLR_OFFSET (0x00000006)
#define ITM_FW_EVENT0_EN_BCLR_SRC6_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC6_EN_BCLR_MASK (0x00000040)
#define ITM_FW_EVENT0_EN_BCLR_SRC7_EN_BCLR_OFFSET (0x00000007)
#define ITM_FW_EVENT0_EN_BCLR_SRC7_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC7_EN_BCLR_MASK (0x00000080)
#define ITM_FW_EVENT0_EN_BCLR_SRC8_EN_BCLR_OFFSET (0x00000008)
#define ITM_FW_EVENT0_EN_BCLR_SRC8_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC8_EN_BCLR_MASK (0x00000100)
#define ITM_FW_EVENT0_EN_BCLR_SRC9_EN_BCLR_OFFSET (0x00000009)
#define ITM_FW_EVENT0_EN_BCLR_SRC9_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC9_EN_BCLR_MASK (0x00000200)
#define ITM_FW_EVENT0_EN_BCLR_SRC10_EN_BCLR_OFFSET (0x0000000a)
#define ITM_FW_EVENT0_EN_BCLR_SRC10_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC10_EN_BCLR_MASK (0x00000400)
#define ITM_FW_EVENT0_EN_BCLR_SRC11_EN_BCLR_OFFSET (0x0000000b)
#define ITM_FW_EVENT0_EN_BCLR_SRC11_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC11_EN_BCLR_MASK (0x00000800)
#define ITM_FW_EVENT0_EN_BCLR_SRC12_EN_BCLR_OFFSET (0x0000000c)
#define ITM_FW_EVENT0_EN_BCLR_SRC12_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC12_EN_BCLR_MASK (0x00001000)
#define ITM_FW_EVENT0_EN_BCLR_SRC13_EN_BCLR_OFFSET (0x0000000d)
#define ITM_FW_EVENT0_EN_BCLR_SRC13_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC13_EN_BCLR_MASK (0x00002000)
#define ITM_FW_EVENT0_EN_BCLR_SRC14_EN_BCLR_OFFSET (0x0000000e)
#define ITM_FW_EVENT0_EN_BCLR_SRC14_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC14_EN_BCLR_MASK (0x00004000)
#define ITM_FW_EVENT0_EN_BCLR_SRC15_EN_BCLR_OFFSET (0x0000000f)
#define ITM_FW_EVENT0_EN_BCLR_SRC15_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC15_EN_BCLR_MASK (0x00008000)
#define ITM_FW_EVENT0_EN_BCLR_SRC16_EN_BCLR_OFFSET (0x00000010)
#define ITM_FW_EVENT0_EN_BCLR_SRC16_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC16_EN_BCLR_MASK (0x00010000)
#define ITM_FW_EVENT0_EN_BCLR_SRC17_EN_BCLR_OFFSET (0x00000011)
#define ITM_FW_EVENT0_EN_BCLR_SRC17_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC17_EN_BCLR_MASK (0x00020000)
#define ITM_FW_EVENT0_EN_BCLR_SRC18_EN_BCLR_OFFSET (0x00000012)
#define ITM_FW_EVENT0_EN_BCLR_SRC18_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC18_EN_BCLR_MASK (0x00040000)
#define ITM_FW_EVENT0_EN_BCLR_SRC19_EN_BCLR_OFFSET (0x00000013)
#define ITM_FW_EVENT0_EN_BCLR_SRC19_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC19_EN_BCLR_MASK (0x00080000)
#define ITM_FW_EVENT0_EN_BCLR_SRC20_EN_BCLR_OFFSET (0x00000014)
#define ITM_FW_EVENT0_EN_BCLR_SRC20_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC20_EN_BCLR_MASK (0x00100000)
#define ITM_FW_EVENT0_EN_BCLR_SRC21_EN_BCLR_OFFSET (0x00000015)
#define ITM_FW_EVENT0_EN_BCLR_SRC21_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC21_EN_BCLR_MASK (0x00200000)
#define ITM_FW_EVENT0_EN_BCLR_SRC22_EN_BCLR_OFFSET (0x00000016)
#define ITM_FW_EVENT0_EN_BCLR_SRC22_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC22_EN_BCLR_MASK (0x00400000)
#define ITM_FW_EVENT0_EN_BCLR_SRC23_EN_BCLR_OFFSET (0x00000017)
#define ITM_FW_EVENT0_EN_BCLR_SRC23_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC23_EN_BCLR_MASK (0x00800000)
#define ITM_FW_EVENT0_EN_BCLR_SRC24_EN_BCLR_OFFSET (0x00000018)
#define ITM_FW_EVENT0_EN_BCLR_SRC24_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC24_EN_BCLR_MASK (0x01000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC25_EN_BCLR_OFFSET (0x00000019)
#define ITM_FW_EVENT0_EN_BCLR_SRC25_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC25_EN_BCLR_MASK (0x02000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC26_EN_BCLR_OFFSET (0x0000001a)
#define ITM_FW_EVENT0_EN_BCLR_SRC26_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC26_EN_BCLR_MASK (0x04000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC27_EN_BCLR_OFFSET (0x0000001b)
#define ITM_FW_EVENT0_EN_BCLR_SRC27_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC27_EN_BCLR_MASK (0x08000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC28_EN_BCLR_OFFSET (0x0000001c)
#define ITM_FW_EVENT0_EN_BCLR_SRC28_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC28_EN_BCLR_MASK (0x10000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC29_EN_BCLR_OFFSET (0x0000001d)
#define ITM_FW_EVENT0_EN_BCLR_SRC29_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC29_EN_BCLR_MASK (0x20000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC30_EN_BCLR_OFFSET (0x0000001e)
#define ITM_FW_EVENT0_EN_BCLR_SRC30_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC30_EN_BCLR_MASK (0x40000000)
#define ITM_FW_EVENT0_EN_BCLR_SRC31_EN_BCLR_OFFSET (0x0000001f)
#define ITM_FW_EVENT0_EN_BCLR_SRC31_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT0_EN_BCLR_SRC31_EN_BCLR_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT0_EN_BSET
*/

#define ITM_FW_EVENT0_EN_BSET_SIZE          (32)
#define ITM_FW_EVENT0_EN_BSET_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x0a)
#define ITM_FW_EVENT0_EN_BSET_RESET_VALUE   (0x00000000)
#define ITM_FW_EVENT0_EN_BSET_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT0_EN_BSET_RWMASK        (0x00000000)
#define ITM_FW_EVENT0_EN_BSET_ROMASK        (0x00000000)
#define ITM_FW_EVENT0_EN_BSET_WOMASK        (0xFFFFFFFF)
#define ITM_FW_EVENT0_EN_BSET_UNUSED_MASK   (0x00000000)
#define ITM_FW_EVENT0_EN_BSET_SRC0_EN_BSET_OFFSET (0x00000000)
#define ITM_FW_EVENT0_EN_BSET_SRC0_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC0_EN_BSET_MASK (0x00000001)
#define ITM_FW_EVENT0_EN_BSET_SRC1_EN_BSET_OFFSET (0x00000001)
#define ITM_FW_EVENT0_EN_BSET_SRC1_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC1_EN_BSET_MASK (0x00000002)
#define ITM_FW_EVENT0_EN_BSET_SRC2_EN_BSET_OFFSET (0x00000002)
#define ITM_FW_EVENT0_EN_BSET_SRC2_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC2_EN_BSET_MASK (0x00000004)
#define ITM_FW_EVENT0_EN_BSET_SRC3_EN_BSET_OFFSET (0x00000003)
#define ITM_FW_EVENT0_EN_BSET_SRC3_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC3_EN_BSET_MASK (0x00000008)
#define ITM_FW_EVENT0_EN_BSET_SRC4_EN_BSET_OFFSET (0x00000004)
#define ITM_FW_EVENT0_EN_BSET_SRC4_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC4_EN_BSET_MASK (0x00000010)
#define ITM_FW_EVENT0_EN_BSET_SRC5_EN_BSET_OFFSET (0x00000005)
#define ITM_FW_EVENT0_EN_BSET_SRC5_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC5_EN_BSET_MASK (0x00000020)
#define ITM_FW_EVENT0_EN_BSET_SRC6_EN_BSET_OFFSET (0x00000006)
#define ITM_FW_EVENT0_EN_BSET_SRC6_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC6_EN_BSET_MASK (0x00000040)
#define ITM_FW_EVENT0_EN_BSET_SRC7_EN_BSET_OFFSET (0x00000007)
#define ITM_FW_EVENT0_EN_BSET_SRC7_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC7_EN_BSET_MASK (0x00000080)
#define ITM_FW_EVENT0_EN_BSET_SRC8_EN_BSET_OFFSET (0x00000008)
#define ITM_FW_EVENT0_EN_BSET_SRC8_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC8_EN_BSET_MASK (0x00000100)
#define ITM_FW_EVENT0_EN_BSET_SRC9_EN_BSET_OFFSET (0x00000009)
#define ITM_FW_EVENT0_EN_BSET_SRC9_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC9_EN_BSET_MASK (0x00000200)
#define ITM_FW_EVENT0_EN_BSET_SRC10_EN_BSET_OFFSET (0x0000000a)
#define ITM_FW_EVENT0_EN_BSET_SRC10_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC10_EN_BSET_MASK (0x00000400)
#define ITM_FW_EVENT0_EN_BSET_SRC11_EN_BSET_OFFSET (0x0000000b)
#define ITM_FW_EVENT0_EN_BSET_SRC11_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC11_EN_BSET_MASK (0x00000800)
#define ITM_FW_EVENT0_EN_BSET_SRC12_EN_BSET_OFFSET (0x0000000c)
#define ITM_FW_EVENT0_EN_BSET_SRC12_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC12_EN_BSET_MASK (0x00001000)
#define ITM_FW_EVENT0_EN_BSET_SRC13_EN_BSET_OFFSET (0x0000000d)
#define ITM_FW_EVENT0_EN_BSET_SRC13_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC13_EN_BSET_MASK (0x00002000)
#define ITM_FW_EVENT0_EN_BSET_SRC14_EN_BSET_OFFSET (0x0000000e)
#define ITM_FW_EVENT0_EN_BSET_SRC14_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC14_EN_BSET_MASK (0x00004000)
#define ITM_FW_EVENT0_EN_BSET_SRC15_EN_BSET_OFFSET (0x0000000f)
#define ITM_FW_EVENT0_EN_BSET_SRC15_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC15_EN_BSET_MASK (0x00008000)
#define ITM_FW_EVENT0_EN_BSET_SRC16_EN_BSET_OFFSET (0x00000010)
#define ITM_FW_EVENT0_EN_BSET_SRC16_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC16_EN_BSET_MASK (0x00010000)
#define ITM_FW_EVENT0_EN_BSET_SRC17_EN_BSET_OFFSET (0x00000011)
#define ITM_FW_EVENT0_EN_BSET_SRC17_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC17_EN_BSET_MASK (0x00020000)
#define ITM_FW_EVENT0_EN_BSET_SRC18_EN_BSET_OFFSET (0x00000012)
#define ITM_FW_EVENT0_EN_BSET_SRC18_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC18_EN_BSET_MASK (0x00040000)
#define ITM_FW_EVENT0_EN_BSET_SRC19_EN_BSET_OFFSET (0x00000013)
#define ITM_FW_EVENT0_EN_BSET_SRC19_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC19_EN_BSET_MASK (0x00080000)
#define ITM_FW_EVENT0_EN_BSET_SRC20_EN_BSET_OFFSET (0x00000014)
#define ITM_FW_EVENT0_EN_BSET_SRC20_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC20_EN_BSET_MASK (0x00100000)
#define ITM_FW_EVENT0_EN_BSET_SRC21_EN_BSET_OFFSET (0x00000015)
#define ITM_FW_EVENT0_EN_BSET_SRC21_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC21_EN_BSET_MASK (0x00200000)
#define ITM_FW_EVENT0_EN_BSET_SRC22_EN_BSET_OFFSET (0x00000016)
#define ITM_FW_EVENT0_EN_BSET_SRC22_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC22_EN_BSET_MASK (0x00400000)
#define ITM_FW_EVENT0_EN_BSET_SRC23_EN_BSET_OFFSET (0x00000017)
#define ITM_FW_EVENT0_EN_BSET_SRC23_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC23_EN_BSET_MASK (0x00800000)
#define ITM_FW_EVENT0_EN_BSET_SRC24_EN_BSET_OFFSET (0x00000018)
#define ITM_FW_EVENT0_EN_BSET_SRC24_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC24_EN_BSET_MASK (0x01000000)
#define ITM_FW_EVENT0_EN_BSET_SRC25_EN_BSET_OFFSET (0x00000019)
#define ITM_FW_EVENT0_EN_BSET_SRC25_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC25_EN_BSET_MASK (0x02000000)
#define ITM_FW_EVENT0_EN_BSET_SRC26_EN_BSET_OFFSET (0x0000001a)
#define ITM_FW_EVENT0_EN_BSET_SRC26_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC26_EN_BSET_MASK (0x04000000)
#define ITM_FW_EVENT0_EN_BSET_SRC27_EN_BSET_OFFSET (0x0000001b)
#define ITM_FW_EVENT0_EN_BSET_SRC27_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC27_EN_BSET_MASK (0x08000000)
#define ITM_FW_EVENT0_EN_BSET_SRC28_EN_BSET_OFFSET (0x0000001c)
#define ITM_FW_EVENT0_EN_BSET_SRC28_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC28_EN_BSET_MASK (0x10000000)
#define ITM_FW_EVENT0_EN_BSET_SRC29_EN_BSET_OFFSET (0x0000001d)
#define ITM_FW_EVENT0_EN_BSET_SRC29_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC29_EN_BSET_MASK (0x20000000)
#define ITM_FW_EVENT0_EN_BSET_SRC30_EN_BSET_OFFSET (0x0000001e)
#define ITM_FW_EVENT0_EN_BSET_SRC30_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC30_EN_BSET_MASK (0x40000000)
#define ITM_FW_EVENT0_EN_BSET_SRC31_EN_BSET_OFFSET (0x0000001f)
#define ITM_FW_EVENT0_EN_BSET_SRC31_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT0_EN_BSET_SRC31_EN_BSET_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT1_STATUS
*/

#define ITM_FW_EVENT1_STATUS_SIZE           (32)
#define ITM_FW_EVENT1_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x0c)
#define ITM_FW_EVENT1_STATUS_RESET_VALUE    (0x00000000)
#define ITM_FW_EVENT1_STATUS_BITFIELD_MASK  (0xFFFFFFFF)
#define ITM_FW_EVENT1_STATUS_RWMASK         (0x00000000)
#define ITM_FW_EVENT1_STATUS_ROMASK         (0xFFFFFFFF)
#define ITM_FW_EVENT1_STATUS_WOMASK         (0x00000000)
#define ITM_FW_EVENT1_STATUS_UNUSED_MASK    (0x00000000)
#define ITM_FW_EVENT1_STATUS_SRC0_STATUS_OFFSET (0x00000000)
#define ITM_FW_EVENT1_STATUS_SRC0_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC0_STATUS_MASK (0x00000001)
#define ITM_FW_EVENT1_STATUS_SRC1_STATUS_OFFSET (0x00000001)
#define ITM_FW_EVENT1_STATUS_SRC1_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC1_STATUS_MASK (0x00000002)
#define ITM_FW_EVENT1_STATUS_SRC2_STATUS_OFFSET (0x00000002)
#define ITM_FW_EVENT1_STATUS_SRC2_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC2_STATUS_MASK (0x00000004)
#define ITM_FW_EVENT1_STATUS_SRC3_STATUS_OFFSET (0x00000003)
#define ITM_FW_EVENT1_STATUS_SRC3_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC3_STATUS_MASK (0x00000008)
#define ITM_FW_EVENT1_STATUS_SRC4_STATUS_OFFSET (0x00000004)
#define ITM_FW_EVENT1_STATUS_SRC4_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC4_STATUS_MASK (0x00000010)
#define ITM_FW_EVENT1_STATUS_SRC5_STATUS_OFFSET (0x00000005)
#define ITM_FW_EVENT1_STATUS_SRC5_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC5_STATUS_MASK (0x00000020)
#define ITM_FW_EVENT1_STATUS_SRC6_STATUS_OFFSET (0x00000006)
#define ITM_FW_EVENT1_STATUS_SRC6_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC6_STATUS_MASK (0x00000040)
#define ITM_FW_EVENT1_STATUS_SRC7_STATUS_OFFSET (0x00000007)
#define ITM_FW_EVENT1_STATUS_SRC7_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC7_STATUS_MASK (0x00000080)
#define ITM_FW_EVENT1_STATUS_SRC8_STATUS_OFFSET (0x00000008)
#define ITM_FW_EVENT1_STATUS_SRC8_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC8_STATUS_MASK (0x00000100)
#define ITM_FW_EVENT1_STATUS_SRC9_STATUS_OFFSET (0x00000009)
#define ITM_FW_EVENT1_STATUS_SRC9_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC9_STATUS_MASK (0x00000200)
#define ITM_FW_EVENT1_STATUS_SRC10_STATUS_OFFSET (0x0000000a)
#define ITM_FW_EVENT1_STATUS_SRC10_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC10_STATUS_MASK (0x00000400)
#define ITM_FW_EVENT1_STATUS_SRC11_STATUS_OFFSET (0x0000000b)
#define ITM_FW_EVENT1_STATUS_SRC11_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC11_STATUS_MASK (0x00000800)
#define ITM_FW_EVENT1_STATUS_SRC12_STATUS_OFFSET (0x0000000c)
#define ITM_FW_EVENT1_STATUS_SRC12_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC12_STATUS_MASK (0x00001000)
#define ITM_FW_EVENT1_STATUS_SRC13_STATUS_OFFSET (0x0000000d)
#define ITM_FW_EVENT1_STATUS_SRC13_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC13_STATUS_MASK (0x00002000)
#define ITM_FW_EVENT1_STATUS_SRC14_STATUS_OFFSET (0x0000000e)
#define ITM_FW_EVENT1_STATUS_SRC14_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC14_STATUS_MASK (0x00004000)
#define ITM_FW_EVENT1_STATUS_SRC15_STATUS_OFFSET (0x0000000f)
#define ITM_FW_EVENT1_STATUS_SRC15_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC15_STATUS_MASK (0x00008000)
#define ITM_FW_EVENT1_STATUS_SRC16_STATUS_OFFSET (0x00000010)
#define ITM_FW_EVENT1_STATUS_SRC16_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC16_STATUS_MASK (0x00010000)
#define ITM_FW_EVENT1_STATUS_SRC17_STATUS_OFFSET (0x00000011)
#define ITM_FW_EVENT1_STATUS_SRC17_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC17_STATUS_MASK (0x00020000)
#define ITM_FW_EVENT1_STATUS_SRC18_STATUS_OFFSET (0x00000012)
#define ITM_FW_EVENT1_STATUS_SRC18_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC18_STATUS_MASK (0x00040000)
#define ITM_FW_EVENT1_STATUS_SRC19_STATUS_OFFSET (0x00000013)
#define ITM_FW_EVENT1_STATUS_SRC19_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC19_STATUS_MASK (0x00080000)
#define ITM_FW_EVENT1_STATUS_SRC20_STATUS_OFFSET (0x00000014)
#define ITM_FW_EVENT1_STATUS_SRC20_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC20_STATUS_MASK (0x00100000)
#define ITM_FW_EVENT1_STATUS_SRC21_STATUS_OFFSET (0x00000015)
#define ITM_FW_EVENT1_STATUS_SRC21_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC21_STATUS_MASK (0x00200000)
#define ITM_FW_EVENT1_STATUS_SRC22_STATUS_OFFSET (0x00000016)
#define ITM_FW_EVENT1_STATUS_SRC22_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC22_STATUS_MASK (0x00400000)
#define ITM_FW_EVENT1_STATUS_SRC23_STATUS_OFFSET (0x00000017)
#define ITM_FW_EVENT1_STATUS_SRC23_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC23_STATUS_MASK (0x00800000)
#define ITM_FW_EVENT1_STATUS_SRC24_STATUS_OFFSET (0x00000018)
#define ITM_FW_EVENT1_STATUS_SRC24_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC24_STATUS_MASK (0x01000000)
#define ITM_FW_EVENT1_STATUS_SRC25_STATUS_OFFSET (0x00000019)
#define ITM_FW_EVENT1_STATUS_SRC25_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC25_STATUS_MASK (0x02000000)
#define ITM_FW_EVENT1_STATUS_SRC26_STATUS_OFFSET (0x0000001a)
#define ITM_FW_EVENT1_STATUS_SRC26_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC26_STATUS_MASK (0x04000000)
#define ITM_FW_EVENT1_STATUS_SRC27_STATUS_OFFSET (0x0000001b)
#define ITM_FW_EVENT1_STATUS_SRC27_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC27_STATUS_MASK (0x08000000)
#define ITM_FW_EVENT1_STATUS_SRC28_STATUS_OFFSET (0x0000001c)
#define ITM_FW_EVENT1_STATUS_SRC28_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC28_STATUS_MASK (0x10000000)
#define ITM_FW_EVENT1_STATUS_SRC29_STATUS_OFFSET (0x0000001d)
#define ITM_FW_EVENT1_STATUS_SRC29_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC29_STATUS_MASK (0x20000000)
#define ITM_FW_EVENT1_STATUS_SRC30_STATUS_OFFSET (0x0000001e)
#define ITM_FW_EVENT1_STATUS_SRC30_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC30_STATUS_MASK (0x40000000)
#define ITM_FW_EVENT1_STATUS_SRC31_STATUS_OFFSET (0x0000001f)
#define ITM_FW_EVENT1_STATUS_SRC31_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_SRC31_STATUS_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT1_EN_STATUS
*/

#define ITM_FW_EVENT1_EN_STATUS_SIZE        (32)
#define ITM_FW_EVENT1_EN_STATUS_OFFSET      (pictorv2_in_ITM_BASE_ADDR + 0x0e)
#define ITM_FW_EVENT1_EN_STATUS_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT1_EN_STATUS_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT1_EN_STATUS_RWMASK      (0x00000000)
#define ITM_FW_EVENT1_EN_STATUS_ROMASK      (0xFFFFFFFF)
#define ITM_FW_EVENT1_EN_STATUS_WOMASK      (0x00000000)
#define ITM_FW_EVENT1_EN_STATUS_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC0_EN_STATUS_OFFSET (0x00000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC0_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC0_EN_STATUS_MASK (0x00000001)
#define ITM_FW_EVENT1_EN_STATUS_SRC1_EN_STATUS_OFFSET (0x00000001)
#define ITM_FW_EVENT1_EN_STATUS_SRC1_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC1_EN_STATUS_MASK (0x00000002)
#define ITM_FW_EVENT1_EN_STATUS_SRC2_EN_STATUS_OFFSET (0x00000002)
#define ITM_FW_EVENT1_EN_STATUS_SRC2_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC2_EN_STATUS_MASK (0x00000004)
#define ITM_FW_EVENT1_EN_STATUS_SRC3_EN_STATUS_OFFSET (0x00000003)
#define ITM_FW_EVENT1_EN_STATUS_SRC3_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC3_EN_STATUS_MASK (0x00000008)
#define ITM_FW_EVENT1_EN_STATUS_SRC4_EN_STATUS_OFFSET (0x00000004)
#define ITM_FW_EVENT1_EN_STATUS_SRC4_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC4_EN_STATUS_MASK (0x00000010)
#define ITM_FW_EVENT1_EN_STATUS_SRC5_EN_STATUS_OFFSET (0x00000005)
#define ITM_FW_EVENT1_EN_STATUS_SRC5_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC5_EN_STATUS_MASK (0x00000020)
#define ITM_FW_EVENT1_EN_STATUS_SRC6_EN_STATUS_OFFSET (0x00000006)
#define ITM_FW_EVENT1_EN_STATUS_SRC6_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC6_EN_STATUS_MASK (0x00000040)
#define ITM_FW_EVENT1_EN_STATUS_SRC7_EN_STATUS_OFFSET (0x00000007)
#define ITM_FW_EVENT1_EN_STATUS_SRC7_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC7_EN_STATUS_MASK (0x00000080)
#define ITM_FW_EVENT1_EN_STATUS_SRC8_EN_STATUS_OFFSET (0x00000008)
#define ITM_FW_EVENT1_EN_STATUS_SRC8_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC8_EN_STATUS_MASK (0x00000100)
#define ITM_FW_EVENT1_EN_STATUS_SRC9_EN_STATUS_OFFSET (0x00000009)
#define ITM_FW_EVENT1_EN_STATUS_SRC9_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC9_EN_STATUS_MASK (0x00000200)
#define ITM_FW_EVENT1_EN_STATUS_SRC10_EN_STATUS_OFFSET (0x0000000a)
#define ITM_FW_EVENT1_EN_STATUS_SRC10_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC10_EN_STATUS_MASK (0x00000400)
#define ITM_FW_EVENT1_EN_STATUS_SRC11_EN_STATUS_OFFSET (0x0000000b)
#define ITM_FW_EVENT1_EN_STATUS_SRC11_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC11_EN_STATUS_MASK (0x00000800)
#define ITM_FW_EVENT1_EN_STATUS_SRC12_EN_STATUS_OFFSET (0x0000000c)
#define ITM_FW_EVENT1_EN_STATUS_SRC12_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC12_EN_STATUS_MASK (0x00001000)
#define ITM_FW_EVENT1_EN_STATUS_SRC13_EN_STATUS_OFFSET (0x0000000d)
#define ITM_FW_EVENT1_EN_STATUS_SRC13_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC13_EN_STATUS_MASK (0x00002000)
#define ITM_FW_EVENT1_EN_STATUS_SRC14_EN_STATUS_OFFSET (0x0000000e)
#define ITM_FW_EVENT1_EN_STATUS_SRC14_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC14_EN_STATUS_MASK (0x00004000)
#define ITM_FW_EVENT1_EN_STATUS_SRC15_EN_STATUS_OFFSET (0x0000000f)
#define ITM_FW_EVENT1_EN_STATUS_SRC15_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC15_EN_STATUS_MASK (0x00008000)
#define ITM_FW_EVENT1_EN_STATUS_SRC16_EN_STATUS_OFFSET (0x00000010)
#define ITM_FW_EVENT1_EN_STATUS_SRC16_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC16_EN_STATUS_MASK (0x00010000)
#define ITM_FW_EVENT1_EN_STATUS_SRC17_EN_STATUS_OFFSET (0x00000011)
#define ITM_FW_EVENT1_EN_STATUS_SRC17_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC17_EN_STATUS_MASK (0x00020000)
#define ITM_FW_EVENT1_EN_STATUS_SRC18_EN_STATUS_OFFSET (0x00000012)
#define ITM_FW_EVENT1_EN_STATUS_SRC18_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC18_EN_STATUS_MASK (0x00040000)
#define ITM_FW_EVENT1_EN_STATUS_SRC19_EN_STATUS_OFFSET (0x00000013)
#define ITM_FW_EVENT1_EN_STATUS_SRC19_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC19_EN_STATUS_MASK (0x00080000)
#define ITM_FW_EVENT1_EN_STATUS_SRC20_EN_STATUS_OFFSET (0x00000014)
#define ITM_FW_EVENT1_EN_STATUS_SRC20_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC20_EN_STATUS_MASK (0x00100000)
#define ITM_FW_EVENT1_EN_STATUS_SRC21_EN_STATUS_OFFSET (0x00000015)
#define ITM_FW_EVENT1_EN_STATUS_SRC21_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC21_EN_STATUS_MASK (0x00200000)
#define ITM_FW_EVENT1_EN_STATUS_SRC22_EN_STATUS_OFFSET (0x00000016)
#define ITM_FW_EVENT1_EN_STATUS_SRC22_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC22_EN_STATUS_MASK (0x00400000)
#define ITM_FW_EVENT1_EN_STATUS_SRC23_EN_STATUS_OFFSET (0x00000017)
#define ITM_FW_EVENT1_EN_STATUS_SRC23_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC23_EN_STATUS_MASK (0x00800000)
#define ITM_FW_EVENT1_EN_STATUS_SRC24_EN_STATUS_OFFSET (0x00000018)
#define ITM_FW_EVENT1_EN_STATUS_SRC24_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC24_EN_STATUS_MASK (0x01000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC25_EN_STATUS_OFFSET (0x00000019)
#define ITM_FW_EVENT1_EN_STATUS_SRC25_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC25_EN_STATUS_MASK (0x02000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC26_EN_STATUS_OFFSET (0x0000001a)
#define ITM_FW_EVENT1_EN_STATUS_SRC26_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC26_EN_STATUS_MASK (0x04000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC27_EN_STATUS_OFFSET (0x0000001b)
#define ITM_FW_EVENT1_EN_STATUS_SRC27_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC27_EN_STATUS_MASK (0x08000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC28_EN_STATUS_OFFSET (0x0000001c)
#define ITM_FW_EVENT1_EN_STATUS_SRC28_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC28_EN_STATUS_MASK (0x10000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC29_EN_STATUS_OFFSET (0x0000001d)
#define ITM_FW_EVENT1_EN_STATUS_SRC29_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC29_EN_STATUS_MASK (0x20000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC30_EN_STATUS_OFFSET (0x0000001e)
#define ITM_FW_EVENT1_EN_STATUS_SRC30_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC30_EN_STATUS_MASK (0x40000000)
#define ITM_FW_EVENT1_EN_STATUS_SRC31_EN_STATUS_OFFSET (0x0000001f)
#define ITM_FW_EVENT1_EN_STATUS_SRC31_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT1_EN_STATUS_SRC31_EN_STATUS_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT1_STATUS_BCLR
*/

#define ITM_FW_EVENT1_STATUS_BCLR_SIZE      (32)
#define ITM_FW_EVENT1_STATUS_BCLR_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x10)
#define ITM_FW_EVENT1_STATUS_BCLR_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT1_STATUS_BCLR_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT1_STATUS_BCLR_RWMASK    (0x00000000)
#define ITM_FW_EVENT1_STATUS_BCLR_ROMASK    (0x00000000)
#define ITM_FW_EVENT1_STATUS_BCLR_WOMASK    (0xFFFFFFFF)
#define ITM_FW_EVENT1_STATUS_BCLR_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC0_STATUS_BCLR_OFFSET (0x00000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC0_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC0_STATUS_BCLR_MASK (0x00000001)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC1_STATUS_BCLR_OFFSET (0x00000001)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC1_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC1_STATUS_BCLR_MASK (0x00000002)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC2_STATUS_BCLR_OFFSET (0x00000002)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC2_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC2_STATUS_BCLR_MASK (0x00000004)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC3_STATUS_BCLR_OFFSET (0x00000003)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC3_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC3_STATUS_BCLR_MASK (0x00000008)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC4_STATUS_BCLR_OFFSET (0x00000004)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC4_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC4_STATUS_BCLR_MASK (0x00000010)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC5_STATUS_BCLR_OFFSET (0x00000005)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC5_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC5_STATUS_BCLR_MASK (0x00000020)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC6_STATUS_BCLR_OFFSET (0x00000006)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC6_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC6_STATUS_BCLR_MASK (0x00000040)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC7_STATUS_BCLR_OFFSET (0x00000007)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC7_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC7_STATUS_BCLR_MASK (0x00000080)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC8_STATUS_BCLR_OFFSET (0x00000008)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC8_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC8_STATUS_BCLR_MASK (0x00000100)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC9_STATUS_BCLR_OFFSET (0x00000009)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC9_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC9_STATUS_BCLR_MASK (0x00000200)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC10_STATUS_BCLR_OFFSET (0x0000000a)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC10_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC10_STATUS_BCLR_MASK (0x00000400)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC11_STATUS_BCLR_OFFSET (0x0000000b)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC11_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC11_STATUS_BCLR_MASK (0x00000800)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC12_STATUS_BCLR_OFFSET (0x0000000c)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC12_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC12_STATUS_BCLR_MASK (0x00001000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC13_STATUS_BCLR_OFFSET (0x0000000d)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC13_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC13_STATUS_BCLR_MASK (0x00002000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC14_STATUS_BCLR_OFFSET (0x0000000e)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC14_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC14_STATUS_BCLR_MASK (0x00004000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC15_STATUS_BCLR_OFFSET (0x0000000f)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC15_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC15_STATUS_BCLR_MASK (0x00008000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC16_STATUS_BCLR_OFFSET (0x00000010)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC16_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC16_STATUS_BCLR_MASK (0x00010000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC17_STATUS_BCLR_OFFSET (0x00000011)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC17_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC17_STATUS_BCLR_MASK (0x00020000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC18_STATUS_BCLR_OFFSET (0x00000012)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC18_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC18_STATUS_BCLR_MASK (0x00040000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC19_STATUS_BCLR_OFFSET (0x00000013)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC19_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC19_STATUS_BCLR_MASK (0x00080000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC20_STATUS_BCLR_OFFSET (0x00000014)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC20_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC20_STATUS_BCLR_MASK (0x00100000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC21_STATUS_BCLR_OFFSET (0x00000015)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC21_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC21_STATUS_BCLR_MASK (0x00200000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC22_STATUS_BCLR_OFFSET (0x00000016)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC22_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC22_STATUS_BCLR_MASK (0x00400000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC23_STATUS_BCLR_OFFSET (0x00000017)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC23_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC23_STATUS_BCLR_MASK (0x00800000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC24_STATUS_BCLR_OFFSET (0x00000018)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC24_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC24_STATUS_BCLR_MASK (0x01000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC25_STATUS_BCLR_OFFSET (0x00000019)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC25_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC25_STATUS_BCLR_MASK (0x02000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC26_STATUS_BCLR_OFFSET (0x0000001a)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC26_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC26_STATUS_BCLR_MASK (0x04000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC27_STATUS_BCLR_OFFSET (0x0000001b)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC27_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC27_STATUS_BCLR_MASK (0x08000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC28_STATUS_BCLR_OFFSET (0x0000001c)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC28_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC28_STATUS_BCLR_MASK (0x10000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC29_STATUS_BCLR_OFFSET (0x0000001d)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC29_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC29_STATUS_BCLR_MASK (0x20000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC30_STATUS_BCLR_OFFSET (0x0000001e)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC30_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC30_STATUS_BCLR_MASK (0x40000000)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC31_STATUS_BCLR_OFFSET (0x0000001f)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC31_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BCLR_SRC31_STATUS_BCLR_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT1_STATUS_BSET
*/

#define ITM_FW_EVENT1_STATUS_BSET_SIZE      (32)
#define ITM_FW_EVENT1_STATUS_BSET_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x12)
#define ITM_FW_EVENT1_STATUS_BSET_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT1_STATUS_BSET_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT1_STATUS_BSET_RWMASK    (0x00000000)
#define ITM_FW_EVENT1_STATUS_BSET_ROMASK    (0x00000000)
#define ITM_FW_EVENT1_STATUS_BSET_WOMASK    (0xFFFFFFFF)
#define ITM_FW_EVENT1_STATUS_BSET_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC0_STATUS_BSET_OFFSET (0x00000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC0_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC0_STATUS_BSET_MASK (0x00000001)
#define ITM_FW_EVENT1_STATUS_BSET_SRC1_STATUS_BSET_OFFSET (0x00000001)
#define ITM_FW_EVENT1_STATUS_BSET_SRC1_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC1_STATUS_BSET_MASK (0x00000002)
#define ITM_FW_EVENT1_STATUS_BSET_SRC2_STATUS_BSET_OFFSET (0x00000002)
#define ITM_FW_EVENT1_STATUS_BSET_SRC2_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC2_STATUS_BSET_MASK (0x00000004)
#define ITM_FW_EVENT1_STATUS_BSET_SRC3_STATUS_BSET_OFFSET (0x00000003)
#define ITM_FW_EVENT1_STATUS_BSET_SRC3_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC3_STATUS_BSET_MASK (0x00000008)
#define ITM_FW_EVENT1_STATUS_BSET_SRC4_STATUS_BSET_OFFSET (0x00000004)
#define ITM_FW_EVENT1_STATUS_BSET_SRC4_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC4_STATUS_BSET_MASK (0x00000010)
#define ITM_FW_EVENT1_STATUS_BSET_SRC5_STATUS_BSET_OFFSET (0x00000005)
#define ITM_FW_EVENT1_STATUS_BSET_SRC5_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC5_STATUS_BSET_MASK (0x00000020)
#define ITM_FW_EVENT1_STATUS_BSET_SRC6_STATUS_BSET_OFFSET (0x00000006)
#define ITM_FW_EVENT1_STATUS_BSET_SRC6_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC6_STATUS_BSET_MASK (0x00000040)
#define ITM_FW_EVENT1_STATUS_BSET_SRC7_STATUS_BSET_OFFSET (0x00000007)
#define ITM_FW_EVENT1_STATUS_BSET_SRC7_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC7_STATUS_BSET_MASK (0x00000080)
#define ITM_FW_EVENT1_STATUS_BSET_SRC8_STATUS_BSET_OFFSET (0x00000008)
#define ITM_FW_EVENT1_STATUS_BSET_SRC8_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC8_STATUS_BSET_MASK (0x00000100)
#define ITM_FW_EVENT1_STATUS_BSET_SRC9_STATUS_BSET_OFFSET (0x00000009)
#define ITM_FW_EVENT1_STATUS_BSET_SRC9_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC9_STATUS_BSET_MASK (0x00000200)
#define ITM_FW_EVENT1_STATUS_BSET_SRC10_STATUS_BSET_OFFSET (0x0000000a)
#define ITM_FW_EVENT1_STATUS_BSET_SRC10_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC10_STATUS_BSET_MASK (0x00000400)
#define ITM_FW_EVENT1_STATUS_BSET_SRC11_STATUS_BSET_OFFSET (0x0000000b)
#define ITM_FW_EVENT1_STATUS_BSET_SRC11_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC11_STATUS_BSET_MASK (0x00000800)
#define ITM_FW_EVENT1_STATUS_BSET_SRC12_STATUS_BSET_OFFSET (0x0000000c)
#define ITM_FW_EVENT1_STATUS_BSET_SRC12_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC12_STATUS_BSET_MASK (0x00001000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC13_STATUS_BSET_OFFSET (0x0000000d)
#define ITM_FW_EVENT1_STATUS_BSET_SRC13_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC13_STATUS_BSET_MASK (0x00002000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC14_STATUS_BSET_OFFSET (0x0000000e)
#define ITM_FW_EVENT1_STATUS_BSET_SRC14_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC14_STATUS_BSET_MASK (0x00004000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC15_STATUS_BSET_OFFSET (0x0000000f)
#define ITM_FW_EVENT1_STATUS_BSET_SRC15_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC15_STATUS_BSET_MASK (0x00008000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC16_STATUS_BSET_OFFSET (0x00000010)
#define ITM_FW_EVENT1_STATUS_BSET_SRC16_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC16_STATUS_BSET_MASK (0x00010000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC17_STATUS_BSET_OFFSET (0x00000011)
#define ITM_FW_EVENT1_STATUS_BSET_SRC17_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC17_STATUS_BSET_MASK (0x00020000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC18_STATUS_BSET_OFFSET (0x00000012)
#define ITM_FW_EVENT1_STATUS_BSET_SRC18_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC18_STATUS_BSET_MASK (0x00040000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC19_STATUS_BSET_OFFSET (0x00000013)
#define ITM_FW_EVENT1_STATUS_BSET_SRC19_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC19_STATUS_BSET_MASK (0x00080000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC20_STATUS_BSET_OFFSET (0x00000014)
#define ITM_FW_EVENT1_STATUS_BSET_SRC20_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC20_STATUS_BSET_MASK (0x00100000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC21_STATUS_BSET_OFFSET (0x00000015)
#define ITM_FW_EVENT1_STATUS_BSET_SRC21_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC21_STATUS_BSET_MASK (0x00200000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC22_STATUS_BSET_OFFSET (0x00000016)
#define ITM_FW_EVENT1_STATUS_BSET_SRC22_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC22_STATUS_BSET_MASK (0x00400000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC23_STATUS_BSET_OFFSET (0x00000017)
#define ITM_FW_EVENT1_STATUS_BSET_SRC23_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC23_STATUS_BSET_MASK (0x00800000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC24_STATUS_BSET_OFFSET (0x00000018)
#define ITM_FW_EVENT1_STATUS_BSET_SRC24_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC24_STATUS_BSET_MASK (0x01000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC25_STATUS_BSET_OFFSET (0x00000019)
#define ITM_FW_EVENT1_STATUS_BSET_SRC25_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC25_STATUS_BSET_MASK (0x02000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC26_STATUS_BSET_OFFSET (0x0000001a)
#define ITM_FW_EVENT1_STATUS_BSET_SRC26_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC26_STATUS_BSET_MASK (0x04000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC27_STATUS_BSET_OFFSET (0x0000001b)
#define ITM_FW_EVENT1_STATUS_BSET_SRC27_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC27_STATUS_BSET_MASK (0x08000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC28_STATUS_BSET_OFFSET (0x0000001c)
#define ITM_FW_EVENT1_STATUS_BSET_SRC28_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC28_STATUS_BSET_MASK (0x10000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC29_STATUS_BSET_OFFSET (0x0000001d)
#define ITM_FW_EVENT1_STATUS_BSET_SRC29_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC29_STATUS_BSET_MASK (0x20000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC30_STATUS_BSET_OFFSET (0x0000001e)
#define ITM_FW_EVENT1_STATUS_BSET_SRC30_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC30_STATUS_BSET_MASK (0x40000000)
#define ITM_FW_EVENT1_STATUS_BSET_SRC31_STATUS_BSET_OFFSET (0x0000001f)
#define ITM_FW_EVENT1_STATUS_BSET_SRC31_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT1_STATUS_BSET_SRC31_STATUS_BSET_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT1_EN_BCLR
*/

#define ITM_FW_EVENT1_EN_BCLR_SIZE          (32)
#define ITM_FW_EVENT1_EN_BCLR_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x14)
#define ITM_FW_EVENT1_EN_BCLR_RESET_VALUE   (0x00000000)
#define ITM_FW_EVENT1_EN_BCLR_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT1_EN_BCLR_RWMASK        (0x00000000)
#define ITM_FW_EVENT1_EN_BCLR_ROMASK        (0x00000000)
#define ITM_FW_EVENT1_EN_BCLR_WOMASK        (0xFFFFFFFF)
#define ITM_FW_EVENT1_EN_BCLR_UNUSED_MASK   (0x00000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC0_EN_BCLR_OFFSET (0x00000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC0_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC0_EN_BCLR_MASK (0x00000001)
#define ITM_FW_EVENT1_EN_BCLR_SRC1_EN_BCLR_OFFSET (0x00000001)
#define ITM_FW_EVENT1_EN_BCLR_SRC1_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC1_EN_BCLR_MASK (0x00000002)
#define ITM_FW_EVENT1_EN_BCLR_SRC2_EN_BCLR_OFFSET (0x00000002)
#define ITM_FW_EVENT1_EN_BCLR_SRC2_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC2_EN_BCLR_MASK (0x00000004)
#define ITM_FW_EVENT1_EN_BCLR_SRC3_EN_BCLR_OFFSET (0x00000003)
#define ITM_FW_EVENT1_EN_BCLR_SRC3_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC3_EN_BCLR_MASK (0x00000008)
#define ITM_FW_EVENT1_EN_BCLR_SRC4_EN_BCLR_OFFSET (0x00000004)
#define ITM_FW_EVENT1_EN_BCLR_SRC4_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC4_EN_BCLR_MASK (0x00000010)
#define ITM_FW_EVENT1_EN_BCLR_SRC5_EN_BCLR_OFFSET (0x00000005)
#define ITM_FW_EVENT1_EN_BCLR_SRC5_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC5_EN_BCLR_MASK (0x00000020)
#define ITM_FW_EVENT1_EN_BCLR_SRC6_EN_BCLR_OFFSET (0x00000006)
#define ITM_FW_EVENT1_EN_BCLR_SRC6_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC6_EN_BCLR_MASK (0x00000040)
#define ITM_FW_EVENT1_EN_BCLR_SRC7_EN_BCLR_OFFSET (0x00000007)
#define ITM_FW_EVENT1_EN_BCLR_SRC7_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC7_EN_BCLR_MASK (0x00000080)
#define ITM_FW_EVENT1_EN_BCLR_SRC8_EN_BCLR_OFFSET (0x00000008)
#define ITM_FW_EVENT1_EN_BCLR_SRC8_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC8_EN_BCLR_MASK (0x00000100)
#define ITM_FW_EVENT1_EN_BCLR_SRC9_EN_BCLR_OFFSET (0x00000009)
#define ITM_FW_EVENT1_EN_BCLR_SRC9_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC9_EN_BCLR_MASK (0x00000200)
#define ITM_FW_EVENT1_EN_BCLR_SRC10_EN_BCLR_OFFSET (0x0000000a)
#define ITM_FW_EVENT1_EN_BCLR_SRC10_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC10_EN_BCLR_MASK (0x00000400)
#define ITM_FW_EVENT1_EN_BCLR_SRC11_EN_BCLR_OFFSET (0x0000000b)
#define ITM_FW_EVENT1_EN_BCLR_SRC11_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC11_EN_BCLR_MASK (0x00000800)
#define ITM_FW_EVENT1_EN_BCLR_SRC12_EN_BCLR_OFFSET (0x0000000c)
#define ITM_FW_EVENT1_EN_BCLR_SRC12_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC12_EN_BCLR_MASK (0x00001000)
#define ITM_FW_EVENT1_EN_BCLR_SRC13_EN_BCLR_OFFSET (0x0000000d)
#define ITM_FW_EVENT1_EN_BCLR_SRC13_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC13_EN_BCLR_MASK (0x00002000)
#define ITM_FW_EVENT1_EN_BCLR_SRC14_EN_BCLR_OFFSET (0x0000000e)
#define ITM_FW_EVENT1_EN_BCLR_SRC14_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC14_EN_BCLR_MASK (0x00004000)
#define ITM_FW_EVENT1_EN_BCLR_SRC15_EN_BCLR_OFFSET (0x0000000f)
#define ITM_FW_EVENT1_EN_BCLR_SRC15_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC15_EN_BCLR_MASK (0x00008000)
#define ITM_FW_EVENT1_EN_BCLR_SRC16_EN_BCLR_OFFSET (0x00000010)
#define ITM_FW_EVENT1_EN_BCLR_SRC16_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC16_EN_BCLR_MASK (0x00010000)
#define ITM_FW_EVENT1_EN_BCLR_SRC17_EN_BCLR_OFFSET (0x00000011)
#define ITM_FW_EVENT1_EN_BCLR_SRC17_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC17_EN_BCLR_MASK (0x00020000)
#define ITM_FW_EVENT1_EN_BCLR_SRC18_EN_BCLR_OFFSET (0x00000012)
#define ITM_FW_EVENT1_EN_BCLR_SRC18_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC18_EN_BCLR_MASK (0x00040000)
#define ITM_FW_EVENT1_EN_BCLR_SRC19_EN_BCLR_OFFSET (0x00000013)
#define ITM_FW_EVENT1_EN_BCLR_SRC19_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC19_EN_BCLR_MASK (0x00080000)
#define ITM_FW_EVENT1_EN_BCLR_SRC20_EN_BCLR_OFFSET (0x00000014)
#define ITM_FW_EVENT1_EN_BCLR_SRC20_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC20_EN_BCLR_MASK (0x00100000)
#define ITM_FW_EVENT1_EN_BCLR_SRC21_EN_BCLR_OFFSET (0x00000015)
#define ITM_FW_EVENT1_EN_BCLR_SRC21_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC21_EN_BCLR_MASK (0x00200000)
#define ITM_FW_EVENT1_EN_BCLR_SRC22_EN_BCLR_OFFSET (0x00000016)
#define ITM_FW_EVENT1_EN_BCLR_SRC22_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC22_EN_BCLR_MASK (0x00400000)
#define ITM_FW_EVENT1_EN_BCLR_SRC23_EN_BCLR_OFFSET (0x00000017)
#define ITM_FW_EVENT1_EN_BCLR_SRC23_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC23_EN_BCLR_MASK (0x00800000)
#define ITM_FW_EVENT1_EN_BCLR_SRC24_EN_BCLR_OFFSET (0x00000018)
#define ITM_FW_EVENT1_EN_BCLR_SRC24_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC24_EN_BCLR_MASK (0x01000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC25_EN_BCLR_OFFSET (0x00000019)
#define ITM_FW_EVENT1_EN_BCLR_SRC25_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC25_EN_BCLR_MASK (0x02000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC26_EN_BCLR_OFFSET (0x0000001a)
#define ITM_FW_EVENT1_EN_BCLR_SRC26_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC26_EN_BCLR_MASK (0x04000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC27_EN_BCLR_OFFSET (0x0000001b)
#define ITM_FW_EVENT1_EN_BCLR_SRC27_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC27_EN_BCLR_MASK (0x08000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC28_EN_BCLR_OFFSET (0x0000001c)
#define ITM_FW_EVENT1_EN_BCLR_SRC28_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC28_EN_BCLR_MASK (0x10000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC29_EN_BCLR_OFFSET (0x0000001d)
#define ITM_FW_EVENT1_EN_BCLR_SRC29_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC29_EN_BCLR_MASK (0x20000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC30_EN_BCLR_OFFSET (0x0000001e)
#define ITM_FW_EVENT1_EN_BCLR_SRC30_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC30_EN_BCLR_MASK (0x40000000)
#define ITM_FW_EVENT1_EN_BCLR_SRC31_EN_BCLR_OFFSET (0x0000001f)
#define ITM_FW_EVENT1_EN_BCLR_SRC31_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT1_EN_BCLR_SRC31_EN_BCLR_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT1_EN_BSET
*/

#define ITM_FW_EVENT1_EN_BSET_SIZE          (32)
#define ITM_FW_EVENT1_EN_BSET_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x16)
#define ITM_FW_EVENT1_EN_BSET_RESET_VALUE   (0x00000000)
#define ITM_FW_EVENT1_EN_BSET_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT1_EN_BSET_RWMASK        (0x00000000)
#define ITM_FW_EVENT1_EN_BSET_ROMASK        (0x00000000)
#define ITM_FW_EVENT1_EN_BSET_WOMASK        (0xFFFFFFFF)
#define ITM_FW_EVENT1_EN_BSET_UNUSED_MASK   (0x00000000)
#define ITM_FW_EVENT1_EN_BSET_SRC0_EN_BSET_OFFSET (0x00000000)
#define ITM_FW_EVENT1_EN_BSET_SRC0_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC0_EN_BSET_MASK (0x00000001)
#define ITM_FW_EVENT1_EN_BSET_SRC1_EN_BSET_OFFSET (0x00000001)
#define ITM_FW_EVENT1_EN_BSET_SRC1_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC1_EN_BSET_MASK (0x00000002)
#define ITM_FW_EVENT1_EN_BSET_SRC2_EN_BSET_OFFSET (0x00000002)
#define ITM_FW_EVENT1_EN_BSET_SRC2_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC2_EN_BSET_MASK (0x00000004)
#define ITM_FW_EVENT1_EN_BSET_SRC3_EN_BSET_OFFSET (0x00000003)
#define ITM_FW_EVENT1_EN_BSET_SRC3_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC3_EN_BSET_MASK (0x00000008)
#define ITM_FW_EVENT1_EN_BSET_SRC4_EN_BSET_OFFSET (0x00000004)
#define ITM_FW_EVENT1_EN_BSET_SRC4_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC4_EN_BSET_MASK (0x00000010)
#define ITM_FW_EVENT1_EN_BSET_SRC5_EN_BSET_OFFSET (0x00000005)
#define ITM_FW_EVENT1_EN_BSET_SRC5_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC5_EN_BSET_MASK (0x00000020)
#define ITM_FW_EVENT1_EN_BSET_SRC6_EN_BSET_OFFSET (0x00000006)
#define ITM_FW_EVENT1_EN_BSET_SRC6_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC6_EN_BSET_MASK (0x00000040)
#define ITM_FW_EVENT1_EN_BSET_SRC7_EN_BSET_OFFSET (0x00000007)
#define ITM_FW_EVENT1_EN_BSET_SRC7_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC7_EN_BSET_MASK (0x00000080)
#define ITM_FW_EVENT1_EN_BSET_SRC8_EN_BSET_OFFSET (0x00000008)
#define ITM_FW_EVENT1_EN_BSET_SRC8_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC8_EN_BSET_MASK (0x00000100)
#define ITM_FW_EVENT1_EN_BSET_SRC9_EN_BSET_OFFSET (0x00000009)
#define ITM_FW_EVENT1_EN_BSET_SRC9_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC9_EN_BSET_MASK (0x00000200)
#define ITM_FW_EVENT1_EN_BSET_SRC10_EN_BSET_OFFSET (0x0000000a)
#define ITM_FW_EVENT1_EN_BSET_SRC10_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC10_EN_BSET_MASK (0x00000400)
#define ITM_FW_EVENT1_EN_BSET_SRC11_EN_BSET_OFFSET (0x0000000b)
#define ITM_FW_EVENT1_EN_BSET_SRC11_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC11_EN_BSET_MASK (0x00000800)
#define ITM_FW_EVENT1_EN_BSET_SRC12_EN_BSET_OFFSET (0x0000000c)
#define ITM_FW_EVENT1_EN_BSET_SRC12_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC12_EN_BSET_MASK (0x00001000)
#define ITM_FW_EVENT1_EN_BSET_SRC13_EN_BSET_OFFSET (0x0000000d)
#define ITM_FW_EVENT1_EN_BSET_SRC13_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC13_EN_BSET_MASK (0x00002000)
#define ITM_FW_EVENT1_EN_BSET_SRC14_EN_BSET_OFFSET (0x0000000e)
#define ITM_FW_EVENT1_EN_BSET_SRC14_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC14_EN_BSET_MASK (0x00004000)
#define ITM_FW_EVENT1_EN_BSET_SRC15_EN_BSET_OFFSET (0x0000000f)
#define ITM_FW_EVENT1_EN_BSET_SRC15_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC15_EN_BSET_MASK (0x00008000)
#define ITM_FW_EVENT1_EN_BSET_SRC16_EN_BSET_OFFSET (0x00000010)
#define ITM_FW_EVENT1_EN_BSET_SRC16_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC16_EN_BSET_MASK (0x00010000)
#define ITM_FW_EVENT1_EN_BSET_SRC17_EN_BSET_OFFSET (0x00000011)
#define ITM_FW_EVENT1_EN_BSET_SRC17_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC17_EN_BSET_MASK (0x00020000)
#define ITM_FW_EVENT1_EN_BSET_SRC18_EN_BSET_OFFSET (0x00000012)
#define ITM_FW_EVENT1_EN_BSET_SRC18_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC18_EN_BSET_MASK (0x00040000)
#define ITM_FW_EVENT1_EN_BSET_SRC19_EN_BSET_OFFSET (0x00000013)
#define ITM_FW_EVENT1_EN_BSET_SRC19_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC19_EN_BSET_MASK (0x00080000)
#define ITM_FW_EVENT1_EN_BSET_SRC20_EN_BSET_OFFSET (0x00000014)
#define ITM_FW_EVENT1_EN_BSET_SRC20_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC20_EN_BSET_MASK (0x00100000)
#define ITM_FW_EVENT1_EN_BSET_SRC21_EN_BSET_OFFSET (0x00000015)
#define ITM_FW_EVENT1_EN_BSET_SRC21_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC21_EN_BSET_MASK (0x00200000)
#define ITM_FW_EVENT1_EN_BSET_SRC22_EN_BSET_OFFSET (0x00000016)
#define ITM_FW_EVENT1_EN_BSET_SRC22_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC22_EN_BSET_MASK (0x00400000)
#define ITM_FW_EVENT1_EN_BSET_SRC23_EN_BSET_OFFSET (0x00000017)
#define ITM_FW_EVENT1_EN_BSET_SRC23_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC23_EN_BSET_MASK (0x00800000)
#define ITM_FW_EVENT1_EN_BSET_SRC24_EN_BSET_OFFSET (0x00000018)
#define ITM_FW_EVENT1_EN_BSET_SRC24_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC24_EN_BSET_MASK (0x01000000)
#define ITM_FW_EVENT1_EN_BSET_SRC25_EN_BSET_OFFSET (0x00000019)
#define ITM_FW_EVENT1_EN_BSET_SRC25_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC25_EN_BSET_MASK (0x02000000)
#define ITM_FW_EVENT1_EN_BSET_SRC26_EN_BSET_OFFSET (0x0000001a)
#define ITM_FW_EVENT1_EN_BSET_SRC26_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC26_EN_BSET_MASK (0x04000000)
#define ITM_FW_EVENT1_EN_BSET_SRC27_EN_BSET_OFFSET (0x0000001b)
#define ITM_FW_EVENT1_EN_BSET_SRC27_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC27_EN_BSET_MASK (0x08000000)
#define ITM_FW_EVENT1_EN_BSET_SRC28_EN_BSET_OFFSET (0x0000001c)
#define ITM_FW_EVENT1_EN_BSET_SRC28_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC28_EN_BSET_MASK (0x10000000)
#define ITM_FW_EVENT1_EN_BSET_SRC29_EN_BSET_OFFSET (0x0000001d)
#define ITM_FW_EVENT1_EN_BSET_SRC29_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC29_EN_BSET_MASK (0x20000000)
#define ITM_FW_EVENT1_EN_BSET_SRC30_EN_BSET_OFFSET (0x0000001e)
#define ITM_FW_EVENT1_EN_BSET_SRC30_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC30_EN_BSET_MASK (0x40000000)
#define ITM_FW_EVENT1_EN_BSET_SRC31_EN_BSET_OFFSET (0x0000001f)
#define ITM_FW_EVENT1_EN_BSET_SRC31_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT1_EN_BSET_SRC31_EN_BSET_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT2_STATUS
*/

#define ITM_FW_EVENT2_STATUS_SIZE           (32)
#define ITM_FW_EVENT2_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x18)
#define ITM_FW_EVENT2_STATUS_RESET_VALUE    (0x00000000)
#define ITM_FW_EVENT2_STATUS_BITFIELD_MASK  (0xFFFFFFFF)
#define ITM_FW_EVENT2_STATUS_RWMASK         (0x00000000)
#define ITM_FW_EVENT2_STATUS_ROMASK         (0xFFFFFFFF)
#define ITM_FW_EVENT2_STATUS_WOMASK         (0x00000000)
#define ITM_FW_EVENT2_STATUS_UNUSED_MASK    (0x00000000)
#define ITM_FW_EVENT2_STATUS_SRC0_STATUS_OFFSET (0x00000000)
#define ITM_FW_EVENT2_STATUS_SRC0_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC0_STATUS_MASK (0x00000001)
#define ITM_FW_EVENT2_STATUS_SRC1_STATUS_OFFSET (0x00000001)
#define ITM_FW_EVENT2_STATUS_SRC1_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC1_STATUS_MASK (0x00000002)
#define ITM_FW_EVENT2_STATUS_SRC2_STATUS_OFFSET (0x00000002)
#define ITM_FW_EVENT2_STATUS_SRC2_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC2_STATUS_MASK (0x00000004)
#define ITM_FW_EVENT2_STATUS_SRC3_STATUS_OFFSET (0x00000003)
#define ITM_FW_EVENT2_STATUS_SRC3_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC3_STATUS_MASK (0x00000008)
#define ITM_FW_EVENT2_STATUS_SRC4_STATUS_OFFSET (0x00000004)
#define ITM_FW_EVENT2_STATUS_SRC4_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC4_STATUS_MASK (0x00000010)
#define ITM_FW_EVENT2_STATUS_SRC5_STATUS_OFFSET (0x00000005)
#define ITM_FW_EVENT2_STATUS_SRC5_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC5_STATUS_MASK (0x00000020)
#define ITM_FW_EVENT2_STATUS_SRC6_STATUS_OFFSET (0x00000006)
#define ITM_FW_EVENT2_STATUS_SRC6_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC6_STATUS_MASK (0x00000040)
#define ITM_FW_EVENT2_STATUS_SRC7_STATUS_OFFSET (0x00000007)
#define ITM_FW_EVENT2_STATUS_SRC7_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC7_STATUS_MASK (0x00000080)
#define ITM_FW_EVENT2_STATUS_SRC8_STATUS_OFFSET (0x00000008)
#define ITM_FW_EVENT2_STATUS_SRC8_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC8_STATUS_MASK (0x00000100)
#define ITM_FW_EVENT2_STATUS_SRC9_STATUS_OFFSET (0x00000009)
#define ITM_FW_EVENT2_STATUS_SRC9_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC9_STATUS_MASK (0x00000200)
#define ITM_FW_EVENT2_STATUS_SRC10_STATUS_OFFSET (0x0000000a)
#define ITM_FW_EVENT2_STATUS_SRC10_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC10_STATUS_MASK (0x00000400)
#define ITM_FW_EVENT2_STATUS_SRC11_STATUS_OFFSET (0x0000000b)
#define ITM_FW_EVENT2_STATUS_SRC11_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC11_STATUS_MASK (0x00000800)
#define ITM_FW_EVENT2_STATUS_SRC12_STATUS_OFFSET (0x0000000c)
#define ITM_FW_EVENT2_STATUS_SRC12_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC12_STATUS_MASK (0x00001000)
#define ITM_FW_EVENT2_STATUS_SRC13_STATUS_OFFSET (0x0000000d)
#define ITM_FW_EVENT2_STATUS_SRC13_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC13_STATUS_MASK (0x00002000)
#define ITM_FW_EVENT2_STATUS_SRC14_STATUS_OFFSET (0x0000000e)
#define ITM_FW_EVENT2_STATUS_SRC14_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC14_STATUS_MASK (0x00004000)
#define ITM_FW_EVENT2_STATUS_SRC15_STATUS_OFFSET (0x0000000f)
#define ITM_FW_EVENT2_STATUS_SRC15_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC15_STATUS_MASK (0x00008000)
#define ITM_FW_EVENT2_STATUS_SRC16_STATUS_OFFSET (0x00000010)
#define ITM_FW_EVENT2_STATUS_SRC16_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC16_STATUS_MASK (0x00010000)
#define ITM_FW_EVENT2_STATUS_SRC17_STATUS_OFFSET (0x00000011)
#define ITM_FW_EVENT2_STATUS_SRC17_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC17_STATUS_MASK (0x00020000)
#define ITM_FW_EVENT2_STATUS_SRC18_STATUS_OFFSET (0x00000012)
#define ITM_FW_EVENT2_STATUS_SRC18_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC18_STATUS_MASK (0x00040000)
#define ITM_FW_EVENT2_STATUS_SRC19_STATUS_OFFSET (0x00000013)
#define ITM_FW_EVENT2_STATUS_SRC19_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC19_STATUS_MASK (0x00080000)
#define ITM_FW_EVENT2_STATUS_SRC20_STATUS_OFFSET (0x00000014)
#define ITM_FW_EVENT2_STATUS_SRC20_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC20_STATUS_MASK (0x00100000)
#define ITM_FW_EVENT2_STATUS_SRC21_STATUS_OFFSET (0x00000015)
#define ITM_FW_EVENT2_STATUS_SRC21_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC21_STATUS_MASK (0x00200000)
#define ITM_FW_EVENT2_STATUS_SRC22_STATUS_OFFSET (0x00000016)
#define ITM_FW_EVENT2_STATUS_SRC22_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC22_STATUS_MASK (0x00400000)
#define ITM_FW_EVENT2_STATUS_SRC23_STATUS_OFFSET (0x00000017)
#define ITM_FW_EVENT2_STATUS_SRC23_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC23_STATUS_MASK (0x00800000)
#define ITM_FW_EVENT2_STATUS_SRC24_STATUS_OFFSET (0x00000018)
#define ITM_FW_EVENT2_STATUS_SRC24_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC24_STATUS_MASK (0x01000000)
#define ITM_FW_EVENT2_STATUS_SRC25_STATUS_OFFSET (0x00000019)
#define ITM_FW_EVENT2_STATUS_SRC25_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC25_STATUS_MASK (0x02000000)
#define ITM_FW_EVENT2_STATUS_SRC26_STATUS_OFFSET (0x0000001a)
#define ITM_FW_EVENT2_STATUS_SRC26_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC26_STATUS_MASK (0x04000000)
#define ITM_FW_EVENT2_STATUS_SRC27_STATUS_OFFSET (0x0000001b)
#define ITM_FW_EVENT2_STATUS_SRC27_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC27_STATUS_MASK (0x08000000)
#define ITM_FW_EVENT2_STATUS_SRC28_STATUS_OFFSET (0x0000001c)
#define ITM_FW_EVENT2_STATUS_SRC28_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC28_STATUS_MASK (0x10000000)
#define ITM_FW_EVENT2_STATUS_SRC29_STATUS_OFFSET (0x0000001d)
#define ITM_FW_EVENT2_STATUS_SRC29_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC29_STATUS_MASK (0x20000000)
#define ITM_FW_EVENT2_STATUS_SRC30_STATUS_OFFSET (0x0000001e)
#define ITM_FW_EVENT2_STATUS_SRC30_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC30_STATUS_MASK (0x40000000)
#define ITM_FW_EVENT2_STATUS_SRC31_STATUS_OFFSET (0x0000001f)
#define ITM_FW_EVENT2_STATUS_SRC31_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_SRC31_STATUS_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT2_EN_STATUS
*/

#define ITM_FW_EVENT2_EN_STATUS_SIZE        (32)
#define ITM_FW_EVENT2_EN_STATUS_OFFSET      (pictorv2_in_ITM_BASE_ADDR + 0x1a)
#define ITM_FW_EVENT2_EN_STATUS_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT2_EN_STATUS_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT2_EN_STATUS_RWMASK      (0x00000000)
#define ITM_FW_EVENT2_EN_STATUS_ROMASK      (0xFFFFFFFF)
#define ITM_FW_EVENT2_EN_STATUS_WOMASK      (0x00000000)
#define ITM_FW_EVENT2_EN_STATUS_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC0_EN_STATUS_OFFSET (0x00000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC0_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC0_EN_STATUS_MASK (0x00000001)
#define ITM_FW_EVENT2_EN_STATUS_SRC1_EN_STATUS_OFFSET (0x00000001)
#define ITM_FW_EVENT2_EN_STATUS_SRC1_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC1_EN_STATUS_MASK (0x00000002)
#define ITM_FW_EVENT2_EN_STATUS_SRC2_EN_STATUS_OFFSET (0x00000002)
#define ITM_FW_EVENT2_EN_STATUS_SRC2_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC2_EN_STATUS_MASK (0x00000004)
#define ITM_FW_EVENT2_EN_STATUS_SRC3_EN_STATUS_OFFSET (0x00000003)
#define ITM_FW_EVENT2_EN_STATUS_SRC3_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC3_EN_STATUS_MASK (0x00000008)
#define ITM_FW_EVENT2_EN_STATUS_SRC4_EN_STATUS_OFFSET (0x00000004)
#define ITM_FW_EVENT2_EN_STATUS_SRC4_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC4_EN_STATUS_MASK (0x00000010)
#define ITM_FW_EVENT2_EN_STATUS_SRC5_EN_STATUS_OFFSET (0x00000005)
#define ITM_FW_EVENT2_EN_STATUS_SRC5_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC5_EN_STATUS_MASK (0x00000020)
#define ITM_FW_EVENT2_EN_STATUS_SRC6_EN_STATUS_OFFSET (0x00000006)
#define ITM_FW_EVENT2_EN_STATUS_SRC6_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC6_EN_STATUS_MASK (0x00000040)
#define ITM_FW_EVENT2_EN_STATUS_SRC7_EN_STATUS_OFFSET (0x00000007)
#define ITM_FW_EVENT2_EN_STATUS_SRC7_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC7_EN_STATUS_MASK (0x00000080)
#define ITM_FW_EVENT2_EN_STATUS_SRC8_EN_STATUS_OFFSET (0x00000008)
#define ITM_FW_EVENT2_EN_STATUS_SRC8_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC8_EN_STATUS_MASK (0x00000100)
#define ITM_FW_EVENT2_EN_STATUS_SRC9_EN_STATUS_OFFSET (0x00000009)
#define ITM_FW_EVENT2_EN_STATUS_SRC9_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC9_EN_STATUS_MASK (0x00000200)
#define ITM_FW_EVENT2_EN_STATUS_SRC10_EN_STATUS_OFFSET (0x0000000a)
#define ITM_FW_EVENT2_EN_STATUS_SRC10_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC10_EN_STATUS_MASK (0x00000400)
#define ITM_FW_EVENT2_EN_STATUS_SRC11_EN_STATUS_OFFSET (0x0000000b)
#define ITM_FW_EVENT2_EN_STATUS_SRC11_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC11_EN_STATUS_MASK (0x00000800)
#define ITM_FW_EVENT2_EN_STATUS_SRC12_EN_STATUS_OFFSET (0x0000000c)
#define ITM_FW_EVENT2_EN_STATUS_SRC12_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC12_EN_STATUS_MASK (0x00001000)
#define ITM_FW_EVENT2_EN_STATUS_SRC13_EN_STATUS_OFFSET (0x0000000d)
#define ITM_FW_EVENT2_EN_STATUS_SRC13_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC13_EN_STATUS_MASK (0x00002000)
#define ITM_FW_EVENT2_EN_STATUS_SRC14_EN_STATUS_OFFSET (0x0000000e)
#define ITM_FW_EVENT2_EN_STATUS_SRC14_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC14_EN_STATUS_MASK (0x00004000)
#define ITM_FW_EVENT2_EN_STATUS_SRC15_EN_STATUS_OFFSET (0x0000000f)
#define ITM_FW_EVENT2_EN_STATUS_SRC15_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC15_EN_STATUS_MASK (0x00008000)
#define ITM_FW_EVENT2_EN_STATUS_SRC16_EN_STATUS_OFFSET (0x00000010)
#define ITM_FW_EVENT2_EN_STATUS_SRC16_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC16_EN_STATUS_MASK (0x00010000)
#define ITM_FW_EVENT2_EN_STATUS_SRC17_EN_STATUS_OFFSET (0x00000011)
#define ITM_FW_EVENT2_EN_STATUS_SRC17_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC17_EN_STATUS_MASK (0x00020000)
#define ITM_FW_EVENT2_EN_STATUS_SRC18_EN_STATUS_OFFSET (0x00000012)
#define ITM_FW_EVENT2_EN_STATUS_SRC18_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC18_EN_STATUS_MASK (0x00040000)
#define ITM_FW_EVENT2_EN_STATUS_SRC19_EN_STATUS_OFFSET (0x00000013)
#define ITM_FW_EVENT2_EN_STATUS_SRC19_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC19_EN_STATUS_MASK (0x00080000)
#define ITM_FW_EVENT2_EN_STATUS_SRC20_EN_STATUS_OFFSET (0x00000014)
#define ITM_FW_EVENT2_EN_STATUS_SRC20_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC20_EN_STATUS_MASK (0x00100000)
#define ITM_FW_EVENT2_EN_STATUS_SRC21_EN_STATUS_OFFSET (0x00000015)
#define ITM_FW_EVENT2_EN_STATUS_SRC21_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC21_EN_STATUS_MASK (0x00200000)
#define ITM_FW_EVENT2_EN_STATUS_SRC22_EN_STATUS_OFFSET (0x00000016)
#define ITM_FW_EVENT2_EN_STATUS_SRC22_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC22_EN_STATUS_MASK (0x00400000)
#define ITM_FW_EVENT2_EN_STATUS_SRC23_EN_STATUS_OFFSET (0x00000017)
#define ITM_FW_EVENT2_EN_STATUS_SRC23_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC23_EN_STATUS_MASK (0x00800000)
#define ITM_FW_EVENT2_EN_STATUS_SRC24_EN_STATUS_OFFSET (0x00000018)
#define ITM_FW_EVENT2_EN_STATUS_SRC24_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC24_EN_STATUS_MASK (0x01000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC25_EN_STATUS_OFFSET (0x00000019)
#define ITM_FW_EVENT2_EN_STATUS_SRC25_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC25_EN_STATUS_MASK (0x02000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC26_EN_STATUS_OFFSET (0x0000001a)
#define ITM_FW_EVENT2_EN_STATUS_SRC26_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC26_EN_STATUS_MASK (0x04000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC27_EN_STATUS_OFFSET (0x0000001b)
#define ITM_FW_EVENT2_EN_STATUS_SRC27_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC27_EN_STATUS_MASK (0x08000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC28_EN_STATUS_OFFSET (0x0000001c)
#define ITM_FW_EVENT2_EN_STATUS_SRC28_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC28_EN_STATUS_MASK (0x10000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC29_EN_STATUS_OFFSET (0x0000001d)
#define ITM_FW_EVENT2_EN_STATUS_SRC29_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC29_EN_STATUS_MASK (0x20000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC30_EN_STATUS_OFFSET (0x0000001e)
#define ITM_FW_EVENT2_EN_STATUS_SRC30_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC30_EN_STATUS_MASK (0x40000000)
#define ITM_FW_EVENT2_EN_STATUS_SRC31_EN_STATUS_OFFSET (0x0000001f)
#define ITM_FW_EVENT2_EN_STATUS_SRC31_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT2_EN_STATUS_SRC31_EN_STATUS_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT2_STATUS_BCLR
*/

#define ITM_FW_EVENT2_STATUS_BCLR_SIZE      (32)
#define ITM_FW_EVENT2_STATUS_BCLR_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x1c)
#define ITM_FW_EVENT2_STATUS_BCLR_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT2_STATUS_BCLR_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT2_STATUS_BCLR_RWMASK    (0x00000000)
#define ITM_FW_EVENT2_STATUS_BCLR_ROMASK    (0x00000000)
#define ITM_FW_EVENT2_STATUS_BCLR_WOMASK    (0xFFFFFFFF)
#define ITM_FW_EVENT2_STATUS_BCLR_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC0_STATUS_BCLR_OFFSET (0x00000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC0_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC0_STATUS_BCLR_MASK (0x00000001)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC1_STATUS_BCLR_OFFSET (0x00000001)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC1_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC1_STATUS_BCLR_MASK (0x00000002)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC2_STATUS_BCLR_OFFSET (0x00000002)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC2_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC2_STATUS_BCLR_MASK (0x00000004)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC3_STATUS_BCLR_OFFSET (0x00000003)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC3_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC3_STATUS_BCLR_MASK (0x00000008)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC4_STATUS_BCLR_OFFSET (0x00000004)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC4_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC4_STATUS_BCLR_MASK (0x00000010)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC5_STATUS_BCLR_OFFSET (0x00000005)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC5_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC5_STATUS_BCLR_MASK (0x00000020)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC6_STATUS_BCLR_OFFSET (0x00000006)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC6_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC6_STATUS_BCLR_MASK (0x00000040)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC7_STATUS_BCLR_OFFSET (0x00000007)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC7_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC7_STATUS_BCLR_MASK (0x00000080)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC8_STATUS_BCLR_OFFSET (0x00000008)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC8_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC8_STATUS_BCLR_MASK (0x00000100)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC9_STATUS_BCLR_OFFSET (0x00000009)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC9_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC9_STATUS_BCLR_MASK (0x00000200)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC10_STATUS_BCLR_OFFSET (0x0000000a)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC10_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC10_STATUS_BCLR_MASK (0x00000400)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC11_STATUS_BCLR_OFFSET (0x0000000b)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC11_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC11_STATUS_BCLR_MASK (0x00000800)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC12_STATUS_BCLR_OFFSET (0x0000000c)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC12_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC12_STATUS_BCLR_MASK (0x00001000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC13_STATUS_BCLR_OFFSET (0x0000000d)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC13_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC13_STATUS_BCLR_MASK (0x00002000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC14_STATUS_BCLR_OFFSET (0x0000000e)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC14_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC14_STATUS_BCLR_MASK (0x00004000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC15_STATUS_BCLR_OFFSET (0x0000000f)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC15_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC15_STATUS_BCLR_MASK (0x00008000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC16_STATUS_BCLR_OFFSET (0x00000010)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC16_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC16_STATUS_BCLR_MASK (0x00010000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC17_STATUS_BCLR_OFFSET (0x00000011)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC17_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC17_STATUS_BCLR_MASK (0x00020000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC18_STATUS_BCLR_OFFSET (0x00000012)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC18_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC18_STATUS_BCLR_MASK (0x00040000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC19_STATUS_BCLR_OFFSET (0x00000013)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC19_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC19_STATUS_BCLR_MASK (0x00080000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC20_STATUS_BCLR_OFFSET (0x00000014)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC20_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC20_STATUS_BCLR_MASK (0x00100000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC21_STATUS_BCLR_OFFSET (0x00000015)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC21_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC21_STATUS_BCLR_MASK (0x00200000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC22_STATUS_BCLR_OFFSET (0x00000016)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC22_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC22_STATUS_BCLR_MASK (0x00400000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC23_STATUS_BCLR_OFFSET (0x00000017)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC23_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC23_STATUS_BCLR_MASK (0x00800000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC24_STATUS_BCLR_OFFSET (0x00000018)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC24_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC24_STATUS_BCLR_MASK (0x01000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC25_STATUS_BCLR_OFFSET (0x00000019)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC25_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC25_STATUS_BCLR_MASK (0x02000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC26_STATUS_BCLR_OFFSET (0x0000001a)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC26_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC26_STATUS_BCLR_MASK (0x04000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC27_STATUS_BCLR_OFFSET (0x0000001b)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC27_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC27_STATUS_BCLR_MASK (0x08000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC28_STATUS_BCLR_OFFSET (0x0000001c)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC28_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC28_STATUS_BCLR_MASK (0x10000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC29_STATUS_BCLR_OFFSET (0x0000001d)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC29_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC29_STATUS_BCLR_MASK (0x20000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC30_STATUS_BCLR_OFFSET (0x0000001e)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC30_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC30_STATUS_BCLR_MASK (0x40000000)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC31_STATUS_BCLR_OFFSET (0x0000001f)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC31_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BCLR_SRC31_STATUS_BCLR_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT2_STATUS_BSET
*/

#define ITM_FW_EVENT2_STATUS_BSET_SIZE      (32)
#define ITM_FW_EVENT2_STATUS_BSET_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x1e)
#define ITM_FW_EVENT2_STATUS_BSET_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT2_STATUS_BSET_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT2_STATUS_BSET_RWMASK    (0x00000000)
#define ITM_FW_EVENT2_STATUS_BSET_ROMASK    (0x00000000)
#define ITM_FW_EVENT2_STATUS_BSET_WOMASK    (0xFFFFFFFF)
#define ITM_FW_EVENT2_STATUS_BSET_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC0_STATUS_BSET_OFFSET (0x00000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC0_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC0_STATUS_BSET_MASK (0x00000001)
#define ITM_FW_EVENT2_STATUS_BSET_SRC1_STATUS_BSET_OFFSET (0x00000001)
#define ITM_FW_EVENT2_STATUS_BSET_SRC1_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC1_STATUS_BSET_MASK (0x00000002)
#define ITM_FW_EVENT2_STATUS_BSET_SRC2_STATUS_BSET_OFFSET (0x00000002)
#define ITM_FW_EVENT2_STATUS_BSET_SRC2_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC2_STATUS_BSET_MASK (0x00000004)
#define ITM_FW_EVENT2_STATUS_BSET_SRC3_STATUS_BSET_OFFSET (0x00000003)
#define ITM_FW_EVENT2_STATUS_BSET_SRC3_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC3_STATUS_BSET_MASK (0x00000008)
#define ITM_FW_EVENT2_STATUS_BSET_SRC4_STATUS_BSET_OFFSET (0x00000004)
#define ITM_FW_EVENT2_STATUS_BSET_SRC4_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC4_STATUS_BSET_MASK (0x00000010)
#define ITM_FW_EVENT2_STATUS_BSET_SRC5_STATUS_BSET_OFFSET (0x00000005)
#define ITM_FW_EVENT2_STATUS_BSET_SRC5_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC5_STATUS_BSET_MASK (0x00000020)
#define ITM_FW_EVENT2_STATUS_BSET_SRC6_STATUS_BSET_OFFSET (0x00000006)
#define ITM_FW_EVENT2_STATUS_BSET_SRC6_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC6_STATUS_BSET_MASK (0x00000040)
#define ITM_FW_EVENT2_STATUS_BSET_SRC7_STATUS_BSET_OFFSET (0x00000007)
#define ITM_FW_EVENT2_STATUS_BSET_SRC7_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC7_STATUS_BSET_MASK (0x00000080)
#define ITM_FW_EVENT2_STATUS_BSET_SRC8_STATUS_BSET_OFFSET (0x00000008)
#define ITM_FW_EVENT2_STATUS_BSET_SRC8_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC8_STATUS_BSET_MASK (0x00000100)
#define ITM_FW_EVENT2_STATUS_BSET_SRC9_STATUS_BSET_OFFSET (0x00000009)
#define ITM_FW_EVENT2_STATUS_BSET_SRC9_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC9_STATUS_BSET_MASK (0x00000200)
#define ITM_FW_EVENT2_STATUS_BSET_SRC10_STATUS_BSET_OFFSET (0x0000000a)
#define ITM_FW_EVENT2_STATUS_BSET_SRC10_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC10_STATUS_BSET_MASK (0x00000400)
#define ITM_FW_EVENT2_STATUS_BSET_SRC11_STATUS_BSET_OFFSET (0x0000000b)
#define ITM_FW_EVENT2_STATUS_BSET_SRC11_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC11_STATUS_BSET_MASK (0x00000800)
#define ITM_FW_EVENT2_STATUS_BSET_SRC12_STATUS_BSET_OFFSET (0x0000000c)
#define ITM_FW_EVENT2_STATUS_BSET_SRC12_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC12_STATUS_BSET_MASK (0x00001000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC13_STATUS_BSET_OFFSET (0x0000000d)
#define ITM_FW_EVENT2_STATUS_BSET_SRC13_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC13_STATUS_BSET_MASK (0x00002000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC14_STATUS_BSET_OFFSET (0x0000000e)
#define ITM_FW_EVENT2_STATUS_BSET_SRC14_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC14_STATUS_BSET_MASK (0x00004000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC15_STATUS_BSET_OFFSET (0x0000000f)
#define ITM_FW_EVENT2_STATUS_BSET_SRC15_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC15_STATUS_BSET_MASK (0x00008000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC16_STATUS_BSET_OFFSET (0x00000010)
#define ITM_FW_EVENT2_STATUS_BSET_SRC16_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC16_STATUS_BSET_MASK (0x00010000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC17_STATUS_BSET_OFFSET (0x00000011)
#define ITM_FW_EVENT2_STATUS_BSET_SRC17_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC17_STATUS_BSET_MASK (0x00020000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC18_STATUS_BSET_OFFSET (0x00000012)
#define ITM_FW_EVENT2_STATUS_BSET_SRC18_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC18_STATUS_BSET_MASK (0x00040000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC19_STATUS_BSET_OFFSET (0x00000013)
#define ITM_FW_EVENT2_STATUS_BSET_SRC19_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC19_STATUS_BSET_MASK (0x00080000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC20_STATUS_BSET_OFFSET (0x00000014)
#define ITM_FW_EVENT2_STATUS_BSET_SRC20_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC20_STATUS_BSET_MASK (0x00100000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC21_STATUS_BSET_OFFSET (0x00000015)
#define ITM_FW_EVENT2_STATUS_BSET_SRC21_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC21_STATUS_BSET_MASK (0x00200000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC22_STATUS_BSET_OFFSET (0x00000016)
#define ITM_FW_EVENT2_STATUS_BSET_SRC22_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC22_STATUS_BSET_MASK (0x00400000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC23_STATUS_BSET_OFFSET (0x00000017)
#define ITM_FW_EVENT2_STATUS_BSET_SRC23_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC23_STATUS_BSET_MASK (0x00800000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC24_STATUS_BSET_OFFSET (0x00000018)
#define ITM_FW_EVENT2_STATUS_BSET_SRC24_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC24_STATUS_BSET_MASK (0x01000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC25_STATUS_BSET_OFFSET (0x00000019)
#define ITM_FW_EVENT2_STATUS_BSET_SRC25_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC25_STATUS_BSET_MASK (0x02000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC26_STATUS_BSET_OFFSET (0x0000001a)
#define ITM_FW_EVENT2_STATUS_BSET_SRC26_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC26_STATUS_BSET_MASK (0x04000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC27_STATUS_BSET_OFFSET (0x0000001b)
#define ITM_FW_EVENT2_STATUS_BSET_SRC27_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC27_STATUS_BSET_MASK (0x08000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC28_STATUS_BSET_OFFSET (0x0000001c)
#define ITM_FW_EVENT2_STATUS_BSET_SRC28_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC28_STATUS_BSET_MASK (0x10000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC29_STATUS_BSET_OFFSET (0x0000001d)
#define ITM_FW_EVENT2_STATUS_BSET_SRC29_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC29_STATUS_BSET_MASK (0x20000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC30_STATUS_BSET_OFFSET (0x0000001e)
#define ITM_FW_EVENT2_STATUS_BSET_SRC30_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC30_STATUS_BSET_MASK (0x40000000)
#define ITM_FW_EVENT2_STATUS_BSET_SRC31_STATUS_BSET_OFFSET (0x0000001f)
#define ITM_FW_EVENT2_STATUS_BSET_SRC31_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT2_STATUS_BSET_SRC31_STATUS_BSET_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT2_EN_BCLR
*/

#define ITM_FW_EVENT2_EN_BCLR_SIZE          (32)
#define ITM_FW_EVENT2_EN_BCLR_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x20)
#define ITM_FW_EVENT2_EN_BCLR_RESET_VALUE   (0x00000000)
#define ITM_FW_EVENT2_EN_BCLR_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT2_EN_BCLR_RWMASK        (0x00000000)
#define ITM_FW_EVENT2_EN_BCLR_ROMASK        (0x00000000)
#define ITM_FW_EVENT2_EN_BCLR_WOMASK        (0xFFFFFFFF)
#define ITM_FW_EVENT2_EN_BCLR_UNUSED_MASK   (0x00000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC0_EN_BCLR_OFFSET (0x00000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC0_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC0_EN_BCLR_MASK (0x00000001)
#define ITM_FW_EVENT2_EN_BCLR_SRC1_EN_BCLR_OFFSET (0x00000001)
#define ITM_FW_EVENT2_EN_BCLR_SRC1_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC1_EN_BCLR_MASK (0x00000002)
#define ITM_FW_EVENT2_EN_BCLR_SRC2_EN_BCLR_OFFSET (0x00000002)
#define ITM_FW_EVENT2_EN_BCLR_SRC2_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC2_EN_BCLR_MASK (0x00000004)
#define ITM_FW_EVENT2_EN_BCLR_SRC3_EN_BCLR_OFFSET (0x00000003)
#define ITM_FW_EVENT2_EN_BCLR_SRC3_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC3_EN_BCLR_MASK (0x00000008)
#define ITM_FW_EVENT2_EN_BCLR_SRC4_EN_BCLR_OFFSET (0x00000004)
#define ITM_FW_EVENT2_EN_BCLR_SRC4_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC4_EN_BCLR_MASK (0x00000010)
#define ITM_FW_EVENT2_EN_BCLR_SRC5_EN_BCLR_OFFSET (0x00000005)
#define ITM_FW_EVENT2_EN_BCLR_SRC5_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC5_EN_BCLR_MASK (0x00000020)
#define ITM_FW_EVENT2_EN_BCLR_SRC6_EN_BCLR_OFFSET (0x00000006)
#define ITM_FW_EVENT2_EN_BCLR_SRC6_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC6_EN_BCLR_MASK (0x00000040)
#define ITM_FW_EVENT2_EN_BCLR_SRC7_EN_BCLR_OFFSET (0x00000007)
#define ITM_FW_EVENT2_EN_BCLR_SRC7_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC7_EN_BCLR_MASK (0x00000080)
#define ITM_FW_EVENT2_EN_BCLR_SRC8_EN_BCLR_OFFSET (0x00000008)
#define ITM_FW_EVENT2_EN_BCLR_SRC8_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC8_EN_BCLR_MASK (0x00000100)
#define ITM_FW_EVENT2_EN_BCLR_SRC9_EN_BCLR_OFFSET (0x00000009)
#define ITM_FW_EVENT2_EN_BCLR_SRC9_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC9_EN_BCLR_MASK (0x00000200)
#define ITM_FW_EVENT2_EN_BCLR_SRC10_EN_BCLR_OFFSET (0x0000000a)
#define ITM_FW_EVENT2_EN_BCLR_SRC10_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC10_EN_BCLR_MASK (0x00000400)
#define ITM_FW_EVENT2_EN_BCLR_SRC11_EN_BCLR_OFFSET (0x0000000b)
#define ITM_FW_EVENT2_EN_BCLR_SRC11_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC11_EN_BCLR_MASK (0x00000800)
#define ITM_FW_EVENT2_EN_BCLR_SRC12_EN_BCLR_OFFSET (0x0000000c)
#define ITM_FW_EVENT2_EN_BCLR_SRC12_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC12_EN_BCLR_MASK (0x00001000)
#define ITM_FW_EVENT2_EN_BCLR_SRC13_EN_BCLR_OFFSET (0x0000000d)
#define ITM_FW_EVENT2_EN_BCLR_SRC13_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC13_EN_BCLR_MASK (0x00002000)
#define ITM_FW_EVENT2_EN_BCLR_SRC14_EN_BCLR_OFFSET (0x0000000e)
#define ITM_FW_EVENT2_EN_BCLR_SRC14_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC14_EN_BCLR_MASK (0x00004000)
#define ITM_FW_EVENT2_EN_BCLR_SRC15_EN_BCLR_OFFSET (0x0000000f)
#define ITM_FW_EVENT2_EN_BCLR_SRC15_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC15_EN_BCLR_MASK (0x00008000)
#define ITM_FW_EVENT2_EN_BCLR_SRC16_EN_BCLR_OFFSET (0x00000010)
#define ITM_FW_EVENT2_EN_BCLR_SRC16_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC16_EN_BCLR_MASK (0x00010000)
#define ITM_FW_EVENT2_EN_BCLR_SRC17_EN_BCLR_OFFSET (0x00000011)
#define ITM_FW_EVENT2_EN_BCLR_SRC17_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC17_EN_BCLR_MASK (0x00020000)
#define ITM_FW_EVENT2_EN_BCLR_SRC18_EN_BCLR_OFFSET (0x00000012)
#define ITM_FW_EVENT2_EN_BCLR_SRC18_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC18_EN_BCLR_MASK (0x00040000)
#define ITM_FW_EVENT2_EN_BCLR_SRC19_EN_BCLR_OFFSET (0x00000013)
#define ITM_FW_EVENT2_EN_BCLR_SRC19_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC19_EN_BCLR_MASK (0x00080000)
#define ITM_FW_EVENT2_EN_BCLR_SRC20_EN_BCLR_OFFSET (0x00000014)
#define ITM_FW_EVENT2_EN_BCLR_SRC20_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC20_EN_BCLR_MASK (0x00100000)
#define ITM_FW_EVENT2_EN_BCLR_SRC21_EN_BCLR_OFFSET (0x00000015)
#define ITM_FW_EVENT2_EN_BCLR_SRC21_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC21_EN_BCLR_MASK (0x00200000)
#define ITM_FW_EVENT2_EN_BCLR_SRC22_EN_BCLR_OFFSET (0x00000016)
#define ITM_FW_EVENT2_EN_BCLR_SRC22_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC22_EN_BCLR_MASK (0x00400000)
#define ITM_FW_EVENT2_EN_BCLR_SRC23_EN_BCLR_OFFSET (0x00000017)
#define ITM_FW_EVENT2_EN_BCLR_SRC23_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC23_EN_BCLR_MASK (0x00800000)
#define ITM_FW_EVENT2_EN_BCLR_SRC24_EN_BCLR_OFFSET (0x00000018)
#define ITM_FW_EVENT2_EN_BCLR_SRC24_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC24_EN_BCLR_MASK (0x01000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC25_EN_BCLR_OFFSET (0x00000019)
#define ITM_FW_EVENT2_EN_BCLR_SRC25_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC25_EN_BCLR_MASK (0x02000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC26_EN_BCLR_OFFSET (0x0000001a)
#define ITM_FW_EVENT2_EN_BCLR_SRC26_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC26_EN_BCLR_MASK (0x04000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC27_EN_BCLR_OFFSET (0x0000001b)
#define ITM_FW_EVENT2_EN_BCLR_SRC27_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC27_EN_BCLR_MASK (0x08000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC28_EN_BCLR_OFFSET (0x0000001c)
#define ITM_FW_EVENT2_EN_BCLR_SRC28_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC28_EN_BCLR_MASK (0x10000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC29_EN_BCLR_OFFSET (0x0000001d)
#define ITM_FW_EVENT2_EN_BCLR_SRC29_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC29_EN_BCLR_MASK (0x20000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC30_EN_BCLR_OFFSET (0x0000001e)
#define ITM_FW_EVENT2_EN_BCLR_SRC30_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC30_EN_BCLR_MASK (0x40000000)
#define ITM_FW_EVENT2_EN_BCLR_SRC31_EN_BCLR_OFFSET (0x0000001f)
#define ITM_FW_EVENT2_EN_BCLR_SRC31_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT2_EN_BCLR_SRC31_EN_BCLR_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT2_EN_BSET
*/

#define ITM_FW_EVENT2_EN_BSET_SIZE          (32)
#define ITM_FW_EVENT2_EN_BSET_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x22)
#define ITM_FW_EVENT2_EN_BSET_RESET_VALUE   (0x00000000)
#define ITM_FW_EVENT2_EN_BSET_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT2_EN_BSET_RWMASK        (0x00000000)
#define ITM_FW_EVENT2_EN_BSET_ROMASK        (0x00000000)
#define ITM_FW_EVENT2_EN_BSET_WOMASK        (0xFFFFFFFF)
#define ITM_FW_EVENT2_EN_BSET_UNUSED_MASK   (0x00000000)
#define ITM_FW_EVENT2_EN_BSET_SRC0_EN_BSET_OFFSET (0x00000000)
#define ITM_FW_EVENT2_EN_BSET_SRC0_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC0_EN_BSET_MASK (0x00000001)
#define ITM_FW_EVENT2_EN_BSET_SRC1_EN_BSET_OFFSET (0x00000001)
#define ITM_FW_EVENT2_EN_BSET_SRC1_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC1_EN_BSET_MASK (0x00000002)
#define ITM_FW_EVENT2_EN_BSET_SRC2_EN_BSET_OFFSET (0x00000002)
#define ITM_FW_EVENT2_EN_BSET_SRC2_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC2_EN_BSET_MASK (0x00000004)
#define ITM_FW_EVENT2_EN_BSET_SRC3_EN_BSET_OFFSET (0x00000003)
#define ITM_FW_EVENT2_EN_BSET_SRC3_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC3_EN_BSET_MASK (0x00000008)
#define ITM_FW_EVENT2_EN_BSET_SRC4_EN_BSET_OFFSET (0x00000004)
#define ITM_FW_EVENT2_EN_BSET_SRC4_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC4_EN_BSET_MASK (0x00000010)
#define ITM_FW_EVENT2_EN_BSET_SRC5_EN_BSET_OFFSET (0x00000005)
#define ITM_FW_EVENT2_EN_BSET_SRC5_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC5_EN_BSET_MASK (0x00000020)
#define ITM_FW_EVENT2_EN_BSET_SRC6_EN_BSET_OFFSET (0x00000006)
#define ITM_FW_EVENT2_EN_BSET_SRC6_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC6_EN_BSET_MASK (0x00000040)
#define ITM_FW_EVENT2_EN_BSET_SRC7_EN_BSET_OFFSET (0x00000007)
#define ITM_FW_EVENT2_EN_BSET_SRC7_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC7_EN_BSET_MASK (0x00000080)
#define ITM_FW_EVENT2_EN_BSET_SRC8_EN_BSET_OFFSET (0x00000008)
#define ITM_FW_EVENT2_EN_BSET_SRC8_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC8_EN_BSET_MASK (0x00000100)
#define ITM_FW_EVENT2_EN_BSET_SRC9_EN_BSET_OFFSET (0x00000009)
#define ITM_FW_EVENT2_EN_BSET_SRC9_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC9_EN_BSET_MASK (0x00000200)
#define ITM_FW_EVENT2_EN_BSET_SRC10_EN_BSET_OFFSET (0x0000000a)
#define ITM_FW_EVENT2_EN_BSET_SRC10_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC10_EN_BSET_MASK (0x00000400)
#define ITM_FW_EVENT2_EN_BSET_SRC11_EN_BSET_OFFSET (0x0000000b)
#define ITM_FW_EVENT2_EN_BSET_SRC11_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC11_EN_BSET_MASK (0x00000800)
#define ITM_FW_EVENT2_EN_BSET_SRC12_EN_BSET_OFFSET (0x0000000c)
#define ITM_FW_EVENT2_EN_BSET_SRC12_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC12_EN_BSET_MASK (0x00001000)
#define ITM_FW_EVENT2_EN_BSET_SRC13_EN_BSET_OFFSET (0x0000000d)
#define ITM_FW_EVENT2_EN_BSET_SRC13_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC13_EN_BSET_MASK (0x00002000)
#define ITM_FW_EVENT2_EN_BSET_SRC14_EN_BSET_OFFSET (0x0000000e)
#define ITM_FW_EVENT2_EN_BSET_SRC14_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC14_EN_BSET_MASK (0x00004000)
#define ITM_FW_EVENT2_EN_BSET_SRC15_EN_BSET_OFFSET (0x0000000f)
#define ITM_FW_EVENT2_EN_BSET_SRC15_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC15_EN_BSET_MASK (0x00008000)
#define ITM_FW_EVENT2_EN_BSET_SRC16_EN_BSET_OFFSET (0x00000010)
#define ITM_FW_EVENT2_EN_BSET_SRC16_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC16_EN_BSET_MASK (0x00010000)
#define ITM_FW_EVENT2_EN_BSET_SRC17_EN_BSET_OFFSET (0x00000011)
#define ITM_FW_EVENT2_EN_BSET_SRC17_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC17_EN_BSET_MASK (0x00020000)
#define ITM_FW_EVENT2_EN_BSET_SRC18_EN_BSET_OFFSET (0x00000012)
#define ITM_FW_EVENT2_EN_BSET_SRC18_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC18_EN_BSET_MASK (0x00040000)
#define ITM_FW_EVENT2_EN_BSET_SRC19_EN_BSET_OFFSET (0x00000013)
#define ITM_FW_EVENT2_EN_BSET_SRC19_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC19_EN_BSET_MASK (0x00080000)
#define ITM_FW_EVENT2_EN_BSET_SRC20_EN_BSET_OFFSET (0x00000014)
#define ITM_FW_EVENT2_EN_BSET_SRC20_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC20_EN_BSET_MASK (0x00100000)
#define ITM_FW_EVENT2_EN_BSET_SRC21_EN_BSET_OFFSET (0x00000015)
#define ITM_FW_EVENT2_EN_BSET_SRC21_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC21_EN_BSET_MASK (0x00200000)
#define ITM_FW_EVENT2_EN_BSET_SRC22_EN_BSET_OFFSET (0x00000016)
#define ITM_FW_EVENT2_EN_BSET_SRC22_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC22_EN_BSET_MASK (0x00400000)
#define ITM_FW_EVENT2_EN_BSET_SRC23_EN_BSET_OFFSET (0x00000017)
#define ITM_FW_EVENT2_EN_BSET_SRC23_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC23_EN_BSET_MASK (0x00800000)
#define ITM_FW_EVENT2_EN_BSET_SRC24_EN_BSET_OFFSET (0x00000018)
#define ITM_FW_EVENT2_EN_BSET_SRC24_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC24_EN_BSET_MASK (0x01000000)
#define ITM_FW_EVENT2_EN_BSET_SRC25_EN_BSET_OFFSET (0x00000019)
#define ITM_FW_EVENT2_EN_BSET_SRC25_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC25_EN_BSET_MASK (0x02000000)
#define ITM_FW_EVENT2_EN_BSET_SRC26_EN_BSET_OFFSET (0x0000001a)
#define ITM_FW_EVENT2_EN_BSET_SRC26_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC26_EN_BSET_MASK (0x04000000)
#define ITM_FW_EVENT2_EN_BSET_SRC27_EN_BSET_OFFSET (0x0000001b)
#define ITM_FW_EVENT2_EN_BSET_SRC27_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC27_EN_BSET_MASK (0x08000000)
#define ITM_FW_EVENT2_EN_BSET_SRC28_EN_BSET_OFFSET (0x0000001c)
#define ITM_FW_EVENT2_EN_BSET_SRC28_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC28_EN_BSET_MASK (0x10000000)
#define ITM_FW_EVENT2_EN_BSET_SRC29_EN_BSET_OFFSET (0x0000001d)
#define ITM_FW_EVENT2_EN_BSET_SRC29_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC29_EN_BSET_MASK (0x20000000)
#define ITM_FW_EVENT2_EN_BSET_SRC30_EN_BSET_OFFSET (0x0000001e)
#define ITM_FW_EVENT2_EN_BSET_SRC30_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC30_EN_BSET_MASK (0x40000000)
#define ITM_FW_EVENT2_EN_BSET_SRC31_EN_BSET_OFFSET (0x0000001f)
#define ITM_FW_EVENT2_EN_BSET_SRC31_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT2_EN_BSET_SRC31_EN_BSET_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT3_STATUS
*/

#define ITM_FW_EVENT3_STATUS_SIZE           (32)
#define ITM_FW_EVENT3_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x24)
#define ITM_FW_EVENT3_STATUS_RESET_VALUE    (0x00000000)
#define ITM_FW_EVENT3_STATUS_BITFIELD_MASK  (0xFFFFFFFF)
#define ITM_FW_EVENT3_STATUS_RWMASK         (0x00000000)
#define ITM_FW_EVENT3_STATUS_ROMASK         (0xFFFFFFFF)
#define ITM_FW_EVENT3_STATUS_WOMASK         (0x00000000)
#define ITM_FW_EVENT3_STATUS_UNUSED_MASK    (0x00000000)
#define ITM_FW_EVENT3_STATUS_SRC0_STATUS_OFFSET (0x00000000)
#define ITM_FW_EVENT3_STATUS_SRC0_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC0_STATUS_MASK (0x00000001)
#define ITM_FW_EVENT3_STATUS_SRC1_STATUS_OFFSET (0x00000001)
#define ITM_FW_EVENT3_STATUS_SRC1_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC1_STATUS_MASK (0x00000002)
#define ITM_FW_EVENT3_STATUS_SRC2_STATUS_OFFSET (0x00000002)
#define ITM_FW_EVENT3_STATUS_SRC2_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC2_STATUS_MASK (0x00000004)
#define ITM_FW_EVENT3_STATUS_SRC3_STATUS_OFFSET (0x00000003)
#define ITM_FW_EVENT3_STATUS_SRC3_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC3_STATUS_MASK (0x00000008)
#define ITM_FW_EVENT3_STATUS_SRC4_STATUS_OFFSET (0x00000004)
#define ITM_FW_EVENT3_STATUS_SRC4_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC4_STATUS_MASK (0x00000010)
#define ITM_FW_EVENT3_STATUS_SRC5_STATUS_OFFSET (0x00000005)
#define ITM_FW_EVENT3_STATUS_SRC5_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC5_STATUS_MASK (0x00000020)
#define ITM_FW_EVENT3_STATUS_SRC6_STATUS_OFFSET (0x00000006)
#define ITM_FW_EVENT3_STATUS_SRC6_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC6_STATUS_MASK (0x00000040)
#define ITM_FW_EVENT3_STATUS_SRC7_STATUS_OFFSET (0x00000007)
#define ITM_FW_EVENT3_STATUS_SRC7_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC7_STATUS_MASK (0x00000080)
#define ITM_FW_EVENT3_STATUS_SRC8_STATUS_OFFSET (0x00000008)
#define ITM_FW_EVENT3_STATUS_SRC8_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC8_STATUS_MASK (0x00000100)
#define ITM_FW_EVENT3_STATUS_SRC9_STATUS_OFFSET (0x00000009)
#define ITM_FW_EVENT3_STATUS_SRC9_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC9_STATUS_MASK (0x00000200)
#define ITM_FW_EVENT3_STATUS_SRC10_STATUS_OFFSET (0x0000000a)
#define ITM_FW_EVENT3_STATUS_SRC10_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC10_STATUS_MASK (0x00000400)
#define ITM_FW_EVENT3_STATUS_SRC11_STATUS_OFFSET (0x0000000b)
#define ITM_FW_EVENT3_STATUS_SRC11_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC11_STATUS_MASK (0x00000800)
#define ITM_FW_EVENT3_STATUS_SRC12_STATUS_OFFSET (0x0000000c)
#define ITM_FW_EVENT3_STATUS_SRC12_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC12_STATUS_MASK (0x00001000)
#define ITM_FW_EVENT3_STATUS_SRC13_STATUS_OFFSET (0x0000000d)
#define ITM_FW_EVENT3_STATUS_SRC13_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC13_STATUS_MASK (0x00002000)
#define ITM_FW_EVENT3_STATUS_SRC14_STATUS_OFFSET (0x0000000e)
#define ITM_FW_EVENT3_STATUS_SRC14_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC14_STATUS_MASK (0x00004000)
#define ITM_FW_EVENT3_STATUS_SRC15_STATUS_OFFSET (0x0000000f)
#define ITM_FW_EVENT3_STATUS_SRC15_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC15_STATUS_MASK (0x00008000)
#define ITM_FW_EVENT3_STATUS_SRC16_STATUS_OFFSET (0x00000010)
#define ITM_FW_EVENT3_STATUS_SRC16_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC16_STATUS_MASK (0x00010000)
#define ITM_FW_EVENT3_STATUS_SRC17_STATUS_OFFSET (0x00000011)
#define ITM_FW_EVENT3_STATUS_SRC17_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC17_STATUS_MASK (0x00020000)
#define ITM_FW_EVENT3_STATUS_SRC18_STATUS_OFFSET (0x00000012)
#define ITM_FW_EVENT3_STATUS_SRC18_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC18_STATUS_MASK (0x00040000)
#define ITM_FW_EVENT3_STATUS_SRC19_STATUS_OFFSET (0x00000013)
#define ITM_FW_EVENT3_STATUS_SRC19_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC19_STATUS_MASK (0x00080000)
#define ITM_FW_EVENT3_STATUS_SRC20_STATUS_OFFSET (0x00000014)
#define ITM_FW_EVENT3_STATUS_SRC20_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC20_STATUS_MASK (0x00100000)
#define ITM_FW_EVENT3_STATUS_SRC21_STATUS_OFFSET (0x00000015)
#define ITM_FW_EVENT3_STATUS_SRC21_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC21_STATUS_MASK (0x00200000)
#define ITM_FW_EVENT3_STATUS_SRC22_STATUS_OFFSET (0x00000016)
#define ITM_FW_EVENT3_STATUS_SRC22_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC22_STATUS_MASK (0x00400000)
#define ITM_FW_EVENT3_STATUS_SRC23_STATUS_OFFSET (0x00000017)
#define ITM_FW_EVENT3_STATUS_SRC23_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC23_STATUS_MASK (0x00800000)
#define ITM_FW_EVENT3_STATUS_SRC24_STATUS_OFFSET (0x00000018)
#define ITM_FW_EVENT3_STATUS_SRC24_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC24_STATUS_MASK (0x01000000)
#define ITM_FW_EVENT3_STATUS_SRC25_STATUS_OFFSET (0x00000019)
#define ITM_FW_EVENT3_STATUS_SRC25_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC25_STATUS_MASK (0x02000000)
#define ITM_FW_EVENT3_STATUS_SRC26_STATUS_OFFSET (0x0000001a)
#define ITM_FW_EVENT3_STATUS_SRC26_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC26_STATUS_MASK (0x04000000)
#define ITM_FW_EVENT3_STATUS_SRC27_STATUS_OFFSET (0x0000001b)
#define ITM_FW_EVENT3_STATUS_SRC27_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC27_STATUS_MASK (0x08000000)
#define ITM_FW_EVENT3_STATUS_SRC28_STATUS_OFFSET (0x0000001c)
#define ITM_FW_EVENT3_STATUS_SRC28_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC28_STATUS_MASK (0x10000000)
#define ITM_FW_EVENT3_STATUS_SRC29_STATUS_OFFSET (0x0000001d)
#define ITM_FW_EVENT3_STATUS_SRC29_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC29_STATUS_MASK (0x20000000)
#define ITM_FW_EVENT3_STATUS_SRC30_STATUS_OFFSET (0x0000001e)
#define ITM_FW_EVENT3_STATUS_SRC30_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC30_STATUS_MASK (0x40000000)
#define ITM_FW_EVENT3_STATUS_SRC31_STATUS_OFFSET (0x0000001f)
#define ITM_FW_EVENT3_STATUS_SRC31_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_SRC31_STATUS_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT3_EN_STATUS
*/

#define ITM_FW_EVENT3_EN_STATUS_SIZE        (32)
#define ITM_FW_EVENT3_EN_STATUS_OFFSET      (pictorv2_in_ITM_BASE_ADDR + 0x26)
#define ITM_FW_EVENT3_EN_STATUS_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT3_EN_STATUS_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT3_EN_STATUS_RWMASK      (0x00000000)
#define ITM_FW_EVENT3_EN_STATUS_ROMASK      (0xFFFFFFFF)
#define ITM_FW_EVENT3_EN_STATUS_WOMASK      (0x00000000)
#define ITM_FW_EVENT3_EN_STATUS_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC0_EN_STATUS_OFFSET (0x00000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC0_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC0_EN_STATUS_MASK (0x00000001)
#define ITM_FW_EVENT3_EN_STATUS_SRC1_EN_STATUS_OFFSET (0x00000001)
#define ITM_FW_EVENT3_EN_STATUS_SRC1_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC1_EN_STATUS_MASK (0x00000002)
#define ITM_FW_EVENT3_EN_STATUS_SRC2_EN_STATUS_OFFSET (0x00000002)
#define ITM_FW_EVENT3_EN_STATUS_SRC2_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC2_EN_STATUS_MASK (0x00000004)
#define ITM_FW_EVENT3_EN_STATUS_SRC3_EN_STATUS_OFFSET (0x00000003)
#define ITM_FW_EVENT3_EN_STATUS_SRC3_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC3_EN_STATUS_MASK (0x00000008)
#define ITM_FW_EVENT3_EN_STATUS_SRC4_EN_STATUS_OFFSET (0x00000004)
#define ITM_FW_EVENT3_EN_STATUS_SRC4_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC4_EN_STATUS_MASK (0x00000010)
#define ITM_FW_EVENT3_EN_STATUS_SRC5_EN_STATUS_OFFSET (0x00000005)
#define ITM_FW_EVENT3_EN_STATUS_SRC5_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC5_EN_STATUS_MASK (0x00000020)
#define ITM_FW_EVENT3_EN_STATUS_SRC6_EN_STATUS_OFFSET (0x00000006)
#define ITM_FW_EVENT3_EN_STATUS_SRC6_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC6_EN_STATUS_MASK (0x00000040)
#define ITM_FW_EVENT3_EN_STATUS_SRC7_EN_STATUS_OFFSET (0x00000007)
#define ITM_FW_EVENT3_EN_STATUS_SRC7_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC7_EN_STATUS_MASK (0x00000080)
#define ITM_FW_EVENT3_EN_STATUS_SRC8_EN_STATUS_OFFSET (0x00000008)
#define ITM_FW_EVENT3_EN_STATUS_SRC8_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC8_EN_STATUS_MASK (0x00000100)
#define ITM_FW_EVENT3_EN_STATUS_SRC9_EN_STATUS_OFFSET (0x00000009)
#define ITM_FW_EVENT3_EN_STATUS_SRC9_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC9_EN_STATUS_MASK (0x00000200)
#define ITM_FW_EVENT3_EN_STATUS_SRC10_EN_STATUS_OFFSET (0x0000000a)
#define ITM_FW_EVENT3_EN_STATUS_SRC10_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC10_EN_STATUS_MASK (0x00000400)
#define ITM_FW_EVENT3_EN_STATUS_SRC11_EN_STATUS_OFFSET (0x0000000b)
#define ITM_FW_EVENT3_EN_STATUS_SRC11_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC11_EN_STATUS_MASK (0x00000800)
#define ITM_FW_EVENT3_EN_STATUS_SRC12_EN_STATUS_OFFSET (0x0000000c)
#define ITM_FW_EVENT3_EN_STATUS_SRC12_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC12_EN_STATUS_MASK (0x00001000)
#define ITM_FW_EVENT3_EN_STATUS_SRC13_EN_STATUS_OFFSET (0x0000000d)
#define ITM_FW_EVENT3_EN_STATUS_SRC13_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC13_EN_STATUS_MASK (0x00002000)
#define ITM_FW_EVENT3_EN_STATUS_SRC14_EN_STATUS_OFFSET (0x0000000e)
#define ITM_FW_EVENT3_EN_STATUS_SRC14_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC14_EN_STATUS_MASK (0x00004000)
#define ITM_FW_EVENT3_EN_STATUS_SRC15_EN_STATUS_OFFSET (0x0000000f)
#define ITM_FW_EVENT3_EN_STATUS_SRC15_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC15_EN_STATUS_MASK (0x00008000)
#define ITM_FW_EVENT3_EN_STATUS_SRC16_EN_STATUS_OFFSET (0x00000010)
#define ITM_FW_EVENT3_EN_STATUS_SRC16_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC16_EN_STATUS_MASK (0x00010000)
#define ITM_FW_EVENT3_EN_STATUS_SRC17_EN_STATUS_OFFSET (0x00000011)
#define ITM_FW_EVENT3_EN_STATUS_SRC17_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC17_EN_STATUS_MASK (0x00020000)
#define ITM_FW_EVENT3_EN_STATUS_SRC18_EN_STATUS_OFFSET (0x00000012)
#define ITM_FW_EVENT3_EN_STATUS_SRC18_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC18_EN_STATUS_MASK (0x00040000)
#define ITM_FW_EVENT3_EN_STATUS_SRC19_EN_STATUS_OFFSET (0x00000013)
#define ITM_FW_EVENT3_EN_STATUS_SRC19_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC19_EN_STATUS_MASK (0x00080000)
#define ITM_FW_EVENT3_EN_STATUS_SRC20_EN_STATUS_OFFSET (0x00000014)
#define ITM_FW_EVENT3_EN_STATUS_SRC20_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC20_EN_STATUS_MASK (0x00100000)
#define ITM_FW_EVENT3_EN_STATUS_SRC21_EN_STATUS_OFFSET (0x00000015)
#define ITM_FW_EVENT3_EN_STATUS_SRC21_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC21_EN_STATUS_MASK (0x00200000)
#define ITM_FW_EVENT3_EN_STATUS_SRC22_EN_STATUS_OFFSET (0x00000016)
#define ITM_FW_EVENT3_EN_STATUS_SRC22_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC22_EN_STATUS_MASK (0x00400000)
#define ITM_FW_EVENT3_EN_STATUS_SRC23_EN_STATUS_OFFSET (0x00000017)
#define ITM_FW_EVENT3_EN_STATUS_SRC23_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC23_EN_STATUS_MASK (0x00800000)
#define ITM_FW_EVENT3_EN_STATUS_SRC24_EN_STATUS_OFFSET (0x00000018)
#define ITM_FW_EVENT3_EN_STATUS_SRC24_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC24_EN_STATUS_MASK (0x01000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC25_EN_STATUS_OFFSET (0x00000019)
#define ITM_FW_EVENT3_EN_STATUS_SRC25_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC25_EN_STATUS_MASK (0x02000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC26_EN_STATUS_OFFSET (0x0000001a)
#define ITM_FW_EVENT3_EN_STATUS_SRC26_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC26_EN_STATUS_MASK (0x04000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC27_EN_STATUS_OFFSET (0x0000001b)
#define ITM_FW_EVENT3_EN_STATUS_SRC27_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC27_EN_STATUS_MASK (0x08000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC28_EN_STATUS_OFFSET (0x0000001c)
#define ITM_FW_EVENT3_EN_STATUS_SRC28_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC28_EN_STATUS_MASK (0x10000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC29_EN_STATUS_OFFSET (0x0000001d)
#define ITM_FW_EVENT3_EN_STATUS_SRC29_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC29_EN_STATUS_MASK (0x20000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC30_EN_STATUS_OFFSET (0x0000001e)
#define ITM_FW_EVENT3_EN_STATUS_SRC30_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC30_EN_STATUS_MASK (0x40000000)
#define ITM_FW_EVENT3_EN_STATUS_SRC31_EN_STATUS_OFFSET (0x0000001f)
#define ITM_FW_EVENT3_EN_STATUS_SRC31_EN_STATUS_WIDTH (1)
#define ITM_FW_EVENT3_EN_STATUS_SRC31_EN_STATUS_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT3_STATUS_BCLR
*/

#define ITM_FW_EVENT3_STATUS_BCLR_SIZE      (32)
#define ITM_FW_EVENT3_STATUS_BCLR_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x28)
#define ITM_FW_EVENT3_STATUS_BCLR_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT3_STATUS_BCLR_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT3_STATUS_BCLR_RWMASK    (0x00000000)
#define ITM_FW_EVENT3_STATUS_BCLR_ROMASK    (0x00000000)
#define ITM_FW_EVENT3_STATUS_BCLR_WOMASK    (0xFFFFFFFF)
#define ITM_FW_EVENT3_STATUS_BCLR_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC0_STATUS_BCLR_OFFSET (0x00000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC0_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC0_STATUS_BCLR_MASK (0x00000001)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC1_STATUS_BCLR_OFFSET (0x00000001)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC1_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC1_STATUS_BCLR_MASK (0x00000002)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC2_STATUS_BCLR_OFFSET (0x00000002)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC2_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC2_STATUS_BCLR_MASK (0x00000004)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC3_STATUS_BCLR_OFFSET (0x00000003)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC3_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC3_STATUS_BCLR_MASK (0x00000008)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC4_STATUS_BCLR_OFFSET (0x00000004)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC4_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC4_STATUS_BCLR_MASK (0x00000010)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC5_STATUS_BCLR_OFFSET (0x00000005)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC5_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC5_STATUS_BCLR_MASK (0x00000020)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC6_STATUS_BCLR_OFFSET (0x00000006)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC6_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC6_STATUS_BCLR_MASK (0x00000040)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC7_STATUS_BCLR_OFFSET (0x00000007)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC7_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC7_STATUS_BCLR_MASK (0x00000080)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC8_STATUS_BCLR_OFFSET (0x00000008)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC8_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC8_STATUS_BCLR_MASK (0x00000100)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC9_STATUS_BCLR_OFFSET (0x00000009)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC9_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC9_STATUS_BCLR_MASK (0x00000200)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC10_STATUS_BCLR_OFFSET (0x0000000a)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC10_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC10_STATUS_BCLR_MASK (0x00000400)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC11_STATUS_BCLR_OFFSET (0x0000000b)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC11_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC11_STATUS_BCLR_MASK (0x00000800)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC12_STATUS_BCLR_OFFSET (0x0000000c)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC12_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC12_STATUS_BCLR_MASK (0x00001000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC13_STATUS_BCLR_OFFSET (0x0000000d)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC13_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC13_STATUS_BCLR_MASK (0x00002000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC14_STATUS_BCLR_OFFSET (0x0000000e)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC14_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC14_STATUS_BCLR_MASK (0x00004000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC15_STATUS_BCLR_OFFSET (0x0000000f)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC15_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC15_STATUS_BCLR_MASK (0x00008000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC16_STATUS_BCLR_OFFSET (0x00000010)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC16_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC16_STATUS_BCLR_MASK (0x00010000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC17_STATUS_BCLR_OFFSET (0x00000011)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC17_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC17_STATUS_BCLR_MASK (0x00020000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC18_STATUS_BCLR_OFFSET (0x00000012)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC18_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC18_STATUS_BCLR_MASK (0x00040000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC19_STATUS_BCLR_OFFSET (0x00000013)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC19_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC19_STATUS_BCLR_MASK (0x00080000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC20_STATUS_BCLR_OFFSET (0x00000014)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC20_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC20_STATUS_BCLR_MASK (0x00100000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC21_STATUS_BCLR_OFFSET (0x00000015)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC21_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC21_STATUS_BCLR_MASK (0x00200000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC22_STATUS_BCLR_OFFSET (0x00000016)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC22_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC22_STATUS_BCLR_MASK (0x00400000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC23_STATUS_BCLR_OFFSET (0x00000017)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC23_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC23_STATUS_BCLR_MASK (0x00800000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC24_STATUS_BCLR_OFFSET (0x00000018)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC24_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC24_STATUS_BCLR_MASK (0x01000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC25_STATUS_BCLR_OFFSET (0x00000019)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC25_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC25_STATUS_BCLR_MASK (0x02000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC26_STATUS_BCLR_OFFSET (0x0000001a)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC26_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC26_STATUS_BCLR_MASK (0x04000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC27_STATUS_BCLR_OFFSET (0x0000001b)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC27_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC27_STATUS_BCLR_MASK (0x08000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC28_STATUS_BCLR_OFFSET (0x0000001c)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC28_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC28_STATUS_BCLR_MASK (0x10000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC29_STATUS_BCLR_OFFSET (0x0000001d)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC29_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC29_STATUS_BCLR_MASK (0x20000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC30_STATUS_BCLR_OFFSET (0x0000001e)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC30_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC30_STATUS_BCLR_MASK (0x40000000)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC31_STATUS_BCLR_OFFSET (0x0000001f)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC31_STATUS_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BCLR_SRC31_STATUS_BCLR_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT3_STATUS_BSET
*/

#define ITM_FW_EVENT3_STATUS_BSET_SIZE      (32)
#define ITM_FW_EVENT3_STATUS_BSET_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x2a)
#define ITM_FW_EVENT3_STATUS_BSET_RESET_VALUE (0x00000000)
#define ITM_FW_EVENT3_STATUS_BSET_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT3_STATUS_BSET_RWMASK    (0x00000000)
#define ITM_FW_EVENT3_STATUS_BSET_ROMASK    (0x00000000)
#define ITM_FW_EVENT3_STATUS_BSET_WOMASK    (0xFFFFFFFF)
#define ITM_FW_EVENT3_STATUS_BSET_UNUSED_MASK (0x00000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC0_STATUS_BSET_OFFSET (0x00000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC0_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC0_STATUS_BSET_MASK (0x00000001)
#define ITM_FW_EVENT3_STATUS_BSET_SRC1_STATUS_BSET_OFFSET (0x00000001)
#define ITM_FW_EVENT3_STATUS_BSET_SRC1_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC1_STATUS_BSET_MASK (0x00000002)
#define ITM_FW_EVENT3_STATUS_BSET_SRC2_STATUS_BSET_OFFSET (0x00000002)
#define ITM_FW_EVENT3_STATUS_BSET_SRC2_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC2_STATUS_BSET_MASK (0x00000004)
#define ITM_FW_EVENT3_STATUS_BSET_SRC3_STATUS_BSET_OFFSET (0x00000003)
#define ITM_FW_EVENT3_STATUS_BSET_SRC3_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC3_STATUS_BSET_MASK (0x00000008)
#define ITM_FW_EVENT3_STATUS_BSET_SRC4_STATUS_BSET_OFFSET (0x00000004)
#define ITM_FW_EVENT3_STATUS_BSET_SRC4_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC4_STATUS_BSET_MASK (0x00000010)
#define ITM_FW_EVENT3_STATUS_BSET_SRC5_STATUS_BSET_OFFSET (0x00000005)
#define ITM_FW_EVENT3_STATUS_BSET_SRC5_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC5_STATUS_BSET_MASK (0x00000020)
#define ITM_FW_EVENT3_STATUS_BSET_SRC6_STATUS_BSET_OFFSET (0x00000006)
#define ITM_FW_EVENT3_STATUS_BSET_SRC6_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC6_STATUS_BSET_MASK (0x00000040)
#define ITM_FW_EVENT3_STATUS_BSET_SRC7_STATUS_BSET_OFFSET (0x00000007)
#define ITM_FW_EVENT3_STATUS_BSET_SRC7_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC7_STATUS_BSET_MASK (0x00000080)
#define ITM_FW_EVENT3_STATUS_BSET_SRC8_STATUS_BSET_OFFSET (0x00000008)
#define ITM_FW_EVENT3_STATUS_BSET_SRC8_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC8_STATUS_BSET_MASK (0x00000100)
#define ITM_FW_EVENT3_STATUS_BSET_SRC9_STATUS_BSET_OFFSET (0x00000009)
#define ITM_FW_EVENT3_STATUS_BSET_SRC9_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC9_STATUS_BSET_MASK (0x00000200)
#define ITM_FW_EVENT3_STATUS_BSET_SRC10_STATUS_BSET_OFFSET (0x0000000a)
#define ITM_FW_EVENT3_STATUS_BSET_SRC10_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC10_STATUS_BSET_MASK (0x00000400)
#define ITM_FW_EVENT3_STATUS_BSET_SRC11_STATUS_BSET_OFFSET (0x0000000b)
#define ITM_FW_EVENT3_STATUS_BSET_SRC11_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC11_STATUS_BSET_MASK (0x00000800)
#define ITM_FW_EVENT3_STATUS_BSET_SRC12_STATUS_BSET_OFFSET (0x0000000c)
#define ITM_FW_EVENT3_STATUS_BSET_SRC12_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC12_STATUS_BSET_MASK (0x00001000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC13_STATUS_BSET_OFFSET (0x0000000d)
#define ITM_FW_EVENT3_STATUS_BSET_SRC13_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC13_STATUS_BSET_MASK (0x00002000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC14_STATUS_BSET_OFFSET (0x0000000e)
#define ITM_FW_EVENT3_STATUS_BSET_SRC14_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC14_STATUS_BSET_MASK (0x00004000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC15_STATUS_BSET_OFFSET (0x0000000f)
#define ITM_FW_EVENT3_STATUS_BSET_SRC15_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC15_STATUS_BSET_MASK (0x00008000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC16_STATUS_BSET_OFFSET (0x00000010)
#define ITM_FW_EVENT3_STATUS_BSET_SRC16_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC16_STATUS_BSET_MASK (0x00010000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC17_STATUS_BSET_OFFSET (0x00000011)
#define ITM_FW_EVENT3_STATUS_BSET_SRC17_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC17_STATUS_BSET_MASK (0x00020000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC18_STATUS_BSET_OFFSET (0x00000012)
#define ITM_FW_EVENT3_STATUS_BSET_SRC18_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC18_STATUS_BSET_MASK (0x00040000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC19_STATUS_BSET_OFFSET (0x00000013)
#define ITM_FW_EVENT3_STATUS_BSET_SRC19_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC19_STATUS_BSET_MASK (0x00080000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC20_STATUS_BSET_OFFSET (0x00000014)
#define ITM_FW_EVENT3_STATUS_BSET_SRC20_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC20_STATUS_BSET_MASK (0x00100000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC21_STATUS_BSET_OFFSET (0x00000015)
#define ITM_FW_EVENT3_STATUS_BSET_SRC21_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC21_STATUS_BSET_MASK (0x00200000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC22_STATUS_BSET_OFFSET (0x00000016)
#define ITM_FW_EVENT3_STATUS_BSET_SRC22_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC22_STATUS_BSET_MASK (0x00400000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC23_STATUS_BSET_OFFSET (0x00000017)
#define ITM_FW_EVENT3_STATUS_BSET_SRC23_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC23_STATUS_BSET_MASK (0x00800000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC24_STATUS_BSET_OFFSET (0x00000018)
#define ITM_FW_EVENT3_STATUS_BSET_SRC24_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC24_STATUS_BSET_MASK (0x01000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC25_STATUS_BSET_OFFSET (0x00000019)
#define ITM_FW_EVENT3_STATUS_BSET_SRC25_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC25_STATUS_BSET_MASK (0x02000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC26_STATUS_BSET_OFFSET (0x0000001a)
#define ITM_FW_EVENT3_STATUS_BSET_SRC26_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC26_STATUS_BSET_MASK (0x04000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC27_STATUS_BSET_OFFSET (0x0000001b)
#define ITM_FW_EVENT3_STATUS_BSET_SRC27_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC27_STATUS_BSET_MASK (0x08000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC28_STATUS_BSET_OFFSET (0x0000001c)
#define ITM_FW_EVENT3_STATUS_BSET_SRC28_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC28_STATUS_BSET_MASK (0x10000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC29_STATUS_BSET_OFFSET (0x0000001d)
#define ITM_FW_EVENT3_STATUS_BSET_SRC29_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC29_STATUS_BSET_MASK (0x20000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC30_STATUS_BSET_OFFSET (0x0000001e)
#define ITM_FW_EVENT3_STATUS_BSET_SRC30_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC30_STATUS_BSET_MASK (0x40000000)
#define ITM_FW_EVENT3_STATUS_BSET_SRC31_STATUS_BSET_OFFSET (0x0000001f)
#define ITM_FW_EVENT3_STATUS_BSET_SRC31_STATUS_BSET_WIDTH (1)
#define ITM_FW_EVENT3_STATUS_BSET_SRC31_STATUS_BSET_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT3_EN_BCLR
*/

#define ITM_FW_EVENT3_EN_BCLR_SIZE          (32)
#define ITM_FW_EVENT3_EN_BCLR_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x2c)
#define ITM_FW_EVENT3_EN_BCLR_RESET_VALUE   (0x00000000)
#define ITM_FW_EVENT3_EN_BCLR_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT3_EN_BCLR_RWMASK        (0x00000000)
#define ITM_FW_EVENT3_EN_BCLR_ROMASK        (0x00000000)
#define ITM_FW_EVENT3_EN_BCLR_WOMASK        (0xFFFFFFFF)
#define ITM_FW_EVENT3_EN_BCLR_UNUSED_MASK   (0x00000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC0_EN_BCLR_OFFSET (0x00000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC0_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC0_EN_BCLR_MASK (0x00000001)
#define ITM_FW_EVENT3_EN_BCLR_SRC1_EN_BCLR_OFFSET (0x00000001)
#define ITM_FW_EVENT3_EN_BCLR_SRC1_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC1_EN_BCLR_MASK (0x00000002)
#define ITM_FW_EVENT3_EN_BCLR_SRC2_EN_BCLR_OFFSET (0x00000002)
#define ITM_FW_EVENT3_EN_BCLR_SRC2_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC2_EN_BCLR_MASK (0x00000004)
#define ITM_FW_EVENT3_EN_BCLR_SRC3_EN_BCLR_OFFSET (0x00000003)
#define ITM_FW_EVENT3_EN_BCLR_SRC3_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC3_EN_BCLR_MASK (0x00000008)
#define ITM_FW_EVENT3_EN_BCLR_SRC4_EN_BCLR_OFFSET (0x00000004)
#define ITM_FW_EVENT3_EN_BCLR_SRC4_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC4_EN_BCLR_MASK (0x00000010)
#define ITM_FW_EVENT3_EN_BCLR_SRC5_EN_BCLR_OFFSET (0x00000005)
#define ITM_FW_EVENT3_EN_BCLR_SRC5_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC5_EN_BCLR_MASK (0x00000020)
#define ITM_FW_EVENT3_EN_BCLR_SRC6_EN_BCLR_OFFSET (0x00000006)
#define ITM_FW_EVENT3_EN_BCLR_SRC6_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC6_EN_BCLR_MASK (0x00000040)
#define ITM_FW_EVENT3_EN_BCLR_SRC7_EN_BCLR_OFFSET (0x00000007)
#define ITM_FW_EVENT3_EN_BCLR_SRC7_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC7_EN_BCLR_MASK (0x00000080)
#define ITM_FW_EVENT3_EN_BCLR_SRC8_EN_BCLR_OFFSET (0x00000008)
#define ITM_FW_EVENT3_EN_BCLR_SRC8_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC8_EN_BCLR_MASK (0x00000100)
#define ITM_FW_EVENT3_EN_BCLR_SRC9_EN_BCLR_OFFSET (0x00000009)
#define ITM_FW_EVENT3_EN_BCLR_SRC9_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC9_EN_BCLR_MASK (0x00000200)
#define ITM_FW_EVENT3_EN_BCLR_SRC10_EN_BCLR_OFFSET (0x0000000a)
#define ITM_FW_EVENT3_EN_BCLR_SRC10_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC10_EN_BCLR_MASK (0x00000400)
#define ITM_FW_EVENT3_EN_BCLR_SRC11_EN_BCLR_OFFSET (0x0000000b)
#define ITM_FW_EVENT3_EN_BCLR_SRC11_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC11_EN_BCLR_MASK (0x00000800)
#define ITM_FW_EVENT3_EN_BCLR_SRC12_EN_BCLR_OFFSET (0x0000000c)
#define ITM_FW_EVENT3_EN_BCLR_SRC12_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC12_EN_BCLR_MASK (0x00001000)
#define ITM_FW_EVENT3_EN_BCLR_SRC13_EN_BCLR_OFFSET (0x0000000d)
#define ITM_FW_EVENT3_EN_BCLR_SRC13_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC13_EN_BCLR_MASK (0x00002000)
#define ITM_FW_EVENT3_EN_BCLR_SRC14_EN_BCLR_OFFSET (0x0000000e)
#define ITM_FW_EVENT3_EN_BCLR_SRC14_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC14_EN_BCLR_MASK (0x00004000)
#define ITM_FW_EVENT3_EN_BCLR_SRC15_EN_BCLR_OFFSET (0x0000000f)
#define ITM_FW_EVENT3_EN_BCLR_SRC15_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC15_EN_BCLR_MASK (0x00008000)
#define ITM_FW_EVENT3_EN_BCLR_SRC16_EN_BCLR_OFFSET (0x00000010)
#define ITM_FW_EVENT3_EN_BCLR_SRC16_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC16_EN_BCLR_MASK (0x00010000)
#define ITM_FW_EVENT3_EN_BCLR_SRC17_EN_BCLR_OFFSET (0x00000011)
#define ITM_FW_EVENT3_EN_BCLR_SRC17_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC17_EN_BCLR_MASK (0x00020000)
#define ITM_FW_EVENT3_EN_BCLR_SRC18_EN_BCLR_OFFSET (0x00000012)
#define ITM_FW_EVENT3_EN_BCLR_SRC18_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC18_EN_BCLR_MASK (0x00040000)
#define ITM_FW_EVENT3_EN_BCLR_SRC19_EN_BCLR_OFFSET (0x00000013)
#define ITM_FW_EVENT3_EN_BCLR_SRC19_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC19_EN_BCLR_MASK (0x00080000)
#define ITM_FW_EVENT3_EN_BCLR_SRC20_EN_BCLR_OFFSET (0x00000014)
#define ITM_FW_EVENT3_EN_BCLR_SRC20_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC20_EN_BCLR_MASK (0x00100000)
#define ITM_FW_EVENT3_EN_BCLR_SRC21_EN_BCLR_OFFSET (0x00000015)
#define ITM_FW_EVENT3_EN_BCLR_SRC21_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC21_EN_BCLR_MASK (0x00200000)
#define ITM_FW_EVENT3_EN_BCLR_SRC22_EN_BCLR_OFFSET (0x00000016)
#define ITM_FW_EVENT3_EN_BCLR_SRC22_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC22_EN_BCLR_MASK (0x00400000)
#define ITM_FW_EVENT3_EN_BCLR_SRC23_EN_BCLR_OFFSET (0x00000017)
#define ITM_FW_EVENT3_EN_BCLR_SRC23_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC23_EN_BCLR_MASK (0x00800000)
#define ITM_FW_EVENT3_EN_BCLR_SRC24_EN_BCLR_OFFSET (0x00000018)
#define ITM_FW_EVENT3_EN_BCLR_SRC24_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC24_EN_BCLR_MASK (0x01000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC25_EN_BCLR_OFFSET (0x00000019)
#define ITM_FW_EVENT3_EN_BCLR_SRC25_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC25_EN_BCLR_MASK (0x02000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC26_EN_BCLR_OFFSET (0x0000001a)
#define ITM_FW_EVENT3_EN_BCLR_SRC26_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC26_EN_BCLR_MASK (0x04000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC27_EN_BCLR_OFFSET (0x0000001b)
#define ITM_FW_EVENT3_EN_BCLR_SRC27_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC27_EN_BCLR_MASK (0x08000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC28_EN_BCLR_OFFSET (0x0000001c)
#define ITM_FW_EVENT3_EN_BCLR_SRC28_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC28_EN_BCLR_MASK (0x10000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC29_EN_BCLR_OFFSET (0x0000001d)
#define ITM_FW_EVENT3_EN_BCLR_SRC29_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC29_EN_BCLR_MASK (0x20000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC30_EN_BCLR_OFFSET (0x0000001e)
#define ITM_FW_EVENT3_EN_BCLR_SRC30_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC30_EN_BCLR_MASK (0x40000000)
#define ITM_FW_EVENT3_EN_BCLR_SRC31_EN_BCLR_OFFSET (0x0000001f)
#define ITM_FW_EVENT3_EN_BCLR_SRC31_EN_BCLR_WIDTH (1)
#define ITM_FW_EVENT3_EN_BCLR_SRC31_EN_BCLR_MASK (0x80000000)

/*
* Register : ITM_FW_EVENT3_EN_BSET
*/

#define ITM_FW_EVENT3_EN_BSET_SIZE          (32)
#define ITM_FW_EVENT3_EN_BSET_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x2e)
#define ITM_FW_EVENT3_EN_BSET_RESET_VALUE   (0x00000000)
#define ITM_FW_EVENT3_EN_BSET_BITFIELD_MASK (0xFFFFFFFF)
#define ITM_FW_EVENT3_EN_BSET_RWMASK        (0x00000000)
#define ITM_FW_EVENT3_EN_BSET_ROMASK        (0x00000000)
#define ITM_FW_EVENT3_EN_BSET_WOMASK        (0xFFFFFFFF)
#define ITM_FW_EVENT3_EN_BSET_UNUSED_MASK   (0x00000000)
#define ITM_FW_EVENT3_EN_BSET_SRC0_EN_BSET_OFFSET (0x00000000)
#define ITM_FW_EVENT3_EN_BSET_SRC0_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC0_EN_BSET_MASK (0x00000001)
#define ITM_FW_EVENT3_EN_BSET_SRC1_EN_BSET_OFFSET (0x00000001)
#define ITM_FW_EVENT3_EN_BSET_SRC1_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC1_EN_BSET_MASK (0x00000002)
#define ITM_FW_EVENT3_EN_BSET_SRC2_EN_BSET_OFFSET (0x00000002)
#define ITM_FW_EVENT3_EN_BSET_SRC2_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC2_EN_BSET_MASK (0x00000004)
#define ITM_FW_EVENT3_EN_BSET_SRC3_EN_BSET_OFFSET (0x00000003)
#define ITM_FW_EVENT3_EN_BSET_SRC3_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC3_EN_BSET_MASK (0x00000008)
#define ITM_FW_EVENT3_EN_BSET_SRC4_EN_BSET_OFFSET (0x00000004)
#define ITM_FW_EVENT3_EN_BSET_SRC4_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC4_EN_BSET_MASK (0x00000010)
#define ITM_FW_EVENT3_EN_BSET_SRC5_EN_BSET_OFFSET (0x00000005)
#define ITM_FW_EVENT3_EN_BSET_SRC5_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC5_EN_BSET_MASK (0x00000020)
#define ITM_FW_EVENT3_EN_BSET_SRC6_EN_BSET_OFFSET (0x00000006)
#define ITM_FW_EVENT3_EN_BSET_SRC6_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC6_EN_BSET_MASK (0x00000040)
#define ITM_FW_EVENT3_EN_BSET_SRC7_EN_BSET_OFFSET (0x00000007)
#define ITM_FW_EVENT3_EN_BSET_SRC7_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC7_EN_BSET_MASK (0x00000080)
#define ITM_FW_EVENT3_EN_BSET_SRC8_EN_BSET_OFFSET (0x00000008)
#define ITM_FW_EVENT3_EN_BSET_SRC8_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC8_EN_BSET_MASK (0x00000100)
#define ITM_FW_EVENT3_EN_BSET_SRC9_EN_BSET_OFFSET (0x00000009)
#define ITM_FW_EVENT3_EN_BSET_SRC9_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC9_EN_BSET_MASK (0x00000200)
#define ITM_FW_EVENT3_EN_BSET_SRC10_EN_BSET_OFFSET (0x0000000a)
#define ITM_FW_EVENT3_EN_BSET_SRC10_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC10_EN_BSET_MASK (0x00000400)
#define ITM_FW_EVENT3_EN_BSET_SRC11_EN_BSET_OFFSET (0x0000000b)
#define ITM_FW_EVENT3_EN_BSET_SRC11_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC11_EN_BSET_MASK (0x00000800)
#define ITM_FW_EVENT3_EN_BSET_SRC12_EN_BSET_OFFSET (0x0000000c)
#define ITM_FW_EVENT3_EN_BSET_SRC12_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC12_EN_BSET_MASK (0x00001000)
#define ITM_FW_EVENT3_EN_BSET_SRC13_EN_BSET_OFFSET (0x0000000d)
#define ITM_FW_EVENT3_EN_BSET_SRC13_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC13_EN_BSET_MASK (0x00002000)
#define ITM_FW_EVENT3_EN_BSET_SRC14_EN_BSET_OFFSET (0x0000000e)
#define ITM_FW_EVENT3_EN_BSET_SRC14_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC14_EN_BSET_MASK (0x00004000)
#define ITM_FW_EVENT3_EN_BSET_SRC15_EN_BSET_OFFSET (0x0000000f)
#define ITM_FW_EVENT3_EN_BSET_SRC15_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC15_EN_BSET_MASK (0x00008000)
#define ITM_FW_EVENT3_EN_BSET_SRC16_EN_BSET_OFFSET (0x00000010)
#define ITM_FW_EVENT3_EN_BSET_SRC16_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC16_EN_BSET_MASK (0x00010000)
#define ITM_FW_EVENT3_EN_BSET_SRC17_EN_BSET_OFFSET (0x00000011)
#define ITM_FW_EVENT3_EN_BSET_SRC17_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC17_EN_BSET_MASK (0x00020000)
#define ITM_FW_EVENT3_EN_BSET_SRC18_EN_BSET_OFFSET (0x00000012)
#define ITM_FW_EVENT3_EN_BSET_SRC18_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC18_EN_BSET_MASK (0x00040000)
#define ITM_FW_EVENT3_EN_BSET_SRC19_EN_BSET_OFFSET (0x00000013)
#define ITM_FW_EVENT3_EN_BSET_SRC19_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC19_EN_BSET_MASK (0x00080000)
#define ITM_FW_EVENT3_EN_BSET_SRC20_EN_BSET_OFFSET (0x00000014)
#define ITM_FW_EVENT3_EN_BSET_SRC20_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC20_EN_BSET_MASK (0x00100000)
#define ITM_FW_EVENT3_EN_BSET_SRC21_EN_BSET_OFFSET (0x00000015)
#define ITM_FW_EVENT3_EN_BSET_SRC21_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC21_EN_BSET_MASK (0x00200000)
#define ITM_FW_EVENT3_EN_BSET_SRC22_EN_BSET_OFFSET (0x00000016)
#define ITM_FW_EVENT3_EN_BSET_SRC22_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC22_EN_BSET_MASK (0x00400000)
#define ITM_FW_EVENT3_EN_BSET_SRC23_EN_BSET_OFFSET (0x00000017)
#define ITM_FW_EVENT3_EN_BSET_SRC23_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC23_EN_BSET_MASK (0x00800000)
#define ITM_FW_EVENT3_EN_BSET_SRC24_EN_BSET_OFFSET (0x00000018)
#define ITM_FW_EVENT3_EN_BSET_SRC24_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC24_EN_BSET_MASK (0x01000000)
#define ITM_FW_EVENT3_EN_BSET_SRC25_EN_BSET_OFFSET (0x00000019)
#define ITM_FW_EVENT3_EN_BSET_SRC25_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC25_EN_BSET_MASK (0x02000000)
#define ITM_FW_EVENT3_EN_BSET_SRC26_EN_BSET_OFFSET (0x0000001a)
#define ITM_FW_EVENT3_EN_BSET_SRC26_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC26_EN_BSET_MASK (0x04000000)
#define ITM_FW_EVENT3_EN_BSET_SRC27_EN_BSET_OFFSET (0x0000001b)
#define ITM_FW_EVENT3_EN_BSET_SRC27_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC27_EN_BSET_MASK (0x08000000)
#define ITM_FW_EVENT3_EN_BSET_SRC28_EN_BSET_OFFSET (0x0000001c)
#define ITM_FW_EVENT3_EN_BSET_SRC28_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC28_EN_BSET_MASK (0x10000000)
#define ITM_FW_EVENT3_EN_BSET_SRC29_EN_BSET_OFFSET (0x0000001d)
#define ITM_FW_EVENT3_EN_BSET_SRC29_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC29_EN_BSET_MASK (0x20000000)
#define ITM_FW_EVENT3_EN_BSET_SRC30_EN_BSET_OFFSET (0x0000001e)
#define ITM_FW_EVENT3_EN_BSET_SRC30_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC30_EN_BSET_MASK (0x40000000)
#define ITM_FW_EVENT3_EN_BSET_SRC31_EN_BSET_OFFSET (0x0000001f)
#define ITM_FW_EVENT3_EN_BSET_SRC31_EN_BSET_WIDTH (1)
#define ITM_FW_EVENT3_EN_BSET_SRC31_EN_BSET_MASK (0x80000000)

/*
* Register : ITM_GPIO_STATUS
*/

#define ITM_GPIO_STATUS_SIZE                (32)
#define ITM_GPIO_STATUS_OFFSET              (pictorv2_in_ITM_BASE_ADDR + 0x30)
#define ITM_GPIO_STATUS_RESET_VALUE         (0x00)
#define ITM_GPIO_STATUS_BITFIELD_MASK       (0x003FFFFF)
#define ITM_GPIO_STATUS_RWMASK              (0x00000000)
#define ITM_GPIO_STATUS_ROMASK              (0x003FFFFF)
#define ITM_GPIO_STATUS_WOMASK              (0x00000000)
#define ITM_GPIO_STATUS_UNUSED_MASK         (0xFFC00000)
#define ITM_GPIO_STATUS_GPIO_CHNL_0_CMPLT_STATUS_OFFSET (0x00000000)
#define ITM_GPIO_STATUS_GPIO_CHNL_0_CMPLT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_0_CMPLT_STATUS_MASK (0x00000001)
#define ITM_GPIO_STATUS_GPIO_CHNL_1_CMPLT_STATUS_OFFSET (0x00000001)
#define ITM_GPIO_STATUS_GPIO_CHNL_1_CMPLT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_1_CMPLT_STATUS_MASK (0x00000002)
#define ITM_GPIO_STATUS_GPIO_CHNL_2_CMPLT_STATUS_OFFSET (0x00000002)
#define ITM_GPIO_STATUS_GPIO_CHNL_2_CMPLT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_2_CMPLT_STATUS_MASK (0x00000004)
#define ITM_GPIO_STATUS_GPIO_CHNL_3_CMPLT_STATUS_OFFSET (0x00000003)
#define ITM_GPIO_STATUS_GPIO_CHNL_3_CMPLT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_3_CMPLT_STATUS_MASK (0x00000008)
#define ITM_GPIO_STATUS_GPIO_CHNL_4_CMPLT_STATUS_OFFSET (0x00000004)
#define ITM_GPIO_STATUS_GPIO_CHNL_4_CMPLT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_4_CMPLT_STATUS_MASK (0x00000010)
#define ITM_GPIO_STATUS_GPIO_CHNL_5_CMPLT_STATUS_OFFSET (0x00000005)
#define ITM_GPIO_STATUS_GPIO_CHNL_5_CMPLT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_5_CMPLT_STATUS_MASK (0x00000020)
#define ITM_GPIO_STATUS_GPIO_CHNL_6_CMPLT_STATUS_OFFSET (0x00000006)
#define ITM_GPIO_STATUS_GPIO_CHNL_6_CMPLT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_6_CMPLT_STATUS_MASK (0x00000040)
#define ITM_GPIO_STATUS_GPIO_CHNL_7_CMPLT_STATUS_OFFSET (0x00000007)
#define ITM_GPIO_STATUS_GPIO_CHNL_7_CMPLT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_7_CMPLT_STATUS_MASK (0x00000080)
#define ITM_GPIO_STATUS_GPIO_CHNL_0_ST_ABORT_STATUS_OFFSET (0x00000008)
#define ITM_GPIO_STATUS_GPIO_CHNL_0_ST_ABORT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_0_ST_ABORT_STATUS_MASK (0x00000100)
#define ITM_GPIO_STATUS_GPIO_CHNL_1_ST_ABORT_STATUS_OFFSET (0x00000009)
#define ITM_GPIO_STATUS_GPIO_CHNL_1_ST_ABORT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_1_ST_ABORT_STATUS_MASK (0x00000200)
#define ITM_GPIO_STATUS_GPIO_CHNL_2_ST_ABORT_STATUS_OFFSET (0x0000000a)
#define ITM_GPIO_STATUS_GPIO_CHNL_2_ST_ABORT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_2_ST_ABORT_STATUS_MASK (0x00000400)
#define ITM_GPIO_STATUS_GPIO_CHNL_3_ST_ABORT_STATUS_OFFSET (0x0000000b)
#define ITM_GPIO_STATUS_GPIO_CHNL_3_ST_ABORT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_3_ST_ABORT_STATUS_MASK (0x00000800)
#define ITM_GPIO_STATUS_GPIO_CHNL_4_ST_ABORT_STATUS_OFFSET (0x0000000c)
#define ITM_GPIO_STATUS_GPIO_CHNL_4_ST_ABORT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_4_ST_ABORT_STATUS_MASK (0x00001000)
#define ITM_GPIO_STATUS_GPIO_CHNL_5_ST_ABORT_STATUS_OFFSET (0x0000000d)
#define ITM_GPIO_STATUS_GPIO_CHNL_5_ST_ABORT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_5_ST_ABORT_STATUS_MASK (0x00002000)
#define ITM_GPIO_STATUS_GPIO_CHNL_6_ST_ABORT_STATUS_OFFSET (0x0000000e)
#define ITM_GPIO_STATUS_GPIO_CHNL_6_ST_ABORT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_6_ST_ABORT_STATUS_MASK (0x00004000)
#define ITM_GPIO_STATUS_GPIO_CHNL_7_ST_ABORT_STATUS_OFFSET (0x0000000f)
#define ITM_GPIO_STATUS_GPIO_CHNL_7_ST_ABORT_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_CHNL_7_ST_ABORT_STATUS_MASK (0x00008000)
#define ITM_GPIO_STATUS_GPIO_TIMER_0_STATUS_OFFSET (0x00000010)
#define ITM_GPIO_STATUS_GPIO_TIMER_0_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_TIMER_0_STATUS_MASK (0x00010000)
#define ITM_GPIO_STATUS_GPIO_TIMER_1_STATUS_OFFSET (0x00000011)
#define ITM_GPIO_STATUS_GPIO_TIMER_1_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_TIMER_1_STATUS_MASK (0x00020000)
#define ITM_GPIO_STATUS_GPIO_TIMER_2_STATUS_OFFSET (0x00000012)
#define ITM_GPIO_STATUS_GPIO_TIMER_2_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_TIMER_2_STATUS_MASK (0x00040000)
#define ITM_GPIO_STATUS_GPIO_TIMER_3_STATUS_OFFSET (0x00000013)
#define ITM_GPIO_STATUS_GPIO_TIMER_3_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_TIMER_3_STATUS_MASK (0x00080000)
#define ITM_GPIO_STATUS_GPIO_INTR_DEBUG_STATUS_OFFSET (0x00000014)
#define ITM_GPIO_STATUS_GPIO_INTR_DEBUG_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_INTR_DEBUG_STATUS_MASK (0x00100000)
#define ITM_GPIO_STATUS_GPIO_TRIG_PULSE_STATUS_OFFSET (0x00000015)
#define ITM_GPIO_STATUS_GPIO_TRIG_PULSE_STATUS_WIDTH (1)
#define ITM_GPIO_STATUS_GPIO_TRIG_PULSE_STATUS_MASK (0x00200000)

/*
* Register : ITM_GPIO_EN_STATUS
*/

#define ITM_GPIO_EN_STATUS_SIZE             (32)
#define ITM_GPIO_EN_STATUS_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0x32)
#define ITM_GPIO_EN_STATUS_RESET_VALUE      (0x00)
#define ITM_GPIO_EN_STATUS_BITFIELD_MASK    (0x003FFFFF)
#define ITM_GPIO_EN_STATUS_RWMASK           (0x00000000)
#define ITM_GPIO_EN_STATUS_ROMASK           (0x003FFFFF)
#define ITM_GPIO_EN_STATUS_WOMASK           (0x00000000)
#define ITM_GPIO_EN_STATUS_UNUSED_MASK      (0xFFC00000)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_0_CMPLT_EN_STATUS_OFFSET (0x00000000)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_0_CMPLT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_0_CMPLT_EN_STATUS_MASK (0x00000001)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_1_CMPLT_EN_STATUS_OFFSET (0x00000001)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_1_CMPLT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_1_CMPLT_EN_STATUS_MASK (0x00000002)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_2_CMPLT_EN_STATUS_OFFSET (0x00000002)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_2_CMPLT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_2_CMPLT_EN_STATUS_MASK (0x00000004)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_3_CMPLT_EN_STATUS_OFFSET (0x00000003)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_3_CMPLT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_3_CMPLT_EN_STATUS_MASK (0x00000008)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_4_CMPLT_EN_STATUS_OFFSET (0x00000004)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_4_CMPLT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_4_CMPLT_EN_STATUS_MASK (0x00000010)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_5_CMPLT_EN_STATUS_OFFSET (0x00000005)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_5_CMPLT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_5_CMPLT_EN_STATUS_MASK (0x00000020)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_6_CMPLT_EN_STATUS_OFFSET (0x00000006)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_6_CMPLT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_6_CMPLT_EN_STATUS_MASK (0x00000040)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_7_CMPLT_EN_STATUS_OFFSET (0x00000007)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_7_CMPLT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_7_CMPLT_EN_STATUS_MASK (0x00000080)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_0_ST_ABORT_EN_STATUS_OFFSET (0x00000008)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_0_ST_ABORT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_0_ST_ABORT_EN_STATUS_MASK (0x00000100)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_1_ST_ABORT_EN_STATUS_OFFSET (0x00000009)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_1_ST_ABORT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_1_ST_ABORT_EN_STATUS_MASK (0x00000200)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_2_ST_ABORT_EN_STATUS_OFFSET (0x0000000a)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_2_ST_ABORT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_2_ST_ABORT_EN_STATUS_MASK (0x00000400)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_3_ST_ABORT_EN_STATUS_OFFSET (0x0000000b)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_3_ST_ABORT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_3_ST_ABORT_EN_STATUS_MASK (0x00000800)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_4_ST_ABORT_EN_STATUS_OFFSET (0x0000000c)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_4_ST_ABORT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_4_ST_ABORT_EN_STATUS_MASK (0x00001000)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_5_ST_ABORT_EN_STATUS_OFFSET (0x0000000d)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_5_ST_ABORT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_5_ST_ABORT_EN_STATUS_MASK (0x00002000)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_6_ST_ABORT_EN_STATUS_OFFSET (0x0000000e)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_6_ST_ABORT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_6_ST_ABORT_EN_STATUS_MASK (0x00004000)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_7_ST_ABORT_EN_STATUS_OFFSET (0x0000000f)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_7_ST_ABORT_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_CHNL_7_ST_ABORT_EN_STATUS_MASK (0x00008000)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_0_EN_STATUS_OFFSET (0x00000010)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_0_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_0_EN_STATUS_MASK (0x00010000)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_1_EN_STATUS_OFFSET (0x00000011)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_1_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_1_EN_STATUS_MASK (0x00020000)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_2_EN_STATUS_OFFSET (0x00000012)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_2_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_2_EN_STATUS_MASK (0x00040000)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_3_EN_STATUS_OFFSET (0x00000013)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_3_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_TIMER_3_EN_STATUS_MASK (0x00080000)
#define ITM_GPIO_EN_STATUS_GPIO_INTR_DEBUG_EN_STATUS_OFFSET (0x00000014)
#define ITM_GPIO_EN_STATUS_GPIO_INTR_DEBUG_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_INTR_DEBUG_EN_STATUS_MASK (0x00100000)
#define ITM_GPIO_EN_STATUS_GPIO_TRIG_PULSE_EN_STATUS_OFFSET (0x00000015)
#define ITM_GPIO_EN_STATUS_GPIO_TRIG_PULSE_EN_STATUS_WIDTH (1)
#define ITM_GPIO_EN_STATUS_GPIO_TRIG_PULSE_EN_STATUS_MASK (0x00200000)

/*
* Register : ITM_GPIO_STATUS_BCLR
*/

#define ITM_GPIO_STATUS_BCLR_SIZE           (32)
#define ITM_GPIO_STATUS_BCLR_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x34)
#define ITM_GPIO_STATUS_BCLR_RESET_VALUE    (0x00)
#define ITM_GPIO_STATUS_BCLR_BITFIELD_MASK  (0x003FFFFF)
#define ITM_GPIO_STATUS_BCLR_RWMASK         (0x00000000)
#define ITM_GPIO_STATUS_BCLR_ROMASK         (0x00000000)
#define ITM_GPIO_STATUS_BCLR_WOMASK         (0x003FFFFF)
#define ITM_GPIO_STATUS_BCLR_UNUSED_MASK    (0xFFC00000)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_0_CMPLT_STATUS_BCLR_OFFSET (0x00000000)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_0_CMPLT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_0_CMPLT_STATUS_BCLR_MASK (0x00000001)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_1_CMPLT_STATUS_BCLR_OFFSET (0x00000001)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_1_CMPLT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_1_CMPLT_STATUS_BCLR_MASK (0x00000002)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_2_CMPLT_STATUS_BCLR_OFFSET (0x00000002)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_2_CMPLT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_2_CMPLT_STATUS_BCLR_MASK (0x00000004)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_3_CMPLT_STATUS_BCLR_OFFSET (0x00000003)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_3_CMPLT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_3_CMPLT_STATUS_BCLR_MASK (0x00000008)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_4_CMPLT_STATUS_BCLR_OFFSET (0x00000004)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_4_CMPLT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_4_CMPLT_STATUS_BCLR_MASK (0x00000010)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_5_CMPLT_STATUS_BCLR_OFFSET (0x00000005)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_5_CMPLT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_5_CMPLT_STATUS_BCLR_MASK (0x00000020)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_6_CMPLT_STATUS_BCLR_OFFSET (0x00000006)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_6_CMPLT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_6_CMPLT_STATUS_BCLR_MASK (0x00000040)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_7_CMPLT_STATUS_BCLR_OFFSET (0x00000007)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_7_CMPLT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_7_CMPLT_STATUS_BCLR_MASK (0x00000080)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_0_ST_ABORT_STATUS_BCLR_OFFSET (0x00000008)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_0_ST_ABORT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_0_ST_ABORT_STATUS_BCLR_MASK (0x00000100)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_1_ST_ABORT_STATUS_BCLR_OFFSET (0x00000009)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_1_ST_ABORT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_1_ST_ABORT_STATUS_BCLR_MASK (0x00000200)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_2_ST_ABORT_STATUS_BCLR_OFFSET (0x0000000a)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_2_ST_ABORT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_2_ST_ABORT_STATUS_BCLR_MASK (0x00000400)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_3_ST_ABORT_STATUS_BCLR_OFFSET (0x0000000b)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_3_ST_ABORT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_3_ST_ABORT_STATUS_BCLR_MASK (0x00000800)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_4_ST_ABORT_STATUS_BCLR_OFFSET (0x0000000c)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_4_ST_ABORT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_4_ST_ABORT_STATUS_BCLR_MASK (0x00001000)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_5_ST_ABORT_STATUS_BCLR_OFFSET (0x0000000d)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_5_ST_ABORT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_5_ST_ABORT_STATUS_BCLR_MASK (0x00002000)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_6_ST_ABORT_STATUS_BCLR_OFFSET (0x0000000e)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_6_ST_ABORT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_6_ST_ABORT_STATUS_BCLR_MASK (0x00004000)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_7_ST_ABORT_STATUS_BCLR_OFFSET (0x0000000f)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_7_ST_ABORT_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_CHNL_7_ST_ABORT_STATUS_BCLR_MASK (0x00008000)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_0_STATUS_BCLR_OFFSET (0x00000010)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_0_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_0_STATUS_BCLR_MASK (0x00010000)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_1_STATUS_BCLR_OFFSET (0x00000011)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_1_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_1_STATUS_BCLR_MASK (0x00020000)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_2_STATUS_BCLR_OFFSET (0x00000012)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_2_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_2_STATUS_BCLR_MASK (0x00040000)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_3_STATUS_BCLR_OFFSET (0x00000013)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_3_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_TIMER_3_STATUS_BCLR_MASK (0x00080000)
#define ITM_GPIO_STATUS_BCLR_GPIO_INTR_DEBUG_STATUS_BCLR_OFFSET (0x00000014)
#define ITM_GPIO_STATUS_BCLR_GPIO_INTR_DEBUG_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_INTR_DEBUG_STATUS_BCLR_MASK (0x00100000)
#define ITM_GPIO_STATUS_BCLR_GPIO_TRIG_PULSE_STATUS_BCLR_OFFSET (0x00000015)
#define ITM_GPIO_STATUS_BCLR_GPIO_TRIG_PULSE_STATUS_BCLR_WIDTH (1)
#define ITM_GPIO_STATUS_BCLR_GPIO_TRIG_PULSE_STATUS_BCLR_MASK (0x00200000)

/*
* Register : ITM_GPIO_STATUS_BSET
*/

#define ITM_GPIO_STATUS_BSET_SIZE           (32)
#define ITM_GPIO_STATUS_BSET_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x36)
#define ITM_GPIO_STATUS_BSET_RESET_VALUE    (0x00)
#define ITM_GPIO_STATUS_BSET_BITFIELD_MASK  (0x003FFFFF)
#define ITM_GPIO_STATUS_BSET_RWMASK         (0x00000000)
#define ITM_GPIO_STATUS_BSET_ROMASK         (0x00000000)
#define ITM_GPIO_STATUS_BSET_WOMASK         (0x003FFFFF)
#define ITM_GPIO_STATUS_BSET_UNUSED_MASK    (0xFFC00000)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_0_CMPLT_STATUS_BSET_OFFSET (0x00000000)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_0_CMPLT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_0_CMPLT_STATUS_BSET_MASK (0x00000001)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_1_CMPLT_STATUS_BSET_OFFSET (0x00000001)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_1_CMPLT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_1_CMPLT_STATUS_BSET_MASK (0x00000002)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_2_CMPLT_STATUS_BSET_OFFSET (0x00000002)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_2_CMPLT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_2_CMPLT_STATUS_BSET_MASK (0x00000004)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_3_CMPLT_STATUS_BSET_OFFSET (0x00000003)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_3_CMPLT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_3_CMPLT_STATUS_BSET_MASK (0x00000008)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_4_CMPLT_STATUS_BSET_OFFSET (0x00000004)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_4_CMPLT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_4_CMPLT_STATUS_BSET_MASK (0x00000010)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_5_CMPLT_STATUS_BSET_OFFSET (0x00000005)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_5_CMPLT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_5_CMPLT_STATUS_BSET_MASK (0x00000020)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_6_CMPLT_STATUS_BSET_OFFSET (0x00000006)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_6_CMPLT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_6_CMPLT_STATUS_BSET_MASK (0x00000040)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_7_CMPLT_STATUS_BSET_OFFSET (0x00000007)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_7_CMPLT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_7_CMPLT_STATUS_BSET_MASK (0x00000080)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_0_ST_ABORT_STATUS_BSET_OFFSET (0x00000008)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_0_ST_ABORT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_0_ST_ABORT_STATUS_BSET_MASK (0x00000100)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_1_ST_ABORT_STATUS_BSET_OFFSET (0x00000009)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_1_ST_ABORT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_1_ST_ABORT_STATUS_BSET_MASK (0x00000200)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_2_ST_ABORT_STATUS_BSET_OFFSET (0x0000000a)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_2_ST_ABORT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_2_ST_ABORT_STATUS_BSET_MASK (0x00000400)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_3_ST_ABORT_STATUS_BSET_OFFSET (0x0000000b)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_3_ST_ABORT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_3_ST_ABORT_STATUS_BSET_MASK (0x00000800)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_4_ST_ABORT_STATUS_BSET_OFFSET (0x0000000c)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_4_ST_ABORT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_4_ST_ABORT_STATUS_BSET_MASK (0x00001000)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_5_ST_ABORT_STATUS_BSET_OFFSET (0x0000000d)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_5_ST_ABORT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_5_ST_ABORT_STATUS_BSET_MASK (0x00002000)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_6_ST_ABORT_STATUS_BSET_OFFSET (0x0000000e)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_6_ST_ABORT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_6_ST_ABORT_STATUS_BSET_MASK (0x00004000)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_7_ST_ABORT_STATUS_BSET_OFFSET (0x0000000f)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_7_ST_ABORT_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_CHNL_7_ST_ABORT_STATUS_BSET_MASK (0x00008000)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_0_STATUS_BSET_OFFSET (0x00000010)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_0_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_0_STATUS_BSET_MASK (0x00010000)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_1_STATUS_BSET_OFFSET (0x00000011)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_1_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_1_STATUS_BSET_MASK (0x00020000)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_2_STATUS_BSET_OFFSET (0x00000012)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_2_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_2_STATUS_BSET_MASK (0x00040000)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_3_STATUS_BSET_OFFSET (0x00000013)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_3_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_TIMER_3_STATUS_BSET_MASK (0x00080000)
#define ITM_GPIO_STATUS_BSET_GPIO_INTR_DEBUG_STATUS_BSET_OFFSET (0x00000014)
#define ITM_GPIO_STATUS_BSET_GPIO_INTR_DEBUG_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_INTR_DEBUG_STATUS_BSET_MASK (0x00100000)
#define ITM_GPIO_STATUS_BSET_GPIO_TRIG_PULSE_STATUS_BSET_OFFSET (0x00000015)
#define ITM_GPIO_STATUS_BSET_GPIO_TRIG_PULSE_STATUS_BSET_WIDTH (1)
#define ITM_GPIO_STATUS_BSET_GPIO_TRIG_PULSE_STATUS_BSET_MASK (0x00200000)

/*
* Register : ITM_GPIO_EN_BCLR
*/

#define ITM_GPIO_EN_BCLR_SIZE               (32)
#define ITM_GPIO_EN_BCLR_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0x38)
#define ITM_GPIO_EN_BCLR_RESET_VALUE        (0x00)
#define ITM_GPIO_EN_BCLR_BITFIELD_MASK      (0x003FFFFF)
#define ITM_GPIO_EN_BCLR_RWMASK             (0x00000000)
#define ITM_GPIO_EN_BCLR_ROMASK             (0x00000000)
#define ITM_GPIO_EN_BCLR_WOMASK             (0x003FFFFF)
#define ITM_GPIO_EN_BCLR_UNUSED_MASK        (0xFFC00000)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_0_CMPLT_EN_BCLR_OFFSET (0x00000000)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_0_CMPLT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_0_CMPLT_EN_BCLR_MASK (0x00000001)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_1_CMPLT_EN_BCLR_OFFSET (0x00000001)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_1_CMPLT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_1_CMPLT_EN_BCLR_MASK (0x00000002)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_2_CMPLT_EN_BCLR_OFFSET (0x00000002)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_2_CMPLT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_2_CMPLT_EN_BCLR_MASK (0x00000004)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_3_CMPLT_EN_BCLR_OFFSET (0x00000003)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_3_CMPLT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_3_CMPLT_EN_BCLR_MASK (0x00000008)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_4_CMPLT_EN_BCLR_OFFSET (0x00000004)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_4_CMPLT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_4_CMPLT_EN_BCLR_MASK (0x00000010)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_5_CMPLT_EN_BCLR_OFFSET (0x00000005)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_5_CMPLT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_5_CMPLT_EN_BCLR_MASK (0x00000020)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_6_CMPLT_EN_BCLR_OFFSET (0x00000006)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_6_CMPLT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_6_CMPLT_EN_BCLR_MASK (0x00000040)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_7_CMPLT_EN_BCLR_OFFSET (0x00000007)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_7_CMPLT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_7_CMPLT_EN_BCLR_MASK (0x00000080)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_0_ST_ABORT_EN_BCLR_OFFSET (0x00000008)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_0_ST_ABORT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_0_ST_ABORT_EN_BCLR_MASK (0x00000100)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_1_ST_ABORT_EN_BCLR_OFFSET (0x00000009)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_1_ST_ABORT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_1_ST_ABORT_EN_BCLR_MASK (0x00000200)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_2_ST_ABORT_EN_BCLR_OFFSET (0x0000000a)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_2_ST_ABORT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_2_ST_ABORT_EN_BCLR_MASK (0x00000400)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_3_ST_ABORT_EN_BCLR_OFFSET (0x0000000b)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_3_ST_ABORT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_3_ST_ABORT_EN_BCLR_MASK (0x00000800)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_4_ST_ABORT_EN_BCLR_OFFSET (0x0000000c)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_4_ST_ABORT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_4_ST_ABORT_EN_BCLR_MASK (0x00001000)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_5_ST_ABORT_EN_BCLR_OFFSET (0x0000000d)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_5_ST_ABORT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_5_ST_ABORT_EN_BCLR_MASK (0x00002000)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_6_ST_ABORT_EN_BCLR_OFFSET (0x0000000e)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_6_ST_ABORT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_6_ST_ABORT_EN_BCLR_MASK (0x00004000)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_7_ST_ABORT_EN_BCLR_OFFSET (0x0000000f)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_7_ST_ABORT_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_CHNL_7_ST_ABORT_EN_BCLR_MASK (0x00008000)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_0_EN_BCLR_OFFSET (0x00000010)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_0_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_0_EN_BCLR_MASK (0x00010000)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_1_EN_BCLR_OFFSET (0x00000011)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_1_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_1_EN_BCLR_MASK (0x00020000)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_2_EN_BCLR_OFFSET (0x00000012)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_2_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_2_EN_BCLR_MASK (0x00040000)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_3_EN_BCLR_OFFSET (0x00000013)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_3_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_TIMER_3_EN_BCLR_MASK (0x00080000)
#define ITM_GPIO_EN_BCLR_GPIO_INTR_DEBUG_EN_BCLR_OFFSET (0x00000014)
#define ITM_GPIO_EN_BCLR_GPIO_INTR_DEBUG_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_INTR_DEBUG_EN_BCLR_MASK (0x00100000)
#define ITM_GPIO_EN_BCLR_GPIO_TRIG_PULSE_EN_BCLR_OFFSET (0x00000015)
#define ITM_GPIO_EN_BCLR_GPIO_TRIG_PULSE_EN_BCLR_WIDTH (1)
#define ITM_GPIO_EN_BCLR_GPIO_TRIG_PULSE_EN_BCLR_MASK (0x00200000)

/*
* Register : ITM_GPIO_EN_BSET
*/

#define ITM_GPIO_EN_BSET_SIZE               (32)
#define ITM_GPIO_EN_BSET_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0x3a)
#define ITM_GPIO_EN_BSET_RESET_VALUE        (0x00)
#define ITM_GPIO_EN_BSET_BITFIELD_MASK      (0x003FFFFF)
#define ITM_GPIO_EN_BSET_RWMASK             (0x00000000)
#define ITM_GPIO_EN_BSET_ROMASK             (0x00000000)
#define ITM_GPIO_EN_BSET_WOMASK             (0x003FFFFF)
#define ITM_GPIO_EN_BSET_UNUSED_MASK        (0xFFC00000)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_0_CMPLT_EN_BSET_OFFSET (0x00000000)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_0_CMPLT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_0_CMPLT_EN_BSET_MASK (0x00000001)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_1_CMPLT_EN_BSET_OFFSET (0x00000001)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_1_CMPLT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_1_CMPLT_EN_BSET_MASK (0x00000002)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_2_CMPLT_EN_BSET_OFFSET (0x00000002)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_2_CMPLT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_2_CMPLT_EN_BSET_MASK (0x00000004)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_3_CMPLT_EN_BSET_OFFSET (0x00000003)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_3_CMPLT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_3_CMPLT_EN_BSET_MASK (0x00000008)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_4_CMPLT_EN_BSET_OFFSET (0x00000004)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_4_CMPLT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_4_CMPLT_EN_BSET_MASK (0x00000010)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_5_CMPLT_EN_BSET_OFFSET (0x00000005)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_5_CMPLT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_5_CMPLT_EN_BSET_MASK (0x00000020)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_6_CMPLT_EN_BSET_OFFSET (0x00000006)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_6_CMPLT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_6_CMPLT_EN_BSET_MASK (0x00000040)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_7_CMPLT_EN_BSET_OFFSET (0x00000007)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_7_CMPLT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_7_CMPLT_EN_BSET_MASK (0x00000080)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_0_ST_ABORT_EN_BSET_OFFSET (0x00000008)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_0_ST_ABORT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_0_ST_ABORT_EN_BSET_MASK (0x00000100)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_1_ST_ABORT_EN_BSET_OFFSET (0x00000009)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_1_ST_ABORT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_1_ST_ABORT_EN_BSET_MASK (0x00000200)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_2_ST_ABORT_EN_BSET_OFFSET (0x0000000a)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_2_ST_ABORT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_2_ST_ABORT_EN_BSET_MASK (0x00000400)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_3_ST_ABORT_EN_BSET_OFFSET (0x0000000b)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_3_ST_ABORT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_3_ST_ABORT_EN_BSET_MASK (0x00000800)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_4_ST_ABORT_EN_BSET_OFFSET (0x0000000c)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_4_ST_ABORT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_4_ST_ABORT_EN_BSET_MASK (0x00001000)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_5_ST_ABORT_EN_BSET_OFFSET (0x0000000d)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_5_ST_ABORT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_5_ST_ABORT_EN_BSET_MASK (0x00002000)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_6_ST_ABORT_EN_BSET_OFFSET (0x0000000e)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_6_ST_ABORT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_6_ST_ABORT_EN_BSET_MASK (0x00004000)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_7_ST_ABORT_EN_BSET_OFFSET (0x0000000f)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_7_ST_ABORT_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_CHNL_7_ST_ABORT_EN_BSET_MASK (0x00008000)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_0_EN_BSET_OFFSET (0x00000010)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_0_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_0_EN_BSET_MASK (0x00010000)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_1_EN_BSET_OFFSET (0x00000011)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_1_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_1_EN_BSET_MASK (0x00020000)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_2_EN_BSET_OFFSET (0x00000012)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_2_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_2_EN_BSET_MASK (0x00040000)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_3_EN_BSET_OFFSET (0x00000013)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_3_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_TIMER_3_EN_BSET_MASK (0x00080000)
#define ITM_GPIO_EN_BSET_GPIO_INTR_DEBUG_EN_BSET_OFFSET (0x00000014)
#define ITM_GPIO_EN_BSET_GPIO_INTR_DEBUG_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_INTR_DEBUG_EN_BSET_MASK (0x00100000)
#define ITM_GPIO_EN_BSET_GPIO_TRIG_PULSE_EN_BSET_OFFSET (0x00000015)
#define ITM_GPIO_EN_BSET_GPIO_TRIG_PULSE_EN_BSET_WIDTH (1)
#define ITM_GPIO_EN_BSET_GPIO_TRIG_PULSE_EN_BSET_MASK (0x00200000)

/*
* Register : ITM_EWB_STATUS
*/

#define ITM_EWB_STATUS_SIZE                 (8)
#define ITM_EWB_STATUS_OFFSET               (pictorv2_in_ITM_BASE_ADDR + 0x3c)
#define ITM_EWB_STATUS_RESET_VALUE          (0x00)
#define ITM_EWB_STATUS_BITFIELD_MASK        (0x0F)
#define ITM_EWB_STATUS_RWMASK               (0x00)
#define ITM_EWB_STATUS_ROMASK               (0x0F)
#define ITM_EWB_STATUS_WOMASK               (0x00)
#define ITM_EWB_STATUS_UNUSED_MASK          (0xF0)
#define ITM_EWB_STATUS_EWB_0_STATUS_OFFSET  (0x00)
#define ITM_EWB_STATUS_EWB_0_STATUS_WIDTH   (1)
#define ITM_EWB_STATUS_EWB_0_STATUS_MASK    (0x01)
#define ITM_EWB_STATUS_EWB_1_STATUS_OFFSET  (0x01)
#define ITM_EWB_STATUS_EWB_1_STATUS_WIDTH   (1)
#define ITM_EWB_STATUS_EWB_1_STATUS_MASK    (0x02)
#define ITM_EWB_STATUS_EWB_2_STATUS_OFFSET  (0x02)
#define ITM_EWB_STATUS_EWB_2_STATUS_WIDTH   (1)
#define ITM_EWB_STATUS_EWB_2_STATUS_MASK    (0x04)
#define ITM_EWB_STATUS_EWB_3_STATUS_OFFSET  (0x03)
#define ITM_EWB_STATUS_EWB_3_STATUS_WIDTH   (1)
#define ITM_EWB_STATUS_EWB_3_STATUS_MASK    (0x08)

/*
* Register : ITM_EWB_EN_STATUS
*/

#define ITM_EWB_EN_STATUS_SIZE              (8)
#define ITM_EWB_EN_STATUS_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0x3e)
#define ITM_EWB_EN_STATUS_RESET_VALUE       (0x00)
#define ITM_EWB_EN_STATUS_BITFIELD_MASK     (0x0F)
#define ITM_EWB_EN_STATUS_RWMASK            (0x00)
#define ITM_EWB_EN_STATUS_ROMASK            (0x0F)
#define ITM_EWB_EN_STATUS_WOMASK            (0x00)
#define ITM_EWB_EN_STATUS_UNUSED_MASK       (0xF0)
#define ITM_EWB_EN_STATUS_EWB_0_EN_STATUS_OFFSET (0x00)
#define ITM_EWB_EN_STATUS_EWB_0_EN_STATUS_WIDTH (1)
#define ITM_EWB_EN_STATUS_EWB_0_EN_STATUS_MASK (0x01)
#define ITM_EWB_EN_STATUS_EWB_1_EN_STATUS_OFFSET (0x01)
#define ITM_EWB_EN_STATUS_EWB_1_EN_STATUS_WIDTH (1)
#define ITM_EWB_EN_STATUS_EWB_1_EN_STATUS_MASK (0x02)
#define ITM_EWB_EN_STATUS_EWB_2_EN_STATUS_OFFSET (0x02)
#define ITM_EWB_EN_STATUS_EWB_2_EN_STATUS_WIDTH (1)
#define ITM_EWB_EN_STATUS_EWB_2_EN_STATUS_MASK (0x04)
#define ITM_EWB_EN_STATUS_EWB_3_EN_STATUS_OFFSET (0x03)
#define ITM_EWB_EN_STATUS_EWB_3_EN_STATUS_WIDTH (1)
#define ITM_EWB_EN_STATUS_EWB_3_EN_STATUS_MASK (0x08)

/*
* Register : ITM_EWB_STATUS_BCLR
*/

#define ITM_EWB_STATUS_BCLR_SIZE            (8)
#define ITM_EWB_STATUS_BCLR_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0x40)
#define ITM_EWB_STATUS_BCLR_RESET_VALUE     (0x00)
#define ITM_EWB_STATUS_BCLR_BITFIELD_MASK   (0x0F)
#define ITM_EWB_STATUS_BCLR_RWMASK          (0x00)
#define ITM_EWB_STATUS_BCLR_ROMASK          (0x00)
#define ITM_EWB_STATUS_BCLR_WOMASK          (0x0F)
#define ITM_EWB_STATUS_BCLR_UNUSED_MASK     (0xF0)
#define ITM_EWB_STATUS_BCLR_EWB_0_STATUS_BCLR_OFFSET (0x00)
#define ITM_EWB_STATUS_BCLR_EWB_0_STATUS_BCLR_WIDTH (1)
#define ITM_EWB_STATUS_BCLR_EWB_0_STATUS_BCLR_MASK (0x01)
#define ITM_EWB_STATUS_BCLR_EWB_1_STATUS_BCLR_OFFSET (0x01)
#define ITM_EWB_STATUS_BCLR_EWB_1_STATUS_BCLR_WIDTH (1)
#define ITM_EWB_STATUS_BCLR_EWB_1_STATUS_BCLR_MASK (0x02)
#define ITM_EWB_STATUS_BCLR_EWB_2_STATUS_BCLR_OFFSET (0x02)
#define ITM_EWB_STATUS_BCLR_EWB_2_STATUS_BCLR_WIDTH (1)
#define ITM_EWB_STATUS_BCLR_EWB_2_STATUS_BCLR_MASK (0x04)
#define ITM_EWB_STATUS_BCLR_EWB_3_STATUS_BCLR_OFFSET (0x03)
#define ITM_EWB_STATUS_BCLR_EWB_3_STATUS_BCLR_WIDTH (1)
#define ITM_EWB_STATUS_BCLR_EWB_3_STATUS_BCLR_MASK (0x08)

/*
* Register : ITM_EWB_STATUS_BSET
*/

#define ITM_EWB_STATUS_BSET_SIZE            (8)
#define ITM_EWB_STATUS_BSET_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0x42)
#define ITM_EWB_STATUS_BSET_RESET_VALUE     (0x00)
#define ITM_EWB_STATUS_BSET_BITFIELD_MASK   (0x0F)
#define ITM_EWB_STATUS_BSET_RWMASK          (0x00)
#define ITM_EWB_STATUS_BSET_ROMASK          (0x00)
#define ITM_EWB_STATUS_BSET_WOMASK          (0x0F)
#define ITM_EWB_STATUS_BSET_UNUSED_MASK     (0xF0)
#define ITM_EWB_STATUS_BSET_EWB_0_STATUS_BSET_OFFSET (0x00)
#define ITM_EWB_STATUS_BSET_EWB_0_STATUS_BSET_WIDTH (1)
#define ITM_EWB_STATUS_BSET_EWB_0_STATUS_BSET_MASK (0x01)
#define ITM_EWB_STATUS_BSET_EWB_1_STATUS_BSET_OFFSET (0x01)
#define ITM_EWB_STATUS_BSET_EWB_1_STATUS_BSET_WIDTH (1)
#define ITM_EWB_STATUS_BSET_EWB_1_STATUS_BSET_MASK (0x02)
#define ITM_EWB_STATUS_BSET_EWB_2_STATUS_BSET_OFFSET (0x02)
#define ITM_EWB_STATUS_BSET_EWB_2_STATUS_BSET_WIDTH (1)
#define ITM_EWB_STATUS_BSET_EWB_2_STATUS_BSET_MASK (0x04)
#define ITM_EWB_STATUS_BSET_EWB_3_STATUS_BSET_OFFSET (0x03)
#define ITM_EWB_STATUS_BSET_EWB_3_STATUS_BSET_WIDTH (1)
#define ITM_EWB_STATUS_BSET_EWB_3_STATUS_BSET_MASK (0x08)

/*
* Register : ITM_EWB_EN_BCLR
*/

#define ITM_EWB_EN_BCLR_SIZE                (8)
#define ITM_EWB_EN_BCLR_OFFSET              (pictorv2_in_ITM_BASE_ADDR + 0x44)
#define ITM_EWB_EN_BCLR_RESET_VALUE         (0x00)
#define ITM_EWB_EN_BCLR_BITFIELD_MASK       (0x0F)
#define ITM_EWB_EN_BCLR_RWMASK              (0x00)
#define ITM_EWB_EN_BCLR_ROMASK              (0x00)
#define ITM_EWB_EN_BCLR_WOMASK              (0x0F)
#define ITM_EWB_EN_BCLR_UNUSED_MASK         (0xF0)
#define ITM_EWB_EN_BCLR_EWB_0_EN_BCLR_OFFSET (0x00)
#define ITM_EWB_EN_BCLR_EWB_0_EN_BCLR_WIDTH (1)
#define ITM_EWB_EN_BCLR_EWB_0_EN_BCLR_MASK  (0x01)
#define ITM_EWB_EN_BCLR_EWB_1_EN_BCLR_OFFSET (0x01)
#define ITM_EWB_EN_BCLR_EWB_1_EN_BCLR_WIDTH (1)
#define ITM_EWB_EN_BCLR_EWB_1_EN_BCLR_MASK  (0x02)
#define ITM_EWB_EN_BCLR_EWB_2_EN_BCLR_OFFSET (0x02)
#define ITM_EWB_EN_BCLR_EWB_2_EN_BCLR_WIDTH (1)
#define ITM_EWB_EN_BCLR_EWB_2_EN_BCLR_MASK  (0x04)
#define ITM_EWB_EN_BCLR_EWB_3_EN_BCLR_OFFSET (0x03)
#define ITM_EWB_EN_BCLR_EWB_3_EN_BCLR_WIDTH (1)
#define ITM_EWB_EN_BCLR_EWB_3_EN_BCLR_MASK  (0x08)

/*
* Register : ITM_EWB_EN_BSET
*/

#define ITM_EWB_EN_BSET_SIZE                (8)
#define ITM_EWB_EN_BSET_OFFSET              (pictorv2_in_ITM_BASE_ADDR + 0x46)
#define ITM_EWB_EN_BSET_RESET_VALUE         (0x00)
#define ITM_EWB_EN_BSET_BITFIELD_MASK       (0x0F)
#define ITM_EWB_EN_BSET_RWMASK              (0x00)
#define ITM_EWB_EN_BSET_ROMASK              (0x00)
#define ITM_EWB_EN_BSET_WOMASK              (0x0F)
#define ITM_EWB_EN_BSET_UNUSED_MASK         (0xF0)
#define ITM_EWB_EN_BSET_EWB_0_EN_BSET_OFFSET (0x00)
#define ITM_EWB_EN_BSET_EWB_0_EN_BSET_WIDTH (1)
#define ITM_EWB_EN_BSET_EWB_0_EN_BSET_MASK  (0x01)
#define ITM_EWB_EN_BSET_EWB_1_EN_BSET_OFFSET (0x01)
#define ITM_EWB_EN_BSET_EWB_1_EN_BSET_WIDTH (1)
#define ITM_EWB_EN_BSET_EWB_1_EN_BSET_MASK  (0x02)
#define ITM_EWB_EN_BSET_EWB_2_EN_BSET_OFFSET (0x02)
#define ITM_EWB_EN_BSET_EWB_2_EN_BSET_WIDTH (1)
#define ITM_EWB_EN_BSET_EWB_2_EN_BSET_MASK  (0x04)
#define ITM_EWB_EN_BSET_EWB_3_EN_BSET_OFFSET (0x03)
#define ITM_EWB_EN_BSET_EWB_3_EN_BSET_WIDTH (1)
#define ITM_EWB_EN_BSET_EWB_3_EN_BSET_MASK  (0x08)

/*
* Register : ITM_MMWB_STATUS
*/

#define ITM_MMWB_STATUS_SIZE                (8)
#define ITM_MMWB_STATUS_OFFSET              (pictorv2_in_ITM_BASE_ADDR + 0x48)
#define ITM_MMWB_STATUS_RESET_VALUE         (0x00)
#define ITM_MMWB_STATUS_BITFIELD_MASK       (0x01)
#define ITM_MMWB_STATUS_RWMASK              (0x00)
#define ITM_MMWB_STATUS_ROMASK              (0x01)
#define ITM_MMWB_STATUS_WOMASK              (0x00)
#define ITM_MMWB_STATUS_UNUSED_MASK         (0xFE)
#define ITM_MMWB_STATUS_MMWB_STATUS_OFFSET  (0x00)
#define ITM_MMWB_STATUS_MMWB_STATUS_WIDTH   (1)
#define ITM_MMWB_STATUS_MMWB_STATUS_MASK    (0x01)

/*
* Register : ITM_MMWB_EN_STATUS
*/

#define ITM_MMWB_EN_STATUS_SIZE             (8)
#define ITM_MMWB_EN_STATUS_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0x4a)
#define ITM_MMWB_EN_STATUS_RESET_VALUE      (0x00)
#define ITM_MMWB_EN_STATUS_BITFIELD_MASK    (0x01)
#define ITM_MMWB_EN_STATUS_RWMASK           (0x00)
#define ITM_MMWB_EN_STATUS_ROMASK           (0x01)
#define ITM_MMWB_EN_STATUS_WOMASK           (0x00)
#define ITM_MMWB_EN_STATUS_UNUSED_MASK      (0xFE)
#define ITM_MMWB_EN_STATUS_MMWB_EN_STATUS_OFFSET (0x00)
#define ITM_MMWB_EN_STATUS_MMWB_EN_STATUS_WIDTH (1)
#define ITM_MMWB_EN_STATUS_MMWB_EN_STATUS_MASK (0x01)

/*
* Register : ITM_MMWB_STATUS_BCLR
*/

#define ITM_MMWB_STATUS_BCLR_SIZE           (8)
#define ITM_MMWB_STATUS_BCLR_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x4c)
#define ITM_MMWB_STATUS_BCLR_RESET_VALUE    (0x00)
#define ITM_MMWB_STATUS_BCLR_BITFIELD_MASK  (0x01)
#define ITM_MMWB_STATUS_BCLR_RWMASK         (0x00)
#define ITM_MMWB_STATUS_BCLR_ROMASK         (0x00)
#define ITM_MMWB_STATUS_BCLR_WOMASK         (0x01)
#define ITM_MMWB_STATUS_BCLR_UNUSED_MASK    (0xFE)
#define ITM_MMWB_STATUS_BCLR_MMWB_STATUS_BCLR_OFFSET (0x00)
#define ITM_MMWB_STATUS_BCLR_MMWB_STATUS_BCLR_WIDTH (1)
#define ITM_MMWB_STATUS_BCLR_MMWB_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_MMWB_STATUS_BSET
*/

#define ITM_MMWB_STATUS_BSET_SIZE           (8)
#define ITM_MMWB_STATUS_BSET_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x4e)
#define ITM_MMWB_STATUS_BSET_RESET_VALUE    (0x00)
#define ITM_MMWB_STATUS_BSET_BITFIELD_MASK  (0x01)
#define ITM_MMWB_STATUS_BSET_RWMASK         (0x00)
#define ITM_MMWB_STATUS_BSET_ROMASK         (0x00)
#define ITM_MMWB_STATUS_BSET_WOMASK         (0x01)
#define ITM_MMWB_STATUS_BSET_UNUSED_MASK    (0xFE)
#define ITM_MMWB_STATUS_BSET_MMWB_STATUS_BSET_OFFSET (0x00)
#define ITM_MMWB_STATUS_BSET_MMWB_STATUS_BSET_WIDTH (1)
#define ITM_MMWB_STATUS_BSET_MMWB_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_MMWB_EN_BCLR
*/

#define ITM_MMWB_EN_BCLR_SIZE               (8)
#define ITM_MMWB_EN_BCLR_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0x50)
#define ITM_MMWB_EN_BCLR_RESET_VALUE        (0x00)
#define ITM_MMWB_EN_BCLR_BITFIELD_MASK      (0x01)
#define ITM_MMWB_EN_BCLR_RWMASK             (0x00)
#define ITM_MMWB_EN_BCLR_ROMASK             (0x00)
#define ITM_MMWB_EN_BCLR_WOMASK             (0x01)
#define ITM_MMWB_EN_BCLR_UNUSED_MASK        (0xFE)
#define ITM_MMWB_EN_BCLR_MMWB_EN_BCLR_OFFSET (0x00)
#define ITM_MMWB_EN_BCLR_MMWB_EN_BCLR_WIDTH (1)
#define ITM_MMWB_EN_BCLR_MMWB_EN_BCLR_MASK  (0x01)

/*
* Register : ITM_MMWB_EN_BSET
*/

#define ITM_MMWB_EN_BSET_SIZE               (8)
#define ITM_MMWB_EN_BSET_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0x52)
#define ITM_MMWB_EN_BSET_RESET_VALUE        (0x00)
#define ITM_MMWB_EN_BSET_BITFIELD_MASK      (0x01)
#define ITM_MMWB_EN_BSET_RWMASK             (0x00)
#define ITM_MMWB_EN_BSET_ROMASK             (0x00)
#define ITM_MMWB_EN_BSET_WOMASK             (0x01)
#define ITM_MMWB_EN_BSET_UNUSED_MASK        (0xFE)
#define ITM_MMWB_EN_BSET_MMWB_EN_BSET_OFFSET (0x00)
#define ITM_MMWB_EN_BSET_MMWB_EN_BSET_WIDTH (1)
#define ITM_MMWB_EN_BSET_MMWB_EN_BSET_MASK  (0x01)

/*
* Register : ITM_GLACE_STATUS
*/

#define ITM_GLACE_STATUS_SIZE               (8)
#define ITM_GLACE_STATUS_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0x54)
#define ITM_GLACE_STATUS_RESET_VALUE        (0x00)
#define ITM_GLACE_STATUS_BITFIELD_MASK      (0x01)
#define ITM_GLACE_STATUS_RWMASK             (0x00)
#define ITM_GLACE_STATUS_ROMASK             (0x01)
#define ITM_GLACE_STATUS_WOMASK             (0x00)
#define ITM_GLACE_STATUS_UNUSED_MASK        (0xFE)
#define ITM_GLACE_STATUS_GLACE_STATUS_OFFSET (0x00)
#define ITM_GLACE_STATUS_GLACE_STATUS_WIDTH (1)
#define ITM_GLACE_STATUS_GLACE_STATUS_MASK  (0x01)

/*
* Register : ITM_GLACE_EN_STATUS
*/

#define ITM_GLACE_EN_STATUS_SIZE            (8)
#define ITM_GLACE_EN_STATUS_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0x56)
#define ITM_GLACE_EN_STATUS_RESET_VALUE     (0x00)
#define ITM_GLACE_EN_STATUS_BITFIELD_MASK   (0x01)
#define ITM_GLACE_EN_STATUS_RWMASK          (0x00)
#define ITM_GLACE_EN_STATUS_ROMASK          (0x01)
#define ITM_GLACE_EN_STATUS_WOMASK          (0x00)
#define ITM_GLACE_EN_STATUS_UNUSED_MASK     (0xFE)
#define ITM_GLACE_EN_STATUS_GLACE_EN_STATUS_OFFSET (0x00)
#define ITM_GLACE_EN_STATUS_GLACE_EN_STATUS_WIDTH (1)
#define ITM_GLACE_EN_STATUS_GLACE_EN_STATUS_MASK (0x01)

/*
* Register : ITM_GLACE_STATUS_BCLR
*/

#define ITM_GLACE_STATUS_BCLR_SIZE          (8)
#define ITM_GLACE_STATUS_BCLR_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x58)
#define ITM_GLACE_STATUS_BCLR_RESET_VALUE   (0x00)
#define ITM_GLACE_STATUS_BCLR_BITFIELD_MASK (0x01)
#define ITM_GLACE_STATUS_BCLR_RWMASK        (0x00)
#define ITM_GLACE_STATUS_BCLR_ROMASK        (0x00)
#define ITM_GLACE_STATUS_BCLR_WOMASK        (0x01)
#define ITM_GLACE_STATUS_BCLR_UNUSED_MASK   (0xFE)
#define ITM_GLACE_STATUS_BCLR_GLACE_STATUS_BCLR_OFFSET (0x00)
#define ITM_GLACE_STATUS_BCLR_GLACE_STATUS_BCLR_WIDTH (1)
#define ITM_GLACE_STATUS_BCLR_GLACE_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_GLACE_STATUS_BSET
*/

#define ITM_GLACE_STATUS_BSET_SIZE          (8)
#define ITM_GLACE_STATUS_BSET_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x5a)
#define ITM_GLACE_STATUS_BSET_RESET_VALUE   (0x00)
#define ITM_GLACE_STATUS_BSET_BITFIELD_MASK (0x01)
#define ITM_GLACE_STATUS_BSET_RWMASK        (0x00)
#define ITM_GLACE_STATUS_BSET_ROMASK        (0x00)
#define ITM_GLACE_STATUS_BSET_WOMASK        (0x01)
#define ITM_GLACE_STATUS_BSET_UNUSED_MASK   (0xFE)
#define ITM_GLACE_STATUS_BSET_GLACE_STATUS_BSET_OFFSET (0x00)
#define ITM_GLACE_STATUS_BSET_GLACE_STATUS_BSET_WIDTH (1)
#define ITM_GLACE_STATUS_BSET_GLACE_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_GLACE_EN_BCLR
*/

#define ITM_GLACE_EN_BCLR_SIZE              (8)
#define ITM_GLACE_EN_BCLR_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0x5c)
#define ITM_GLACE_EN_BCLR_RESET_VALUE       (0x00)
#define ITM_GLACE_EN_BCLR_BITFIELD_MASK     (0x01)
#define ITM_GLACE_EN_BCLR_RWMASK            (0x00)
#define ITM_GLACE_EN_BCLR_ROMASK            (0x00)
#define ITM_GLACE_EN_BCLR_WOMASK            (0x01)
#define ITM_GLACE_EN_BCLR_UNUSED_MASK       (0xFE)
#define ITM_GLACE_EN_BCLR_GLACE_EN_BCLR_OFFSET (0x00)
#define ITM_GLACE_EN_BCLR_GLACE_EN_BCLR_WIDTH (1)
#define ITM_GLACE_EN_BCLR_GLACE_EN_BCLR_MASK (0x01)

/*
* Register : ITM_GLACE_EN_BSET
*/

#define ITM_GLACE_EN_BSET_SIZE              (8)
#define ITM_GLACE_EN_BSET_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0x5e)
#define ITM_GLACE_EN_BSET_RESET_VALUE       (0x00)
#define ITM_GLACE_EN_BSET_BITFIELD_MASK     (0x01)
#define ITM_GLACE_EN_BSET_RWMASK            (0x00)
#define ITM_GLACE_EN_BSET_ROMASK            (0x00)
#define ITM_GLACE_EN_BSET_WOMASK            (0x01)
#define ITM_GLACE_EN_BSET_UNUSED_MASK       (0xFE)
#define ITM_GLACE_EN_BSET_GLACE_EN_BSET_OFFSET (0x00)
#define ITM_GLACE_EN_BSET_GLACE_EN_BSET_WIDTH (1)
#define ITM_GLACE_EN_BSET_GLACE_EN_BSET_MASK (0x01)

/*
* Register : ITM_EXP6X8_STATUS
*/

#define ITM_EXP6X8_STATUS_SIZE              (8)
#define ITM_EXP6X8_STATUS_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0x60)
#define ITM_EXP6X8_STATUS_RESET_VALUE       (0x00)
#define ITM_EXP6X8_STATUS_BITFIELD_MASK     (0x01)
#define ITM_EXP6X8_STATUS_RWMASK            (0x00)
#define ITM_EXP6X8_STATUS_ROMASK            (0x01)
#define ITM_EXP6X8_STATUS_WOMASK            (0x00)
#define ITM_EXP6X8_STATUS_UNUSED_MASK       (0xFE)
#define ITM_EXP6X8_STATUS_EXP6X8_STATUS_OFFSET (0x00)
#define ITM_EXP6X8_STATUS_EXP6X8_STATUS_WIDTH (1)
#define ITM_EXP6X8_STATUS_EXP6X8_STATUS_MASK (0x01)

/*
* Register : ITM_EXP6X8_EN_STATUS
*/

#define ITM_EXP6X8_EN_STATUS_SIZE           (8)
#define ITM_EXP6X8_EN_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x62)
#define ITM_EXP6X8_EN_STATUS_RESET_VALUE    (0x00)
#define ITM_EXP6X8_EN_STATUS_BITFIELD_MASK  (0x01)
#define ITM_EXP6X8_EN_STATUS_RWMASK         (0x00)
#define ITM_EXP6X8_EN_STATUS_ROMASK         (0x01)
#define ITM_EXP6X8_EN_STATUS_WOMASK         (0x00)
#define ITM_EXP6X8_EN_STATUS_UNUSED_MASK    (0xFE)
#define ITM_EXP6X8_EN_STATUS_EXP6X8_EN_STATUS_OFFSET (0x00)
#define ITM_EXP6X8_EN_STATUS_EXP6X8_EN_STATUS_WIDTH (1)
#define ITM_EXP6X8_EN_STATUS_EXP6X8_EN_STATUS_MASK (0x01)

/*
* Register : ITM_EXP6X8_STATUS_BCLR
*/

#define ITM_EXP6X8_STATUS_BCLR_SIZE         (8)
#define ITM_EXP6X8_STATUS_BCLR_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0x64)
#define ITM_EXP6X8_STATUS_BCLR_RESET_VALUE  (0x00)
#define ITM_EXP6X8_STATUS_BCLR_BITFIELD_MASK (0x01)
#define ITM_EXP6X8_STATUS_BCLR_RWMASK       (0x00)
#define ITM_EXP6X8_STATUS_BCLR_ROMASK       (0x00)
#define ITM_EXP6X8_STATUS_BCLR_WOMASK       (0x01)
#define ITM_EXP6X8_STATUS_BCLR_UNUSED_MASK  (0xFE)
#define ITM_EXP6X8_STATUS_BCLR_EXP6X8_STATUS_BCLR_OFFSET (0x00)
#define ITM_EXP6X8_STATUS_BCLR_EXP6X8_STATUS_BCLR_WIDTH (1)
#define ITM_EXP6X8_STATUS_BCLR_EXP6X8_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_EXP6X8_STATUS_BSET
*/

#define ITM_EXP6X8_STATUS_BSET_SIZE         (8)
#define ITM_EXP6X8_STATUS_BSET_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0x66)
#define ITM_EXP6X8_STATUS_BSET_RESET_VALUE  (0x00)
#define ITM_EXP6X8_STATUS_BSET_BITFIELD_MASK (0x01)
#define ITM_EXP6X8_STATUS_BSET_RWMASK       (0x00)
#define ITM_EXP6X8_STATUS_BSET_ROMASK       (0x00)
#define ITM_EXP6X8_STATUS_BSET_WOMASK       (0x01)
#define ITM_EXP6X8_STATUS_BSET_UNUSED_MASK  (0xFE)
#define ITM_EXP6X8_STATUS_BSET_EXP6X8_STATUS_BSET_OFFSET (0x00)
#define ITM_EXP6X8_STATUS_BSET_EXP6X8_STATUS_BSET_WIDTH (1)
#define ITM_EXP6X8_STATUS_BSET_EXP6X8_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_EXP6X8_EN_BCLR
*/

#define ITM_EXP6X8_EN_BCLR_SIZE             (8)
#define ITM_EXP6X8_EN_BCLR_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0x68)
#define ITM_EXP6X8_EN_BCLR_RESET_VALUE      (0x00)
#define ITM_EXP6X8_EN_BCLR_BITFIELD_MASK    (0x01)
#define ITM_EXP6X8_EN_BCLR_RWMASK           (0x00)
#define ITM_EXP6X8_EN_BCLR_ROMASK           (0x00)
#define ITM_EXP6X8_EN_BCLR_WOMASK           (0x01)
#define ITM_EXP6X8_EN_BCLR_UNUSED_MASK      (0xFE)
#define ITM_EXP6X8_EN_BCLR_EXP6X8_EN_BCLR_OFFSET (0x00)
#define ITM_EXP6X8_EN_BCLR_EXP6X8_EN_BCLR_WIDTH (1)
#define ITM_EXP6X8_EN_BCLR_EXP6X8_EN_BCLR_MASK (0x01)

/*
* Register : ITM_EXP6X8_EN_BSET
*/

#define ITM_EXP6X8_EN_BSET_SIZE             (8)
#define ITM_EXP6X8_EN_BSET_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0x6a)
#define ITM_EXP6X8_EN_BSET_RESET_VALUE      (0x00)
#define ITM_EXP6X8_EN_BSET_BITFIELD_MASK    (0x01)
#define ITM_EXP6X8_EN_BSET_RWMASK           (0x00)
#define ITM_EXP6X8_EN_BSET_ROMASK           (0x00)
#define ITM_EXP6X8_EN_BSET_WOMASK           (0x01)
#define ITM_EXP6X8_EN_BSET_UNUSED_MASK      (0xFE)
#define ITM_EXP6X8_EN_BSET_EXP6X8_EN_BSET_OFFSET (0x00)
#define ITM_EXP6X8_EN_BSET_EXP6X8_EN_BSET_WIDTH (1)
#define ITM_EXP6X8_EN_BSET_EXP6X8_EN_BSET_MASK (0x01)

/*
* Register : ITM_GHIST_STATUS
*/

#define ITM_GHIST_STATUS_SIZE               (8)
#define ITM_GHIST_STATUS_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0x6c)
#define ITM_GHIST_STATUS_RESET_VALUE        (0x00)
#define ITM_GHIST_STATUS_BITFIELD_MASK      (0x01)
#define ITM_GHIST_STATUS_RWMASK             (0x00)
#define ITM_GHIST_STATUS_ROMASK             (0x01)
#define ITM_GHIST_STATUS_WOMASK             (0x00)
#define ITM_GHIST_STATUS_UNUSED_MASK        (0xFE)
#define ITM_GHIST_STATUS_GHIST_STATUS_OFFSET (0x00)
#define ITM_GHIST_STATUS_GHIST_STATUS_WIDTH (1)
#define ITM_GHIST_STATUS_GHIST_STATUS_MASK  (0x01)

/*
* Register : ITM_GHIST_EN_STATUS
*/

#define ITM_GHIST_EN_STATUS_SIZE            (8)
#define ITM_GHIST_EN_STATUS_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0x6e)
#define ITM_GHIST_EN_STATUS_RESET_VALUE     (0x00)
#define ITM_GHIST_EN_STATUS_BITFIELD_MASK   (0x01)
#define ITM_GHIST_EN_STATUS_RWMASK          (0x00)
#define ITM_GHIST_EN_STATUS_ROMASK          (0x01)
#define ITM_GHIST_EN_STATUS_WOMASK          (0x00)
#define ITM_GHIST_EN_STATUS_UNUSED_MASK     (0xFE)
#define ITM_GHIST_EN_STATUS_GHIST_EN_STATUS_OFFSET (0x00)
#define ITM_GHIST_EN_STATUS_GHIST_EN_STATUS_WIDTH (1)
#define ITM_GHIST_EN_STATUS_GHIST_EN_STATUS_MASK (0x01)

/*
* Register : ITM_GHIST_STATUS_BCLR
*/

#define ITM_GHIST_STATUS_BCLR_SIZE          (8)
#define ITM_GHIST_STATUS_BCLR_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x70)
#define ITM_GHIST_STATUS_BCLR_RESET_VALUE   (0x00)
#define ITM_GHIST_STATUS_BCLR_BITFIELD_MASK (0x01)
#define ITM_GHIST_STATUS_BCLR_RWMASK        (0x00)
#define ITM_GHIST_STATUS_BCLR_ROMASK        (0x00)
#define ITM_GHIST_STATUS_BCLR_WOMASK        (0x01)
#define ITM_GHIST_STATUS_BCLR_UNUSED_MASK   (0xFE)
#define ITM_GHIST_STATUS_BCLR_GHIST_STATUS_BCLR_OFFSET (0x00)
#define ITM_GHIST_STATUS_BCLR_GHIST_STATUS_BCLR_WIDTH (1)
#define ITM_GHIST_STATUS_BCLR_GHIST_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_GHIST_STATUS_BSET
*/

#define ITM_GHIST_STATUS_BSET_SIZE          (8)
#define ITM_GHIST_STATUS_BSET_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x72)
#define ITM_GHIST_STATUS_BSET_RESET_VALUE   (0x00)
#define ITM_GHIST_STATUS_BSET_BITFIELD_MASK (0x01)
#define ITM_GHIST_STATUS_BSET_RWMASK        (0x00)
#define ITM_GHIST_STATUS_BSET_ROMASK        (0x00)
#define ITM_GHIST_STATUS_BSET_WOMASK        (0x01)
#define ITM_GHIST_STATUS_BSET_UNUSED_MASK   (0xFE)
#define ITM_GHIST_STATUS_BSET_GHIST_STATUS_BSET_OFFSET (0x00)
#define ITM_GHIST_STATUS_BSET_GHIST_STATUS_BSET_WIDTH (1)
#define ITM_GHIST_STATUS_BSET_GHIST_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_GHIST_EN_BCLR
*/

#define ITM_GHIST_EN_BCLR_SIZE              (8)
#define ITM_GHIST_EN_BCLR_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0x74)
#define ITM_GHIST_EN_BCLR_RESET_VALUE       (0x00)
#define ITM_GHIST_EN_BCLR_BITFIELD_MASK     (0x01)
#define ITM_GHIST_EN_BCLR_RWMASK            (0x00)
#define ITM_GHIST_EN_BCLR_ROMASK            (0x00)
#define ITM_GHIST_EN_BCLR_WOMASK            (0x01)
#define ITM_GHIST_EN_BCLR_UNUSED_MASK       (0xFE)
#define ITM_GHIST_EN_BCLR_GHIST_EN_BCLR_OFFSET (0x00)
#define ITM_GHIST_EN_BCLR_GHIST_EN_BCLR_WIDTH (1)
#define ITM_GHIST_EN_BCLR_GHIST_EN_BCLR_MASK (0x01)

/*
* Register : ITM_GHIST_EN_BSET
*/

#define ITM_GHIST_EN_BSET_SIZE              (8)
#define ITM_GHIST_EN_BSET_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0x76)
#define ITM_GHIST_EN_BSET_RESET_VALUE       (0x00)
#define ITM_GHIST_EN_BSET_BITFIELD_MASK     (0x01)
#define ITM_GHIST_EN_BSET_RWMASK            (0x00)
#define ITM_GHIST_EN_BSET_ROMASK            (0x00)
#define ITM_GHIST_EN_BSET_WOMASK            (0x01)
#define ITM_GHIST_EN_BSET_UNUSED_MASK       (0xFE)
#define ITM_GHIST_EN_BSET_GHIST_EN_BSET_OFFSET (0x00)
#define ITM_GHIST_EN_BSET_GHIST_EN_BSET_WIDTH (1)
#define ITM_GHIST_EN_BSET_GHIST_EN_BSET_MASK (0x01)

/*
* Register : ITM_AF_STATUS
*/

#define ITM_AF_STATUS_SIZE                  (16)
#define ITM_AF_STATUS_OFFSET                (pictorv2_in_ITM_BASE_ADDR + 0x78)
#define ITM_AF_STATUS_RESET_VALUE           (0x0000)
#define ITM_AF_STATUS_BITFIELD_MASK         (0x03FF)
#define ITM_AF_STATUS_RWMASK                (0x0000)
#define ITM_AF_STATUS_ROMASK                (0x03FF)
#define ITM_AF_STATUS_WOMASK                (0x0000)
#define ITM_AF_STATUS_UNUSED_MASK           (0xFC00)
#define ITM_AF_STATUS_AF_0_STATUS_OFFSET    (0x0000)
#define ITM_AF_STATUS_AF_0_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_0_STATUS_MASK      (0x0001)
#define ITM_AF_STATUS_AF_1_STATUS_OFFSET    (0x0001)
#define ITM_AF_STATUS_AF_1_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_1_STATUS_MASK      (0x0002)
#define ITM_AF_STATUS_AF_2_STATUS_OFFSET    (0x0002)
#define ITM_AF_STATUS_AF_2_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_2_STATUS_MASK      (0x0004)
#define ITM_AF_STATUS_AF_3_STATUS_OFFSET    (0x0003)
#define ITM_AF_STATUS_AF_3_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_3_STATUS_MASK      (0x0008)
#define ITM_AF_STATUS_AF_4_STATUS_OFFSET    (0x0004)
#define ITM_AF_STATUS_AF_4_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_4_STATUS_MASK      (0x0010)
#define ITM_AF_STATUS_AF_5_STATUS_OFFSET    (0x0005)
#define ITM_AF_STATUS_AF_5_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_5_STATUS_MASK      (0x0020)
#define ITM_AF_STATUS_AF_6_STATUS_OFFSET    (0x0006)
#define ITM_AF_STATUS_AF_6_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_6_STATUS_MASK      (0x0040)
#define ITM_AF_STATUS_AF_7_STATUS_OFFSET    (0x0007)
#define ITM_AF_STATUS_AF_7_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_7_STATUS_MASK      (0x0080)
#define ITM_AF_STATUS_AF_8_STATUS_OFFSET    (0x0008)
#define ITM_AF_STATUS_AF_8_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_8_STATUS_MASK      (0x0100)
#define ITM_AF_STATUS_AF_9_STATUS_OFFSET    (0x0009)
#define ITM_AF_STATUS_AF_9_STATUS_WIDTH     (1)
#define ITM_AF_STATUS_AF_9_STATUS_MASK      (0x0200)

/*
* Register : ITM_AF_EN_STATUS
*/

#define ITM_AF_EN_STATUS_SIZE               (16)
#define ITM_AF_EN_STATUS_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0x7a)
#define ITM_AF_EN_STATUS_RESET_VALUE        (0x0000)
#define ITM_AF_EN_STATUS_BITFIELD_MASK      (0x03FF)
#define ITM_AF_EN_STATUS_RWMASK             (0x0000)
#define ITM_AF_EN_STATUS_ROMASK             (0x03FF)
#define ITM_AF_EN_STATUS_WOMASK             (0x0000)
#define ITM_AF_EN_STATUS_UNUSED_MASK        (0xFC00)
#define ITM_AF_EN_STATUS_AF_0_EN_STATUS_OFFSET (0x0000)
#define ITM_AF_EN_STATUS_AF_0_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_0_EN_STATUS_MASK (0x0001)
#define ITM_AF_EN_STATUS_AF_1_EN_STATUS_OFFSET (0x0001)
#define ITM_AF_EN_STATUS_AF_1_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_1_EN_STATUS_MASK (0x0002)
#define ITM_AF_EN_STATUS_AF_2_EN_STATUS_OFFSET (0x0002)
#define ITM_AF_EN_STATUS_AF_2_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_2_EN_STATUS_MASK (0x0004)
#define ITM_AF_EN_STATUS_AF_3_EN_STATUS_OFFSET (0x0003)
#define ITM_AF_EN_STATUS_AF_3_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_3_EN_STATUS_MASK (0x0008)
#define ITM_AF_EN_STATUS_AF_4_EN_STATUS_OFFSET (0x0004)
#define ITM_AF_EN_STATUS_AF_4_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_4_EN_STATUS_MASK (0x0010)
#define ITM_AF_EN_STATUS_AF_5_EN_STATUS_OFFSET (0x0005)
#define ITM_AF_EN_STATUS_AF_5_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_5_EN_STATUS_MASK (0x0020)
#define ITM_AF_EN_STATUS_AF_6_EN_STATUS_OFFSET (0x0006)
#define ITM_AF_EN_STATUS_AF_6_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_6_EN_STATUS_MASK (0x0040)
#define ITM_AF_EN_STATUS_AF_7_EN_STATUS_OFFSET (0x0007)
#define ITM_AF_EN_STATUS_AF_7_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_7_EN_STATUS_MASK (0x0080)
#define ITM_AF_EN_STATUS_AF_8_EN_STATUS_OFFSET (0x0008)
#define ITM_AF_EN_STATUS_AF_8_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_8_EN_STATUS_MASK (0x0100)
#define ITM_AF_EN_STATUS_AF_9_EN_STATUS_OFFSET (0x0009)
#define ITM_AF_EN_STATUS_AF_9_EN_STATUS_WIDTH (1)
#define ITM_AF_EN_STATUS_AF_9_EN_STATUS_MASK (0x0200)

/*
* Register : ITM_AF_STATUS_BCLR
*/

#define ITM_AF_STATUS_BCLR_SIZE             (16)
#define ITM_AF_STATUS_BCLR_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0x7c)
#define ITM_AF_STATUS_BCLR_RESET_VALUE      (0x0000)
#define ITM_AF_STATUS_BCLR_BITFIELD_MASK    (0x03FF)
#define ITM_AF_STATUS_BCLR_RWMASK           (0x0000)
#define ITM_AF_STATUS_BCLR_ROMASK           (0x0000)
#define ITM_AF_STATUS_BCLR_WOMASK           (0x03FF)
#define ITM_AF_STATUS_BCLR_UNUSED_MASK      (0xFC00)
#define ITM_AF_STATUS_BCLR_AF_0_STATUS_BCLR_OFFSET (0x0000)
#define ITM_AF_STATUS_BCLR_AF_0_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_0_STATUS_BCLR_MASK (0x0001)
#define ITM_AF_STATUS_BCLR_AF_1_STATUS_BCLR_OFFSET (0x0001)
#define ITM_AF_STATUS_BCLR_AF_1_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_1_STATUS_BCLR_MASK (0x0002)
#define ITM_AF_STATUS_BCLR_AF_2_STATUS_BCLR_OFFSET (0x0002)
#define ITM_AF_STATUS_BCLR_AF_2_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_2_STATUS_BCLR_MASK (0x0004)
#define ITM_AF_STATUS_BCLR_AF_3_STATUS_BCLR_OFFSET (0x0003)
#define ITM_AF_STATUS_BCLR_AF_3_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_3_STATUS_BCLR_MASK (0x0008)
#define ITM_AF_STATUS_BCLR_AF_4_STATUS_BCLR_OFFSET (0x0004)
#define ITM_AF_STATUS_BCLR_AF_4_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_4_STATUS_BCLR_MASK (0x0010)
#define ITM_AF_STATUS_BCLR_AF_5_STATUS_BCLR_OFFSET (0x0005)
#define ITM_AF_STATUS_BCLR_AF_5_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_5_STATUS_BCLR_MASK (0x0020)
#define ITM_AF_STATUS_BCLR_AF_6_STATUS_BCLR_OFFSET (0x0006)
#define ITM_AF_STATUS_BCLR_AF_6_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_6_STATUS_BCLR_MASK (0x0040)
#define ITM_AF_STATUS_BCLR_AF_7_STATUS_BCLR_OFFSET (0x0007)
#define ITM_AF_STATUS_BCLR_AF_7_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_7_STATUS_BCLR_MASK (0x0080)
#define ITM_AF_STATUS_BCLR_AF_8_STATUS_BCLR_OFFSET (0x0008)
#define ITM_AF_STATUS_BCLR_AF_8_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_8_STATUS_BCLR_MASK (0x0100)
#define ITM_AF_STATUS_BCLR_AF_9_STATUS_BCLR_OFFSET (0x0009)
#define ITM_AF_STATUS_BCLR_AF_9_STATUS_BCLR_WIDTH (1)
#define ITM_AF_STATUS_BCLR_AF_9_STATUS_BCLR_MASK (0x0200)

/*
* Register : ITM_AF_STATUS_BSET
*/

#define ITM_AF_STATUS_BSET_SIZE             (16)
#define ITM_AF_STATUS_BSET_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0x7e)
#define ITM_AF_STATUS_BSET_RESET_VALUE      (0x0000)
#define ITM_AF_STATUS_BSET_BITFIELD_MASK    (0x03FF)
#define ITM_AF_STATUS_BSET_RWMASK           (0x0000)
#define ITM_AF_STATUS_BSET_ROMASK           (0x0000)
#define ITM_AF_STATUS_BSET_WOMASK           (0x03FF)
#define ITM_AF_STATUS_BSET_UNUSED_MASK      (0xFC00)
#define ITM_AF_STATUS_BSET_AF_0_STATUS_BSET_OFFSET (0x0000)
#define ITM_AF_STATUS_BSET_AF_0_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_0_STATUS_BSET_MASK (0x0001)
#define ITM_AF_STATUS_BSET_AF_1_STATUS_BSET_OFFSET (0x0001)
#define ITM_AF_STATUS_BSET_AF_1_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_1_STATUS_BSET_MASK (0x0002)
#define ITM_AF_STATUS_BSET_AF_2_STATUS_BSET_OFFSET (0x0002)
#define ITM_AF_STATUS_BSET_AF_2_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_2_STATUS_BSET_MASK (0x0004)
#define ITM_AF_STATUS_BSET_AF_3_STATUS_BSET_OFFSET (0x0003)
#define ITM_AF_STATUS_BSET_AF_3_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_3_STATUS_BSET_MASK (0x0008)
#define ITM_AF_STATUS_BSET_AF_4_STATUS_BSET_OFFSET (0x0004)
#define ITM_AF_STATUS_BSET_AF_4_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_4_STATUS_BSET_MASK (0x0010)
#define ITM_AF_STATUS_BSET_AF_5_STATUS_BSET_OFFSET (0x0005)
#define ITM_AF_STATUS_BSET_AF_5_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_5_STATUS_BSET_MASK (0x0020)
#define ITM_AF_STATUS_BSET_AF_6_STATUS_BSET_OFFSET (0x0006)
#define ITM_AF_STATUS_BSET_AF_6_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_6_STATUS_BSET_MASK (0x0040)
#define ITM_AF_STATUS_BSET_AF_7_STATUS_BSET_OFFSET (0x0007)
#define ITM_AF_STATUS_BSET_AF_7_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_7_STATUS_BSET_MASK (0x0080)
#define ITM_AF_STATUS_BSET_AF_8_STATUS_BSET_OFFSET (0x0008)
#define ITM_AF_STATUS_BSET_AF_8_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_8_STATUS_BSET_MASK (0x0100)
#define ITM_AF_STATUS_BSET_AF_9_STATUS_BSET_OFFSET (0x0009)
#define ITM_AF_STATUS_BSET_AF_9_STATUS_BSET_WIDTH (1)
#define ITM_AF_STATUS_BSET_AF_9_STATUS_BSET_MASK (0x0200)

/*
* Register : ITM_AF_EN_BCLR
*/

#define ITM_AF_EN_BCLR_SIZE                 (16)
#define ITM_AF_EN_BCLR_OFFSET               (pictorv2_in_ITM_BASE_ADDR + 0x80)
#define ITM_AF_EN_BCLR_RESET_VALUE          (0x0000)
#define ITM_AF_EN_BCLR_BITFIELD_MASK        (0x03FF)
#define ITM_AF_EN_BCLR_RWMASK               (0x0000)
#define ITM_AF_EN_BCLR_ROMASK               (0x0000)
#define ITM_AF_EN_BCLR_WOMASK               (0x03FF)
#define ITM_AF_EN_BCLR_UNUSED_MASK          (0xFC00)
#define ITM_AF_EN_BCLR_AF_0_EN_BCLR_OFFSET  (0x0000)
#define ITM_AF_EN_BCLR_AF_0_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_0_EN_BCLR_MASK    (0x0001)
#define ITM_AF_EN_BCLR_AF_1_EN_BCLR_OFFSET  (0x0001)
#define ITM_AF_EN_BCLR_AF_1_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_1_EN_BCLR_MASK    (0x0002)
#define ITM_AF_EN_BCLR_AF_2_EN_BCLR_OFFSET  (0x0002)
#define ITM_AF_EN_BCLR_AF_2_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_2_EN_BCLR_MASK    (0x0004)
#define ITM_AF_EN_BCLR_AF_3_EN_BCLR_OFFSET  (0x0003)
#define ITM_AF_EN_BCLR_AF_3_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_3_EN_BCLR_MASK    (0x0008)
#define ITM_AF_EN_BCLR_AF_4_EN_BCLR_OFFSET  (0x0004)
#define ITM_AF_EN_BCLR_AF_4_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_4_EN_BCLR_MASK    (0x0010)
#define ITM_AF_EN_BCLR_AF_5_EN_BCLR_OFFSET  (0x0005)
#define ITM_AF_EN_BCLR_AF_5_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_5_EN_BCLR_MASK    (0x0020)
#define ITM_AF_EN_BCLR_AF_6_EN_BCLR_OFFSET  (0x0006)
#define ITM_AF_EN_BCLR_AF_6_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_6_EN_BCLR_MASK    (0x0040)
#define ITM_AF_EN_BCLR_AF_7_EN_BCLR_OFFSET  (0x0007)
#define ITM_AF_EN_BCLR_AF_7_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_7_EN_BCLR_MASK    (0x0080)
#define ITM_AF_EN_BCLR_AF_8_EN_BCLR_OFFSET  (0x0008)
#define ITM_AF_EN_BCLR_AF_8_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_8_EN_BCLR_MASK    (0x0100)
#define ITM_AF_EN_BCLR_AF_9_EN_BCLR_OFFSET  (0x0009)
#define ITM_AF_EN_BCLR_AF_9_EN_BCLR_WIDTH   (1)
#define ITM_AF_EN_BCLR_AF_9_EN_BCLR_MASK    (0x0200)

/*
* Register : ITM_AF_EN_BSET
*/

#define ITM_AF_EN_BSET_SIZE                 (16)
#define ITM_AF_EN_BSET_OFFSET               (pictorv2_in_ITM_BASE_ADDR + 0x82)
#define ITM_AF_EN_BSET_RESET_VALUE          (0x0000)
#define ITM_AF_EN_BSET_BITFIELD_MASK        (0x03FF)
#define ITM_AF_EN_BSET_RWMASK               (0x0000)
#define ITM_AF_EN_BSET_ROMASK               (0x0000)
#define ITM_AF_EN_BSET_WOMASK               (0x03FF)
#define ITM_AF_EN_BSET_UNUSED_MASK          (0xFC00)
#define ITM_AF_EN_BSET_AF_0_EN_BSET_OFFSET  (0x0000)
#define ITM_AF_EN_BSET_AF_0_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_0_EN_BSET_MASK    (0x0001)
#define ITM_AF_EN_BSET_AF_1_EN_BSET_OFFSET  (0x0001)
#define ITM_AF_EN_BSET_AF_1_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_1_EN_BSET_MASK    (0x0002)
#define ITM_AF_EN_BSET_AF_2_EN_BSET_OFFSET  (0x0002)
#define ITM_AF_EN_BSET_AF_2_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_2_EN_BSET_MASK    (0x0004)
#define ITM_AF_EN_BSET_AF_3_EN_BSET_OFFSET  (0x0003)
#define ITM_AF_EN_BSET_AF_3_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_3_EN_BSET_MASK    (0x0008)
#define ITM_AF_EN_BSET_AF_4_EN_BSET_OFFSET  (0x0004)
#define ITM_AF_EN_BSET_AF_4_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_4_EN_BSET_MASK    (0x0010)
#define ITM_AF_EN_BSET_AF_5_EN_BSET_OFFSET  (0x0005)
#define ITM_AF_EN_BSET_AF_5_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_5_EN_BSET_MASK    (0x0020)
#define ITM_AF_EN_BSET_AF_6_EN_BSET_OFFSET  (0x0006)
#define ITM_AF_EN_BSET_AF_6_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_6_EN_BSET_MASK    (0x0040)
#define ITM_AF_EN_BSET_AF_7_EN_BSET_OFFSET  (0x0007)
#define ITM_AF_EN_BSET_AF_7_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_7_EN_BSET_MASK    (0x0080)
#define ITM_AF_EN_BSET_AF_8_EN_BSET_OFFSET  (0x0008)
#define ITM_AF_EN_BSET_AF_8_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_8_EN_BSET_MASK    (0x0100)
#define ITM_AF_EN_BSET_AF_9_EN_BSET_OFFSET  (0x0009)
#define ITM_AF_EN_BSET_AF_9_EN_BSET_WIDTH   (1)
#define ITM_AF_EN_BSET_AF_9_EN_BSET_MASK    (0x0200)

/*
* Register : ITM_ARCTIC_STATUS
*/

#define ITM_ARCTIC_STATUS_SIZE              (8)
#define ITM_ARCTIC_STATUS_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0x84)
#define ITM_ARCTIC_STATUS_RESET_VALUE       (0x00)
#define ITM_ARCTIC_STATUS_BITFIELD_MASK     (0x01)
#define ITM_ARCTIC_STATUS_RWMASK            (0x00)
#define ITM_ARCTIC_STATUS_ROMASK            (0x01)
#define ITM_ARCTIC_STATUS_WOMASK            (0x00)
#define ITM_ARCTIC_STATUS_UNUSED_MASK       (0xFE)
#define ITM_ARCTIC_STATUS_ARCTIC_STATUS_OFFSET (0x00)
#define ITM_ARCTIC_STATUS_ARCTIC_STATUS_WIDTH (1)
#define ITM_ARCTIC_STATUS_ARCTIC_STATUS_MASK (0x01)

/*
* Register : ITM_ARCTIC_EN_STATUS
*/

#define ITM_ARCTIC_EN_STATUS_SIZE           (8)
#define ITM_ARCTIC_EN_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x86)
#define ITM_ARCTIC_EN_STATUS_RESET_VALUE    (0x00)
#define ITM_ARCTIC_EN_STATUS_BITFIELD_MASK  (0x01)
#define ITM_ARCTIC_EN_STATUS_RWMASK         (0x00)
#define ITM_ARCTIC_EN_STATUS_ROMASK         (0x01)
#define ITM_ARCTIC_EN_STATUS_WOMASK         (0x00)
#define ITM_ARCTIC_EN_STATUS_UNUSED_MASK    (0xFE)
#define ITM_ARCTIC_EN_STATUS_ARCTIC_EN_STATUS_OFFSET (0x00)
#define ITM_ARCTIC_EN_STATUS_ARCTIC_EN_STATUS_WIDTH (1)
#define ITM_ARCTIC_EN_STATUS_ARCTIC_EN_STATUS_MASK (0x01)

/*
* Register : ITM_ARCTIC_STATUS_BCLR
*/

#define ITM_ARCTIC_STATUS_BCLR_SIZE         (8)
#define ITM_ARCTIC_STATUS_BCLR_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0x88)
#define ITM_ARCTIC_STATUS_BCLR_RESET_VALUE  (0x00)
#define ITM_ARCTIC_STATUS_BCLR_BITFIELD_MASK (0x01)
#define ITM_ARCTIC_STATUS_BCLR_RWMASK       (0x00)
#define ITM_ARCTIC_STATUS_BCLR_ROMASK       (0x00)
#define ITM_ARCTIC_STATUS_BCLR_WOMASK       (0x01)
#define ITM_ARCTIC_STATUS_BCLR_UNUSED_MASK  (0xFE)
#define ITM_ARCTIC_STATUS_BCLR_ARCTIC_STATUS_BCLR_OFFSET (0x00)
#define ITM_ARCTIC_STATUS_BCLR_ARCTIC_STATUS_BCLR_WIDTH (1)
#define ITM_ARCTIC_STATUS_BCLR_ARCTIC_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_ARCTIC_STATUS_BSET
*/

#define ITM_ARCTIC_STATUS_BSET_SIZE         (8)
#define ITM_ARCTIC_STATUS_BSET_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0x8a)
#define ITM_ARCTIC_STATUS_BSET_RESET_VALUE  (0x00)
#define ITM_ARCTIC_STATUS_BSET_BITFIELD_MASK (0x01)
#define ITM_ARCTIC_STATUS_BSET_RWMASK       (0x00)
#define ITM_ARCTIC_STATUS_BSET_ROMASK       (0x00)
#define ITM_ARCTIC_STATUS_BSET_WOMASK       (0x01)
#define ITM_ARCTIC_STATUS_BSET_UNUSED_MASK  (0xFE)
#define ITM_ARCTIC_STATUS_BSET_ARCTIC_STATUS_BSET_OFFSET (0x00)
#define ITM_ARCTIC_STATUS_BSET_ARCTIC_STATUS_BSET_WIDTH (1)
#define ITM_ARCTIC_STATUS_BSET_ARCTIC_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_ARCTIC_EN_BCLR
*/

#define ITM_ARCTIC_EN_BCLR_SIZE             (8)
#define ITM_ARCTIC_EN_BCLR_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0x8c)
#define ITM_ARCTIC_EN_BCLR_RESET_VALUE      (0x00)
#define ITM_ARCTIC_EN_BCLR_BITFIELD_MASK    (0x01)
#define ITM_ARCTIC_EN_BCLR_RWMASK           (0x00)
#define ITM_ARCTIC_EN_BCLR_ROMASK           (0x00)
#define ITM_ARCTIC_EN_BCLR_WOMASK           (0x01)
#define ITM_ARCTIC_EN_BCLR_UNUSED_MASK      (0xFE)
#define ITM_ARCTIC_EN_BCLR_ARCTIC_EN_BCLR_OFFSET (0x00)
#define ITM_ARCTIC_EN_BCLR_ARCTIC_EN_BCLR_WIDTH (1)
#define ITM_ARCTIC_EN_BCLR_ARCTIC_EN_BCLR_MASK (0x01)

/*
* Register : ITM_ARCTIC_EN_BSET
*/

#define ITM_ARCTIC_EN_BSET_SIZE             (8)
#define ITM_ARCTIC_EN_BSET_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0x8e)
#define ITM_ARCTIC_EN_BSET_RESET_VALUE      (0x00)
#define ITM_ARCTIC_EN_BSET_BITFIELD_MASK    (0x01)
#define ITM_ARCTIC_EN_BSET_RWMASK           (0x00)
#define ITM_ARCTIC_EN_BSET_ROMASK           (0x00)
#define ITM_ARCTIC_EN_BSET_WOMASK           (0x01)
#define ITM_ARCTIC_EN_BSET_UNUSED_MASK      (0xFE)
#define ITM_ARCTIC_EN_BSET_ARCTIC_EN_BSET_OFFSET (0x00)
#define ITM_ARCTIC_EN_BSET_ARCTIC_EN_BSET_WIDTH (1)
#define ITM_ARCTIC_EN_BSET_ARCTIC_EN_BSET_MASK (0x01)

/*
* Register : ITM_SKIND_STATUS
*/

#define ITM_SKIND_STATUS_SIZE               (8)
#define ITM_SKIND_STATUS_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0x9c)
#define ITM_SKIND_STATUS_RESET_VALUE        (0x00)
#define ITM_SKIND_STATUS_BITFIELD_MASK      (0x01)
#define ITM_SKIND_STATUS_RWMASK             (0x00)
#define ITM_SKIND_STATUS_ROMASK             (0x01)
#define ITM_SKIND_STATUS_WOMASK             (0x00)
#define ITM_SKIND_STATUS_UNUSED_MASK        (0xFE)
#define ITM_SKIND_STATUS_SKIND_STATUS_OFFSET (0x00)
#define ITM_SKIND_STATUS_SKIND_STATUS_WIDTH (1)
#define ITM_SKIND_STATUS_SKIND_STATUS_MASK  (0x01)

/*
* Register : ITM_SKIND_EN_STATUS
*/

#define ITM_SKIND_EN_STATUS_SIZE            (8)
#define ITM_SKIND_EN_STATUS_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0x9e)
#define ITM_SKIND_EN_STATUS_RESET_VALUE     (0x00)
#define ITM_SKIND_EN_STATUS_BITFIELD_MASK   (0x01)
#define ITM_SKIND_EN_STATUS_RWMASK          (0x00)
#define ITM_SKIND_EN_STATUS_ROMASK          (0x01)
#define ITM_SKIND_EN_STATUS_WOMASK          (0x00)
#define ITM_SKIND_EN_STATUS_UNUSED_MASK     (0xFE)
#define ITM_SKIND_EN_STATUS_SKIND_EN_STATUS_OFFSET (0x00)
#define ITM_SKIND_EN_STATUS_SKIND_EN_STATUS_WIDTH (1)
#define ITM_SKIND_EN_STATUS_SKIND_EN_STATUS_MASK (0x01)

/*
* Register : ITM_SKIND_STATUS_BCLR
*/

#define ITM_SKIND_STATUS_BCLR_SIZE          (8)
#define ITM_SKIND_STATUS_BCLR_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0xa0)
#define ITM_SKIND_STATUS_BCLR_RESET_VALUE   (0x00)
#define ITM_SKIND_STATUS_BCLR_BITFIELD_MASK (0x01)
#define ITM_SKIND_STATUS_BCLR_RWMASK        (0x00)
#define ITM_SKIND_STATUS_BCLR_ROMASK        (0x00)
#define ITM_SKIND_STATUS_BCLR_WOMASK        (0x01)
#define ITM_SKIND_STATUS_BCLR_UNUSED_MASK   (0xFE)
#define ITM_SKIND_STATUS_BCLR_SKIND_STATUS_BCLR_OFFSET (0x00)
#define ITM_SKIND_STATUS_BCLR_SKIND_STATUS_BCLR_WIDTH (1)
#define ITM_SKIND_STATUS_BCLR_SKIND_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_SKIND_STATUS_BSET
*/

#define ITM_SKIND_STATUS_BSET_SIZE          (8)
#define ITM_SKIND_STATUS_BSET_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0xa2)
#define ITM_SKIND_STATUS_BSET_RESET_VALUE   (0x00)
#define ITM_SKIND_STATUS_BSET_BITFIELD_MASK (0x01)
#define ITM_SKIND_STATUS_BSET_RWMASK        (0x00)
#define ITM_SKIND_STATUS_BSET_ROMASK        (0x00)
#define ITM_SKIND_STATUS_BSET_WOMASK        (0x01)
#define ITM_SKIND_STATUS_BSET_UNUSED_MASK   (0xFE)
#define ITM_SKIND_STATUS_BSET_SKIND_STATUS_BSET_OFFSET (0x00)
#define ITM_SKIND_STATUS_BSET_SKIND_STATUS_BSET_WIDTH (1)
#define ITM_SKIND_STATUS_BSET_SKIND_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_SKIND_EN_BCLR
*/

#define ITM_SKIND_EN_BCLR_SIZE              (8)
#define ITM_SKIND_EN_BCLR_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0xa4)
#define ITM_SKIND_EN_BCLR_RESET_VALUE       (0x00)
#define ITM_SKIND_EN_BCLR_BITFIELD_MASK     (0x01)
#define ITM_SKIND_EN_BCLR_RWMASK            (0x00)
#define ITM_SKIND_EN_BCLR_ROMASK            (0x00)
#define ITM_SKIND_EN_BCLR_WOMASK            (0x01)
#define ITM_SKIND_EN_BCLR_UNUSED_MASK       (0xFE)
#define ITM_SKIND_EN_BCLR_SKIND_EN_BCLR_OFFSET (0x00)
#define ITM_SKIND_EN_BCLR_SKIND_EN_BCLR_WIDTH (1)
#define ITM_SKIND_EN_BCLR_SKIND_EN_BCLR_MASK (0x01)

/*
* Register : ITM_SKIND_EN_BSET
*/

#define ITM_SKIND_EN_BSET_SIZE              (8)
#define ITM_SKIND_EN_BSET_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0xa6)
#define ITM_SKIND_EN_BSET_RESET_VALUE       (0x00)
#define ITM_SKIND_EN_BSET_BITFIELD_MASK     (0x01)
#define ITM_SKIND_EN_BSET_RWMASK            (0x00)
#define ITM_SKIND_EN_BSET_ROMASK            (0x00)
#define ITM_SKIND_EN_BSET_WOMASK            (0x01)
#define ITM_SKIND_EN_BSET_UNUSED_MASK       (0xFE)
#define ITM_SKIND_EN_BSET_SKIND_EN_BSET_OFFSET (0x00)
#define ITM_SKIND_EN_BSET_SKIND_EN_BSET_WIDTH (1)
#define ITM_SKIND_EN_BSET_SKIND_EN_BSET_MASK (0x01)

/*
* Register : ITM_VIDPIPE0_STATUS
*/

#define ITM_VIDPIPE0_STATUS_SIZE            (8)
#define ITM_VIDPIPE0_STATUS_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0xa8)
#define ITM_VIDPIPE0_STATUS_RESET_VALUE     (0x00)
#define ITM_VIDPIPE0_STATUS_BITFIELD_MASK   (0x01)
#define ITM_VIDPIPE0_STATUS_RWMASK          (0x00)
#define ITM_VIDPIPE0_STATUS_ROMASK          (0x01)
#define ITM_VIDPIPE0_STATUS_WOMASK          (0x00)
#define ITM_VIDPIPE0_STATUS_UNUSED_MASK     (0xFE)
#define ITM_VIDPIPE0_STATUS_STATUS_OFFSET   (0x00)
#define ITM_VIDPIPE0_STATUS_STATUS_WIDTH    (1)
#define ITM_VIDPIPE0_STATUS_STATUS_MASK     (0x01)

/*
* Register : ITM_VIDPIPE0_EN_STATUS
*/

#define ITM_VIDPIPE0_EN_STATUS_SIZE         (8)
#define ITM_VIDPIPE0_EN_STATUS_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0xaa)
#define ITM_VIDPIPE0_EN_STATUS_RESET_VALUE  (0x00)
#define ITM_VIDPIPE0_EN_STATUS_BITFIELD_MASK (0x01)
#define ITM_VIDPIPE0_EN_STATUS_RWMASK       (0x00)
#define ITM_VIDPIPE0_EN_STATUS_ROMASK       (0x01)
#define ITM_VIDPIPE0_EN_STATUS_WOMASK       (0x00)
#define ITM_VIDPIPE0_EN_STATUS_UNUSED_MASK  (0xFE)
#define ITM_VIDPIPE0_EN_STATUS_EN_STATUS_OFFSET (0x00)
#define ITM_VIDPIPE0_EN_STATUS_EN_STATUS_WIDTH (1)
#define ITM_VIDPIPE0_EN_STATUS_EN_STATUS_MASK (0x01)

/*
* Register : ITM_VIDPIPE0_STATUS_BCLR
*/

#define ITM_VIDPIPE0_STATUS_BCLR_SIZE       (8)
#define ITM_VIDPIPE0_STATUS_BCLR_OFFSET     (pictorv2_in_ITM_BASE_ADDR + 0xac)
#define ITM_VIDPIPE0_STATUS_BCLR_RESET_VALUE (0x00)
#define ITM_VIDPIPE0_STATUS_BCLR_BITFIELD_MASK (0x01)
#define ITM_VIDPIPE0_STATUS_BCLR_RWMASK     (0x00)
#define ITM_VIDPIPE0_STATUS_BCLR_ROMASK     (0x00)
#define ITM_VIDPIPE0_STATUS_BCLR_WOMASK     (0x01)
#define ITM_VIDPIPE0_STATUS_BCLR_UNUSED_MASK (0xFE)
#define ITM_VIDPIPE0_STATUS_BCLR_STATUS_BCLR_OFFSET (0x00)
#define ITM_VIDPIPE0_STATUS_BCLR_STATUS_BCLR_WIDTH (1)
#define ITM_VIDPIPE0_STATUS_BCLR_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_VIDPIPE0_STATUS_BSET
*/

#define ITM_VIDPIPE0_STATUS_BSET_SIZE       (8)
#define ITM_VIDPIPE0_STATUS_BSET_OFFSET     (pictorv2_in_ITM_BASE_ADDR + 0xae)
#define ITM_VIDPIPE0_STATUS_BSET_RESET_VALUE (0x00)
#define ITM_VIDPIPE0_STATUS_BSET_BITFIELD_MASK (0x01)
#define ITM_VIDPIPE0_STATUS_BSET_RWMASK     (0x00)
#define ITM_VIDPIPE0_STATUS_BSET_ROMASK     (0x00)
#define ITM_VIDPIPE0_STATUS_BSET_WOMASK     (0x01)
#define ITM_VIDPIPE0_STATUS_BSET_UNUSED_MASK (0xFE)
#define ITM_VIDPIPE0_STATUS_BSET_STATUS_BSET_OFFSET (0x00)
#define ITM_VIDPIPE0_STATUS_BSET_STATUS_BSET_WIDTH (1)
#define ITM_VIDPIPE0_STATUS_BSET_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_VIDPIPE0_EN_BCLR
*/

#define ITM_VIDPIPE0_EN_BCLR_SIZE           (8)
#define ITM_VIDPIPE0_EN_BCLR_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xb0)
#define ITM_VIDPIPE0_EN_BCLR_RESET_VALUE    (0x00)
#define ITM_VIDPIPE0_EN_BCLR_BITFIELD_MASK  (0x01)
#define ITM_VIDPIPE0_EN_BCLR_RWMASK         (0x00)
#define ITM_VIDPIPE0_EN_BCLR_ROMASK         (0x00)
#define ITM_VIDPIPE0_EN_BCLR_WOMASK         (0x01)
#define ITM_VIDPIPE0_EN_BCLR_UNUSED_MASK    (0xFE)
#define ITM_VIDPIPE0_EN_BCLR_EN_BCLR_OFFSET (0x00)
#define ITM_VIDPIPE0_EN_BCLR_EN_BCLR_WIDTH  (1)
#define ITM_VIDPIPE0_EN_BCLR_EN_BCLR_MASK   (0x01)

/*
* Register : ITM_VIDPIPE0_EN_BSET
*/

#define ITM_VIDPIPE0_EN_BSET_SIZE           (8)
#define ITM_VIDPIPE0_EN_BSET_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xb2)
#define ITM_VIDPIPE0_EN_BSET_RESET_VALUE    (0x00)
#define ITM_VIDPIPE0_EN_BSET_BITFIELD_MASK  (0x01)
#define ITM_VIDPIPE0_EN_BSET_RWMASK         (0x00)
#define ITM_VIDPIPE0_EN_BSET_ROMASK         (0x00)
#define ITM_VIDPIPE0_EN_BSET_WOMASK         (0x01)
#define ITM_VIDPIPE0_EN_BSET_UNUSED_MASK    (0xFE)
#define ITM_VIDPIPE0_EN_BSET_EN_BSET_OFFSET (0x00)
#define ITM_VIDPIPE0_EN_BSET_EN_BSET_WIDTH  (1)
#define ITM_VIDPIPE0_EN_BSET_EN_BSET_MASK   (0x01)

/*
* Register : ITM_VIDPIPE1_STATUS
*/

#define ITM_VIDPIPE1_STATUS_SIZE            (8)
#define ITM_VIDPIPE1_STATUS_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0xb4)
#define ITM_VIDPIPE1_STATUS_RESET_VALUE     (0x00)
#define ITM_VIDPIPE1_STATUS_BITFIELD_MASK   (0x01)
#define ITM_VIDPIPE1_STATUS_RWMASK          (0x00)
#define ITM_VIDPIPE1_STATUS_ROMASK          (0x01)
#define ITM_VIDPIPE1_STATUS_WOMASK          (0x00)
#define ITM_VIDPIPE1_STATUS_UNUSED_MASK     (0xFE)
#define ITM_VIDPIPE1_STATUS_STATUS_OFFSET   (0x00)
#define ITM_VIDPIPE1_STATUS_STATUS_WIDTH    (1)
#define ITM_VIDPIPE1_STATUS_STATUS_MASK     (0x01)

/*
* Register : ITM_VIDPIPE1_EN_STATUS
*/

#define ITM_VIDPIPE1_EN_STATUS_SIZE         (8)
#define ITM_VIDPIPE1_EN_STATUS_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0xb6)
#define ITM_VIDPIPE1_EN_STATUS_RESET_VALUE  (0x00)
#define ITM_VIDPIPE1_EN_STATUS_BITFIELD_MASK (0x01)
#define ITM_VIDPIPE1_EN_STATUS_RWMASK       (0x00)
#define ITM_VIDPIPE1_EN_STATUS_ROMASK       (0x01)
#define ITM_VIDPIPE1_EN_STATUS_WOMASK       (0x00)
#define ITM_VIDPIPE1_EN_STATUS_UNUSED_MASK  (0xFE)
#define ITM_VIDPIPE1_EN_STATUS_EN_STATUS_OFFSET (0x00)
#define ITM_VIDPIPE1_EN_STATUS_EN_STATUS_WIDTH (1)
#define ITM_VIDPIPE1_EN_STATUS_EN_STATUS_MASK (0x01)

/*
* Register : ITM_VIDPIPE1_STATUS_BCLR
*/

#define ITM_VIDPIPE1_STATUS_BCLR_SIZE       (8)
#define ITM_VIDPIPE1_STATUS_BCLR_OFFSET     (pictorv2_in_ITM_BASE_ADDR + 0xb8)
#define ITM_VIDPIPE1_STATUS_BCLR_RESET_VALUE (0x00)
#define ITM_VIDPIPE1_STATUS_BCLR_BITFIELD_MASK (0x01)
#define ITM_VIDPIPE1_STATUS_BCLR_RWMASK     (0x00)
#define ITM_VIDPIPE1_STATUS_BCLR_ROMASK     (0x00)
#define ITM_VIDPIPE1_STATUS_BCLR_WOMASK     (0x01)
#define ITM_VIDPIPE1_STATUS_BCLR_UNUSED_MASK (0xFE)
#define ITM_VIDPIPE1_STATUS_BCLR_STATUS_BCLR_OFFSET (0x00)
#define ITM_VIDPIPE1_STATUS_BCLR_STATUS_BCLR_WIDTH (1)
#define ITM_VIDPIPE1_STATUS_BCLR_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_VIDPIPE1_STATUS_BSET
*/

#define ITM_VIDPIPE1_STATUS_BSET_SIZE       (8)
#define ITM_VIDPIPE1_STATUS_BSET_OFFSET     (pictorv2_in_ITM_BASE_ADDR + 0xba)
#define ITM_VIDPIPE1_STATUS_BSET_RESET_VALUE (0x00)
#define ITM_VIDPIPE1_STATUS_BSET_BITFIELD_MASK (0x01)
#define ITM_VIDPIPE1_STATUS_BSET_RWMASK     (0x00)
#define ITM_VIDPIPE1_STATUS_BSET_ROMASK     (0x00)
#define ITM_VIDPIPE1_STATUS_BSET_WOMASK     (0x01)
#define ITM_VIDPIPE1_STATUS_BSET_UNUSED_MASK (0xFE)
#define ITM_VIDPIPE1_STATUS_BSET_STATUS_BSET_OFFSET (0x00)
#define ITM_VIDPIPE1_STATUS_BSET_STATUS_BSET_WIDTH (1)
#define ITM_VIDPIPE1_STATUS_BSET_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_VIDPIPE1_EN_BCLR
*/

#define ITM_VIDPIPE1_EN_BCLR_SIZE           (8)
#define ITM_VIDPIPE1_EN_BCLR_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xbc)
#define ITM_VIDPIPE1_EN_BCLR_RESET_VALUE    (0x00)
#define ITM_VIDPIPE1_EN_BCLR_BITFIELD_MASK  (0x01)
#define ITM_VIDPIPE1_EN_BCLR_RWMASK         (0x00)
#define ITM_VIDPIPE1_EN_BCLR_ROMASK         (0x00)
#define ITM_VIDPIPE1_EN_BCLR_WOMASK         (0x01)
#define ITM_VIDPIPE1_EN_BCLR_UNUSED_MASK    (0xFE)
#define ITM_VIDPIPE1_EN_BCLR_EN_BCLR_OFFSET (0x00)
#define ITM_VIDPIPE1_EN_BCLR_EN_BCLR_WIDTH  (1)
#define ITM_VIDPIPE1_EN_BCLR_EN_BCLR_MASK   (0x01)

/*
* Register : ITM_VIDPIPE1_EN_BSET
*/

#define ITM_VIDPIPE1_EN_BSET_SIZE           (8)
#define ITM_VIDPIPE1_EN_BSET_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xbe)
#define ITM_VIDPIPE1_EN_BSET_RESET_VALUE    (0x00)
#define ITM_VIDPIPE1_EN_BSET_BITFIELD_MASK  (0x01)
#define ITM_VIDPIPE1_EN_BSET_RWMASK         (0x00)
#define ITM_VIDPIPE1_EN_BSET_ROMASK         (0x00)
#define ITM_VIDPIPE1_EN_BSET_WOMASK         (0x01)
#define ITM_VIDPIPE1_EN_BSET_UNUSED_MASK    (0xFE)
#define ITM_VIDPIPE1_EN_BSET_EN_BSET_OFFSET (0x00)
#define ITM_VIDPIPE1_EN_BSET_EN_BSET_WIDTH  (1)
#define ITM_VIDPIPE1_EN_BSET_EN_BSET_MASK   (0x01)

/*
* Register : ITM_SMIARX_STATUS
*/

#define ITM_SMIARX_STATUS_SIZE              (8)
#define ITM_SMIARX_STATUS_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0xc0)
#define ITM_SMIARX_STATUS_RESET_VALUE       (0x00)
#define ITM_SMIARX_STATUS_BITFIELD_MASK     (0x1F)
#define ITM_SMIARX_STATUS_RWMASK            (0x00)
#define ITM_SMIARX_STATUS_ROMASK            (0x1F)
#define ITM_SMIARX_STATUS_WOMASK            (0x00)
#define ITM_SMIARX_STATUS_UNUSED_MASK       (0xE0)
#define ITM_SMIARX_STATUS_SMIARX_0_STATUS_OFFSET (0x00)
#define ITM_SMIARX_STATUS_SMIARX_0_STATUS_WIDTH (1)
#define ITM_SMIARX_STATUS_SMIARX_0_STATUS_MASK (0x01)
#define ITM_SMIARX_STATUS_SMIARX_1_STATUS_OFFSET (0x01)
#define ITM_SMIARX_STATUS_SMIARX_1_STATUS_WIDTH (1)
#define ITM_SMIARX_STATUS_SMIARX_1_STATUS_MASK (0x02)
#define ITM_SMIARX_STATUS_SMIARX_2_STATUS_OFFSET (0x02)
#define ITM_SMIARX_STATUS_SMIARX_2_STATUS_WIDTH (1)
#define ITM_SMIARX_STATUS_SMIARX_2_STATUS_MASK (0x04)
#define ITM_SMIARX_STATUS_SMIARX_3_STATUS_OFFSET (0x03)
#define ITM_SMIARX_STATUS_SMIARX_3_STATUS_WIDTH (1)
#define ITM_SMIARX_STATUS_SMIARX_3_STATUS_MASK (0x08)
#define ITM_SMIARX_STATUS_SMIARX_4_STATUS_OFFSET (0x04)
#define ITM_SMIARX_STATUS_SMIARX_4_STATUS_WIDTH (1)
#define ITM_SMIARX_STATUS_SMIARX_4_STATUS_MASK (0x10)

/*
* Register : ITM_SMIARX_EN_STATUS
*/

#define ITM_SMIARX_EN_STATUS_SIZE           (8)
#define ITM_SMIARX_EN_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xc2)
#define ITM_SMIARX_EN_STATUS_RESET_VALUE    (0x00)
#define ITM_SMIARX_EN_STATUS_BITFIELD_MASK  (0x1F)
#define ITM_SMIARX_EN_STATUS_RWMASK         (0x00)
#define ITM_SMIARX_EN_STATUS_ROMASK         (0x1F)
#define ITM_SMIARX_EN_STATUS_WOMASK         (0x00)
#define ITM_SMIARX_EN_STATUS_UNUSED_MASK    (0xE0)
#define ITM_SMIARX_EN_STATUS_SMIARX_0_EN_STATUS_OFFSET (0x00)
#define ITM_SMIARX_EN_STATUS_SMIARX_0_EN_STATUS_WIDTH (1)
#define ITM_SMIARX_EN_STATUS_SMIARX_0_EN_STATUS_MASK (0x01)
#define ITM_SMIARX_EN_STATUS_SMIARX_1_EN_STATUS_OFFSET (0x01)
#define ITM_SMIARX_EN_STATUS_SMIARX_1_EN_STATUS_WIDTH (1)
#define ITM_SMIARX_EN_STATUS_SMIARX_1_EN_STATUS_MASK (0x02)
#define ITM_SMIARX_EN_STATUS_SMIARX_2_EN_STATUS_OFFSET (0x02)
#define ITM_SMIARX_EN_STATUS_SMIARX_2_EN_STATUS_WIDTH (1)
#define ITM_SMIARX_EN_STATUS_SMIARX_2_EN_STATUS_MASK (0x04)
#define ITM_SMIARX_EN_STATUS_SMIARX_3_EN_STATUS_OFFSET (0x03)
#define ITM_SMIARX_EN_STATUS_SMIARX_3_EN_STATUS_WIDTH (1)
#define ITM_SMIARX_EN_STATUS_SMIARX_3_EN_STATUS_MASK (0x08)
#define ITM_SMIARX_EN_STATUS_SMIARX_4_EN_STATUS_OFFSET (0x04)
#define ITM_SMIARX_EN_STATUS_SMIARX_4_EN_STATUS_WIDTH (1)
#define ITM_SMIARX_EN_STATUS_SMIARX_4_EN_STATUS_MASK (0x10)

/*
* Register : ITM_SMIARX_STATUS_BCLR
*/

#define ITM_SMIARX_STATUS_BCLR_SIZE         (8)
#define ITM_SMIARX_STATUS_BCLR_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0xc4)
#define ITM_SMIARX_STATUS_BCLR_RESET_VALUE  (0x00)
#define ITM_SMIARX_STATUS_BCLR_BITFIELD_MASK (0x1F)
#define ITM_SMIARX_STATUS_BCLR_RWMASK       (0x00)
#define ITM_SMIARX_STATUS_BCLR_ROMASK       (0x00)
#define ITM_SMIARX_STATUS_BCLR_WOMASK       (0x1F)
#define ITM_SMIARX_STATUS_BCLR_UNUSED_MASK  (0xE0)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_0_STATUS_BCLR_OFFSET (0x00)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_0_STATUS_BCLR_WIDTH (1)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_0_STATUS_BCLR_MASK (0x01)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_1_STATUS_BCLR_OFFSET (0x01)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_1_STATUS_BCLR_WIDTH (1)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_1_STATUS_BCLR_MASK (0x02)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_2_STATUS_BCLR_OFFSET (0x02)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_2_STATUS_BCLR_WIDTH (1)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_2_STATUS_BCLR_MASK (0x04)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_3_STATUS_BCLR_OFFSET (0x03)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_3_STATUS_BCLR_WIDTH (1)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_3_STATUS_BCLR_MASK (0x08)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_4_STATUS_BCLR_OFFSET (0x04)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_4_STATUS_BCLR_WIDTH (1)
#define ITM_SMIARX_STATUS_BCLR_SMIARX_4_STATUS_BCLR_MASK (0x10)

/*
* Register : ITM_SMIARX_STATUS_BSET
*/

#define ITM_SMIARX_STATUS_BSET_SIZE         (8)
#define ITM_SMIARX_STATUS_BSET_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0xc6)
#define ITM_SMIARX_STATUS_BSET_RESET_VALUE  (0x00)
#define ITM_SMIARX_STATUS_BSET_BITFIELD_MASK (0x1F)
#define ITM_SMIARX_STATUS_BSET_RWMASK       (0x00)
#define ITM_SMIARX_STATUS_BSET_ROMASK       (0x00)
#define ITM_SMIARX_STATUS_BSET_WOMASK       (0x1F)
#define ITM_SMIARX_STATUS_BSET_UNUSED_MASK  (0xE0)
#define ITM_SMIARX_STATUS_BSET_SMIARX_0_STATUS_BSET_OFFSET (0x00)
#define ITM_SMIARX_STATUS_BSET_SMIARX_0_STATUS_BSET_WIDTH (1)
#define ITM_SMIARX_STATUS_BSET_SMIARX_0_STATUS_BSET_MASK (0x01)
#define ITM_SMIARX_STATUS_BSET_SMIARX_1_STATUS_BSET_OFFSET (0x01)
#define ITM_SMIARX_STATUS_BSET_SMIARX_1_STATUS_BSET_WIDTH (1)
#define ITM_SMIARX_STATUS_BSET_SMIARX_1_STATUS_BSET_MASK (0x02)
#define ITM_SMIARX_STATUS_BSET_SMIARX_2_STATUS_BSET_OFFSET (0x02)
#define ITM_SMIARX_STATUS_BSET_SMIARX_2_STATUS_BSET_WIDTH (1)
#define ITM_SMIARX_STATUS_BSET_SMIARX_2_STATUS_BSET_MASK (0x04)
#define ITM_SMIARX_STATUS_BSET_SMIARX_3_STATUS_BSET_OFFSET (0x03)
#define ITM_SMIARX_STATUS_BSET_SMIARX_3_STATUS_BSET_WIDTH (1)
#define ITM_SMIARX_STATUS_BSET_SMIARX_3_STATUS_BSET_MASK (0x08)
#define ITM_SMIARX_STATUS_BSET_SMIARX_4_STATUS_BSET_OFFSET (0x04)
#define ITM_SMIARX_STATUS_BSET_SMIARX_4_STATUS_BSET_WIDTH (1)
#define ITM_SMIARX_STATUS_BSET_SMIARX_4_STATUS_BSET_MASK (0x10)

/*
* Register : ITM_SMIARX_EN_BCLR
*/

#define ITM_SMIARX_EN_BCLR_SIZE             (8)
#define ITM_SMIARX_EN_BCLR_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0xc8)
#define ITM_SMIARX_EN_BCLR_RESET_VALUE      (0x00)
#define ITM_SMIARX_EN_BCLR_BITFIELD_MASK    (0x1F)
#define ITM_SMIARX_EN_BCLR_RWMASK           (0x00)
#define ITM_SMIARX_EN_BCLR_ROMASK           (0x00)
#define ITM_SMIARX_EN_BCLR_WOMASK           (0x1F)
#define ITM_SMIARX_EN_BCLR_UNUSED_MASK      (0xE0)
#define ITM_SMIARX_EN_BCLR_SMIARX_0_EN_BCLR_OFFSET (0x00)
#define ITM_SMIARX_EN_BCLR_SMIARX_0_EN_BCLR_WIDTH (1)
#define ITM_SMIARX_EN_BCLR_SMIARX_0_EN_BCLR_MASK (0x01)
#define ITM_SMIARX_EN_BCLR_SMIARX_1_EN_BCLR_OFFSET (0x01)
#define ITM_SMIARX_EN_BCLR_SMIARX_1_EN_BCLR_WIDTH (1)
#define ITM_SMIARX_EN_BCLR_SMIARX_1_EN_BCLR_MASK (0x02)
#define ITM_SMIARX_EN_BCLR_SMIARX_2_EN_BCLR_OFFSET (0x02)
#define ITM_SMIARX_EN_BCLR_SMIARX_2_EN_BCLR_WIDTH (1)
#define ITM_SMIARX_EN_BCLR_SMIARX_2_EN_BCLR_MASK (0x04)
#define ITM_SMIARX_EN_BCLR_SMIARX_3_EN_BCLR_OFFSET (0x03)
#define ITM_SMIARX_EN_BCLR_SMIARX_3_EN_BCLR_WIDTH (1)
#define ITM_SMIARX_EN_BCLR_SMIARX_3_EN_BCLR_MASK (0x08)
#define ITM_SMIARX_EN_BCLR_SMIARX_4_EN_BCLR_OFFSET (0x04)
#define ITM_SMIARX_EN_BCLR_SMIARX_4_EN_BCLR_WIDTH (1)
#define ITM_SMIARX_EN_BCLR_SMIARX_4_EN_BCLR_MASK (0x10)

/*
* Register : ITM_SMIARX_EN_BSET
*/

#define ITM_SMIARX_EN_BSET_SIZE             (8)
#define ITM_SMIARX_EN_BSET_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0xca)
#define ITM_SMIARX_EN_BSET_RESET_VALUE      (0x00)
#define ITM_SMIARX_EN_BSET_BITFIELD_MASK    (0x1F)
#define ITM_SMIARX_EN_BSET_RWMASK           (0x00)
#define ITM_SMIARX_EN_BSET_ROMASK           (0x00)
#define ITM_SMIARX_EN_BSET_WOMASK           (0x1F)
#define ITM_SMIARX_EN_BSET_UNUSED_MASK      (0xE0)
#define ITM_SMIARX_EN_BSET_SMIARX_0_EN_BSET_OFFSET (0x00)
#define ITM_SMIARX_EN_BSET_SMIARX_0_EN_BSET_WIDTH (1)
#define ITM_SMIARX_EN_BSET_SMIARX_0_EN_BSET_MASK (0x01)
#define ITM_SMIARX_EN_BSET_SMIARX_1_EN_BSET_OFFSET (0x01)
#define ITM_SMIARX_EN_BSET_SMIARX_1_EN_BSET_WIDTH (1)
#define ITM_SMIARX_EN_BSET_SMIARX_1_EN_BSET_MASK (0x02)
#define ITM_SMIARX_EN_BSET_SMIARX_2_EN_BSET_OFFSET (0x02)
#define ITM_SMIARX_EN_BSET_SMIARX_2_EN_BSET_WIDTH (1)
#define ITM_SMIARX_EN_BSET_SMIARX_2_EN_BSET_MASK (0x04)
#define ITM_SMIARX_EN_BSET_SMIARX_3_EN_BSET_OFFSET (0x03)
#define ITM_SMIARX_EN_BSET_SMIARX_3_EN_BSET_WIDTH (1)
#define ITM_SMIARX_EN_BSET_SMIARX_3_EN_BSET_MASK (0x08)
#define ITM_SMIARX_EN_BSET_SMIARX_4_EN_BSET_OFFSET (0x04)
#define ITM_SMIARX_EN_BSET_SMIARX_4_EN_BSET_WIDTH (1)
#define ITM_SMIARX_EN_BSET_SMIARX_4_EN_BSET_MASK (0x10)

/*
* Register : ITM_LBE_STATUS
*/

#define ITM_LBE_STATUS_SIZE                 (8)
#define ITM_LBE_STATUS_OFFSET               (pictorv2_in_ITM_BASE_ADDR + 0xcc)
#define ITM_LBE_STATUS_RESET_VALUE          (0x00)
#define ITM_LBE_STATUS_BITFIELD_MASK        (0x01)
#define ITM_LBE_STATUS_RWMASK               (0x00)
#define ITM_LBE_STATUS_ROMASK               (0x01)
#define ITM_LBE_STATUS_WOMASK               (0x00)
#define ITM_LBE_STATUS_UNUSED_MASK          (0xFE)
#define ITM_LBE_STATUS_LBE_STATUS_OFFSET    (0x00)
#define ITM_LBE_STATUS_LBE_STATUS_WIDTH     (1)
#define ITM_LBE_STATUS_LBE_STATUS_MASK      (0x01)

/*
* Register : ITM_LBE_EN_STATUS
*/

#define ITM_LBE_EN_STATUS_SIZE              (8)
#define ITM_LBE_EN_STATUS_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0xce)
#define ITM_LBE_EN_STATUS_RESET_VALUE       (0x00)
#define ITM_LBE_EN_STATUS_BITFIELD_MASK     (0x01)
#define ITM_LBE_EN_STATUS_RWMASK            (0x00)
#define ITM_LBE_EN_STATUS_ROMASK            (0x01)
#define ITM_LBE_EN_STATUS_WOMASK            (0x00)
#define ITM_LBE_EN_STATUS_UNUSED_MASK       (0xFE)
#define ITM_LBE_EN_STATUS_LBE_EN_STATUS_OFFSET (0x00)
#define ITM_LBE_EN_STATUS_LBE_EN_STATUS_WIDTH (1)
#define ITM_LBE_EN_STATUS_LBE_EN_STATUS_MASK (0x01)

/*
* Register : ITM_LBE_STATUS_BCLR
*/

#define ITM_LBE_STATUS_BCLR_SIZE            (8)
#define ITM_LBE_STATUS_BCLR_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0xd0)
#define ITM_LBE_STATUS_BCLR_RESET_VALUE     (0x00)
#define ITM_LBE_STATUS_BCLR_BITFIELD_MASK   (0x01)
#define ITM_LBE_STATUS_BCLR_RWMASK          (0x00)
#define ITM_LBE_STATUS_BCLR_ROMASK          (0x00)
#define ITM_LBE_STATUS_BCLR_WOMASK          (0x01)
#define ITM_LBE_STATUS_BCLR_UNUSED_MASK     (0xFE)
#define ITM_LBE_STATUS_BCLR_LBE_STATUS_BCLR_OFFSET (0x00)
#define ITM_LBE_STATUS_BCLR_LBE_STATUS_BCLR_WIDTH (1)
#define ITM_LBE_STATUS_BCLR_LBE_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_LBE_STATUS_BSET
*/

#define ITM_LBE_STATUS_BSET_SIZE            (8)
#define ITM_LBE_STATUS_BSET_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0xd2)
#define ITM_LBE_STATUS_BSET_RESET_VALUE     (0x00)
#define ITM_LBE_STATUS_BSET_BITFIELD_MASK   (0x01)
#define ITM_LBE_STATUS_BSET_RWMASK          (0x00)
#define ITM_LBE_STATUS_BSET_ROMASK          (0x00)
#define ITM_LBE_STATUS_BSET_WOMASK          (0x01)
#define ITM_LBE_STATUS_BSET_UNUSED_MASK     (0xFE)
#define ITM_LBE_STATUS_BSET_LBE_STATUS_BSET_OFFSET (0x00)
#define ITM_LBE_STATUS_BSET_LBE_STATUS_BSET_WIDTH (1)
#define ITM_LBE_STATUS_BSET_LBE_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_LBE_EN_BCLR
*/

#define ITM_LBE_EN_BCLR_SIZE                (8)
#define ITM_LBE_EN_BCLR_OFFSET              (pictorv2_in_ITM_BASE_ADDR + 0xd4)
#define ITM_LBE_EN_BCLR_RESET_VALUE         (0x00)
#define ITM_LBE_EN_BCLR_BITFIELD_MASK       (0x01)
#define ITM_LBE_EN_BCLR_RWMASK              (0x00)
#define ITM_LBE_EN_BCLR_ROMASK              (0x00)
#define ITM_LBE_EN_BCLR_WOMASK              (0x01)
#define ITM_LBE_EN_BCLR_UNUSED_MASK         (0xFE)
#define ITM_LBE_EN_BCLR_LBE_EN_BCLR_OFFSET  (0x00)
#define ITM_LBE_EN_BCLR_LBE_EN_BCLR_WIDTH   (1)
#define ITM_LBE_EN_BCLR_LBE_EN_BCLR_MASK    (0x01)

/*
* Register : ITM_LBE_EN_BSET
*/

#define ITM_LBE_EN_BSET_SIZE                (8)
#define ITM_LBE_EN_BSET_OFFSET              (pictorv2_in_ITM_BASE_ADDR + 0xd6)
#define ITM_LBE_EN_BSET_RESET_VALUE         (0x00)
#define ITM_LBE_EN_BSET_BITFIELD_MASK       (0x01)
#define ITM_LBE_EN_BSET_RWMASK              (0x00)
#define ITM_LBE_EN_BSET_ROMASK              (0x00)
#define ITM_LBE_EN_BSET_WOMASK              (0x01)
#define ITM_LBE_EN_BSET_UNUSED_MASK         (0xFE)
#define ITM_LBE_EN_BSET_LBE_EN_BSET_OFFSET  (0x00)
#define ITM_LBE_EN_BSET_LBE_EN_BSET_WIDTH   (1)
#define ITM_LBE_EN_BSET_LBE_EN_BSET_MASK    (0x01)

/*
* Register : ITM_MCCI_STATUS
*/

#define ITM_MCCI_STATUS_SIZE                (8)
#define ITM_MCCI_STATUS_OFFSET              (pictorv2_in_ITM_BASE_ADDR + 0xd8)
#define ITM_MCCI_STATUS_RESET_VALUE         (0x00)
#define ITM_MCCI_STATUS_BITFIELD_MASK       (0x03)
#define ITM_MCCI_STATUS_RWMASK              (0x00)
#define ITM_MCCI_STATUS_ROMASK              (0x03)
#define ITM_MCCI_STATUS_WOMASK              (0x00)
#define ITM_MCCI_STATUS_UNUSED_MASK         (0xFC)
#define ITM_MCCI_STATUS_MCCI_EOP_STATUS_OFFSET (0x00)
#define ITM_MCCI_STATUS_MCCI_EOP_STATUS_WIDTH (1)
#define ITM_MCCI_STATUS_MCCI_EOP_STATUS_MASK (0x01)
#define ITM_MCCI_STATUS_MCCI_ERROR_STATUS_OFFSET (0x01)
#define ITM_MCCI_STATUS_MCCI_ERROR_STATUS_WIDTH (1)
#define ITM_MCCI_STATUS_MCCI_ERROR_STATUS_MASK (0x02)

/*
* Register : ITM_MCCI_EN_STATUS
*/

#define ITM_MCCI_EN_STATUS_SIZE             (8)
#define ITM_MCCI_EN_STATUS_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0xda)
#define ITM_MCCI_EN_STATUS_RESET_VALUE      (0x00)
#define ITM_MCCI_EN_STATUS_BITFIELD_MASK    (0x03)
#define ITM_MCCI_EN_STATUS_RWMASK           (0x00)
#define ITM_MCCI_EN_STATUS_ROMASK           (0x03)
#define ITM_MCCI_EN_STATUS_WOMASK           (0x00)
#define ITM_MCCI_EN_STATUS_UNUSED_MASK      (0xFC)
#define ITM_MCCI_EN_STATUS_MCCI_EOP_EN_STATUS_OFFSET (0x00)
#define ITM_MCCI_EN_STATUS_MCCI_EOP_EN_STATUS_WIDTH (1)
#define ITM_MCCI_EN_STATUS_MCCI_EOP_EN_STATUS_MASK (0x01)
#define ITM_MCCI_EN_STATUS_MCCI_ERROR_EN_STATUS_OFFSET (0x01)
#define ITM_MCCI_EN_STATUS_MCCI_ERROR_EN_STATUS_WIDTH (1)
#define ITM_MCCI_EN_STATUS_MCCI_ERROR_EN_STATUS_MASK (0x02)

/*
* Register : ITM_MCCI_STATUS_BCLR
*/

#define ITM_MCCI_STATUS_BCLR_SIZE           (8)
#define ITM_MCCI_STATUS_BCLR_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xdc)
#define ITM_MCCI_STATUS_BCLR_RESET_VALUE    (0x00)
#define ITM_MCCI_STATUS_BCLR_BITFIELD_MASK  (0x03)
#define ITM_MCCI_STATUS_BCLR_RWMASK         (0x00)
#define ITM_MCCI_STATUS_BCLR_ROMASK         (0x00)
#define ITM_MCCI_STATUS_BCLR_WOMASK         (0x03)
#define ITM_MCCI_STATUS_BCLR_UNUSED_MASK    (0xFC)
#define ITM_MCCI_STATUS_BCLR_MCCI_EOP_STATUS_BCLR_OFFSET (0x00)
#define ITM_MCCI_STATUS_BCLR_MCCI_EOP_STATUS_BCLR_WIDTH (1)
#define ITM_MCCI_STATUS_BCLR_MCCI_EOP_STATUS_BCLR_MASK (0x01)
#define ITM_MCCI_STATUS_BCLR_MCCI_ERROR_STATUS_BCLR_OFFSET (0x01)
#define ITM_MCCI_STATUS_BCLR_MCCI_ERROR_STATUS_BCLR_WIDTH (1)
#define ITM_MCCI_STATUS_BCLR_MCCI_ERROR_STATUS_BCLR_MASK (0x02)

/*
* Register : ITM_MCCI_STATUS_BSET
*/

#define ITM_MCCI_STATUS_BSET_SIZE           (8)
#define ITM_MCCI_STATUS_BSET_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xde)
#define ITM_MCCI_STATUS_BSET_RESET_VALUE    (0x00)
#define ITM_MCCI_STATUS_BSET_BITFIELD_MASK  (0x03)
#define ITM_MCCI_STATUS_BSET_RWMASK         (0x00)
#define ITM_MCCI_STATUS_BSET_ROMASK         (0x00)
#define ITM_MCCI_STATUS_BSET_WOMASK         (0x03)
#define ITM_MCCI_STATUS_BSET_UNUSED_MASK    (0xFC)
#define ITM_MCCI_STATUS_BSET_MCCI_EOP_STATUS_BSET_OFFSET (0x00)
#define ITM_MCCI_STATUS_BSET_MCCI_EOP_STATUS_BSET_WIDTH (1)
#define ITM_MCCI_STATUS_BSET_MCCI_EOP_STATUS_BSET_MASK (0x01)
#define ITM_MCCI_STATUS_BSET_MCCI_ERROR_STATUS_BSET_OFFSET (0x01)
#define ITM_MCCI_STATUS_BSET_MCCI_ERROR_STATUS_BSET_WIDTH (1)
#define ITM_MCCI_STATUS_BSET_MCCI_ERROR_STATUS_BSET_MASK (0x02)

/*
* Register : ITM_MCCI_EN_BCLR
*/

#define ITM_MCCI_EN_BCLR_SIZE               (8)
#define ITM_MCCI_EN_BCLR_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0xe0)
#define ITM_MCCI_EN_BCLR_RESET_VALUE        (0x00)
#define ITM_MCCI_EN_BCLR_BITFIELD_MASK      (0x03)
#define ITM_MCCI_EN_BCLR_RWMASK             (0x00)
#define ITM_MCCI_EN_BCLR_ROMASK             (0x00)
#define ITM_MCCI_EN_BCLR_WOMASK             (0x03)
#define ITM_MCCI_EN_BCLR_UNUSED_MASK        (0xFC)
#define ITM_MCCI_EN_BCLR_MCCI_EOP_EN_BCLR_OFFSET (0x00)
#define ITM_MCCI_EN_BCLR_MCCI_EOP_EN_BCLR_WIDTH (1)
#define ITM_MCCI_EN_BCLR_MCCI_EOP_EN_BCLR_MASK (0x01)
#define ITM_MCCI_EN_BCLR_MCCI_ERROR_EN_BCLR_OFFSET (0x01)
#define ITM_MCCI_EN_BCLR_MCCI_ERROR_EN_BCLR_WIDTH (1)
#define ITM_MCCI_EN_BCLR_MCCI_ERROR_EN_BCLR_MASK (0x02)

/*
* Register : ITM_MCCI_EN_BSET
*/

#define ITM_MCCI_EN_BSET_SIZE               (8)
#define ITM_MCCI_EN_BSET_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0xe2)
#define ITM_MCCI_EN_BSET_RESET_VALUE        (0x00)
#define ITM_MCCI_EN_BSET_BITFIELD_MASK      (0x03)
#define ITM_MCCI_EN_BSET_RWMASK             (0x00)
#define ITM_MCCI_EN_BSET_ROMASK             (0x00)
#define ITM_MCCI_EN_BSET_WOMASK             (0x03)
#define ITM_MCCI_EN_BSET_UNUSED_MASK        (0xFC)
#define ITM_MCCI_EN_BSET_MCCI_EOP_EN_BSET_OFFSET (0x00)
#define ITM_MCCI_EN_BSET_MCCI_EOP_EN_BSET_WIDTH (1)
#define ITM_MCCI_EN_BSET_MCCI_EOP_EN_BSET_MASK (0x01)
#define ITM_MCCI_EN_BSET_MCCI_ERROR_EN_BSET_OFFSET (0x01)
#define ITM_MCCI_EN_BSET_MCCI_ERROR_EN_BSET_WIDTH (1)
#define ITM_MCCI_EN_BSET_MCCI_ERROR_EN_BSET_MASK (0x02)

/*
* Register : ITM_HCOM_STATUS
*/

#define ITM_HCOM_STATUS_SIZE                (8)
#define ITM_HCOM_STATUS_OFFSET              (pictorv2_in_ITM_BASE_ADDR + 0xe4)
#define ITM_HCOM_STATUS_RESET_VALUE         (0x00)
#define ITM_HCOM_STATUS_BITFIELD_MASK       (0x01)
#define ITM_HCOM_STATUS_RWMASK              (0x00)
#define ITM_HCOM_STATUS_ROMASK              (0x01)
#define ITM_HCOM_STATUS_WOMASK              (0x00)
#define ITM_HCOM_STATUS_UNUSED_MASK         (0xFE)
#define ITM_HCOM_STATUS_HCOM_STATUS_OFFSET  (0x00)
#define ITM_HCOM_STATUS_HCOM_STATUS_WIDTH   (1)
#define ITM_HCOM_STATUS_HCOM_STATUS_MASK    (0x01)

/*
* Register : ITM_HCOM_EN_STATUS
*/

#define ITM_HCOM_EN_STATUS_SIZE             (8)
#define ITM_HCOM_EN_STATUS_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0xe6)
#define ITM_HCOM_EN_STATUS_RESET_VALUE      (0x00)
#define ITM_HCOM_EN_STATUS_BITFIELD_MASK    (0x01)
#define ITM_HCOM_EN_STATUS_RWMASK           (0x00)
#define ITM_HCOM_EN_STATUS_ROMASK           (0x01)
#define ITM_HCOM_EN_STATUS_WOMASK           (0x00)
#define ITM_HCOM_EN_STATUS_UNUSED_MASK      (0xFE)
#define ITM_HCOM_EN_STATUS_HCOM_EN_STATUS_OFFSET (0x00)
#define ITM_HCOM_EN_STATUS_HCOM_EN_STATUS_WIDTH (1)
#define ITM_HCOM_EN_STATUS_HCOM_EN_STATUS_MASK (0x01)

/*
* Register : ITM_HCOM_STATUS_BCLR
*/

#define ITM_HCOM_STATUS_BCLR_SIZE           (8)
#define ITM_HCOM_STATUS_BCLR_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xe8)
#define ITM_HCOM_STATUS_BCLR_RESET_VALUE    (0x00)
#define ITM_HCOM_STATUS_BCLR_BITFIELD_MASK  (0x01)
#define ITM_HCOM_STATUS_BCLR_RWMASK         (0x00)
#define ITM_HCOM_STATUS_BCLR_ROMASK         (0x00)
#define ITM_HCOM_STATUS_BCLR_WOMASK         (0x01)
#define ITM_HCOM_STATUS_BCLR_UNUSED_MASK    (0xFE)
#define ITM_HCOM_STATUS_BCLR_HCOM_STATUS_BCLR_OFFSET (0x00)
#define ITM_HCOM_STATUS_BCLR_HCOM_STATUS_BCLR_WIDTH (1)
#define ITM_HCOM_STATUS_BCLR_HCOM_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_HCOM_STATUS_BSET
*/

#define ITM_HCOM_STATUS_BSET_SIZE           (8)
#define ITM_HCOM_STATUS_BSET_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xea)
#define ITM_HCOM_STATUS_BSET_RESET_VALUE    (0x00)
#define ITM_HCOM_STATUS_BSET_BITFIELD_MASK  (0x01)
#define ITM_HCOM_STATUS_BSET_RWMASK         (0x00)
#define ITM_HCOM_STATUS_BSET_ROMASK         (0x00)
#define ITM_HCOM_STATUS_BSET_WOMASK         (0x01)
#define ITM_HCOM_STATUS_BSET_UNUSED_MASK    (0xFE)
#define ITM_HCOM_STATUS_BSET_HCOM_STATUS_BSET_OFFSET (0x00)
#define ITM_HCOM_STATUS_BSET_HCOM_STATUS_BSET_WIDTH (1)
#define ITM_HCOM_STATUS_BSET_HCOM_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_HCOM_EN_BCLR
*/

#define ITM_HCOM_EN_BCLR_SIZE               (8)
#define ITM_HCOM_EN_BCLR_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0xec)
#define ITM_HCOM_EN_BCLR_RESET_VALUE        (0x00)
#define ITM_HCOM_EN_BCLR_BITFIELD_MASK      (0x01)
#define ITM_HCOM_EN_BCLR_RWMASK             (0x00)
#define ITM_HCOM_EN_BCLR_ROMASK             (0x00)
#define ITM_HCOM_EN_BCLR_WOMASK             (0x01)
#define ITM_HCOM_EN_BCLR_UNUSED_MASK        (0xFE)
#define ITM_HCOM_EN_BCLR_HCOM_EN_BCLR_OFFSET (0x00)
#define ITM_HCOM_EN_BCLR_HCOM_EN_BCLR_WIDTH (1)
#define ITM_HCOM_EN_BCLR_HCOM_EN_BCLR_MASK  (0x01)

/*
* Register : ITM_HCOM_EN_BSET
*/

#define ITM_HCOM_EN_BSET_SIZE               (8)
#define ITM_HCOM_EN_BSET_OFFSET             (pictorv2_in_ITM_BASE_ADDR + 0xee)
#define ITM_HCOM_EN_BSET_RESET_VALUE        (0x00)
#define ITM_HCOM_EN_BSET_BITFIELD_MASK      (0x01)
#define ITM_HCOM_EN_BSET_RWMASK             (0x00)
#define ITM_HCOM_EN_BSET_ROMASK             (0x00)
#define ITM_HCOM_EN_BSET_WOMASK             (0x01)
#define ITM_HCOM_EN_BSET_UNUSED_MASK        (0xFE)
#define ITM_HCOM_EN_BSET_HCOM_EN_BSET_OFFSET (0x00)
#define ITM_HCOM_EN_BSET_HCOM_EN_BSET_WIDTH (1)
#define ITM_HCOM_EN_BSET_HCOM_EN_BSET_MASK  (0x01)

/*
* Register : ITM_REPIPE_STATUS
*/

#define ITM_REPIPE_STATUS_SIZE              (8)
#define ITM_REPIPE_STATUS_OFFSET            (pictorv2_in_ITM_BASE_ADDR + 0xf0)
#define ITM_REPIPE_STATUS_RESET_VALUE       (0x00)
#define ITM_REPIPE_STATUS_BITFIELD_MASK     (0x07)
#define ITM_REPIPE_STATUS_RWMASK            (0x00)
#define ITM_REPIPE_STATUS_ROMASK            (0x07)
#define ITM_REPIPE_STATUS_WOMASK            (0x00)
#define ITM_REPIPE_STATUS_UNUSED_MASK       (0xF8)
#define ITM_REPIPE_STATUS_RE_IN_STATUS_OFFSET (0x00)
#define ITM_REPIPE_STATUS_RE_IN_STATUS_WIDTH (1)
#define ITM_REPIPE_STATUS_RE_IN_STATUS_MASK (0x01)
#define ITM_REPIPE_STATUS_RE_POSTGAIN_STATUS_OFFSET (0x01)
#define ITM_REPIPE_STATUS_RE_POSTGAIN_STATUS_WIDTH (1)
#define ITM_REPIPE_STATUS_RE_POSTGAIN_STATUS_MASK (0x02)
#define ITM_REPIPE_STATUS_RE_OUT_STORE_STATUS_OFFSET (0x02)
#define ITM_REPIPE_STATUS_RE_OUT_STORE_STATUS_WIDTH (1)
#define ITM_REPIPE_STATUS_RE_OUT_STORE_STATUS_MASK (0x04)

/*
* Register : ITM_REPIPE_EN_STATUS
*/

#define ITM_REPIPE_EN_STATUS_SIZE           (8)
#define ITM_REPIPE_EN_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0xf2)
#define ITM_REPIPE_EN_STATUS_RESET_VALUE    (0x00)
#define ITM_REPIPE_EN_STATUS_BITFIELD_MASK  (0x07)
#define ITM_REPIPE_EN_STATUS_RWMASK         (0x00)
#define ITM_REPIPE_EN_STATUS_ROMASK         (0x07)
#define ITM_REPIPE_EN_STATUS_WOMASK         (0x00)
#define ITM_REPIPE_EN_STATUS_UNUSED_MASK    (0xF8)
#define ITM_REPIPE_EN_STATUS_RE_IN_EN_STATUS_OFFSET (0x00)
#define ITM_REPIPE_EN_STATUS_RE_IN_EN_STATUS_WIDTH (1)
#define ITM_REPIPE_EN_STATUS_RE_IN_EN_STATUS_MASK (0x01)
#define ITM_REPIPE_EN_STATUS_RE_POSTGAIN_EN_STATUS_OFFSET (0x01)
#define ITM_REPIPE_EN_STATUS_RE_POSTGAIN_EN_STATUS_WIDTH (1)
#define ITM_REPIPE_EN_STATUS_RE_POSTGAIN_EN_STATUS_MASK (0x02)
#define ITM_REPIPE_EN_STATUS_RE_OUT_STORE_EN_STATUS_OFFSET (0x02)
#define ITM_REPIPE_EN_STATUS_RE_OUT_STORE_EN_STATUS_WIDTH (1)
#define ITM_REPIPE_EN_STATUS_RE_OUT_STORE_EN_STATUS_MASK (0x04)

/*
* Register : ITM_REPIPE_STATUS_BCLR
*/

#define ITM_REPIPE_STATUS_BCLR_SIZE         (8)
#define ITM_REPIPE_STATUS_BCLR_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0xf4)
#define ITM_REPIPE_STATUS_BCLR_RESET_VALUE  (0x00)
#define ITM_REPIPE_STATUS_BCLR_BITFIELD_MASK (0x07)
#define ITM_REPIPE_STATUS_BCLR_RWMASK       (0x00)
#define ITM_REPIPE_STATUS_BCLR_ROMASK       (0x00)
#define ITM_REPIPE_STATUS_BCLR_WOMASK       (0x07)
#define ITM_REPIPE_STATUS_BCLR_UNUSED_MASK  (0xF8)
#define ITM_REPIPE_STATUS_BCLR_RE_IN_STATUS_BCLR_OFFSET (0x00)
#define ITM_REPIPE_STATUS_BCLR_RE_IN_STATUS_BCLR_WIDTH (1)
#define ITM_REPIPE_STATUS_BCLR_RE_IN_STATUS_BCLR_MASK (0x01)
#define ITM_REPIPE_STATUS_BCLR_RE_POSTGAIN_STATUS_BCLR_OFFSET (0x01)
#define ITM_REPIPE_STATUS_BCLR_RE_POSTGAIN_STATUS_BCLR_WIDTH (1)
#define ITM_REPIPE_STATUS_BCLR_RE_POSTGAIN_STATUS_BCLR_MASK (0x02)
#define ITM_REPIPE_STATUS_BCLR_RE_OUT_STORE_STATUS_BCLR_OFFSET (0x02)
#define ITM_REPIPE_STATUS_BCLR_RE_OUT_STORE_STATUS_BCLR_WIDTH (1)
#define ITM_REPIPE_STATUS_BCLR_RE_OUT_STORE_STATUS_BCLR_MASK (0x04)

/*
* Register : ITM_REPIPE_STATUS_BSET
*/

#define ITM_REPIPE_STATUS_BSET_SIZE         (8)
#define ITM_REPIPE_STATUS_BSET_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0xf6)
#define ITM_REPIPE_STATUS_BSET_RESET_VALUE  (0x00)
#define ITM_REPIPE_STATUS_BSET_BITFIELD_MASK (0x07)
#define ITM_REPIPE_STATUS_BSET_RWMASK       (0x00)
#define ITM_REPIPE_STATUS_BSET_ROMASK       (0x00)
#define ITM_REPIPE_STATUS_BSET_WOMASK       (0x07)
#define ITM_REPIPE_STATUS_BSET_UNUSED_MASK  (0xF8)
#define ITM_REPIPE_STATUS_BSET_RE_IN_STATUS_BSET_OFFSET (0x00)
#define ITM_REPIPE_STATUS_BSET_RE_IN_STATUS_BSET_WIDTH (1)
#define ITM_REPIPE_STATUS_BSET_RE_IN_STATUS_BSET_MASK (0x01)
#define ITM_REPIPE_STATUS_BSET_RE_POSTGAIN_STATUS_BSET_OFFSET (0x01)
#define ITM_REPIPE_STATUS_BSET_RE_POSTGAIN_STATUS_BSET_WIDTH (1)
#define ITM_REPIPE_STATUS_BSET_RE_POSTGAIN_STATUS_BSET_MASK (0x02)
#define ITM_REPIPE_STATUS_BSET_RE_OUT_STORE_STATUS_BSET_OFFSET (0x02)
#define ITM_REPIPE_STATUS_BSET_RE_OUT_STORE_STATUS_BSET_WIDTH (1)
#define ITM_REPIPE_STATUS_BSET_RE_OUT_STORE_STATUS_BSET_MASK (0x04)

/*
* Register : ITM_REPIPE_EN_BCLR
*/

#define ITM_REPIPE_EN_BCLR_SIZE             (8)
#define ITM_REPIPE_EN_BCLR_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0xf8)
#define ITM_REPIPE_EN_BCLR_RESET_VALUE      (0x00)
#define ITM_REPIPE_EN_BCLR_BITFIELD_MASK    (0x07)
#define ITM_REPIPE_EN_BCLR_RWMASK           (0x00)
#define ITM_REPIPE_EN_BCLR_ROMASK           (0x00)
#define ITM_REPIPE_EN_BCLR_WOMASK           (0x07)
#define ITM_REPIPE_EN_BCLR_UNUSED_MASK      (0xF8)
#define ITM_REPIPE_EN_BCLR_RE_IN_EN_BCLR_OFFSET (0x00)
#define ITM_REPIPE_EN_BCLR_RE_IN_EN_BCLR_WIDTH (1)
#define ITM_REPIPE_EN_BCLR_RE_IN_EN_BCLR_MASK (0x01)
#define ITM_REPIPE_EN_BCLR_RE_POSTGAIN_EN_BCLR_OFFSET (0x01)
#define ITM_REPIPE_EN_BCLR_RE_POSTGAIN_EN_BCLR_WIDTH (1)
#define ITM_REPIPE_EN_BCLR_RE_POSTGAIN_EN_BCLR_MASK (0x02)
#define ITM_REPIPE_EN_BCLR_RE_OUT_STORE_EN_BCLR_OFFSET (0x02)
#define ITM_REPIPE_EN_BCLR_RE_OUT_STORE_EN_BCLR_WIDTH (1)
#define ITM_REPIPE_EN_BCLR_RE_OUT_STORE_EN_BCLR_MASK (0x04)

/*
* Register : ITM_REPIPE_EN_BSET
*/

#define ITM_REPIPE_EN_BSET_SIZE             (8)
#define ITM_REPIPE_EN_BSET_OFFSET           (pictorv2_in_ITM_BASE_ADDR + 0xfa)
#define ITM_REPIPE_EN_BSET_RESET_VALUE      (0x00)
#define ITM_REPIPE_EN_BSET_BITFIELD_MASK    (0x07)
#define ITM_REPIPE_EN_BSET_RWMASK           (0x00)
#define ITM_REPIPE_EN_BSET_ROMASK           (0x00)
#define ITM_REPIPE_EN_BSET_WOMASK           (0x07)
#define ITM_REPIPE_EN_BSET_UNUSED_MASK      (0xF8)
#define ITM_REPIPE_EN_BSET_RE_IN_EN_BSET_OFFSET (0x00)
#define ITM_REPIPE_EN_BSET_RE_IN_EN_BSET_WIDTH (1)
#define ITM_REPIPE_EN_BSET_RE_IN_EN_BSET_MASK (0x01)
#define ITM_REPIPE_EN_BSET_RE_POSTGAIN_EN_BSET_OFFSET (0x01)
#define ITM_REPIPE_EN_BSET_RE_POSTGAIN_EN_BSET_WIDTH (1)
#define ITM_REPIPE_EN_BSET_RE_POSTGAIN_EN_BSET_MASK (0x02)
#define ITM_REPIPE_EN_BSET_RE_OUT_STORE_EN_BSET_OFFSET (0x02)
#define ITM_REPIPE_EN_BSET_RE_OUT_STORE_EN_BSET_WIDTH (1)
#define ITM_REPIPE_EN_BSET_RE_OUT_STORE_EN_BSET_MASK (0x04)

/*
* Register : ITM_DMCEPIPE_STATUS
*/

#define ITM_DMCEPIPE_STATUS_SIZE            (8)
#define ITM_DMCEPIPE_STATUS_OFFSET          (pictorv2_in_ITM_BASE_ADDR + 0xfc)
#define ITM_DMCEPIPE_STATUS_RESET_VALUE     (0x00)
#define ITM_DMCEPIPE_STATUS_BITFIELD_MASK   (0x07)
#define ITM_DMCEPIPE_STATUS_RWMASK          (0x00)
#define ITM_DMCEPIPE_STATUS_ROMASK          (0x07)
#define ITM_DMCEPIPE_STATUS_WOMASK          (0x00)
#define ITM_DMCEPIPE_STATUS_UNUSED_MASK     (0xF8)
#define ITM_DMCEPIPE_STATUS_DMCE_IN_STATUS_OFFSET (0x00)
#define ITM_DMCEPIPE_STATUS_DMCE_IN_STATUS_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_DMCE_IN_STATUS_MASK (0x01)
#define ITM_DMCEPIPE_STATUS_DMCE_OUT_STATUS_OFFSET (0x01)
#define ITM_DMCEPIPE_STATUS_DMCE_OUT_STATUS_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_DMCE_OUT_STATUS_MASK (0x02)
#define ITM_DMCEPIPE_STATUS_RGB_STORE_STATUS_OFFSET (0x02)
#define ITM_DMCEPIPE_STATUS_RGB_STORE_STATUS_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_RGB_STORE_STATUS_MASK (0x04)

/*
* Register : ITM_DMCEPIPE_EN_STATUS
*/

#define ITM_DMCEPIPE_EN_STATUS_SIZE         (8)
#define ITM_DMCEPIPE_EN_STATUS_OFFSET       (pictorv2_in_ITM_BASE_ADDR + 0xfe)
#define ITM_DMCEPIPE_EN_STATUS_RESET_VALUE  (0x00)
#define ITM_DMCEPIPE_EN_STATUS_BITFIELD_MASK (0x07)
#define ITM_DMCEPIPE_EN_STATUS_RWMASK       (0x00)
#define ITM_DMCEPIPE_EN_STATUS_ROMASK       (0x07)
#define ITM_DMCEPIPE_EN_STATUS_WOMASK       (0x00)
#define ITM_DMCEPIPE_EN_STATUS_UNUSED_MASK  (0xF8)
#define ITM_DMCEPIPE_EN_STATUS_DMCE_IN_EN_STATUS_OFFSET (0x00)
#define ITM_DMCEPIPE_EN_STATUS_DMCE_IN_EN_STATUS_WIDTH (1)
#define ITM_DMCEPIPE_EN_STATUS_DMCE_IN_EN_STATUS_MASK (0x01)
#define ITM_DMCEPIPE_EN_STATUS_DMCE_OUT_EN_STATUS_OFFSET (0x01)
#define ITM_DMCEPIPE_EN_STATUS_DMCE_OUT_EN_STATUS_WIDTH (1)
#define ITM_DMCEPIPE_EN_STATUS_DMCE_OUT_EN_STATUS_MASK (0x02)
#define ITM_DMCEPIPE_EN_STATUS_RGB_STORE_EN_STATUS_OFFSET (0x02)
#define ITM_DMCEPIPE_EN_STATUS_RGB_STORE_EN_STATUS_WIDTH (1)
#define ITM_DMCEPIPE_EN_STATUS_RGB_STORE_EN_STATUS_MASK (0x04)

/*
* Register : ITM_DMCEPIPE_STATUS_BCLR
*/

#define ITM_DMCEPIPE_STATUS_BCLR_SIZE       (8)
#define ITM_DMCEPIPE_STATUS_BCLR_OFFSET     (pictorv2_in_ITM_BASE_ADDR + 0x100)
#define ITM_DMCEPIPE_STATUS_BCLR_RESET_VALUE (0x00)
#define ITM_DMCEPIPE_STATUS_BCLR_BITFIELD_MASK (0x07)
#define ITM_DMCEPIPE_STATUS_BCLR_RWMASK     (0x00)
#define ITM_DMCEPIPE_STATUS_BCLR_ROMASK     (0x00)
#define ITM_DMCEPIPE_STATUS_BCLR_WOMASK     (0x07)
#define ITM_DMCEPIPE_STATUS_BCLR_UNUSED_MASK (0xF8)
#define ITM_DMCEPIPE_STATUS_BCLR_DMCE_IN_STATUS_BCLR_OFFSET (0x00)
#define ITM_DMCEPIPE_STATUS_BCLR_DMCE_IN_STATUS_BCLR_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_BCLR_DMCE_IN_STATUS_BCLR_MASK (0x01)
#define ITM_DMCEPIPE_STATUS_BCLR_DMCE_OUT_STATUS_BCLR_OFFSET (0x01)
#define ITM_DMCEPIPE_STATUS_BCLR_DMCE_OUT_STATUS_BCLR_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_BCLR_DMCE_OUT_STATUS_BCLR_MASK (0x02)
#define ITM_DMCEPIPE_STATUS_BCLR_RGB_STORE_STATUS_BCLR_OFFSET (0x02)
#define ITM_DMCEPIPE_STATUS_BCLR_RGB_STORE_STATUS_BCLR_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_BCLR_RGB_STORE_STATUS_BCLR_MASK (0x04)

/*
* Register : ITM_DMCEPIPE_STATUS_BSET
*/

#define ITM_DMCEPIPE_STATUS_BSET_SIZE       (8)
#define ITM_DMCEPIPE_STATUS_BSET_OFFSET     (pictorv2_in_ITM_BASE_ADDR + 0x102)
#define ITM_DMCEPIPE_STATUS_BSET_RESET_VALUE (0x00)
#define ITM_DMCEPIPE_STATUS_BSET_BITFIELD_MASK (0x07)
#define ITM_DMCEPIPE_STATUS_BSET_RWMASK     (0x00)
#define ITM_DMCEPIPE_STATUS_BSET_ROMASK     (0x00)
#define ITM_DMCEPIPE_STATUS_BSET_WOMASK     (0x07)
#define ITM_DMCEPIPE_STATUS_BSET_UNUSED_MASK (0xF8)
#define ITM_DMCEPIPE_STATUS_BSET_DMCE_IN_STATUS_BSET_OFFSET (0x00)
#define ITM_DMCEPIPE_STATUS_BSET_DMCE_IN_STATUS_BSET_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_BSET_DMCE_IN_STATUS_BSET_MASK (0x01)
#define ITM_DMCEPIPE_STATUS_BSET_DMCE_OUT_STATUS_BSET_OFFSET (0x01)
#define ITM_DMCEPIPE_STATUS_BSET_DMCE_OUT_STATUS_BSET_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_BSET_DMCE_OUT_STATUS_BSET_MASK (0x02)
#define ITM_DMCEPIPE_STATUS_BSET_RGB_STORE_STATUS_BSET_OFFSET (0x02)
#define ITM_DMCEPIPE_STATUS_BSET_RGB_STORE_STATUS_BSET_WIDTH (1)
#define ITM_DMCEPIPE_STATUS_BSET_RGB_STORE_STATUS_BSET_MASK (0x04)

/*
* Register : ITM_DMCEPIPE_EN_BCLR
*/

#define ITM_DMCEPIPE_EN_BCLR_SIZE           (8)
#define ITM_DMCEPIPE_EN_BCLR_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x104)
#define ITM_DMCEPIPE_EN_BCLR_RESET_VALUE    (0x00)
#define ITM_DMCEPIPE_EN_BCLR_BITFIELD_MASK  (0x07)
#define ITM_DMCEPIPE_EN_BCLR_RWMASK         (0x00)
#define ITM_DMCEPIPE_EN_BCLR_ROMASK         (0x00)
#define ITM_DMCEPIPE_EN_BCLR_WOMASK         (0x07)
#define ITM_DMCEPIPE_EN_BCLR_UNUSED_MASK    (0xF8)
#define ITM_DMCEPIPE_EN_BCLR_DMCE_IN_EN_BCLR_OFFSET (0x00)
#define ITM_DMCEPIPE_EN_BCLR_DMCE_IN_EN_BCLR_WIDTH (1)
#define ITM_DMCEPIPE_EN_BCLR_DMCE_IN_EN_BCLR_MASK (0x01)
#define ITM_DMCEPIPE_EN_BCLR_DMCE_OUT_EN_BCLR_OFFSET (0x01)
#define ITM_DMCEPIPE_EN_BCLR_DMCE_OUT_EN_BCLR_WIDTH (1)
#define ITM_DMCEPIPE_EN_BCLR_DMCE_OUT_EN_BCLR_MASK (0x02)
#define ITM_DMCEPIPE_EN_BCLR_RGB_STORE_EN_BCLR_OFFSET (0x02)
#define ITM_DMCEPIPE_EN_BCLR_RGB_STORE_EN_BCLR_WIDTH (1)
#define ITM_DMCEPIPE_EN_BCLR_RGB_STORE_EN_BCLR_MASK (0x04)

/*
* Register : ITM_DMCEPIPE_EN_BSET
*/

#define ITM_DMCEPIPE_EN_BSET_SIZE           (8)
#define ITM_DMCEPIPE_EN_BSET_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x106)
#define ITM_DMCEPIPE_EN_BSET_RESET_VALUE    (0x00)
#define ITM_DMCEPIPE_EN_BSET_BITFIELD_MASK  (0x07)
#define ITM_DMCEPIPE_EN_BSET_RWMASK         (0x00)
#define ITM_DMCEPIPE_EN_BSET_ROMASK         (0x00)
#define ITM_DMCEPIPE_EN_BSET_WOMASK         (0x07)
#define ITM_DMCEPIPE_EN_BSET_UNUSED_MASK    (0xF8)
#define ITM_DMCEPIPE_EN_BSET_DMCE_IN_EN_BSET_OFFSET (0x00)
#define ITM_DMCEPIPE_EN_BSET_DMCE_IN_EN_BSET_WIDTH (1)
#define ITM_DMCEPIPE_EN_BSET_DMCE_IN_EN_BSET_MASK (0x01)
#define ITM_DMCEPIPE_EN_BSET_DMCE_OUT_EN_BSET_OFFSET (0x01)
#define ITM_DMCEPIPE_EN_BSET_DMCE_OUT_EN_BSET_WIDTH (1)
#define ITM_DMCEPIPE_EN_BSET_DMCE_OUT_EN_BSET_MASK (0x02)
#define ITM_DMCEPIPE_EN_BSET_RGB_STORE_EN_BSET_OFFSET (0x02)
#define ITM_DMCEPIPE_EN_BSET_RGB_STORE_EN_BSET_WIDTH (1)
#define ITM_DMCEPIPE_EN_BSET_RGB_STORE_EN_BSET_MASK (0x04)

/*
* Register : ITM_3D_SMIARX_STATUS
*/

#define ITM_3D_SMIARX_STATUS_SIZE           (8)
#define ITM_3D_SMIARX_STATUS_OFFSET         (pictorv2_in_ITM_BASE_ADDR + 0x108)
#define ITM_3D_SMIARX_STATUS_RESET_VALUE    (0x00)
#define ITM_3D_SMIARX_STATUS_BITFIELD_MASK  (0x1F)
#define ITM_3D_SMIARX_STATUS_RWMASK         (0x00)
#define ITM_3D_SMIARX_STATUS_ROMASK         (0x1F)
#define ITM_3D_SMIARX_STATUS_WOMASK         (0x00)
#define ITM_3D_SMIARX_STATUS_UNUSED_MASK    (0xE0)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_0_STATUS_OFFSET (0x00)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_0_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_0_STATUS_MASK (0x01)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_1_STATUS_OFFSET (0x01)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_1_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_1_STATUS_MASK (0x02)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_2_STATUS_OFFSET (0x02)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_2_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_2_STATUS_MASK (0x04)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_3_STATUS_OFFSET (0x03)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_3_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_3_STATUS_MASK (0x08)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_4_STATUS_OFFSET (0x04)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_4_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_SMIARX_3D_4_STATUS_MASK (0x10)

/*
* Register : ITM_3D_SMIARX_EN_STATUS
*/

#define ITM_3D_SMIARX_EN_STATUS_SIZE        (8)
#define ITM_3D_SMIARX_EN_STATUS_OFFSET      (pictorv2_in_ITM_BASE_ADDR + 0x10a)
#define ITM_3D_SMIARX_EN_STATUS_RESET_VALUE (0x00)
#define ITM_3D_SMIARX_EN_STATUS_BITFIELD_MASK (0x1F)
#define ITM_3D_SMIARX_EN_STATUS_RWMASK      (0x00)
#define ITM_3D_SMIARX_EN_STATUS_ROMASK      (0x1F)
#define ITM_3D_SMIARX_EN_STATUS_WOMASK      (0x00)
#define ITM_3D_SMIARX_EN_STATUS_UNUSED_MASK (0xE0)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_0_EN_STATUS_OFFSET (0x00)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_0_EN_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_0_EN_STATUS_MASK (0x01)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_1_EN_STATUS_OFFSET (0x01)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_1_EN_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_1_EN_STATUS_MASK (0x02)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_2_EN_STATUS_OFFSET (0x02)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_2_EN_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_2_EN_STATUS_MASK (0x04)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_3_EN_STATUS_OFFSET (0x03)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_3_EN_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_3_EN_STATUS_MASK (0x08)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_4_EN_STATUS_OFFSET (0x04)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_4_EN_STATUS_WIDTH (1)
#define ITM_3D_SMIARX_EN_STATUS_SMIARX_3D_4_EN_STATUS_MASK (0x10)

/*
* Register : ITM_3D_SMIARX_STATUS_BCLR
*/

#define ITM_3D_SMIARX_STATUS_BCLR_SIZE      (8)
#define ITM_3D_SMIARX_STATUS_BCLR_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x10c)
#define ITM_3D_SMIARX_STATUS_BCLR_RESET_VALUE (0x00)
#define ITM_3D_SMIARX_STATUS_BCLR_BITFIELD_MASK (0x1F)
#define ITM_3D_SMIARX_STATUS_BCLR_RWMASK    (0x00)
#define ITM_3D_SMIARX_STATUS_BCLR_ROMASK    (0x00)
#define ITM_3D_SMIARX_STATUS_BCLR_WOMASK    (0x1F)
#define ITM_3D_SMIARX_STATUS_BCLR_UNUSED_MASK (0xE0)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_0_STATUS_BCLR_OFFSET (0x00)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_0_STATUS_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_0_STATUS_BCLR_MASK (0x01)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_1_STATUS_BCLR_OFFSET (0x01)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_1_STATUS_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_1_STATUS_BCLR_MASK (0x02)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_2_STATUS_BCLR_OFFSET (0x02)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_2_STATUS_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_2_STATUS_BCLR_MASK (0x04)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_3_STATUS_BCLR_OFFSET (0x03)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_3_STATUS_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_3_STATUS_BCLR_MASK (0x08)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_4_STATUS_BCLR_OFFSET (0x04)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_4_STATUS_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BCLR_SMIARX_3D_4_STATUS_BCLR_MASK (0x10)

/*
* Register : ITM_3D_SMIARX_STATUS_BSET
*/

#define ITM_3D_SMIARX_STATUS_BSET_SIZE      (8)
#define ITM_3D_SMIARX_STATUS_BSET_OFFSET    (pictorv2_in_ITM_BASE_ADDR + 0x10e)
#define ITM_3D_SMIARX_STATUS_BSET_RESET_VALUE (0x00)
#define ITM_3D_SMIARX_STATUS_BSET_BITFIELD_MASK (0x1F)
#define ITM_3D_SMIARX_STATUS_BSET_RWMASK    (0x00)
#define ITM_3D_SMIARX_STATUS_BSET_ROMASK    (0x00)
#define ITM_3D_SMIARX_STATUS_BSET_WOMASK    (0x1F)
#define ITM_3D_SMIARX_STATUS_BSET_UNUSED_MASK (0xE0)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_0_STATUS_BSET_OFFSET (0x00)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_0_STATUS_BSET_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_0_STATUS_BSET_MASK (0x01)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_1_STATUS_BSET_OFFSET (0x01)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_1_STATUS_BSET_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_1_STATUS_BSET_MASK (0x02)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_2_STATUS_BSET_OFFSET (0x02)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_2_STATUS_BSET_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_2_STATUS_BSET_MASK (0x04)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_3_STATUS_BSET_OFFSET (0x03)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_3_STATUS_BSET_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_3_STATUS_BSET_MASK (0x08)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_4_STATUS_BSET_OFFSET (0x04)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_4_STATUS_BSET_WIDTH (1)
#define ITM_3D_SMIARX_STATUS_BSET_SMIARX_3D_4_STATUS_BSET_MASK (0x10)

/*
* Register : ITM_3D_SMIARX_EN_BCLR
*/

#define ITM_3D_SMIARX_EN_BCLR_SIZE          (8)
#define ITM_3D_SMIARX_EN_BCLR_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x110)
#define ITM_3D_SMIARX_EN_BCLR_RESET_VALUE   (0x00)
#define ITM_3D_SMIARX_EN_BCLR_BITFIELD_MASK (0x1F)
#define ITM_3D_SMIARX_EN_BCLR_RWMASK        (0x00)
#define ITM_3D_SMIARX_EN_BCLR_ROMASK        (0x00)
#define ITM_3D_SMIARX_EN_BCLR_WOMASK        (0x1F)
#define ITM_3D_SMIARX_EN_BCLR_UNUSED_MASK   (0xE0)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_0_EN_BCLR_OFFSET (0x00)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_0_EN_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_0_EN_BCLR_MASK (0x01)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_1_EN_BCLR_OFFSET (0x01)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_1_EN_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_1_EN_BCLR_MASK (0x02)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_2_EN_BCLR_OFFSET (0x02)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_2_EN_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_2_EN_BCLR_MASK (0x04)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_3_EN_BCLR_OFFSET (0x03)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_3_EN_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_3_EN_BCLR_MASK (0x08)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_4_EN_BCLR_OFFSET (0x04)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_4_EN_BCLR_WIDTH (1)
#define ITM_3D_SMIARX_EN_BCLR_SMIARX_3D_4_EN_BCLR_MASK (0x10)

/*
* Register : ITM_3D_SMIARX_EN_BSET
*/

#define ITM_3D_SMIARX_EN_BSET_SIZE          (8)
#define ITM_3D_SMIARX_EN_BSET_OFFSET        (pictorv2_in_ITM_BASE_ADDR + 0x112)
#define ITM_3D_SMIARX_EN_BSET_RESET_VALUE   (0x00)
#define ITM_3D_SMIARX_EN_BSET_BITFIELD_MASK (0x1F)
#define ITM_3D_SMIARX_EN_BSET_RWMASK        (0x00)
#define ITM_3D_SMIARX_EN_BSET_ROMASK        (0x00)
#define ITM_3D_SMIARX_EN_BSET_WOMASK        (0x1F)
#define ITM_3D_SMIARX_EN_BSET_UNUSED_MASK   (0xE0)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_0_EN_BSET_OFFSET (0x00)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_0_EN_BSET_WIDTH (1)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_0_EN_BSET_MASK (0x01)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_1_EN_BSET_OFFSET (0x01)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_1_EN_BSET_WIDTH (1)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_1_EN_BSET_MASK (0x02)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_2_EN_BSET_OFFSET (0x02)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_2_EN_BSET_WIDTH (1)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_2_EN_BSET_MASK (0x04)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_3_EN_BSET_OFFSET (0x03)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_3_EN_BSET_WIDTH (1)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_3_EN_BSET_MASK (0x08)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_4_EN_BSET_OFFSET (0x04)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_4_EN_BSET_WIDTH (1)
#define ITM_3D_SMIARX_EN_BSET_SMIARX_3D_4_EN_BSET_MASK (0x10)

/*
* Register : ITM_LINE_BURSTY_ELIM_STATUS
*/

#define ITM_LINE_BURSTY_ELIM_STATUS_SIZE    (8)
#define ITM_LINE_BURSTY_ELIM_STATUS_OFFSET  (pictorv2_in_ITM_BASE_ADDR + 0x114)
#define ITM_LINE_BURSTY_ELIM_STATUS_RESET_VALUE (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BITFIELD_MASK (0x01)
#define ITM_LINE_BURSTY_ELIM_STATUS_RWMASK  (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_ROMASK  (0x01)
#define ITM_LINE_BURSTY_ELIM_STATUS_WOMASK  (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_UNUSED_MASK (0xFE)
#define ITM_LINE_BURSTY_ELIM_STATUS_LINE_BURSTY_ELIM_STATUS_OFFSET (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_LINE_BURSTY_ELIM_STATUS_WIDTH (1)
#define ITM_LINE_BURSTY_ELIM_STATUS_LINE_BURSTY_ELIM_STATUS_MASK (0x01)

/*
* Register : ITM_LINE_BURSTY_ELIM_EN_STATUS
*/

#define ITM_LINE_BURSTY_ELIM_EN_STATUS_SIZE (8)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_OFFSET (pictorv2_in_ITM_BASE_ADDR + 0x116)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_RESET_VALUE (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_BITFIELD_MASK (0x01)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_RWMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_ROMASK (0x01)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_WOMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_UNUSED_MASK (0xFE)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_LINE_BURSTY_ELIM_EN_STATUS_OFFSET (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_LINE_BURSTY_ELIM_EN_STATUS_WIDTH (1)
#define ITM_LINE_BURSTY_ELIM_EN_STATUS_LINE_BURSTY_ELIM_EN_STATUS_MASK (0x01)

/*
* Register : ITM_LINE_BURSTY_ELIM_STATUS_BCLR
*/

#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_SIZE (8)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_OFFSET (pictorv2_in_ITM_BASE_ADDR + 0x118)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_RESET_VALUE (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_BITFIELD_MASK (0x01)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_RWMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_ROMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_WOMASK (0x01)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_UNUSED_MASK (0xFE)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_LINE_BURSTY_ELIM_STATUS_BCLR_OFFSET (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_LINE_BURSTY_ELIM_STATUS_BCLR_WIDTH (1)
#define ITM_LINE_BURSTY_ELIM_STATUS_BCLR_LINE_BURSTY_ELIM_STATUS_BCLR_MASK (0x01)

/*
* Register : ITM_LINE_BURSTY_ELIM_STATUS_BSET
*/

#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_SIZE (8)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_OFFSET (pictorv2_in_ITM_BASE_ADDR + 0x11a)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_RESET_VALUE (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_BITFIELD_MASK (0x01)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_RWMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_ROMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_WOMASK (0x01)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_UNUSED_MASK (0xFE)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_LINE_BURSTY_ELIM_STATUS_BSET_OFFSET (0x00)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_LINE_BURSTY_ELIM_STATUS_BSET_WIDTH (1)
#define ITM_LINE_BURSTY_ELIM_STATUS_BSET_LINE_BURSTY_ELIM_STATUS_BSET_MASK (0x01)

/*
* Register : ITM_LINE_BURSTY_ELIM_EN_BCLR
*/

#define ITM_LINE_BURSTY_ELIM_EN_BCLR_SIZE   (8)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_OFFSET (pictorv2_in_ITM_BASE_ADDR + 0x11c)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_RESET_VALUE (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_BITFIELD_MASK (0x01)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_RWMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_ROMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_WOMASK (0x01)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_UNUSED_MASK (0xFE)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_LINE_BURSTY_ELIM_EN_BCLR_OFFSET (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_LINE_BURSTY_ELIM_EN_BCLR_WIDTH (1)
#define ITM_LINE_BURSTY_ELIM_EN_BCLR_LINE_BURSTY_ELIM_EN_BCLR_MASK (0x01)

/*
* Register : ITM_LINE_BURSTY_ELIM_EN_BSET
*/

#define ITM_LINE_BURSTY_ELIM_EN_BSET_SIZE   (8)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_OFFSET (pictorv2_in_ITM_BASE_ADDR + 0x11e)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_RESET_VALUE (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_BITFIELD_MASK (0x01)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_RWMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_ROMASK (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_WOMASK (0x01)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_UNUSED_MASK (0xFE)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_LINE_BURSTY_ELIM_EN_BSET_OFFSET (0x00)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_LINE_BURSTY_ELIM_EN_BSET_WIDTH (1)
#define ITM_LINE_BURSTY_ELIM_EN_BSET_LINE_BURSTY_ELIM_EN_BSET_MASK (0x01)


/*
* Address Block : ISP_SMIARX
*/

#define pictorv2_in_ISP_SMIARX_BASE_ADDR                    (0x280U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_SMIARX_CTRL
*/

#define ISP_SMIARX_CTRL_SIZE         (32)
#define ISP_SMIARX_CTRL_OFFSET       (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x00)
#define ISP_SMIARX_CTRL_RESET_VALUE  (0x00000000)
#define ISP_SMIARX_CTRL_BITFIELD_MASK (0x00010101)
#define ISP_SMIARX_CTRL_RWMASK       (0x00010101)
#define ISP_SMIARX_CTRL_ROMASK       (0x00000000)
#define ISP_SMIARX_CTRL_WOMASK       (0x00000000)
#define ISP_SMIARX_CTRL_UNUSED_MASK  (0xFFFEFEFE)
#define ISP_SMIARX_CTRL_rx_start_OFFSET (0x00000000)
#define ISP_SMIARX_CTRL_rx_start_WIDTH (1)
#define ISP_SMIARX_CTRL_rx_start_MASK (0x00000001)
#define ISP_SMIARX_CTRL_rx_stop_OFFSET (0x00000008)
#define ISP_SMIARX_CTRL_rx_stop_WIDTH (1)
#define ISP_SMIARX_CTRL_rx_stop_MASK (0x00000100)
#define ISP_SMIARX_CTRL_rx_abort_OFFSET (0x00000010)
#define ISP_SMIARX_CTRL_rx_abort_WIDTH (1)
#define ISP_SMIARX_CTRL_rx_abort_MASK (0x00010000)

/*
* Register : ISP_SMIARX_SETUP
*/

#define ISP_SMIARX_SETUP_SIZE        (32)
#define ISP_SMIARX_SETUP_OFFSET      (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x02)
#define ISP_SMIARX_SETUP_RESET_VALUE (0x00000600)
#define ISP_SMIARX_SETUP_BITFIELD_MASK (0x3F1F7FFF)
#define ISP_SMIARX_SETUP_RWMASK      (0x3F1F7FFF)
#define ISP_SMIARX_SETUP_ROMASK      (0x00000000)
#define ISP_SMIARX_SETUP_WOMASK      (0x00000000)
#define ISP_SMIARX_SETUP_UNUSED_MASK (0xC0E08000)
#define ISP_SMIARX_SETUP_ip_pix_width_OFFSET (0x00000000)
#define ISP_SMIARX_SETUP_ip_pix_width_WIDTH (4)
#define ISP_SMIARX_SETUP_ip_pix_width_MASK (0x0000000F)
#define ISP_SMIARX_SETUP_ip_pix_width_B_0x6 (0x00000006)
#define ISP_SMIARX_SETUP_ip_pix_width_B_0x7 (0x00000007)
#define ISP_SMIARX_SETUP_ip_pix_width_B_0x8 (0x00000008)
#define ISP_SMIARX_SETUP_ip_pix_width_B_0xA (0x0000000A)
#define ISP_SMIARX_SETUP_ip_pix_width_B_0xC (0x0000000C)
#define ISP_SMIARX_SETUP_op_pix_width_OFFSET (0x00000004)
#define ISP_SMIARX_SETUP_op_pix_width_WIDTH (4)
#define ISP_SMIARX_SETUP_op_pix_width_MASK (0x000000F0)
#define ISP_SMIARX_SETUP_op_pix_width_B_0x6 (0x00000006)
#define ISP_SMIARX_SETUP_op_pix_width_B_0x7 (0x00000007)
#define ISP_SMIARX_SETUP_op_pix_width_B_0x8 (0x00000008)
#define ISP_SMIARX_SETUP_op_pix_width_B_0xA (0x0000000A)
#define ISP_SMIARX_SETUP_op_pix_width_B_0xC (0x0000000C)
#define ISP_SMIARX_SETUP_parallel_enable_OFFSET (0x00000008)
#define ISP_SMIARX_SETUP_parallel_enable_WIDTH (1)
#define ISP_SMIARX_SETUP_parallel_enable_MASK (0x00000100)
#define ISP_SMIARX_SETUP_vsync_polarity_OFFSET (0x00000009)
#define ISP_SMIARX_SETUP_vsync_polarity_WIDTH (1)
#define ISP_SMIARX_SETUP_vsync_polarity_MASK (0x00000200)
#define ISP_SMIARX_SETUP_vsync_polarity_ACTIVE_LOW (0x00000000)
#define ISP_SMIARX_SETUP_vsync_polarity_ACTIVE_HIGH (0x00000001)
#define ISP_SMIARX_SETUP_hsync_polarity_OFFSET (0x0000000a)
#define ISP_SMIARX_SETUP_hsync_polarity_WIDTH (1)
#define ISP_SMIARX_SETUP_hsync_polarity_MASK (0x00000400)
#define ISP_SMIARX_SETUP_hsync_polarity_ACTIVE_LOW (0x00000000)
#define ISP_SMIARX_SETUP_hsync_polarity_ACTIVE_HIGH (0x00000001)
#define ISP_SMIARX_SETUP_ds_mode_OFFSET (0x0000000b)
#define ISP_SMIARX_SETUP_ds_mode_WIDTH (1)
#define ISP_SMIARX_SETUP_ds_mode_MASK (0x00000800)
#define ISP_SMIARX_SETUP_ds_mode_DISABLE (0x00000000)
#define ISP_SMIARX_SETUP_ds_mode_ENABLE (0x00000001)
#define ISP_SMIARX_SETUP_dcpx_enable_OFFSET (0x0000000c)
#define ISP_SMIARX_SETUP_dcpx_enable_WIDTH (1)
#define ISP_SMIARX_SETUP_dcpx_enable_MASK (0x00001000)
#define ISP_SMIARX_SETUP_dcpx_enable_DISABLE (0x00000000)
#define ISP_SMIARX_SETUP_dcpx_enable_ENABLE (0x00000001)
#define ISP_SMIARX_SETUP_ccp_sel_OFFSET (0x0000000d)
#define ISP_SMIARX_SETUP_ccp_sel_WIDTH (1)
#define ISP_SMIARX_SETUP_ccp_sel_MASK (0x00002000)
#define ISP_SMIARX_SETUP_reset_ccp_rx_n_OFFSET (0x0000000e)
#define ISP_SMIARX_SETUP_reset_ccp_rx_n_WIDTH (1)
#define ISP_SMIARX_SETUP_reset_ccp_rx_n_MASK (0x00004000)
#define ISP_SMIARX_SETUP_auto_sync_OFFSET (0x00000010)
#define ISP_SMIARX_SETUP_auto_sync_WIDTH (1)
#define ISP_SMIARX_SETUP_auto_sync_MASK (0x00010000)
#define ISP_SMIARX_SETUP_auto_sync_SYNCHRO_SENSOR (0x00000000)
#define ISP_SMIARX_SETUP_auto_sync_SYNCHRO_AUTO (0x00000001)
#define ISP_SMIARX_SETUP_pattern_type_OFFSET (0x00000011)
#define ISP_SMIARX_SETUP_pattern_type_WIDTH (3)
#define ISP_SMIARX_SETUP_pattern_type_MASK (0x000E0000)
#define ISP_SMIARX_SETUP_pattern_type_PATTERN_DISABLE (0x00000000)
#define ISP_SMIARX_SETUP_pattern_type_PATTERN_COLOUR_BAR (0x00000001)
#define ISP_SMIARX_SETUP_pattern_type_PATTERN_GRAD_BAR (0x00000002)
#define ISP_SMIARX_SETUP_pattern_type_PATTERN_DIAG_GREY (0x00000003)
#define ISP_SMIARX_SETUP_pattern_type_PATTERN_PSEUDORANDOM (0x00000004)
#define ISP_SMIARX_SETUP_pattern_type_PATTERN_HOR_GREY (0x00000005)
#define ISP_SMIARX_SETUP_pattern_type_PATTERN_VERT_GREY (0x00000006)
#define ISP_SMIARX_SETUP_pattern_type_PATTERN_SOLID (0x00000007)
#define ISP_SMIARX_SETUP_no_sof_OFFSET (0x00000014)
#define ISP_SMIARX_SETUP_no_sof_WIDTH (1)
#define ISP_SMIARX_SETUP_no_sof_MASK (0x00100000)
#define ISP_SMIARX_SETUP_clr_ccp_shift_sync_OFFSET (0x00000018)
#define ISP_SMIARX_SETUP_clr_ccp_shift_sync_WIDTH (1)
#define ISP_SMIARX_SETUP_clr_ccp_shift_sync_MASK (0x01000000)
#define ISP_SMIARX_SETUP_clr_ccp_crc_error_OFFSET (0x00000019)
#define ISP_SMIARX_SETUP_clr_ccp_crc_error_WIDTH (1)
#define ISP_SMIARX_SETUP_clr_ccp_crc_error_MASK (0x02000000)
#define ISP_SMIARX_SETUP_clr_pixel_sync_error_OFFSET (0x0000001a)
#define ISP_SMIARX_SETUP_clr_pixel_sync_error_WIDTH (1)
#define ISP_SMIARX_SETUP_clr_pixel_sync_error_MASK (0x04000000)
#define ISP_SMIARX_SETUP_clr_aborted_iframe_OFFSET (0x0000001b)
#define ISP_SMIARX_SETUP_clr_aborted_iframe_WIDTH (1)
#define ISP_SMIARX_SETUP_clr_aborted_iframe_MASK (0x08000000)
#define ISP_SMIARX_SETUP_clr_insuff_iline_OFFSET (0x0000001c)
#define ISP_SMIARX_SETUP_clr_insuff_iline_WIDTH (1)
#define ISP_SMIARX_SETUP_clr_insuff_iline_MASK (0x10000000)
#define ISP_SMIARX_SETUP_fifo_rd_rst_OFFSET (0x0000001d)
#define ISP_SMIARX_SETUP_fifo_rd_rst_WIDTH (1)
#define ISP_SMIARX_SETUP_fifo_rd_rst_MASK (0x20000000)

/*
* Register : ISP_SMIARX_FRAME_CTRL
*/

#define ISP_SMIARX_FRAME_CTRL_SIZE   (32)
#define ISP_SMIARX_FRAME_CTRL_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x04)
#define ISP_SMIARX_FRAME_CTRL_RESET_VALUE (0x01000000)
#define ISP_SMIARX_FRAME_CTRL_BITFIELD_MASK (0x07FFFFFF)
#define ISP_SMIARX_FRAME_CTRL_RWMASK (0x07FFFFFF)
#define ISP_SMIARX_FRAME_CTRL_ROMASK (0x00000000)
#define ISP_SMIARX_FRAME_CTRL_WOMASK (0x00000000)
#define ISP_SMIARX_FRAME_CTRL_UNUSED_MASK (0xF8000000)
#define ISP_SMIARX_FRAME_CTRL_latency_lines_OFFSET (0x00000000)
#define ISP_SMIARX_FRAME_CTRL_latency_lines_WIDTH (8)
#define ISP_SMIARX_FRAME_CTRL_latency_lines_MASK (0x000000FF)
#define ISP_SMIARX_FRAME_CTRL_stream_size_OFFSET (0x00000008)
#define ISP_SMIARX_FRAME_CTRL_stream_size_WIDTH (8)
#define ISP_SMIARX_FRAME_CTRL_stream_size_MASK (0x0000FF00)
#define ISP_SMIARX_FRAME_CTRL_start_grab_dly_OFFSET (0x00000010)
#define ISP_SMIARX_FRAME_CTRL_start_grab_dly_WIDTH (8)
#define ISP_SMIARX_FRAME_CTRL_start_grab_dly_MASK (0x00FF0000)
#define ISP_SMIARX_FRAME_CTRL_ffhc_control_OFFSET (0x00000018)
#define ISP_SMIARX_FRAME_CTRL_ffhc_control_WIDTH (2)
#define ISP_SMIARX_FRAME_CTRL_ffhc_control_MASK (0x03000000)
#define ISP_SMIARX_FRAME_CTRL_ffhc_control_FFHC_DISABLE (0x00000000)
#define ISP_SMIARX_FRAME_CTRL_ffhc_control_FFHC_FULL_AUTO (0x00000001)
#define ISP_SMIARX_FRAME_CTRL_ffhc_control_FFHC_SEMI_AUTO (0x00000002)
#define ISP_SMIARX_FRAME_CTRL_ffhc_control_FFHC_MANUAL (0x00000003)
#define ISP_SMIARX_FRAME_CTRL_stop_at_interframe_OFFSET (0x0000001a)
#define ISP_SMIARX_FRAME_CTRL_stop_at_interframe_WIDTH (1)
#define ISP_SMIARX_FRAME_CTRL_stop_at_interframe_MASK (0x04000000)

/*
* Register : ISP_SMIARX_STATUS
*/

#define ISP_SMIARX_STATUS_SIZE       (32)
#define ISP_SMIARX_STATUS_OFFSET     (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x06)
#define ISP_SMIARX_STATUS_RESET_VALUE (0x002000FF)
#define ISP_SMIARX_STATUS_BITFIELD_MASK (0x1F3FFFFF)
#define ISP_SMIARX_STATUS_RWMASK     (0x00000000)
#define ISP_SMIARX_STATUS_ROMASK     (0x1F3FFFFF)
#define ISP_SMIARX_STATUS_WOMASK     (0x00000000)
#define ISP_SMIARX_STATUS_UNUSED_MASK (0xE0C00000)
#define ISP_SMIARX_STATUS_frame_counter_OFFSET (0x00000000)
#define ISP_SMIARX_STATUS_frame_counter_WIDTH (8)
#define ISP_SMIARX_STATUS_frame_counter_MASK (0x000000FF)
#define ISP_SMIARX_STATUS_rx_state_OFFSET (0x00000008)
#define ISP_SMIARX_STATUS_rx_state_WIDTH (2)
#define ISP_SMIARX_STATUS_rx_state_MASK (0x00000300)
#define ISP_SMIARX_STATUS_rx_state_GEN_IDLE (0x00000000)
#define ISP_SMIARX_STATUS_rx_state_GEN_WAITVSTART (0x00000001)
#define ISP_SMIARX_STATUS_rx_state_GEN_RUNNING (0x00000002)
#define ISP_SMIARX_STATUS_rx_state_GEN_WAITFRAME (0x00000003)
#define ISP_SMIARX_STATUS_ff_state_OFFSET (0x0000000a)
#define ISP_SMIARX_STATUS_ff_state_WIDTH (3)
#define ISP_SMIARX_STATUS_ff_state_MASK (0x00001C00)
#define ISP_SMIARX_STATUS_ff_state_FF_IDLE (0x00000000)
#define ISP_SMIARX_STATUS_ff_state_FF_WAIT_EOSD (0x00000001)
#define ISP_SMIARX_STATUS_ff_state_FF_FIRSTLINE (0x00000002)
#define ISP_SMIARX_STATUS_ff_state_FF_TRANSLATE (0x00000003)
#define ISP_SMIARX_STATUS_ff_state_FF_UPDATE (0x00000004)
#define ISP_SMIARX_STATUS_ff_state_FF_INTERFRAME (0x00000005)
#define ISP_SMIARX_STATUS_snoop_state_OFFSET (0x0000000d)
#define ISP_SMIARX_STATUS_snoop_state_WIDTH (3)
#define ISP_SMIARX_STATUS_snoop_state_MASK (0x0000E000)
#define ISP_SMIARX_STATUS_snoop_state_SNOOP_IDLE (0x00000000)
#define ISP_SMIARX_STATUS_snoop_state_SNOOP_TAG_LSN (0x00000001)
#define ISP_SMIARX_STATUS_snoop_state_SNOOP_TAG (0x00000002)
#define ISP_SMIARX_STATUS_snoop_state_SNOOP_REG_LSM (0x00000003)
#define ISP_SMIARX_STATUS_snoop_state_SNOOP_REG (0x00000004)
#define ISP_SMIARX_STATUS_fifo_rd_usedw_OFFSET (0x00000010)
#define ISP_SMIARX_STATUS_fifo_rd_usedw_WIDTH (5)
#define ISP_SMIARX_STATUS_fifo_rd_usedw_MASK (0x001F0000)
#define ISP_SMIARX_STATUS_fifo_empty_OFFSET (0x00000015)
#define ISP_SMIARX_STATUS_fifo_empty_WIDTH (1)
#define ISP_SMIARX_STATUS_fifo_empty_MASK (0x00200000)
#define ISP_SMIARX_STATUS_pixel_sync_error_OFFSET (0x00000018)
#define ISP_SMIARX_STATUS_pixel_sync_error_WIDTH (1)
#define ISP_SMIARX_STATUS_pixel_sync_error_MASK (0x01000000)
#define ISP_SMIARX_STATUS_aborted_iframe_OFFSET (0x00000019)
#define ISP_SMIARX_STATUS_aborted_iframe_WIDTH (1)
#define ISP_SMIARX_STATUS_aborted_iframe_MASK (0x02000000)
#define ISP_SMIARX_STATUS_insuff_iline_OFFSET (0x0000001a)
#define ISP_SMIARX_STATUS_insuff_iline_WIDTH (1)
#define ISP_SMIARX_STATUS_insuff_iline_MASK (0x04000000)
#define ISP_SMIARX_STATUS_fifo_under_OFFSET (0x0000001b)
#define ISP_SMIARX_STATUS_fifo_under_WIDTH (1)
#define ISP_SMIARX_STATUS_fifo_under_MASK (0x08000000)
#define ISP_SMIARX_STATUS_fifo_over_OFFSET (0x0000001c)
#define ISP_SMIARX_STATUS_fifo_over_WIDTH (1)
#define ISP_SMIARX_STATUS_fifo_over_MASK (0x10000000)

/*
* Register : ISP_SMIARX_TPAT_DATA_RG
*/

#define ISP_SMIARX_TPAT_DATA_RG_SIZE (32)
#define ISP_SMIARX_TPAT_DATA_RG_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x08)
#define ISP_SMIARX_TPAT_DATA_RG_RESET_VALUE (0x0000000)
#define ISP_SMIARX_TPAT_DATA_RG_BITFIELD_MASK (0x1FFF1FFF)
#define ISP_SMIARX_TPAT_DATA_RG_RWMASK (0x1FFF1FFF)
#define ISP_SMIARX_TPAT_DATA_RG_ROMASK (0x00000000)
#define ISP_SMIARX_TPAT_DATA_RG_WOMASK (0x00000000)
#define ISP_SMIARX_TPAT_DATA_RG_UNUSED_MASK (0xE000E000)
#define ISP_SMIARX_TPAT_DATA_RG_tpat_data_gir_OFFSET (0x00000000)
#define ISP_SMIARX_TPAT_DATA_RG_tpat_data_gir_WIDTH (13)
#define ISP_SMIARX_TPAT_DATA_RG_tpat_data_gir_MASK (0x00001FFF)
#define ISP_SMIARX_TPAT_DATA_RG_tpat_data_red_OFFSET (0x00000010)
#define ISP_SMIARX_TPAT_DATA_RG_tpat_data_red_WIDTH (13)
#define ISP_SMIARX_TPAT_DATA_RG_tpat_data_red_MASK (0x1FFF0000)

/*
* Register : ISP_SMIARX_TPAT_DATA_BG
*/

#define ISP_SMIARX_TPAT_DATA_BG_SIZE (32)
#define ISP_SMIARX_TPAT_DATA_BG_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x0a)
#define ISP_SMIARX_TPAT_DATA_BG_RESET_VALUE (0x0000000)
#define ISP_SMIARX_TPAT_DATA_BG_BITFIELD_MASK (0x1FFF1FFF)
#define ISP_SMIARX_TPAT_DATA_BG_RWMASK (0x1FFF1FFF)
#define ISP_SMIARX_TPAT_DATA_BG_ROMASK (0x00000000)
#define ISP_SMIARX_TPAT_DATA_BG_WOMASK (0x00000000)
#define ISP_SMIARX_TPAT_DATA_BG_UNUSED_MASK (0xE000E000)
#define ISP_SMIARX_TPAT_DATA_BG_tpat_data_gib_OFFSET (0x00000000)
#define ISP_SMIARX_TPAT_DATA_BG_tpat_data_gib_WIDTH (13)
#define ISP_SMIARX_TPAT_DATA_BG_tpat_data_gib_MASK (0x00001FFF)
#define ISP_SMIARX_TPAT_DATA_BG_tpat_data_blu_OFFSET (0x00000010)
#define ISP_SMIARX_TPAT_DATA_BG_tpat_data_blu_WIDTH (13)
#define ISP_SMIARX_TPAT_DATA_BG_tpat_data_blu_MASK (0x1FFF0000)

/*
* Register : ISP_SMIARX_TPAT_HCUR_WP
*/

#define ISP_SMIARX_TPAT_HCUR_WP_SIZE (32)
#define ISP_SMIARX_TPAT_HCUR_WP_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x0c)
#define ISP_SMIARX_TPAT_HCUR_WP_RESET_VALUE (0x0000000)
#define ISP_SMIARX_TPAT_HCUR_WP_BITFIELD_MASK (0x1FFF1FFF)
#define ISP_SMIARX_TPAT_HCUR_WP_RWMASK (0x1FFF1FFF)
#define ISP_SMIARX_TPAT_HCUR_WP_ROMASK (0x00000000)
#define ISP_SMIARX_TPAT_HCUR_WP_WOMASK (0x00000000)
#define ISP_SMIARX_TPAT_HCUR_WP_UNUSED_MASK (0xE000E000)
#define ISP_SMIARX_TPAT_HCUR_WP_tpat_hcur_posn_OFFSET (0x00000000)
#define ISP_SMIARX_TPAT_HCUR_WP_tpat_hcur_posn_WIDTH (13)
#define ISP_SMIARX_TPAT_HCUR_WP_tpat_hcur_posn_MASK (0x00001FFF)
#define ISP_SMIARX_TPAT_HCUR_WP_tpat_hcur_width_OFFSET (0x00000010)
#define ISP_SMIARX_TPAT_HCUR_WP_tpat_hcur_width_WIDTH (13)
#define ISP_SMIARX_TPAT_HCUR_WP_tpat_hcur_width_MASK (0x1FFF0000)

/*
* Register : ISP_SMIARX_TPAT_VCUR_WP
*/

#define ISP_SMIARX_TPAT_VCUR_WP_SIZE (32)
#define ISP_SMIARX_TPAT_VCUR_WP_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x0e)
#define ISP_SMIARX_TPAT_VCUR_WP_RESET_VALUE (0x00000000)
#define ISP_SMIARX_TPAT_VCUR_WP_BITFIELD_MASK (0x1FFF1FFF)
#define ISP_SMIARX_TPAT_VCUR_WP_RWMASK (0x1FFF1FFF)
#define ISP_SMIARX_TPAT_VCUR_WP_ROMASK (0x00000000)
#define ISP_SMIARX_TPAT_VCUR_WP_WOMASK (0x00000000)
#define ISP_SMIARX_TPAT_VCUR_WP_UNUSED_MASK (0xE000E000)
#define ISP_SMIARX_TPAT_VCUR_WP_tpat_vcur_posn_OFFSET (0x00000000)
#define ISP_SMIARX_TPAT_VCUR_WP_tpat_vcur_posn_WIDTH (13)
#define ISP_SMIARX_TPAT_VCUR_WP_tpat_vcur_posn_MASK (0x00001FFF)
#define ISP_SMIARX_TPAT_VCUR_WP_tpat_vcur_width_OFFSET (0x00000010)
#define ISP_SMIARX_TPAT_VCUR_WP_tpat_vcur_width_WIDTH (13)
#define ISP_SMIARX_TPAT_VCUR_WP_tpat_vcur_width_MASK (0x1FFF0000)

/*
* Register : ISP_SMIARX_CCP_STATUS
*/

#define ISP_SMIARX_CCP_STATUS_SIZE   (16)
#define ISP_SMIARX_CCP_STATUS_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x10)
#define ISP_SMIARX_CCP_STATUS_RESET_VALUE (0x0000)
#define ISP_SMIARX_CCP_STATUS_BITFIELD_MASK (0x070F)
#define ISP_SMIARX_CCP_STATUS_RWMASK (0x0000)
#define ISP_SMIARX_CCP_STATUS_ROMASK (0x070F)
#define ISP_SMIARX_CCP_STATUS_WOMASK (0x0000)
#define ISP_SMIARX_CCP_STATUS_UNUSED_MASK (0xF8F0)
#define ISP_SMIARX_CCP_STATUS_ccp_channel_OFFSET (0x0000)
#define ISP_SMIARX_CCP_STATUS_ccp_channel_WIDTH (4)
#define ISP_SMIARX_CCP_STATUS_ccp_channel_MASK (0x000F)
#define ISP_SMIARX_CCP_STATUS_ccp_false_sync_OFFSET (0x0008)
#define ISP_SMIARX_CCP_STATUS_ccp_false_sync_WIDTH (1)
#define ISP_SMIARX_CCP_STATUS_ccp_false_sync_MASK (0x0100)
#define ISP_SMIARX_CCP_STATUS_ccp_shift_sync_OFFSET (0x0009)
#define ISP_SMIARX_CCP_STATUS_ccp_shift_sync_WIDTH (1)
#define ISP_SMIARX_CCP_STATUS_ccp_shift_sync_MASK (0x0200)
#define ISP_SMIARX_CCP_STATUS_ccp_crc_error_OFFSET (0x000a)
#define ISP_SMIARX_CCP_STATUS_ccp_crc_error_WIDTH (1)
#define ISP_SMIARX_CCP_STATUS_ccp_crc_error_MASK (0x0400)

/*
* Register : ISP_SMIARX_HK_REQ_ADDR_0
*/

#define ISP_SMIARX_HK_REQ_ADDR_0_SIZE (16)
#define ISP_SMIARX_HK_REQ_ADDR_0_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x12)
#define ISP_SMIARX_HK_REQ_ADDR_0_RESET_VALUE (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_0_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_HK_REQ_ADDR_0_RWMASK (0xFFFF)
#define ISP_SMIARX_HK_REQ_ADDR_0_ROMASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_0_WOMASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_0_UNUSED_MASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_0_hk_req_addr_OFFSET (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_0_hk_req_addr_WIDTH (16)
#define ISP_SMIARX_HK_REQ_ADDR_0_hk_req_addr_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_HK_REQ_ADDR_1
*/

#define ISP_SMIARX_HK_REQ_ADDR_1_SIZE (16)
#define ISP_SMIARX_HK_REQ_ADDR_1_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x14)
#define ISP_SMIARX_HK_REQ_ADDR_1_RESET_VALUE (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_1_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_HK_REQ_ADDR_1_RWMASK (0xFFFF)
#define ISP_SMIARX_HK_REQ_ADDR_1_ROMASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_1_WOMASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_1_UNUSED_MASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_1_hk_req_addr_OFFSET (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_1_hk_req_addr_WIDTH (16)
#define ISP_SMIARX_HK_REQ_ADDR_1_hk_req_addr_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_HK_REQ_ADDR_2
*/

#define ISP_SMIARX_HK_REQ_ADDR_2_SIZE (16)
#define ISP_SMIARX_HK_REQ_ADDR_2_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x16)
#define ISP_SMIARX_HK_REQ_ADDR_2_RESET_VALUE (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_2_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_HK_REQ_ADDR_2_RWMASK (0xFFFF)
#define ISP_SMIARX_HK_REQ_ADDR_2_ROMASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_2_WOMASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_2_UNUSED_MASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_2_hk_req_addr_OFFSET (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_2_hk_req_addr_WIDTH (16)
#define ISP_SMIARX_HK_REQ_ADDR_2_hk_req_addr_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_HK_REQ_ADDR_3
*/

#define ISP_SMIARX_HK_REQ_ADDR_3_SIZE (16)
#define ISP_SMIARX_HK_REQ_ADDR_3_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x18)
#define ISP_SMIARX_HK_REQ_ADDR_3_RESET_VALUE (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_3_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_HK_REQ_ADDR_3_RWMASK (0xFFFF)
#define ISP_SMIARX_HK_REQ_ADDR_3_ROMASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_3_WOMASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_3_UNUSED_MASK (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_3_hk_req_addr_OFFSET (0x0000)
#define ISP_SMIARX_HK_REQ_ADDR_3_hk_req_addr_WIDTH (16)
#define ISP_SMIARX_HK_REQ_ADDR_3_hk_req_addr_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_HK_REQ_DATA_0
*/

#define ISP_SMIARX_HK_REQ_DATA_0_SIZE (8)
#define ISP_SMIARX_HK_REQ_DATA_0_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x1a)
#define ISP_SMIARX_HK_REQ_DATA_0_RESET_VALUE (0x00)
#define ISP_SMIARX_HK_REQ_DATA_0_BITFIELD_MASK (0xFF)
#define ISP_SMIARX_HK_REQ_DATA_0_RWMASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_0_ROMASK (0xFF)
#define ISP_SMIARX_HK_REQ_DATA_0_WOMASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_0_UNUSED_MASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_0_hk_req_data_OFFSET (0x00)
#define ISP_SMIARX_HK_REQ_DATA_0_hk_req_data_WIDTH (8)
#define ISP_SMIARX_HK_REQ_DATA_0_hk_req_data_MASK (0xFF)

/*
* Register : ISP_SMIARX_HK_REQ_DATA_1
*/

#define ISP_SMIARX_HK_REQ_DATA_1_SIZE (8)
#define ISP_SMIARX_HK_REQ_DATA_1_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x1c)
#define ISP_SMIARX_HK_REQ_DATA_1_RESET_VALUE (0x00)
#define ISP_SMIARX_HK_REQ_DATA_1_BITFIELD_MASK (0xFF)
#define ISP_SMIARX_HK_REQ_DATA_1_RWMASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_1_ROMASK (0xFF)
#define ISP_SMIARX_HK_REQ_DATA_1_WOMASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_1_UNUSED_MASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_1_hk_req_data_OFFSET (0x00)
#define ISP_SMIARX_HK_REQ_DATA_1_hk_req_data_WIDTH (8)
#define ISP_SMIARX_HK_REQ_DATA_1_hk_req_data_MASK (0xFF)

/*
* Register : ISP_SMIARX_HK_REQ_DATA_2
*/

#define ISP_SMIARX_HK_REQ_DATA_2_SIZE (8)
#define ISP_SMIARX_HK_REQ_DATA_2_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x1e)
#define ISP_SMIARX_HK_REQ_DATA_2_RESET_VALUE (0x00)
#define ISP_SMIARX_HK_REQ_DATA_2_BITFIELD_MASK (0xFF)
#define ISP_SMIARX_HK_REQ_DATA_2_RWMASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_2_ROMASK (0xFF)
#define ISP_SMIARX_HK_REQ_DATA_2_WOMASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_2_UNUSED_MASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_2_hk_req_data_OFFSET (0x00)
#define ISP_SMIARX_HK_REQ_DATA_2_hk_req_data_WIDTH (8)
#define ISP_SMIARX_HK_REQ_DATA_2_hk_req_data_MASK (0xFF)

/*
* Register : ISP_SMIARX_HK_REQ_DATA_3
*/

#define ISP_SMIARX_HK_REQ_DATA_3_SIZE (8)
#define ISP_SMIARX_HK_REQ_DATA_3_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x20)
#define ISP_SMIARX_HK_REQ_DATA_3_RESET_VALUE (0x00)
#define ISP_SMIARX_HK_REQ_DATA_3_BITFIELD_MASK (0xFF)
#define ISP_SMIARX_HK_REQ_DATA_3_RWMASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_3_ROMASK (0xFF)
#define ISP_SMIARX_HK_REQ_DATA_3_WOMASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_3_UNUSED_MASK (0x00)
#define ISP_SMIARX_HK_REQ_DATA_3_hk_req_data_OFFSET (0x00)
#define ISP_SMIARX_HK_REQ_DATA_3_hk_req_data_WIDTH (8)
#define ISP_SMIARX_HK_REQ_DATA_3_hk_req_data_MASK (0xFF)

/*
* Register : ISP_SMIARX_INT_COUNT_0
*/

#define ISP_SMIARX_INT_COUNT_0_SIZE  (32)
#define ISP_SMIARX_INT_COUNT_0_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x22)
#define ISP_SMIARX_INT_COUNT_0_RESET_VALUE (0x00000000)
#define ISP_SMIARX_INT_COUNT_0_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX_INT_COUNT_0_RWMASK (0xFFFFFFFF)
#define ISP_SMIARX_INT_COUNT_0_ROMASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_0_WOMASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_0_UNUSED_MASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_0_pix_count_OFFSET (0x00000000)
#define ISP_SMIARX_INT_COUNT_0_pix_count_WIDTH (16)
#define ISP_SMIARX_INT_COUNT_0_pix_count_MASK (0x0000FFFF)
#define ISP_SMIARX_INT_COUNT_0_line_count_OFFSET (0x00000010)
#define ISP_SMIARX_INT_COUNT_0_line_count_WIDTH (16)
#define ISP_SMIARX_INT_COUNT_0_line_count_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX_INT_COUNT_1
*/

#define ISP_SMIARX_INT_COUNT_1_SIZE  (32)
#define ISP_SMIARX_INT_COUNT_1_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x24)
#define ISP_SMIARX_INT_COUNT_1_RESET_VALUE (0x00000000)
#define ISP_SMIARX_INT_COUNT_1_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX_INT_COUNT_1_RWMASK (0xFFFFFFFF)
#define ISP_SMIARX_INT_COUNT_1_ROMASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_1_WOMASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_1_UNUSED_MASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_1_pix_count_OFFSET (0x00000000)
#define ISP_SMIARX_INT_COUNT_1_pix_count_WIDTH (16)
#define ISP_SMIARX_INT_COUNT_1_pix_count_MASK (0x0000FFFF)
#define ISP_SMIARX_INT_COUNT_1_line_count_OFFSET (0x00000010)
#define ISP_SMIARX_INT_COUNT_1_line_count_WIDTH (16)
#define ISP_SMIARX_INT_COUNT_1_line_count_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX_INT_COUNT_2
*/

#define ISP_SMIARX_INT_COUNT_2_SIZE  (32)
#define ISP_SMIARX_INT_COUNT_2_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x26)
#define ISP_SMIARX_INT_COUNT_2_RESET_VALUE (0x00000000)
#define ISP_SMIARX_INT_COUNT_2_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX_INT_COUNT_2_RWMASK (0xFFFFFFFF)
#define ISP_SMIARX_INT_COUNT_2_ROMASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_2_WOMASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_2_UNUSED_MASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_2_pix_count_OFFSET (0x00000000)
#define ISP_SMIARX_INT_COUNT_2_pix_count_WIDTH (16)
#define ISP_SMIARX_INT_COUNT_2_pix_count_MASK (0x0000FFFF)
#define ISP_SMIARX_INT_COUNT_2_line_count_OFFSET (0x00000010)
#define ISP_SMIARX_INT_COUNT_2_line_count_WIDTH (16)
#define ISP_SMIARX_INT_COUNT_2_line_count_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX_INT_COUNT_3
*/

#define ISP_SMIARX_INT_COUNT_3_SIZE  (32)
#define ISP_SMIARX_INT_COUNT_3_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x28)
#define ISP_SMIARX_INT_COUNT_3_RESET_VALUE (0x00000000)
#define ISP_SMIARX_INT_COUNT_3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX_INT_COUNT_3_RWMASK (0xFFFFFFFF)
#define ISP_SMIARX_INT_COUNT_3_ROMASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_3_WOMASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_3_UNUSED_MASK (0x00000000)
#define ISP_SMIARX_INT_COUNT_3_pix_count_OFFSET (0x00000000)
#define ISP_SMIARX_INT_COUNT_3_pix_count_WIDTH (16)
#define ISP_SMIARX_INT_COUNT_3_pix_count_MASK (0x0000FFFF)
#define ISP_SMIARX_INT_COUNT_3_line_count_OFFSET (0x00000010)
#define ISP_SMIARX_INT_COUNT_3_line_count_WIDTH (16)
#define ISP_SMIARX_INT_COUNT_3_line_count_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX_DFV
*/

#define ISP_SMIARX_DFV_SIZE          (8)
#define ISP_SMIARX_DFV_OFFSET        (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x2a)
#define ISP_SMIARX_DFV_RESET_VALUE   (0x00)
#define ISP_SMIARX_DFV_BITFIELD_MASK (0x3F)
#define ISP_SMIARX_DFV_RWMASK        (0x3F)
#define ISP_SMIARX_DFV_ROMASK        (0x00)
#define ISP_SMIARX_DFV_WOMASK        (0x00)
#define ISP_SMIARX_DFV_UNUSED_MASK   (0xC0)
#define ISP_SMIARX_DFV_dfv_enable_OFFSET (0x00)
#define ISP_SMIARX_DFV_dfv_enable_WIDTH (1)
#define ISP_SMIARX_DFV_dfv_enable_MASK (0x01)
#define ISP_SMIARX_DFV_dfv_count_0_interrupt_ctrl_OFFSET (0x01)
#define ISP_SMIARX_DFV_dfv_count_0_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX_DFV_dfv_count_0_interrupt_ctrl_MASK (0x02)
#define ISP_SMIARX_DFV_dfv_count_1_interrupt_ctrl_OFFSET (0x02)
#define ISP_SMIARX_DFV_dfv_count_1_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX_DFV_dfv_count_1_interrupt_ctrl_MASK (0x04)
#define ISP_SMIARX_DFV_dfv_count_2_interrupt_ctrl_OFFSET (0x03)
#define ISP_SMIARX_DFV_dfv_count_2_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX_DFV_dfv_count_2_interrupt_ctrl_MASK (0x08)
#define ISP_SMIARX_DFV_dfv_count_3_interrupt_ctrl_OFFSET (0x04)
#define ISP_SMIARX_DFV_dfv_count_3_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX_DFV_dfv_count_3_interrupt_ctrl_MASK (0x10)
#define ISP_SMIARX_DFV_dfv_seq_complete_interrupt_ctrl_OFFSET (0x05)
#define ISP_SMIARX_DFV_dfv_seq_complete_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX_DFV_dfv_seq_complete_interrupt_ctrl_MASK (0x20)

/*
* Register : ISP_SMIARX_COUNT_INT_EN
*/

#define ISP_SMIARX_COUNT_INT_EN_SIZE (8)
#define ISP_SMIARX_COUNT_INT_EN_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x2c)
#define ISP_SMIARX_COUNT_INT_EN_RESET_VALUE (0x00)
#define ISP_SMIARX_COUNT_INT_EN_BITFIELD_MASK (0x1F)
#define ISP_SMIARX_COUNT_INT_EN_RWMASK (0x1F)
#define ISP_SMIARX_COUNT_INT_EN_ROMASK (0x00)
#define ISP_SMIARX_COUNT_INT_EN_WOMASK (0x00)
#define ISP_SMIARX_COUNT_INT_EN_UNUSED_MASK (0xE0)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_0_int_en_OFFSET (0x00)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_0_int_en_WIDTH (1)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_0_int_en_MASK (0x01)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_1_int_en_OFFSET (0x01)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_1_int_en_WIDTH (1)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_1_int_en_MASK (0x02)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_2_int_en_OFFSET (0x02)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_2_int_en_WIDTH (1)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_2_int_en_MASK (0x04)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_3_int_en_OFFSET (0x03)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_3_int_en_WIDTH (1)
#define ISP_SMIARX_COUNT_INT_EN_rx_line_count_3_int_en_MASK (0x08)
#define ISP_SMIARX_COUNT_INT_EN_rx_seq_complete_int_en_OFFSET (0x04)
#define ISP_SMIARX_COUNT_INT_EN_rx_seq_complete_int_en_WIDTH (1)
#define ISP_SMIARX_COUNT_INT_EN_rx_seq_complete_int_en_MASK (0x10)

/*
* Register : ISP_SMIARX_OVERRIDE
*/

#define ISP_SMIARX_OVERRIDE_SIZE     (32)
#define ISP_SMIARX_OVERRIDE_OFFSET   (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x2e)
#define ISP_SMIARX_OVERRIDE_RESET_VALUE (0x00000000)
#define ISP_SMIARX_OVERRIDE_BITFIELD_MASK (0x007FFFFF)
#define ISP_SMIARX_OVERRIDE_RWMASK   (0x007FFFFF)
#define ISP_SMIARX_OVERRIDE_ROMASK   (0x00000000)
#define ISP_SMIARX_OVERRIDE_WOMASK   (0x00000000)
#define ISP_SMIARX_OVERRIDE_UNUSED_MASK (0xFF800000)
#define ISP_SMIARX_OVERRIDE_override_OFFSET (0x00000000)
#define ISP_SMIARX_OVERRIDE_override_WIDTH (23)
#define ISP_SMIARX_OVERRIDE_override_MASK (0x007FFFFF)

/*
* Register : ISP_SMIARX_SENSOR_ID
*/

#define ISP_SMIARX_SENSOR_ID_SIZE    (16)
#define ISP_SMIARX_SENSOR_ID_OFFSET  (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x30)
#define ISP_SMIARX_SENSOR_ID_RESET_VALUE (0x0000)
#define ISP_SMIARX_SENSOR_ID_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_SENSOR_ID_RWMASK  (0x0000)
#define ISP_SMIARX_SENSOR_ID_ROMASK  (0xFFFF)
#define ISP_SMIARX_SENSOR_ID_WOMASK  (0x0000)
#define ISP_SMIARX_SENSOR_ID_UNUSED_MASK (0x0000)
#define ISP_SMIARX_SENSOR_ID_sensor_id_OFFSET (0x0000)
#define ISP_SMIARX_SENSOR_ID_sensor_id_WIDTH (16)
#define ISP_SMIARX_SENSOR_ID_sensor_id_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_PIXEL_ORDER
*/

#define ISP_SMIARX_PIXEL_ORDER_SIZE  (16)
#define ISP_SMIARX_PIXEL_ORDER_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x32)
#define ISP_SMIARX_PIXEL_ORDER_RESET_VALUE (0x0000)
#define ISP_SMIARX_PIXEL_ORDER_BITFIELD_MASK (0x0303)
#define ISP_SMIARX_PIXEL_ORDER_RWMASK (0x0300)
#define ISP_SMIARX_PIXEL_ORDER_ROMASK (0x0003)
#define ISP_SMIARX_PIXEL_ORDER_WOMASK (0x0000)
#define ISP_SMIARX_PIXEL_ORDER_UNUSED_MASK (0xFCFC)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_OFFSET (0x0000)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_WIDTH (2)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_MASK (0x0003)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_B_0x0 (0x0000)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_B_0x1 (0x0001)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_B_0x2 (0x0002)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_B_0x3 (0x0003)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_ovr_OFFSET (0x0008)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_ovr_WIDTH (2)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_ovr_MASK (0x0300)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_ovr_B_0x0 (0x0000)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_ovr_B_0x1 (0x0001)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_ovr_B_0x2 (0x0002)
#define ISP_SMIARX_PIXEL_ORDER_pixel_order_ovr_B_0x3 (0x0003)

/*
* Register : ISP_SMIARX_AUTO_HENV_LENGTH
*/

#define ISP_SMIARX_AUTO_HENV_LENGTH_SIZE (16)
#define ISP_SMIARX_AUTO_HENV_LENGTH_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x34)
#define ISP_SMIARX_AUTO_HENV_LENGTH_RESET_VALUE (0x0000)
#define ISP_SMIARX_AUTO_HENV_LENGTH_BITFIELD_MASK (0x1FFF)
#define ISP_SMIARX_AUTO_HENV_LENGTH_RWMASK (0x1FFF)
#define ISP_SMIARX_AUTO_HENV_LENGTH_ROMASK (0x0000)
#define ISP_SMIARX_AUTO_HENV_LENGTH_WOMASK (0x0000)
#define ISP_SMIARX_AUTO_HENV_LENGTH_UNUSED_MASK (0xE000)
#define ISP_SMIARX_AUTO_HENV_LENGTH_auto_henv_length_OFFSET (0x0000)
#define ISP_SMIARX_AUTO_HENV_LENGTH_auto_henv_length_WIDTH (13)
#define ISP_SMIARX_AUTO_HENV_LENGTH_auto_henv_length_MASK (0x1FFF)

/*
* Register : ISP_SMIARX_FRAME_LENGTH
*/

#define ISP_SMIARX_FRAME_LENGTH_SIZE (32)
#define ISP_SMIARX_FRAME_LENGTH_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x36)
#define ISP_SMIARX_FRAME_LENGTH_RESET_VALUE (0x00000000)
#define ISP_SMIARX_FRAME_LENGTH_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX_FRAME_LENGTH_RWMASK (0xFFFF0000)
#define ISP_SMIARX_FRAME_LENGTH_ROMASK (0x0000FFFF)
#define ISP_SMIARX_FRAME_LENGTH_WOMASK (0x00000000)
#define ISP_SMIARX_FRAME_LENGTH_UNUSED_MASK (0x00000000)
#define ISP_SMIARX_FRAME_LENGTH_frame_length_OFFSET (0x00000000)
#define ISP_SMIARX_FRAME_LENGTH_frame_length_WIDTH (16)
#define ISP_SMIARX_FRAME_LENGTH_frame_length_MASK (0x0000FFFF)
#define ISP_SMIARX_FRAME_LENGTH_frame_length_ovr_OFFSET (0x00000010)
#define ISP_SMIARX_FRAME_LENGTH_frame_length_ovr_WIDTH (16)
#define ISP_SMIARX_FRAME_LENGTH_frame_length_ovr_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX_LINE_LENGTH
*/

#define ISP_SMIARX_LINE_LENGTH_SIZE  (32)
#define ISP_SMIARX_LINE_LENGTH_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x38)
#define ISP_SMIARX_LINE_LENGTH_RESET_VALUE (0x00000000)
#define ISP_SMIARX_LINE_LENGTH_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX_LINE_LENGTH_RWMASK (0xFFFF0000)
#define ISP_SMIARX_LINE_LENGTH_ROMASK (0x0000FFFF)
#define ISP_SMIARX_LINE_LENGTH_WOMASK (0x00000000)
#define ISP_SMIARX_LINE_LENGTH_UNUSED_MASK (0x00000000)
#define ISP_SMIARX_LINE_LENGTH_line_length_OFFSET (0x00000000)
#define ISP_SMIARX_LINE_LENGTH_line_length_WIDTH (16)
#define ISP_SMIARX_LINE_LENGTH_line_length_MASK (0x0000FFFF)
#define ISP_SMIARX_LINE_LENGTH_line_length_ovr_OFFSET (0x00000010)
#define ISP_SMIARX_LINE_LENGTH_line_length_ovr_WIDTH (16)
#define ISP_SMIARX_LINE_LENGTH_line_length_ovr_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX_X_ADDR_START
*/

#define ISP_SMIARX_X_ADDR_START_SIZE (16)
#define ISP_SMIARX_X_ADDR_START_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x3a)
#define ISP_SMIARX_X_ADDR_START_RESET_VALUE (0x0000)
#define ISP_SMIARX_X_ADDR_START_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_X_ADDR_START_RWMASK (0x0000)
#define ISP_SMIARX_X_ADDR_START_ROMASK (0xFFFF)
#define ISP_SMIARX_X_ADDR_START_WOMASK (0x0000)
#define ISP_SMIARX_X_ADDR_START_UNUSED_MASK (0x0000)
#define ISP_SMIARX_X_ADDR_START_x_addr_start_OFFSET (0x0000)
#define ISP_SMIARX_X_ADDR_START_x_addr_start_WIDTH (16)
#define ISP_SMIARX_X_ADDR_START_x_addr_start_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_Y_ADDR_START
*/

#define ISP_SMIARX_Y_ADDR_START_SIZE (16)
#define ISP_SMIARX_Y_ADDR_START_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x3c)
#define ISP_SMIARX_Y_ADDR_START_RESET_VALUE (0x0000)
#define ISP_SMIARX_Y_ADDR_START_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_Y_ADDR_START_RWMASK (0x0000)
#define ISP_SMIARX_Y_ADDR_START_ROMASK (0xFFFF)
#define ISP_SMIARX_Y_ADDR_START_WOMASK (0x0000)
#define ISP_SMIARX_Y_ADDR_START_UNUSED_MASK (0x0000)
#define ISP_SMIARX_Y_ADDR_START_y_addr_start_OFFSET (0x0000)
#define ISP_SMIARX_Y_ADDR_START_y_addr_start_WIDTH (16)
#define ISP_SMIARX_Y_ADDR_START_y_addr_start_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_X_ADDR_END
*/

#define ISP_SMIARX_X_ADDR_END_SIZE   (16)
#define ISP_SMIARX_X_ADDR_END_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x3e)
#define ISP_SMIARX_X_ADDR_END_RESET_VALUE (0x0000)
#define ISP_SMIARX_X_ADDR_END_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_X_ADDR_END_RWMASK (0x0000)
#define ISP_SMIARX_X_ADDR_END_ROMASK (0xFFFF)
#define ISP_SMIARX_X_ADDR_END_WOMASK (0x0000)
#define ISP_SMIARX_X_ADDR_END_UNUSED_MASK (0x0000)
#define ISP_SMIARX_X_ADDR_END_x_addr_end_OFFSET (0x0000)
#define ISP_SMIARX_X_ADDR_END_x_addr_end_WIDTH (16)
#define ISP_SMIARX_X_ADDR_END_x_addr_end_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_Y_ADDR_END
*/

#define ISP_SMIARX_Y_ADDR_END_SIZE   (16)
#define ISP_SMIARX_Y_ADDR_END_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x40)
#define ISP_SMIARX_Y_ADDR_END_RESET_VALUE (0x0000)
#define ISP_SMIARX_Y_ADDR_END_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_Y_ADDR_END_RWMASK (0x0000)
#define ISP_SMIARX_Y_ADDR_END_ROMASK (0xFFFF)
#define ISP_SMIARX_Y_ADDR_END_WOMASK (0x0000)
#define ISP_SMIARX_Y_ADDR_END_UNUSED_MASK (0x0000)
#define ISP_SMIARX_Y_ADDR_END_y_addr_end_OFFSET (0x0000)
#define ISP_SMIARX_Y_ADDR_END_y_addr_end_WIDTH (16)
#define ISP_SMIARX_Y_ADDR_END_y_addr_end_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_X_OUTPUT_SIZE
*/

#define ISP_SMIARX_X_OUTPUT_SIZE_SIZE (16)
#define ISP_SMIARX_X_OUTPUT_SIZE_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x42)
#define ISP_SMIARX_X_OUTPUT_SIZE_RESET_VALUE (0x0000)
#define ISP_SMIARX_X_OUTPUT_SIZE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_X_OUTPUT_SIZE_RWMASK (0x0000)
#define ISP_SMIARX_X_OUTPUT_SIZE_ROMASK (0xFFFF)
#define ISP_SMIARX_X_OUTPUT_SIZE_WOMASK (0x0000)
#define ISP_SMIARX_X_OUTPUT_SIZE_UNUSED_MASK (0x0000)
#define ISP_SMIARX_X_OUTPUT_SIZE_x_output_size_OFFSET (0x0000)
#define ISP_SMIARX_X_OUTPUT_SIZE_x_output_size_WIDTH (16)
#define ISP_SMIARX_X_OUTPUT_SIZE_x_output_size_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_Y_OUTPUT_SIZE
*/

#define ISP_SMIARX_Y_OUTPUT_SIZE_SIZE (16)
#define ISP_SMIARX_Y_OUTPUT_SIZE_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x44)
#define ISP_SMIARX_Y_OUTPUT_SIZE_RESET_VALUE (0x0000)
#define ISP_SMIARX_Y_OUTPUT_SIZE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_Y_OUTPUT_SIZE_RWMASK (0x0000)
#define ISP_SMIARX_Y_OUTPUT_SIZE_ROMASK (0xFFFF)
#define ISP_SMIARX_Y_OUTPUT_SIZE_WOMASK (0x0000)
#define ISP_SMIARX_Y_OUTPUT_SIZE_UNUSED_MASK (0x0000)
#define ISP_SMIARX_Y_OUTPUT_SIZE_y_output_size_OFFSET (0x0000)
#define ISP_SMIARX_Y_OUTPUT_SIZE_y_output_size_WIDTH (16)
#define ISP_SMIARX_Y_OUTPUT_SIZE_y_output_size_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_ADDR_INCREMENTS
*/

#define ISP_SMIARX_ADDR_INCREMENTS_SIZE (8)
#define ISP_SMIARX_ADDR_INCREMENTS_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x46)
#define ISP_SMIARX_ADDR_INCREMENTS_RESET_VALUE (0xFF)
#define ISP_SMIARX_ADDR_INCREMENTS_BITFIELD_MASK (0xFF)
#define ISP_SMIARX_ADDR_INCREMENTS_RWMASK (0xAA)
#define ISP_SMIARX_ADDR_INCREMENTS_ROMASK (0x55)
#define ISP_SMIARX_ADDR_INCREMENTS_WOMASK (0x00)
#define ISP_SMIARX_ADDR_INCREMENTS_UNUSED_MASK (0x00)
#define ISP_SMIARX_ADDR_INCREMENTS_x_even_inc_lsb_OFFSET (0x00)
#define ISP_SMIARX_ADDR_INCREMENTS_x_even_inc_lsb_WIDTH (1)
#define ISP_SMIARX_ADDR_INCREMENTS_x_even_inc_lsb_MASK (0x01)
#define ISP_SMIARX_ADDR_INCREMENTS_x_even_inc_lsb_ovr_OFFSET (0x01)
#define ISP_SMIARX_ADDR_INCREMENTS_x_even_inc_lsb_ovr_WIDTH (1)
#define ISP_SMIARX_ADDR_INCREMENTS_x_even_inc_lsb_ovr_MASK (0x02)
#define ISP_SMIARX_ADDR_INCREMENTS_x_odd_inc_lsb_OFFSET (0x02)
#define ISP_SMIARX_ADDR_INCREMENTS_x_odd_inc_lsb_WIDTH (1)
#define ISP_SMIARX_ADDR_INCREMENTS_x_odd_inc_lsb_MASK (0x04)
#define ISP_SMIARX_ADDR_INCREMENTS_x_odd_inc_lsb_ovr_OFFSET (0x03)
#define ISP_SMIARX_ADDR_INCREMENTS_x_odd_inc_lsb_ovr_WIDTH (1)
#define ISP_SMIARX_ADDR_INCREMENTS_x_odd_inc_lsb_ovr_MASK (0x08)
#define ISP_SMIARX_ADDR_INCREMENTS_y_even_inc_lsb_OFFSET (0x04)
#define ISP_SMIARX_ADDR_INCREMENTS_y_even_inc_lsb_WIDTH (1)
#define ISP_SMIARX_ADDR_INCREMENTS_y_even_inc_lsb_MASK (0x10)
#define ISP_SMIARX_ADDR_INCREMENTS_y_even_inc_lsb_ovr_OFFSET (0x05)
#define ISP_SMIARX_ADDR_INCREMENTS_y_even_inc_lsb_ovr_WIDTH (1)
#define ISP_SMIARX_ADDR_INCREMENTS_y_even_inc_lsb_ovr_MASK (0x20)
#define ISP_SMIARX_ADDR_INCREMENTS_y_odd_inc_lsb_OFFSET (0x06)
#define ISP_SMIARX_ADDR_INCREMENTS_y_odd_inc_lsb_WIDTH (1)
#define ISP_SMIARX_ADDR_INCREMENTS_y_odd_inc_lsb_MASK (0x40)
#define ISP_SMIARX_ADDR_INCREMENTS_y_odd_inc_lsb_ovr_OFFSET (0x07)
#define ISP_SMIARX_ADDR_INCREMENTS_y_odd_inc_lsb_ovr_WIDTH (1)
#define ISP_SMIARX_ADDR_INCREMENTS_y_odd_inc_lsb_ovr_MASK (0x80)

/*
* Register : ISP_SMIARX_FINE_EXPOSURE
*/

#define ISP_SMIARX_FINE_EXPOSURE_SIZE (16)
#define ISP_SMIARX_FINE_EXPOSURE_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x48)
#define ISP_SMIARX_FINE_EXPOSURE_RESET_VALUE (0x0000)
#define ISP_SMIARX_FINE_EXPOSURE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_FINE_EXPOSURE_RWMASK (0x0000)
#define ISP_SMIARX_FINE_EXPOSURE_ROMASK (0xFFFF)
#define ISP_SMIARX_FINE_EXPOSURE_WOMASK (0x0000)
#define ISP_SMIARX_FINE_EXPOSURE_UNUSED_MASK (0x0000)
#define ISP_SMIARX_FINE_EXPOSURE_fine_exposure_OFFSET (0x0000)
#define ISP_SMIARX_FINE_EXPOSURE_fine_exposure_WIDTH (16)
#define ISP_SMIARX_FINE_EXPOSURE_fine_exposure_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_COARSE_EXPOSURE
*/

#define ISP_SMIARX_COARSE_EXPOSURE_SIZE (16)
#define ISP_SMIARX_COARSE_EXPOSURE_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x4a)
#define ISP_SMIARX_COARSE_EXPOSURE_RESET_VALUE (0x0000)
#define ISP_SMIARX_COARSE_EXPOSURE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_COARSE_EXPOSURE_RWMASK (0x0000)
#define ISP_SMIARX_COARSE_EXPOSURE_ROMASK (0xFFFF)
#define ISP_SMIARX_COARSE_EXPOSURE_WOMASK (0x0000)
#define ISP_SMIARX_COARSE_EXPOSURE_UNUSED_MASK (0x0000)
#define ISP_SMIARX_COARSE_EXPOSURE_coarse_exposure_OFFSET (0x0000)
#define ISP_SMIARX_COARSE_EXPOSURE_coarse_exposure_WIDTH (16)
#define ISP_SMIARX_COARSE_EXPOSURE_coarse_exposure_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_ANALOG_GAIN
*/

#define ISP_SMIARX_ANALOG_GAIN_SIZE  (16)
#define ISP_SMIARX_ANALOG_GAIN_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x4c)
#define ISP_SMIARX_ANALOG_GAIN_RESET_VALUE (0x00)
#define ISP_SMIARX_ANALOG_GAIN_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_ANALOG_GAIN_RWMASK (0x0000)
#define ISP_SMIARX_ANALOG_GAIN_ROMASK (0xFFFF)
#define ISP_SMIARX_ANALOG_GAIN_WOMASK (0x0000)
#define ISP_SMIARX_ANALOG_GAIN_UNUSED_MASK (0x0000)
#define ISP_SMIARX_ANALOG_GAIN_analog_gain_OFFSET (0x0000)
#define ISP_SMIARX_ANALOG_GAIN_analog_gain_WIDTH (16)
#define ISP_SMIARX_ANALOG_GAIN_analog_gain_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_MODEL_SUBTYPE
*/

#define ISP_SMIARX_MODEL_SUBTYPE_SIZE (16)
#define ISP_SMIARX_MODEL_SUBTYPE_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x4e)
#define ISP_SMIARX_MODEL_SUBTYPE_RESET_VALUE (0x0000)
#define ISP_SMIARX_MODEL_SUBTYPE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_MODEL_SUBTYPE_RWMASK (0xFF00)
#define ISP_SMIARX_MODEL_SUBTYPE_ROMASK (0x00FF)
#define ISP_SMIARX_MODEL_SUBTYPE_WOMASK (0x0000)
#define ISP_SMIARX_MODEL_SUBTYPE_UNUSED_MASK (0x0000)
#define ISP_SMIARX_MODEL_SUBTYPE_frame_format_model_subtype_OFFSET (0x0000)
#define ISP_SMIARX_MODEL_SUBTYPE_frame_format_model_subtype_WIDTH (8)
#define ISP_SMIARX_MODEL_SUBTYPE_frame_format_model_subtype_MASK (0x00FF)
#define ISP_SMIARX_MODEL_SUBTYPE_frame_format_model_subtype_ovr_OFFSET (0x0008)
#define ISP_SMIARX_MODEL_SUBTYPE_frame_format_model_subtype_ovr_WIDTH (8)
#define ISP_SMIARX_MODEL_SUBTYPE_frame_format_model_subtype_ovr_MASK (0xFF00)

/*
* Register : ISP_SMIARX_DESCRIPTOR_0
*/

#define ISP_SMIARX_DESCRIPTOR_0_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_0_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x50)
#define ISP_SMIARX_DESCRIPTOR_0_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_0_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_0_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_0_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_0_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_0_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_0_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_0_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_0_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_1
*/

#define ISP_SMIARX_DESCRIPTOR_1_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_1_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x51)
#define ISP_SMIARX_DESCRIPTOR_1_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_1_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_1_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_1_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_1_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_1_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_1_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_1_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_1_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_2
*/

#define ISP_SMIARX_DESCRIPTOR_2_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_2_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x52)
#define ISP_SMIARX_DESCRIPTOR_2_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_2_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_2_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_2_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_2_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_2_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_2_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_2_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_2_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_3
*/

#define ISP_SMIARX_DESCRIPTOR_3_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_3_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x53)
#define ISP_SMIARX_DESCRIPTOR_3_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_3_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_3_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_3_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_3_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_3_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_3_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_3_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_3_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_4
*/

#define ISP_SMIARX_DESCRIPTOR_4_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_4_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x54)
#define ISP_SMIARX_DESCRIPTOR_4_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_4_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_4_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_4_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_4_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_4_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_4_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_4_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_4_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_5
*/

#define ISP_SMIARX_DESCRIPTOR_5_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_5_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x55)
#define ISP_SMIARX_DESCRIPTOR_5_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_5_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_5_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_5_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_5_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_5_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_5_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_5_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_5_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_6
*/

#define ISP_SMIARX_DESCRIPTOR_6_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_6_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x56)
#define ISP_SMIARX_DESCRIPTOR_6_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_6_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_6_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_6_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_6_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_6_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_6_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_6_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_6_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_7
*/

#define ISP_SMIARX_DESCRIPTOR_7_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_7_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x57)
#define ISP_SMIARX_DESCRIPTOR_7_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_7_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_7_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_7_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_7_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_7_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_7_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_7_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_7_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_8
*/

#define ISP_SMIARX_DESCRIPTOR_8_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_8_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x58)
#define ISP_SMIARX_DESCRIPTOR_8_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_8_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_8_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_8_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_8_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_8_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_8_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_8_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_8_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_9
*/

#define ISP_SMIARX_DESCRIPTOR_9_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_9_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x59)
#define ISP_SMIARX_DESCRIPTOR_9_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_9_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_9_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_9_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_9_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_9_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_9_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_9_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_9_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_10
*/

#define ISP_SMIARX_DESCRIPTOR_10_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_10_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x5a)
#define ISP_SMIARX_DESCRIPTOR_10_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_10_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_10_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_10_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_10_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_10_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_10_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_10_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_10_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_11
*/

#define ISP_SMIARX_DESCRIPTOR_11_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_11_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x5b)
#define ISP_SMIARX_DESCRIPTOR_11_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_11_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_11_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_11_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_11_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_11_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_11_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_11_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_11_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_12
*/

#define ISP_SMIARX_DESCRIPTOR_12_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_12_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x5c)
#define ISP_SMIARX_DESCRIPTOR_12_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_12_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_12_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_12_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_12_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_12_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_12_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_12_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_12_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_13
*/

#define ISP_SMIARX_DESCRIPTOR_13_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_13_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x5d)
#define ISP_SMIARX_DESCRIPTOR_13_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_13_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_13_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_13_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_13_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_13_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_13_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_13_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_13_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_14
*/

#define ISP_SMIARX_DESCRIPTOR_14_SIZE (16)
#define ISP_SMIARX_DESCRIPTOR_14_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x5e)
#define ISP_SMIARX_DESCRIPTOR_14_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_14_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_14_RWMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_14_ROMASK (0xFFFF)
#define ISP_SMIARX_DESCRIPTOR_14_WOMASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_14_UNUSED_MASK (0x0000)
#define ISP_SMIARX_DESCRIPTOR_14_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX_DESCRIPTOR_14_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX_DESCRIPTOR_14_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX_TYPE_TRANS_1
*/

#define ISP_SMIARX_TYPE_TRANS_1_SIZE (16)
#define ISP_SMIARX_TYPE_TRANS_1_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x5f)
#define ISP_SMIARX_TYPE_TRANS_1_RESET_VALUE (0x0000)
#define ISP_SMIARX_TYPE_TRANS_1_BITFIELD_MASK (0x0777)
#define ISP_SMIARX_TYPE_TRANS_1_RWMASK (0x0777)
#define ISP_SMIARX_TYPE_TRANS_1_ROMASK (0x0000)
#define ISP_SMIARX_TYPE_TRANS_1_WOMASK (0x0000)
#define ISP_SMIARX_TYPE_TRANS_1_UNUSED_MASK (0xF888)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_4_OFFSET (0x0000)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_4_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_4_MASK (0x0007)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_4_BLANK (0x0000)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_4_BLACK (0x0001)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_4_DARK (0x0002)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_4_ACTIVE (0x0003)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_5_OFFSET (0x0004)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_5_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_5_MASK (0x0070)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_5_BLANK (0x0000)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_5_BLACK (0x0001)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_5_DARK (0x0002)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_5_ACTIVE (0x0003)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_6_OFFSET (0x0008)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_6_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_6_MASK (0x0700)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_6_BLANK (0x0000)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_6_BLACK (0x0001)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_6_DARK (0x0002)
#define ISP_SMIARX_TYPE_TRANS_1_type_trans_mspec_6_ACTIVE (0x0003)

/*
* Register : ISP_SMIARX_TYPE_TRANS_0
*/

#define ISP_SMIARX_TYPE_TRANS_0_SIZE (32)
#define ISP_SMIARX_TYPE_TRANS_0_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x60)
#define ISP_SMIARX_TYPE_TRANS_0_RESET_VALUE (0x00010320)
#define ISP_SMIARX_TYPE_TRANS_0_BITFIELD_MASK (0x77777777)
#define ISP_SMIARX_TYPE_TRANS_0_RWMASK (0x77777777)
#define ISP_SMIARX_TYPE_TRANS_0_ROMASK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_WOMASK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_UNUSED_MASK (0x88888888)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_black_OFFSET (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_black_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_black_MASK (0x00000007)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_black_BLANK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_black_BLACK (0x00000001)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_black_DARK (0x00000002)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_black_ACTIVE (0x00000003)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dark_OFFSET (0x00000004)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dark_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dark_MASK (0x00000070)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dark_BLANK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dark_BLACK (0x00000001)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dark_DARK (0x00000002)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dark_ACTIVE (0x00000003)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_visible_OFFSET (0x00000008)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_visible_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_visible_MASK (0x00000700)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_visible_BLANK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_visible_BLACK (0x00000001)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_visible_DARK (0x00000002)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_visible_ACTIVE (0x00000003)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dummy_OFFSET (0x0000000c)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dummy_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dummy_MASK (0x00007000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dummy_BLANK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dummy_BLACK (0x00000001)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dummy_DARK (0x00000002)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_dummy_ACTIVE (0x00000003)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_0_OFFSET (0x00000010)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_0_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_0_MASK (0x00070000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_0_BLANK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_0_BLACK (0x00000001)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_0_DARK (0x00000002)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_0_ACTIVE (0x00000003)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_1_OFFSET (0x00000014)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_1_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_1_MASK (0x00700000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_1_BLANK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_1_BLACK (0x00000001)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_1_DARK (0x00000002)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_1_ACTIVE (0x00000003)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_2_OFFSET (0x00000018)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_2_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_2_MASK (0x07000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_2_BLANK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_2_BLACK (0x00000001)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_2_DARK (0x00000002)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_2_ACTIVE (0x00000003)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_3_OFFSET (0x0000001c)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_3_WIDTH (3)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_3_MASK (0x70000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_3_BLANK (0x00000000)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_3_BLACK (0x00000001)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_3_DARK (0x00000002)
#define ISP_SMIARX_TYPE_TRANS_0_type_trans_mspec_3_ACTIVE (0x00000003)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_0
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_0_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x62)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_0_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_1
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_1_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x64)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_1_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_2
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_2_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x66)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_2_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_3
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_3_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x68)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_3_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_4
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_4_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x6a)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_4_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_5
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_5_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x6c)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_5_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_6
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_6_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x6e)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_6_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_7
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_7_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x70)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_7_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_8
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_8_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x72)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_8_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_9
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_9_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x74)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_9_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_10
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_10_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x76)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_10_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_11
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_11_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x78)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_11_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_12
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_12_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x7a)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_12_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_13
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_13_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x7c)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_13_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX_DESCRIPTOR_OVR_14
*/

#define ISP_SMIARX_DESCRIPTOR_OVR_14_SIZE (32)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_OFFSET (pictorv2_in_ISP_SMIARX_BASE_ADDR + 0x7e)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_RESET_VALUE (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_RWMASK (0x0001FFFF)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_ROMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_WOMASK (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX_DESCRIPTOR_OVR_14_frame_format_descriptor_ovr_MASK (0x0001FFFF)


/*
* Address Block : ISP_SD_IDP_GATE
*/

#define pictorv2_in_ISP_SD_IDP_GATE_BASE_ADDR               (0x300U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_SD_IDP_GATE_ENABLE
*/

#define ISP_SD_IDP_GATE_ENABLE_SIZE (8)
#define ISP_SD_IDP_GATE_ENABLE_OFFSET (pictorv2_in_ISP_SD_IDP_GATE_BASE_ADDR + 0x00)
#define ISP_SD_IDP_GATE_ENABLE_RESET_VALUE (0x00)
#define ISP_SD_IDP_GATE_ENABLE_BITFIELD_MASK (0x11)
#define ISP_SD_IDP_GATE_ENABLE_RWMASK (0x11)
#define ISP_SD_IDP_GATE_ENABLE_ROMASK (0x00)
#define ISP_SD_IDP_GATE_ENABLE_WOMASK (0x00)
#define ISP_SD_IDP_GATE_ENABLE_UNUSED_MASK (0xEE)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_SD_IDP_GATE_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_SD_IDP_GATE_SELECT
*/

#define ISP_SD_IDP_GATE_SELECT_SIZE (8)
#define ISP_SD_IDP_GATE_SELECT_OFFSET (pictorv2_in_ISP_SD_IDP_GATE_BASE_ADDR + 0x02)
#define ISP_SD_IDP_GATE_SELECT_RESET_VALUE (0x00)
#define ISP_SD_IDP_GATE_SELECT_BITFIELD_MASK (0x11)
#define ISP_SD_IDP_GATE_SELECT_RWMASK (0x11)
#define ISP_SD_IDP_GATE_SELECT_ROMASK (0x00)
#define ISP_SD_IDP_GATE_SELECT_WOMASK (0x00)
#define ISP_SD_IDP_GATE_SELECT_UNUSED_MASK (0xEE)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_select_WIDTH (1)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_select_MASK (0x01)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_SD_IDP_GATE_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_BAYER_STORE_SD_CLK
*/

#define pictorv2_in_ISP_BAYER_STORE_SD_CLK_BASE_ADDR        (0x310U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_BAYER_STORE_SD_CLK_ENABLE
*/

#define ISP_BAYER_STORE_SD_CLK_ENABLE_SIZE (8)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_OFFSET (pictorv2_in_ISP_BAYER_STORE_SD_CLK_BASE_ADDR + 0x00)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_RESET_VALUE (0x00)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_BITFIELD_MASK (0x11)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_RWMASK (0x11)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_ROMASK (0x00)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_WOMASK (0x00)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_UNUSED_MASK (0xEE)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_BAYER_STORE_SD_CLK_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_BAYER_STORE_SD_CLK_SELECT
*/

#define ISP_BAYER_STORE_SD_CLK_SELECT_SIZE (8)
#define ISP_BAYER_STORE_SD_CLK_SELECT_OFFSET (pictorv2_in_ISP_BAYER_STORE_SD_CLK_BASE_ADDR + 0x02)
#define ISP_BAYER_STORE_SD_CLK_SELECT_RESET_VALUE (0x00)
#define ISP_BAYER_STORE_SD_CLK_SELECT_BITFIELD_MASK (0x11)
#define ISP_BAYER_STORE_SD_CLK_SELECT_RWMASK (0x11)
#define ISP_BAYER_STORE_SD_CLK_SELECT_ROMASK (0x00)
#define ISP_BAYER_STORE_SD_CLK_SELECT_WOMASK (0x00)
#define ISP_BAYER_STORE_SD_CLK_SELECT_UNUSED_MASK (0xEE)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_select_WIDTH (1)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_select_MASK (0x01)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_BAYER_STORE_SD_CLK_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_LBE
*/

#define pictorv2_in_ISP_LBE_BASE_ADDR                       (0x320U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_LBE_ENABLE
*/

#define ISP_LBE_ENABLE_SIZE             (8)
#define ISP_LBE_ENABLE_OFFSET           (pictorv2_in_ISP_LBE_BASE_ADDR + 0x00)
#define ISP_LBE_ENABLE_RESET_VALUE      (0x00)
#define ISP_LBE_ENABLE_BITFIELD_MASK    (0x11)
#define ISP_LBE_ENABLE_RWMASK           (0x11)
#define ISP_LBE_ENABLE_ROMASK           (0x00)
#define ISP_LBE_ENABLE_WOMASK           (0x00)
#define ISP_LBE_ENABLE_UNUSED_MASK      (0xEE)
#define ISP_LBE_ENABLE_line_blk_elim_enable_OFFSET (0x00)
#define ISP_LBE_ENABLE_line_blk_elim_enable_WIDTH (1)
#define ISP_LBE_ENABLE_line_blk_elim_enable_MASK (0x01)
#define ISP_LBE_ENABLE_line_blk_elim_enable_DISABLE (0x00)
#define ISP_LBE_ENABLE_line_blk_elim_enable_ENABLE (0x01)
#define ISP_LBE_ENABLE_line_blk_elim_soft_reset_OFFSET (0x04)
#define ISP_LBE_ENABLE_line_blk_elim_soft_reset_WIDTH (1)
#define ISP_LBE_ENABLE_line_blk_elim_soft_reset_MASK (0x10)
#define ISP_LBE_ENABLE_line_blk_elim_soft_reset_DISABLE (0x00)
#define ISP_LBE_ENABLE_line_blk_elim_soft_reset_ENABLE (0x01)

/*
* Register : ISP_LBE_DFV
*/

#define ISP_LBE_DFV_SIZE                (8)
#define ISP_LBE_DFV_OFFSET              (pictorv2_in_ISP_LBE_BASE_ADDR + 0x02)
#define ISP_LBE_DFV_RESET_VALUE         (0x00)
#define ISP_LBE_DFV_BITFIELD_MASK       (0x03)
#define ISP_LBE_DFV_RWMASK              (0x03)
#define ISP_LBE_DFV_ROMASK              (0x00)
#define ISP_LBE_DFV_WOMASK              (0x00)
#define ISP_LBE_DFV_UNUSED_MASK         (0xFC)
#define ISP_LBE_DFV_line_blk_elim_dfv_enable_OFFSET (0x00)
#define ISP_LBE_DFV_line_blk_elim_dfv_enable_WIDTH (1)
#define ISP_LBE_DFV_line_blk_elim_dfv_enable_MASK (0x01)
#define ISP_LBE_DFV_line_blk_elim_dfv_enable_DISABLE (0x00)
#define ISP_LBE_DFV_line_blk_elim_dfv_enable_ENABLE (0x01)
#define ISP_LBE_DFV_line_blk_elim_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_LBE_DFV_line_blk_elim_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_LBE_DFV_line_blk_elim_dfv_interrupt_ctrl_MASK (0x02)

/*
* Register : ISP_LBE_H_SIZE
*/

#define ISP_LBE_H_SIZE_SIZE             (16)
#define ISP_LBE_H_SIZE_OFFSET           (pictorv2_in_ISP_LBE_BASE_ADDR + 0x04)
#define ISP_LBE_H_SIZE_RESET_VALUE      (0x0000)
#define ISP_LBE_H_SIZE_BITFIELD_MASK    (0x3FFF)
#define ISP_LBE_H_SIZE_RWMASK           (0x3FFF)
#define ISP_LBE_H_SIZE_ROMASK           (0x0000)
#define ISP_LBE_H_SIZE_WOMASK           (0x0000)
#define ISP_LBE_H_SIZE_UNUSED_MASK      (0xC000)
#define ISP_LBE_H_SIZE_line_blk_elim_h_size_OFFSET (0x0000)
#define ISP_LBE_H_SIZE_line_blk_elim_h_size_WIDTH (14)
#define ISP_LBE_H_SIZE_line_blk_elim_h_size_MASK (0x3FFF)

/*
* Register : ISP_LBE_READ_START
*/

#define ISP_LBE_READ_START_SIZE         (16)
#define ISP_LBE_READ_START_OFFSET       (pictorv2_in_ISP_LBE_BASE_ADDR + 0x06)
#define ISP_LBE_READ_START_RESET_VALUE  (0x0008)
#define ISP_LBE_READ_START_BITFIELD_MASK (0x3FFF)
#define ISP_LBE_READ_START_RWMASK       (0x3FFF)
#define ISP_LBE_READ_START_ROMASK       (0x0000)
#define ISP_LBE_READ_START_WOMASK       (0x0000)
#define ISP_LBE_READ_START_UNUSED_MASK  (0xC000)
#define ISP_LBE_READ_START_line_blk_elim_read_start_OFFSET (0x0000)
#define ISP_LBE_READ_START_line_blk_elim_read_start_WIDTH (14)
#define ISP_LBE_READ_START_line_blk_elim_read_start_MASK (0x3FFF)


/*
* Address Block : ISP_BAYER_STORE_PIX_CLK
*/

#define pictorv2_in_ISP_BAYER_STORE_PIX_CLK_BASE_ADDR       (0x380U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_BAYER_STORE_PIX_CLK_ENABLE
*/

#define ISP_BAYER_STORE_PIX_CLK_ENABLE_SIZE (8)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_OFFSET (pictorv2_in_ISP_BAYER_STORE_PIX_CLK_BASE_ADDR + 0x00)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_RESET_VALUE (0x00)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_BITFIELD_MASK (0x11)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_RWMASK (0x11)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_ROMASK (0x00)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_WOMASK (0x00)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_UNUSED_MASK (0xEE)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_BAYER_STORE_PIX_CLK_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_BAYER_STORE_PIX_CLK_SELECT
*/

#define ISP_BAYER_STORE_PIX_CLK_SELECT_SIZE (8)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_OFFSET (pictorv2_in_ISP_BAYER_STORE_PIX_CLK_BASE_ADDR + 0x02)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_RESET_VALUE (0x00)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_BITFIELD_MASK (0x11)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_RWMASK (0x11)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_ROMASK (0x00)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_WOMASK (0x00)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_UNUSED_MASK (0xEE)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_select_WIDTH (1)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_select_MASK (0x01)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_BAYER_STORE_PIX_CLK_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_RE_BAYER_LOAD
*/

#define pictorv2_in_ISP_RE_BAYER_LOAD_BASE_ADDR             (0x390U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_RE_BAYER_LOAD_ENABLE
*/

#define ISP_RE_BAYER_LOAD_ENABLE_SIZE (8)
#define ISP_RE_BAYER_LOAD_ENABLE_OFFSET (pictorv2_in_ISP_RE_BAYER_LOAD_BASE_ADDR + 0x00)
#define ISP_RE_BAYER_LOAD_ENABLE_RESET_VALUE (0x00)
#define ISP_RE_BAYER_LOAD_ENABLE_BITFIELD_MASK (0x11)
#define ISP_RE_BAYER_LOAD_ENABLE_RWMASK (0x11)
#define ISP_RE_BAYER_LOAD_ENABLE_ROMASK (0x00)
#define ISP_RE_BAYER_LOAD_ENABLE_WOMASK (0x00)
#define ISP_RE_BAYER_LOAD_ENABLE_UNUSED_MASK (0xEE)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_RE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_RE_BAYER_LOAD_SELECT
*/

#define ISP_RE_BAYER_LOAD_SELECT_SIZE (8)
#define ISP_RE_BAYER_LOAD_SELECT_OFFSET (pictorv2_in_ISP_RE_BAYER_LOAD_BASE_ADDR + 0x02)
#define ISP_RE_BAYER_LOAD_SELECT_RESET_VALUE (0x00)
#define ISP_RE_BAYER_LOAD_SELECT_BITFIELD_MASK (0x11)
#define ISP_RE_BAYER_LOAD_SELECT_RWMASK (0x11)
#define ISP_RE_BAYER_LOAD_SELECT_ROMASK (0x00)
#define ISP_RE_BAYER_LOAD_SELECT_WOMASK (0x00)
#define ISP_RE_BAYER_LOAD_SELECT_UNUSED_MASK (0xEE)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_select_WIDTH (1)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_select_MASK (0x01)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_RE_BAYER_LOAD_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_RSO
*/

#define pictorv2_in_ISP_RSO_BASE_ADDR                       (0x3a0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_RSO_SLANT_CTRL
*/

#define ISP_RSO_SLANT_CTRL_SIZE         (8)
#define ISP_RSO_SLANT_CTRL_OFFSET       (pictorv2_in_ISP_RSO_BASE_ADDR + 0x00)
#define ISP_RSO_SLANT_CTRL_RESET_VALUE  (0x00)
#define ISP_RSO_SLANT_CTRL_BITFIELD_MASK (0x01)
#define ISP_RSO_SLANT_CTRL_RWMASK       (0x01)
#define ISP_RSO_SLANT_CTRL_ROMASK       (0x00)
#define ISP_RSO_SLANT_CTRL_WOMASK       (0x00)
#define ISP_RSO_SLANT_CTRL_UNUSED_MASK  (0xFE)
#define ISP_RSO_SLANT_CTRL_rso_en_OFFSET (0x00)
#define ISP_RSO_SLANT_CTRL_rso_en_WIDTH (1)
#define ISP_RSO_SLANT_CTRL_rso_en_MASK  (0x01)
#define ISP_RSO_SLANT_CTRL_rso_en_DISABLE (0x00)
#define ISP_RSO_SLANT_CTRL_rso_en_ENABLE (0x01)

/*
* Register : ISP_RSO_DC_TERM_GR
*/

#define ISP_RSO_DC_TERM_GR_SIZE         (16)
#define ISP_RSO_DC_TERM_GR_OFFSET       (pictorv2_in_ISP_RSO_BASE_ADDR + 0x02)
#define ISP_RSO_DC_TERM_GR_RESET_VALUE  (0x0000)
#define ISP_RSO_DC_TERM_GR_BITFIELD_MASK (0x0FFF)
#define ISP_RSO_DC_TERM_GR_RWMASK       (0x0FFF)
#define ISP_RSO_DC_TERM_GR_ROMASK       (0x0000)
#define ISP_RSO_DC_TERM_GR_WOMASK       (0x0000)
#define ISP_RSO_DC_TERM_GR_UNUSED_MASK  (0xF000)
#define ISP_RSO_DC_TERM_GR_dc_term_gr_OFFSET (0x0000)
#define ISP_RSO_DC_TERM_GR_dc_term_gr_WIDTH (12)
#define ISP_RSO_DC_TERM_GR_dc_term_gr_MASK (0x0FFF)

/*
* Register : ISP_RSO_X_COEF_GR
*/

#define ISP_RSO_X_COEF_GR_SIZE          (32)
#define ISP_RSO_X_COEF_GR_OFFSET        (pictorv2_in_ISP_RSO_BASE_ADDR + 0x04)
#define ISP_RSO_X_COEF_GR_RESET_VALUE   (0x000000)
#define ISP_RSO_X_COEF_GR_BITFIELD_MASK (0x0003FFFF)
#define ISP_RSO_X_COEF_GR_RWMASK        (0x0003FFFF)
#define ISP_RSO_X_COEF_GR_ROMASK        (0x00000000)
#define ISP_RSO_X_COEF_GR_WOMASK        (0x00000000)
#define ISP_RSO_X_COEF_GR_UNUSED_MASK   (0xFFFC0000)
#define ISP_RSO_X_COEF_GR_x_coef_gr_OFFSET (0x00000000)
#define ISP_RSO_X_COEF_GR_x_coef_gr_WIDTH (18)
#define ISP_RSO_X_COEF_GR_x_coef_gr_MASK (0x0003FFFF)

/*
* Register : ISP_RSO_Y_COEF_GR
*/

#define ISP_RSO_Y_COEF_GR_SIZE          (32)
#define ISP_RSO_Y_COEF_GR_OFFSET        (pictorv2_in_ISP_RSO_BASE_ADDR + 0x06)
#define ISP_RSO_Y_COEF_GR_RESET_VALUE   (0x000000)
#define ISP_RSO_Y_COEF_GR_BITFIELD_MASK (0x0003FFFF)
#define ISP_RSO_Y_COEF_GR_RWMASK        (0x0003FFFF)
#define ISP_RSO_Y_COEF_GR_ROMASK        (0x00000000)
#define ISP_RSO_Y_COEF_GR_WOMASK        (0x00000000)
#define ISP_RSO_Y_COEF_GR_UNUSED_MASK   (0xFFFC0000)
#define ISP_RSO_Y_COEF_GR_y_coef_gr_OFFSET (0x00000000)
#define ISP_RSO_Y_COEF_GR_y_coef_gr_WIDTH (18)
#define ISP_RSO_Y_COEF_GR_y_coef_gr_MASK (0x0003FFFF)

/*
* Register : ISP_RSO_DC_TERM_RR
*/

#define ISP_RSO_DC_TERM_RR_SIZE         (16)
#define ISP_RSO_DC_TERM_RR_OFFSET       (pictorv2_in_ISP_RSO_BASE_ADDR + 0x08)
#define ISP_RSO_DC_TERM_RR_RESET_VALUE  (0x0000)
#define ISP_RSO_DC_TERM_RR_BITFIELD_MASK (0x0FFF)
#define ISP_RSO_DC_TERM_RR_RWMASK       (0x0FFF)
#define ISP_RSO_DC_TERM_RR_ROMASK       (0x0000)
#define ISP_RSO_DC_TERM_RR_WOMASK       (0x0000)
#define ISP_RSO_DC_TERM_RR_UNUSED_MASK  (0xF000)
#define ISP_RSO_DC_TERM_RR_dc_term_rr_OFFSET (0x0000)
#define ISP_RSO_DC_TERM_RR_dc_term_rr_WIDTH (12)
#define ISP_RSO_DC_TERM_RR_dc_term_rr_MASK (0x0FFF)

/*
* Register : ISP_RSO_X_COEF_RR
*/

#define ISP_RSO_X_COEF_RR_SIZE          (32)
#define ISP_RSO_X_COEF_RR_OFFSET        (pictorv2_in_ISP_RSO_BASE_ADDR + 0x0a)
#define ISP_RSO_X_COEF_RR_RESET_VALUE   (0x000000)
#define ISP_RSO_X_COEF_RR_BITFIELD_MASK (0x0003FFFF)
#define ISP_RSO_X_COEF_RR_RWMASK        (0x0003FFFF)
#define ISP_RSO_X_COEF_RR_ROMASK        (0x00000000)
#define ISP_RSO_X_COEF_RR_WOMASK        (0x00000000)
#define ISP_RSO_X_COEF_RR_UNUSED_MASK   (0xFFFC0000)
#define ISP_RSO_X_COEF_RR_x_coef_rr_OFFSET (0x00000000)
#define ISP_RSO_X_COEF_RR_x_coef_rr_WIDTH (18)
#define ISP_RSO_X_COEF_RR_x_coef_rr_MASK (0x0003FFFF)

/*
* Register : ISP_RSO_Y_COEF_RR
*/

#define ISP_RSO_Y_COEF_RR_SIZE          (32)
#define ISP_RSO_Y_COEF_RR_OFFSET        (pictorv2_in_ISP_RSO_BASE_ADDR + 0x0c)
#define ISP_RSO_Y_COEF_RR_RESET_VALUE   (0x000000)
#define ISP_RSO_Y_COEF_RR_BITFIELD_MASK (0x0003FFFF)
#define ISP_RSO_Y_COEF_RR_RWMASK        (0x0003FFFF)
#define ISP_RSO_Y_COEF_RR_ROMASK        (0x00000000)
#define ISP_RSO_Y_COEF_RR_WOMASK        (0x00000000)
#define ISP_RSO_Y_COEF_RR_UNUSED_MASK   (0xFFFC0000)
#define ISP_RSO_Y_COEF_RR_y_coef_rr_OFFSET (0x00000000)
#define ISP_RSO_Y_COEF_RR_y_coef_rr_WIDTH (18)
#define ISP_RSO_Y_COEF_RR_y_coef_rr_MASK (0x0003FFFF)

/*
* Register : ISP_RSO_DC_TERM_BB
*/

#define ISP_RSO_DC_TERM_BB_SIZE         (16)
#define ISP_RSO_DC_TERM_BB_OFFSET       (pictorv2_in_ISP_RSO_BASE_ADDR + 0x0e)
#define ISP_RSO_DC_TERM_BB_RESET_VALUE  (0x0000)
#define ISP_RSO_DC_TERM_BB_BITFIELD_MASK (0x0FFF)
#define ISP_RSO_DC_TERM_BB_RWMASK       (0x0FFF)
#define ISP_RSO_DC_TERM_BB_ROMASK       (0x0000)
#define ISP_RSO_DC_TERM_BB_WOMASK       (0x0000)
#define ISP_RSO_DC_TERM_BB_UNUSED_MASK  (0xF000)
#define ISP_RSO_DC_TERM_BB_dc_term_bb_OFFSET (0x0000)
#define ISP_RSO_DC_TERM_BB_dc_term_bb_WIDTH (12)
#define ISP_RSO_DC_TERM_BB_dc_term_bb_MASK (0x0FFF)

/*
* Register : ISP_RSO_X_COEF_BB
*/

#define ISP_RSO_X_COEF_BB_SIZE          (32)
#define ISP_RSO_X_COEF_BB_OFFSET        (pictorv2_in_ISP_RSO_BASE_ADDR + 0x10)
#define ISP_RSO_X_COEF_BB_RESET_VALUE   (0x000000)
#define ISP_RSO_X_COEF_BB_BITFIELD_MASK (0x0003FFFF)
#define ISP_RSO_X_COEF_BB_RWMASK        (0x0003FFFF)
#define ISP_RSO_X_COEF_BB_ROMASK        (0x00000000)
#define ISP_RSO_X_COEF_BB_WOMASK        (0x00000000)
#define ISP_RSO_X_COEF_BB_UNUSED_MASK   (0xFFFC0000)
#define ISP_RSO_X_COEF_BB_x_coef_bb_OFFSET (0x00000000)
#define ISP_RSO_X_COEF_BB_x_coef_bb_WIDTH (18)
#define ISP_RSO_X_COEF_BB_x_coef_bb_MASK (0x0003FFFF)

/*
* Register : ISP_RSO_Y_COEF_BB
*/

#define ISP_RSO_Y_COEF_BB_SIZE          (32)
#define ISP_RSO_Y_COEF_BB_OFFSET        (pictorv2_in_ISP_RSO_BASE_ADDR + 0x12)
#define ISP_RSO_Y_COEF_BB_RESET_VALUE   (0x000000)
#define ISP_RSO_Y_COEF_BB_BITFIELD_MASK (0x0003FFFF)
#define ISP_RSO_Y_COEF_BB_RWMASK        (0x0003FFFF)
#define ISP_RSO_Y_COEF_BB_ROMASK        (0x00000000)
#define ISP_RSO_Y_COEF_BB_WOMASK        (0x00000000)
#define ISP_RSO_Y_COEF_BB_UNUSED_MASK   (0xFFFC0000)
#define ISP_RSO_Y_COEF_BB_y_coef_bb_OFFSET (0x00000000)
#define ISP_RSO_Y_COEF_BB_y_coef_bb_WIDTH (18)
#define ISP_RSO_Y_COEF_BB_y_coef_bb_MASK (0x0003FFFF)

/*
* Register : ISP_RSO_DC_TERM_GB
*/

#define ISP_RSO_DC_TERM_GB_SIZE         (16)
#define ISP_RSO_DC_TERM_GB_OFFSET       (pictorv2_in_ISP_RSO_BASE_ADDR + 0x14)
#define ISP_RSO_DC_TERM_GB_RESET_VALUE  (0x0000)
#define ISP_RSO_DC_TERM_GB_BITFIELD_MASK (0x0FFF)
#define ISP_RSO_DC_TERM_GB_RWMASK       (0x0FFF)
#define ISP_RSO_DC_TERM_GB_ROMASK       (0x0000)
#define ISP_RSO_DC_TERM_GB_WOMASK       (0x0000)
#define ISP_RSO_DC_TERM_GB_UNUSED_MASK  (0xF000)
#define ISP_RSO_DC_TERM_GB_dc_term_gb_OFFSET (0x0000)
#define ISP_RSO_DC_TERM_GB_dc_term_gb_WIDTH (12)
#define ISP_RSO_DC_TERM_GB_dc_term_gb_MASK (0x0FFF)

/*
* Register : ISP_RSO_X_COEF_GB
*/

#define ISP_RSO_X_COEF_GB_SIZE          (32)
#define ISP_RSO_X_COEF_GB_OFFSET        (pictorv2_in_ISP_RSO_BASE_ADDR + 0x16)
#define ISP_RSO_X_COEF_GB_RESET_VALUE   (0x000000)
#define ISP_RSO_X_COEF_GB_BITFIELD_MASK (0x0003FFFF)
#define ISP_RSO_X_COEF_GB_RWMASK        (0x0003FFFF)
#define ISP_RSO_X_COEF_GB_ROMASK        (0x00000000)
#define ISP_RSO_X_COEF_GB_WOMASK        (0x00000000)
#define ISP_RSO_X_COEF_GB_UNUSED_MASK   (0xFFFC0000)
#define ISP_RSO_X_COEF_GB_x_coef_gb_OFFSET (0x00000000)
#define ISP_RSO_X_COEF_GB_x_coef_gb_WIDTH (18)
#define ISP_RSO_X_COEF_GB_x_coef_gb_MASK (0x0003FFFF)

/*
* Register : ISP_RSO_Y_COEF_GB
*/

#define ISP_RSO_Y_COEF_GB_SIZE          (32)
#define ISP_RSO_Y_COEF_GB_OFFSET        (pictorv2_in_ISP_RSO_BASE_ADDR + 0x18)
#define ISP_RSO_Y_COEF_GB_RESET_VALUE   (0x000000)
#define ISP_RSO_Y_COEF_GB_BITFIELD_MASK (0x0003FFFF)
#define ISP_RSO_Y_COEF_GB_RWMASK        (0x0003FFFF)
#define ISP_RSO_Y_COEF_GB_ROMASK        (0x00000000)
#define ISP_RSO_Y_COEF_GB_WOMASK        (0x00000000)
#define ISP_RSO_Y_COEF_GB_UNUSED_MASK   (0xFFFC0000)
#define ISP_RSO_Y_COEF_GB_y_coef_gb_OFFSET (0x00000000)
#define ISP_RSO_Y_COEF_GB_y_coef_gb_WIDTH (18)
#define ISP_RSO_Y_COEF_GB_y_coef_gb_MASK (0x0003FFFF)

/*
* Register : ISP_RSO_X_SLANT_ORIGIN
*/

#define ISP_RSO_X_SLANT_ORIGIN_SIZE     (16)
#define ISP_RSO_X_SLANT_ORIGIN_OFFSET   (pictorv2_in_ISP_RSO_BASE_ADDR + 0x1a)
#define ISP_RSO_X_SLANT_ORIGIN_RESET_VALUE (0x0000)
#define ISP_RSO_X_SLANT_ORIGIN_BITFIELD_MASK (0x1FFF)
#define ISP_RSO_X_SLANT_ORIGIN_RWMASK   (0x1FFF)
#define ISP_RSO_X_SLANT_ORIGIN_ROMASK   (0x0000)
#define ISP_RSO_X_SLANT_ORIGIN_WOMASK   (0x0000)
#define ISP_RSO_X_SLANT_ORIGIN_UNUSED_MASK (0xE000)
#define ISP_RSO_X_SLANT_ORIGIN_x_slant_origin_OFFSET (0x0000)
#define ISP_RSO_X_SLANT_ORIGIN_x_slant_origin_WIDTH (13)
#define ISP_RSO_X_SLANT_ORIGIN_x_slant_origin_MASK (0x1FFF)

/*
* Register : ISP_RSO_Y_SLANT_ORIGIN
*/

#define ISP_RSO_Y_SLANT_ORIGIN_SIZE     (16)
#define ISP_RSO_Y_SLANT_ORIGIN_OFFSET   (pictorv2_in_ISP_RSO_BASE_ADDR + 0x1c)
#define ISP_RSO_Y_SLANT_ORIGIN_RESET_VALUE (0x0000)
#define ISP_RSO_Y_SLANT_ORIGIN_BITFIELD_MASK (0x1FFF)
#define ISP_RSO_Y_SLANT_ORIGIN_RWMASK   (0x1FFF)
#define ISP_RSO_Y_SLANT_ORIGIN_ROMASK   (0x0000)
#define ISP_RSO_Y_SLANT_ORIGIN_WOMASK   (0x0000)
#define ISP_RSO_Y_SLANT_ORIGIN_UNUSED_MASK (0xE000)
#define ISP_RSO_Y_SLANT_ORIGIN_y_slant_origin_OFFSET (0x0000)
#define ISP_RSO_Y_SLANT_ORIGIN_y_slant_origin_WIDTH (13)
#define ISP_RSO_Y_SLANT_ORIGIN_y_slant_origin_MASK (0x1FFF)


/*
* Address Block : ISP_FLEXTF_LINEAR
*/

#define pictorv2_in_ISP_FLEXTF_LINEAR_BASE_ADDR             (0x3c0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_FLEXTF_LINEAR_ENABLE
*/

#define ISP_FLEXTF_LINEAR_ENABLE_SIZE (8)
#define ISP_FLEXTF_LINEAR_ENABLE_OFFSET (pictorv2_in_ISP_FLEXTF_LINEAR_BASE_ADDR + 0x00)
#define ISP_FLEXTF_LINEAR_ENABLE_RESET_VALUE (0x00)
#define ISP_FLEXTF_LINEAR_ENABLE_BITFIELD_MASK (0x11)
#define ISP_FLEXTF_LINEAR_ENABLE_RWMASK (0x11)
#define ISP_FLEXTF_LINEAR_ENABLE_ROMASK (0x00)
#define ISP_FLEXTF_LINEAR_ENABLE_WOMASK (0x00)
#define ISP_FLEXTF_LINEAR_ENABLE_UNUSED_MASK (0xEE)
#define ISP_FLEXTF_LINEAR_ENABLE_enable_OFFSET (0x00)
#define ISP_FLEXTF_LINEAR_ENABLE_enable_WIDTH (1)
#define ISP_FLEXTF_LINEAR_ENABLE_enable_MASK (0x01)
#define ISP_FLEXTF_LINEAR_ENABLE_enable_DISABLE (0x00)
#define ISP_FLEXTF_LINEAR_ENABLE_enable_ENABLE (0x01)
#define ISP_FLEXTF_LINEAR_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_FLEXTF_LINEAR_ENABLE_soft_reset_WIDTH (1)
#define ISP_FLEXTF_LINEAR_ENABLE_soft_reset_MASK (0x10)
#define ISP_FLEXTF_LINEAR_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_FLEXTF_LINEAR_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR
*/

#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_SIZE (16)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_OFFSET (pictorv2_in_ISP_FLEXTF_LINEAR_BASE_ADDR + 0x02)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_RESET_VALUE (0x00)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_BITFIELD_MASK (0xFFFF)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_RWMASK (0xFFFF)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_ROMASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_WOMASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_UNUSED_MASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_last_elt_green_gir_OFFSET (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_last_elt_green_gir_WIDTH (16)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GREEN_GIR_last_elt_green_gir_MASK (0xFFFF)

/*
* Register : ISP_FLEXTF_LINEAR_LAST_ELT_RED
*/

#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_SIZE (16)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_OFFSET (pictorv2_in_ISP_FLEXTF_LINEAR_BASE_ADDR + 0x04)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_RESET_VALUE (0x00)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_BITFIELD_MASK (0xFFFF)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_RWMASK (0xFFFF)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_ROMASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_WOMASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_UNUSED_MASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_last_elt_red_OFFSET (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_last_elt_red_WIDTH (16)
#define ISP_FLEXTF_LINEAR_LAST_ELT_RED_last_elt_red_MASK (0xFFFF)

/*
* Register : ISP_FLEXTF_LINEAR_LAST_ELT_BLUE
*/

#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_SIZE (16)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_OFFSET (pictorv2_in_ISP_FLEXTF_LINEAR_BASE_ADDR + 0x06)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_RESET_VALUE (0x00)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_BITFIELD_MASK (0xFFFF)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_RWMASK (0xFFFF)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_ROMASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_WOMASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_UNUSED_MASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_last_elt_blue_OFFSET (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_last_elt_blue_WIDTH (16)
#define ISP_FLEXTF_LINEAR_LAST_ELT_BLUE_last_elt_blue_MASK (0xFFFF)

/*
* Register : ISP_FLEXTF_LINEAR_LAST_ELT_GIB
*/

#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_SIZE (16)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_OFFSET (pictorv2_in_ISP_FLEXTF_LINEAR_BASE_ADDR + 0x08)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_RESET_VALUE (0x00)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_BITFIELD_MASK (0xFFFF)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_RWMASK (0xFFFF)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_ROMASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_WOMASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_UNUSED_MASK (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_last_elt_gib_OFFSET (0x0000)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_last_elt_gib_WIDTH (16)
#define ISP_FLEXTF_LINEAR_LAST_ELT_GIB_last_elt_gib_MASK (0xFFFF)

/*
* Register : ISP_FLEXTF_LINEAR_PIXELIN_SHIFT
*/

#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_SIZE (16)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_OFFSET (pictorv2_in_ISP_FLEXTF_LINEAR_BASE_ADDR + 0x0a)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_RESET_VALUE (0x00)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_BITFIELD_MASK (0x0007)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_RWMASK (0x0007)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_ROMASK (0x0000)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_WOMASK (0x0000)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_UNUSED_MASK (0xFFF8)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_pixel_shift_OFFSET (0x0000)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_pixel_shift_WIDTH (3)
#define ISP_FLEXTF_LINEAR_PIXELIN_SHIFT_pixel_shift_MASK (0x0007)


/*
* Address Block : ISP_GRIDIRON
*/

#define pictorv2_in_ISP_GRIDIRON_BASE_ADDR                  (0x3d0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_GRIDIRON_ENABLE
*/

#define ISP_GRIDIRON_ENABLE_SIZE   (8)
#define ISP_GRIDIRON_ENABLE_OFFSET (pictorv2_in_ISP_GRIDIRON_BASE_ADDR + 0x00)
#define ISP_GRIDIRON_ENABLE_RESET_VALUE (0x00)
#define ISP_GRIDIRON_ENABLE_BITFIELD_MASK (0x11)
#define ISP_GRIDIRON_ENABLE_RWMASK (0x11)
#define ISP_GRIDIRON_ENABLE_ROMASK (0x00)
#define ISP_GRIDIRON_ENABLE_WOMASK (0x00)
#define ISP_GRIDIRON_ENABLE_UNUSED_MASK (0xEE)
#define ISP_GRIDIRON_ENABLE_enable_gridiron_OFFSET (0x00)
#define ISP_GRIDIRON_ENABLE_enable_gridiron_WIDTH (1)
#define ISP_GRIDIRON_ENABLE_enable_gridiron_MASK (0x01)
#define ISP_GRIDIRON_ENABLE_enable_gridiron_DISABLE (0x00)
#define ISP_GRIDIRON_ENABLE_enable_gridiron_ENABLE (0x01)
#define ISP_GRIDIRON_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_GRIDIRON_ENABLE_soft_reset_WIDTH (1)
#define ISP_GRIDIRON_ENABLE_soft_reset_MASK (0x10)
#define ISP_GRIDIRON_ENABLE_soft_reset_INACTIVE (0x00)
#define ISP_GRIDIRON_ENABLE_soft_reset_ACTIVE (0x01)

/*
* Register : ISP_GRIDIRON_CTRL
*/

#define ISP_GRIDIRON_CTRL_SIZE     (32)
#define ISP_GRIDIRON_CTRL_OFFSET   (pictorv2_in_ISP_GRIDIRON_BASE_ADDR + 0x02)
#define ISP_GRIDIRON_CTRL_RESET_VALUE (0x00000000)
#define ISP_GRIDIRON_CTRL_BITFIELD_MASK (0x010F010F)
#define ISP_GRIDIRON_CTRL_RWMASK   (0x010F010F)
#define ISP_GRIDIRON_CTRL_ROMASK   (0x00000000)
#define ISP_GRIDIRON_CTRL_WOMASK   (0x00000000)
#define ISP_GRIDIRON_CTRL_UNUSED_MASK (0xFEF0FEF0)
#define ISP_GRIDIRON_CTRL_loggridpitch_OFFSET (0x00000000)
#define ISP_GRIDIRON_CTRL_loggridpitch_WIDTH (4)
#define ISP_GRIDIRON_CTRL_loggridpitch_MASK (0x0000000F)
#define ISP_GRIDIRON_CTRL_mem_init_OFFSET (0x00000008)
#define ISP_GRIDIRON_CTRL_mem_init_WIDTH (1)
#define ISP_GRIDIRON_CTRL_mem_init_MASK (0x00000100)
#define ISP_GRIDIRON_CTRL_mem_init_B_0x0 (0x00000000)
#define ISP_GRIDIRON_CTRL_mem_init_B_0x1 (0x00000001)
#define ISP_GRIDIRON_CTRL_en_cast0_OFFSET (0x00000010)
#define ISP_GRIDIRON_CTRL_en_cast0_WIDTH (1)
#define ISP_GRIDIRON_CTRL_en_cast0_MASK (0x00010000)
#define ISP_GRIDIRON_CTRL_en_cast0_DISABLE (0x00000000)
#define ISP_GRIDIRON_CTRL_en_cast0_ENABLE (0x00000001)
#define ISP_GRIDIRON_CTRL_en_cast1_OFFSET (0x00000011)
#define ISP_GRIDIRON_CTRL_en_cast1_WIDTH (1)
#define ISP_GRIDIRON_CTRL_en_cast1_MASK (0x00020000)
#define ISP_GRIDIRON_CTRL_en_cast1_DISABLE (0x00000000)
#define ISP_GRIDIRON_CTRL_en_cast1_ENABLE (0x00000001)
#define ISP_GRIDIRON_CTRL_en_cast2_OFFSET (0x00000012)
#define ISP_GRIDIRON_CTRL_en_cast2_WIDTH (1)
#define ISP_GRIDIRON_CTRL_en_cast2_MASK (0x00040000)
#define ISP_GRIDIRON_CTRL_en_cast2_DISABLE (0x00000000)
#define ISP_GRIDIRON_CTRL_en_cast2_ENABLE (0x00000001)
#define ISP_GRIDIRON_CTRL_en_cast3_OFFSET (0x00000013)
#define ISP_GRIDIRON_CTRL_en_cast3_WIDTH (1)
#define ISP_GRIDIRON_CTRL_en_cast3_MASK (0x00080000)
#define ISP_GRIDIRON_CTRL_en_cast3_DISABLE (0x00000000)
#define ISP_GRIDIRON_CTRL_en_cast3_ENABLE (0x00000001)
#define ISP_GRIDIRON_CTRL_super_sensitive_OFFSET (0x00000018)
#define ISP_GRIDIRON_CTRL_super_sensitive_WIDTH (1)
#define ISP_GRIDIRON_CTRL_super_sensitive_MASK (0x01000000)
#define ISP_GRIDIRON_CTRL_super_sensitive_NORMAL (0x00000000)
#define ISP_GRIDIRON_CTRL_super_sensitive_SUPERSENSITIVE (0x00000001)

/*
* Register : ISP_GRIDIRON_CR_START
*/

#define ISP_GRIDIRON_CR_START_SIZE (32)
#define ISP_GRIDIRON_CR_START_OFFSET (pictorv2_in_ISP_GRIDIRON_BASE_ADDR + 0x04)
#define ISP_GRIDIRON_CR_START_RESET_VALUE (0x00000000)
#define ISP_GRIDIRON_CR_START_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_GRIDIRON_CR_START_RWMASK (0xFFFFFFFF)
#define ISP_GRIDIRON_CR_START_ROMASK (0x00000000)
#define ISP_GRIDIRON_CR_START_WOMASK (0x00000000)
#define ISP_GRIDIRON_CR_START_UNUSED_MASK (0x00000000)
#define ISP_GRIDIRON_CR_START_cr_h_start_OFFSET (0x00000000)
#define ISP_GRIDIRON_CR_START_cr_h_start_WIDTH (16)
#define ISP_GRIDIRON_CR_START_cr_h_start_MASK (0x0000FFFF)
#define ISP_GRIDIRON_CR_START_cr_v_start_OFFSET (0x00000010)
#define ISP_GRIDIRON_CR_START_cr_v_start_WIDTH (16)
#define ISP_GRIDIRON_CR_START_cr_v_start_MASK (0xFFFF0000)

/*
* Register : ISP_GRIDIRON_IM_SIZE
*/

#define ISP_GRIDIRON_IM_SIZE_SIZE  (32)
#define ISP_GRIDIRON_IM_SIZE_OFFSET (pictorv2_in_ISP_GRIDIRON_BASE_ADDR + 0x06)
#define ISP_GRIDIRON_IM_SIZE_RESET_VALUE (0x00000000)
#define ISP_GRIDIRON_IM_SIZE_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_GRIDIRON_IM_SIZE_RWMASK (0xFFFFFFFF)
#define ISP_GRIDIRON_IM_SIZE_ROMASK (0x00000000)
#define ISP_GRIDIRON_IM_SIZE_WOMASK (0x00000000)
#define ISP_GRIDIRON_IM_SIZE_UNUSED_MASK (0x00000000)
#define ISP_GRIDIRON_IM_SIZE_im_h_size_OFFSET (0x00000000)
#define ISP_GRIDIRON_IM_SIZE_im_h_size_WIDTH (16)
#define ISP_GRIDIRON_IM_SIZE_im_h_size_MASK (0x0000FFFF)
#define ISP_GRIDIRON_IM_SIZE_im_v_size_OFFSET (0x00000010)
#define ISP_GRIDIRON_IM_SIZE_im_v_size_WIDTH (16)
#define ISP_GRIDIRON_IM_SIZE_im_v_size_MASK (0xFFFF0000)

/*
* Register : ISP_GRIDIRON_SENSOR_SIZE
*/

#define ISP_GRIDIRON_SENSOR_SIZE_SIZE (16)
#define ISP_GRIDIRON_SENSOR_SIZE_OFFSET (pictorv2_in_ISP_GRIDIRON_BASE_ADDR + 0x08)
#define ISP_GRIDIRON_SENSOR_SIZE_RESET_VALUE (0x0000)
#define ISP_GRIDIRON_SENSOR_SIZE_BITFIELD_MASK (0xFFFF)
#define ISP_GRIDIRON_SENSOR_SIZE_RWMASK (0xFFFF)
#define ISP_GRIDIRON_SENSOR_SIZE_ROMASK (0x0000)
#define ISP_GRIDIRON_SENSOR_SIZE_WOMASK (0x0000)
#define ISP_GRIDIRON_SENSOR_SIZE_UNUSED_MASK (0x0000)
#define ISP_GRIDIRON_SENSOR_SIZE_sensor_h_size_OFFSET (0x0000)
#define ISP_GRIDIRON_SENSOR_SIZE_sensor_h_size_WIDTH (16)
#define ISP_GRIDIRON_SENSOR_SIZE_sensor_h_size_MASK (0xFFFF)

/*
* Register : ISP_GRIDIRON_SCALE
*/

#define ISP_GRIDIRON_SCALE_SIZE    (32)
#define ISP_GRIDIRON_SCALE_OFFSET  (pictorv2_in_ISP_GRIDIRON_BASE_ADDR + 0x0a)
#define ISP_GRIDIRON_SCALE_RESET_VALUE (0x01000100)
#define ISP_GRIDIRON_SCALE_BITFIELD_MASK (0x0FFF0FFF)
#define ISP_GRIDIRON_SCALE_RWMASK  (0x0FFF0FFF)
#define ISP_GRIDIRON_SCALE_ROMASK  (0x00000000)
#define ISP_GRIDIRON_SCALE_WOMASK  (0x00000000)
#define ISP_GRIDIRON_SCALE_UNUSED_MASK (0xF000F000)
#define ISP_GRIDIRON_SCALE_hscale_OFFSET (0x00000000)
#define ISP_GRIDIRON_SCALE_hscale_WIDTH (12)
#define ISP_GRIDIRON_SCALE_hscale_MASK (0x00000FFF)
#define ISP_GRIDIRON_SCALE_vscale_OFFSET (0x00000010)
#define ISP_GRIDIRON_SCALE_vscale_WIDTH (12)
#define ISP_GRIDIRON_SCALE_vscale_MASK (0x0FFF0000)

/*
* Register : ISP_GRIDIRON_LIVE_CAST_PHASE
*/

#define ISP_GRIDIRON_LIVE_CAST_PHASE_SIZE (8)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_OFFSET (pictorv2_in_ISP_GRIDIRON_BASE_ADDR + 0x0c)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_RESET_VALUE (0x00)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_BITFIELD_MASK (0xFF)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_RWMASK (0xFF)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_ROMASK (0x00)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_WOMASK (0x00)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_UNUSED_MASK (0x00)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_fphase_OFFSET (0x00)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_fphase_WIDTH (8)
#define ISP_GRIDIRON_LIVE_CAST_PHASE_fphase_MASK (0xFF)

/*
* Register : ISP_GRIDIRON_PIX_ORDER
*/

#define ISP_GRIDIRON_PIX_ORDER_SIZE (8)
#define ISP_GRIDIRON_PIX_ORDER_OFFSET (pictorv2_in_ISP_GRIDIRON_BASE_ADDR + 0x0e)
#define ISP_GRIDIRON_PIX_ORDER_RESET_VALUE (0x04)
#define ISP_GRIDIRON_PIX_ORDER_BITFIELD_MASK (0x07)
#define ISP_GRIDIRON_PIX_ORDER_RWMASK (0x07)
#define ISP_GRIDIRON_PIX_ORDER_ROMASK (0x00)
#define ISP_GRIDIRON_PIX_ORDER_WOMASK (0x00)
#define ISP_GRIDIRON_PIX_ORDER_UNUSED_MASK (0xF8)
#define ISP_GRIDIRON_PIX_ORDER_hor_flip_OFFSET (0x00)
#define ISP_GRIDIRON_PIX_ORDER_hor_flip_WIDTH (1)
#define ISP_GRIDIRON_PIX_ORDER_hor_flip_MASK (0x01)
#define ISP_GRIDIRON_PIX_ORDER_hor_flip_DISABLE (0x00)
#define ISP_GRIDIRON_PIX_ORDER_hor_flip_ENABLE (0x01)
#define ISP_GRIDIRON_PIX_ORDER_ver_flip_OFFSET (0x01)
#define ISP_GRIDIRON_PIX_ORDER_ver_flip_WIDTH (1)
#define ISP_GRIDIRON_PIX_ORDER_ver_flip_MASK (0x02)
#define ISP_GRIDIRON_PIX_ORDER_ver_flip_DISABLE (0x00)
#define ISP_GRIDIRON_PIX_ORDER_ver_flip_ENABLE (0x01)
#define ISP_GRIDIRON_PIX_ORDER_wr_pix_order_OFFSET (0x02)
#define ISP_GRIDIRON_PIX_ORDER_wr_pix_order_WIDTH (1)
#define ISP_GRIDIRON_PIX_ORDER_wr_pix_order_MASK (0x04)
#define ISP_GRIDIRON_PIX_ORDER_wr_pix_order_DISABLE (0x00)
#define ISP_GRIDIRON_PIX_ORDER_wr_pix_order_ENABLE (0x01)


/*
* Address Block : ISP_CHG
*/

#define pictorv2_in_ISP_CHG_BASE_ADDR                       (0x3f0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CHG_ENABLE
*/

#define ISP_CHG_ENABLE_SIZE             (8)
#define ISP_CHG_ENABLE_OFFSET           (pictorv2_in_ISP_CHG_BASE_ADDR + 0x00)
#define ISP_CHG_ENABLE_RESET_VALUE      (0x00)
#define ISP_CHG_ENABLE_BITFIELD_MASK    (0x11)
#define ISP_CHG_ENABLE_RWMASK           (0x11)
#define ISP_CHG_ENABLE_ROMASK           (0x00)
#define ISP_CHG_ENABLE_WOMASK           (0x00)
#define ISP_CHG_ENABLE_UNUSED_MASK      (0xEE)
#define ISP_CHG_ENABLE_chg_enable_OFFSET (0x00)
#define ISP_CHG_ENABLE_chg_enable_WIDTH (1)
#define ISP_CHG_ENABLE_chg_enable_MASK  (0x01)
#define ISP_CHG_ENABLE_chg_enable_DISABLE (0x00)
#define ISP_CHG_ENABLE_chg_enable_ENABLE (0x01)
#define ISP_CHG_ENABLE_chg_soft_reset_OFFSET (0x04)
#define ISP_CHG_ENABLE_chg_soft_reset_WIDTH (1)
#define ISP_CHG_ENABLE_chg_soft_reset_MASK (0x10)
#define ISP_CHG_ENABLE_chg_soft_reset_DISABLE_SOFT_RESET (0x00)
#define ISP_CHG_ENABLE_chg_soft_reset_ENABLE_SOFT_RESET (0x01)

/*
* Register : ISP_CHG_SHADOW_COMPS
*/

#define ISP_CHG_SHADOW_COMPS_SIZE       (8)
#define ISP_CHG_SHADOW_COMPS_OFFSET     (pictorv2_in_ISP_CHG_BASE_ADDR + 0x02)
#define ISP_CHG_SHADOW_COMPS_RESET_VALUE (0x00)
#define ISP_CHG_SHADOW_COMPS_BITFIELD_MASK (0x01)
#define ISP_CHG_SHADOW_COMPS_RWMASK     (0x01)
#define ISP_CHG_SHADOW_COMPS_ROMASK     (0x00)
#define ISP_CHG_SHADOW_COMPS_WOMASK     (0x00)
#define ISP_CHG_SHADOW_COMPS_UNUSED_MASK (0xFE)
#define ISP_CHG_SHADOW_COMPS_shadow_comps_OFFSET (0x00)
#define ISP_CHG_SHADOW_COMPS_shadow_comps_WIDTH (1)
#define ISP_CHG_SHADOW_COMPS_shadow_comps_MASK (0x01)
#define ISP_CHG_SHADOW_COMPS_shadow_comps_DISABLE_SHADOW (0x00)
#define ISP_CHG_SHADOW_COMPS_shadow_comps_ENABLE_SHADOW (0x01)

/*
* Register : ISP_CHG_G1_COMP
*/

#define ISP_CHG_G1_COMP_SIZE            (16)
#define ISP_CHG_G1_COMP_OFFSET          (pictorv2_in_ISP_CHG_BASE_ADDR + 0x04)
#define ISP_CHG_G1_COMP_RESET_VALUE     (0x100)
#define ISP_CHG_G1_COMP_BITFIELD_MASK   (0x0FFF)
#define ISP_CHG_G1_COMP_RWMASK          (0x0FFF)
#define ISP_CHG_G1_COMP_ROMASK          (0x0000)
#define ISP_CHG_G1_COMP_WOMASK          (0x0000)
#define ISP_CHG_G1_COMP_UNUSED_MASK     (0xF000)
#define ISP_CHG_G1_COMP_g1_comp_OFFSET  (0x0000)
#define ISP_CHG_G1_COMP_g1_comp_WIDTH   (12)
#define ISP_CHG_G1_COMP_g1_comp_MASK    (0x0FFF)

/*
* Register : ISP_CHG_R_COMP
*/

#define ISP_CHG_R_COMP_SIZE             (16)
#define ISP_CHG_R_COMP_OFFSET           (pictorv2_in_ISP_CHG_BASE_ADDR + 0x06)
#define ISP_CHG_R_COMP_RESET_VALUE      (0x100)
#define ISP_CHG_R_COMP_BITFIELD_MASK    (0x0FFF)
#define ISP_CHG_R_COMP_RWMASK           (0x0FFF)
#define ISP_CHG_R_COMP_ROMASK           (0x0000)
#define ISP_CHG_R_COMP_WOMASK           (0x0000)
#define ISP_CHG_R_COMP_UNUSED_MASK      (0xF000)
#define ISP_CHG_R_COMP_r_comp_OFFSET    (0x0000)
#define ISP_CHG_R_COMP_r_comp_WIDTH     (12)
#define ISP_CHG_R_COMP_r_comp_MASK      (0x0FFF)

/*
* Register : ISP_CHG_B_COMP
*/

#define ISP_CHG_B_COMP_SIZE             (16)
#define ISP_CHG_B_COMP_OFFSET           (pictorv2_in_ISP_CHG_BASE_ADDR + 0x08)
#define ISP_CHG_B_COMP_RESET_VALUE      (0x100)
#define ISP_CHG_B_COMP_BITFIELD_MASK    (0x0FFF)
#define ISP_CHG_B_COMP_RWMASK           (0x0FFF)
#define ISP_CHG_B_COMP_ROMASK           (0x0000)
#define ISP_CHG_B_COMP_WOMASK           (0x0000)
#define ISP_CHG_B_COMP_UNUSED_MASK      (0xF000)
#define ISP_CHG_B_COMP_b_comp_OFFSET    (0x0000)
#define ISP_CHG_B_COMP_b_comp_WIDTH     (12)
#define ISP_CHG_B_COMP_b_comp_MASK      (0x0FFF)

/*
* Register : ISP_CHG_G2_COMP
*/

#define ISP_CHG_G2_COMP_SIZE            (16)
#define ISP_CHG_G2_COMP_OFFSET          (pictorv2_in_ISP_CHG_BASE_ADDR + 0x0a)
#define ISP_CHG_G2_COMP_RESET_VALUE     (0x100)
#define ISP_CHG_G2_COMP_BITFIELD_MASK   (0x0FFF)
#define ISP_CHG_G2_COMP_RWMASK          (0x0FFF)
#define ISP_CHG_G2_COMP_ROMASK          (0x0000)
#define ISP_CHG_G2_COMP_WOMASK          (0x0000)
#define ISP_CHG_G2_COMP_UNUSED_MASK     (0xF000)
#define ISP_CHG_G2_COMP_g2_comp_OFFSET  (0x0000)
#define ISP_CHG_G2_COMP_g2_comp_WIDTH   (12)
#define ISP_CHG_G2_COMP_g2_comp_MASK    (0x0FFF)


/*
* Address Block : ISP_SNAIL_SCORPIO
*/

#define pictorv2_in_ISP_SNAIL_SCORPIO_BASE_ADDR             (0x400U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_SNAIL_SCORPIO_ENABLE
*/

#define ISP_SNAIL_SCORPIO_ENABLE_SIZE (8)
#define ISP_SNAIL_SCORPIO_ENABLE_OFFSET (pictorv2_in_ISP_SNAIL_SCORPIO_BASE_ADDR + 0x00)
#define ISP_SNAIL_SCORPIO_ENABLE_RESET_VALUE (0x01)
#define ISP_SNAIL_SCORPIO_ENABLE_BITFIELD_MASK (0x11)
#define ISP_SNAIL_SCORPIO_ENABLE_RWMASK (0x11)
#define ISP_SNAIL_SCORPIO_ENABLE_ROMASK (0x00)
#define ISP_SNAIL_SCORPIO_ENABLE_WOMASK (0x00)
#define ISP_SNAIL_SCORPIO_ENABLE_UNUSED_MASK (0xEE)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_SNAIL_SCORPIO_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_SCORPIO
*/

#define pictorv2_in_ISP_SCORPIO_BASE_ADDR                   (0x410U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_SCORPIO_ENABLE
*/

#define ISP_SCORPIO_ENABLE_SIZE     (8)
#define ISP_SCORPIO_ENABLE_OFFSET   (pictorv2_in_ISP_SCORPIO_BASE_ADDR + 0x00)
#define ISP_SCORPIO_ENABLE_RESET_VALUE (0x00)
#define ISP_SCORPIO_ENABLE_BITFIELD_MASK (0x03)
#define ISP_SCORPIO_ENABLE_RWMASK   (0x01)
#define ISP_SCORPIO_ENABLE_ROMASK   (0x02)
#define ISP_SCORPIO_ENABLE_WOMASK   (0x00)
#define ISP_SCORPIO_ENABLE_UNUSED_MASK (0xFC)
#define ISP_SCORPIO_ENABLE_scorpio_enable_req_OFFSET (0x00)
#define ISP_SCORPIO_ENABLE_scorpio_enable_req_WIDTH (1)
#define ISP_SCORPIO_ENABLE_scorpio_enable_req_MASK (0x01)
#define ISP_SCORPIO_ENABLE_scorpio_enable_req_DISABLE (0x00)
#define ISP_SCORPIO_ENABLE_scorpio_enable_req_ENABLE (0x01)
#define ISP_SCORPIO_ENABLE_scorpio_enable_status_OFFSET (0x01)
#define ISP_SCORPIO_ENABLE_scorpio_enable_status_WIDTH (1)
#define ISP_SCORPIO_ENABLE_scorpio_enable_status_MASK (0x02)

/*
* Register : ISP_SCORPIO_CONTROL
*/

#define ISP_SCORPIO_CONTROL_SIZE    (8)
#define ISP_SCORPIO_CONTROL_OFFSET  (pictorv2_in_ISP_SCORPIO_BASE_ADDR + 0x02)
#define ISP_SCORPIO_CONTROL_RESET_VALUE (0x00)
#define ISP_SCORPIO_CONTROL_BITFIELD_MASK (0x01)
#define ISP_SCORPIO_CONTROL_RWMASK  (0x01)
#define ISP_SCORPIO_CONTROL_ROMASK  (0x00)
#define ISP_SCORPIO_CONTROL_WOMASK  (0x00)
#define ISP_SCORPIO_CONTROL_UNUSED_MASK (0xFE)
#define ISP_SCORPIO_CONTROL_scorpio_soft_reset_OFFSET (0x00)
#define ISP_SCORPIO_CONTROL_scorpio_soft_reset_WIDTH (1)
#define ISP_SCORPIO_CONTROL_scorpio_soft_reset_MASK (0x01)
#define ISP_SCORPIO_CONTROL_scorpio_soft_reset_DISABLE (0x00)
#define ISP_SCORPIO_CONTROL_scorpio_soft_reset_ENABLE (0x01)

/*
* Register : ISP_SCORPIO_CORING_LVL_REQ
*/

#define ISP_SCORPIO_CORING_LVL_REQ_SIZE (8)
#define ISP_SCORPIO_CORING_LVL_REQ_OFFSET (pictorv2_in_ISP_SCORPIO_BASE_ADDR + 0x04)
#define ISP_SCORPIO_CORING_LVL_REQ_RESET_VALUE (0x00)
#define ISP_SCORPIO_CORING_LVL_REQ_BITFIELD_MASK (0xFF)
#define ISP_SCORPIO_CORING_LVL_REQ_RWMASK (0xFF)
#define ISP_SCORPIO_CORING_LVL_REQ_ROMASK (0x00)
#define ISP_SCORPIO_CORING_LVL_REQ_WOMASK (0x00)
#define ISP_SCORPIO_CORING_LVL_REQ_UNUSED_MASK (0x00)
#define ISP_SCORPIO_CORING_LVL_REQ_scorpio_coring_level_req_OFFSET (0x00)
#define ISP_SCORPIO_CORING_LVL_REQ_scorpio_coring_level_req_WIDTH (8)
#define ISP_SCORPIO_CORING_LVL_REQ_scorpio_coring_level_req_MASK (0xFF)

/*
* Register : ISP_SCORPIO_CORING_LVL_STATUS
*/

#define ISP_SCORPIO_CORING_LVL_STATUS_SIZE (8)
#define ISP_SCORPIO_CORING_LVL_STATUS_OFFSET (pictorv2_in_ISP_SCORPIO_BASE_ADDR + 0x06)
#define ISP_SCORPIO_CORING_LVL_STATUS_RESET_VALUE (0x00)
#define ISP_SCORPIO_CORING_LVL_STATUS_BITFIELD_MASK (0xFF)
#define ISP_SCORPIO_CORING_LVL_STATUS_RWMASK (0x00)
#define ISP_SCORPIO_CORING_LVL_STATUS_ROMASK (0xFF)
#define ISP_SCORPIO_CORING_LVL_STATUS_WOMASK (0x00)
#define ISP_SCORPIO_CORING_LVL_STATUS_UNUSED_MASK (0x00)
#define ISP_SCORPIO_CORING_LVL_STATUS_scorpio_coring_level_status_OFFSET (0x00)
#define ISP_SCORPIO_CORING_LVL_STATUS_scorpio_coring_level_status_WIDTH (8)
#define ISP_SCORPIO_CORING_LVL_STATUS_scorpio_coring_level_status_MASK (0xFF)


/*
* Address Block : ISP_SNAIL_DUSTER
*/

#define pictorv2_in_ISP_SNAIL_DUSTER_BASE_ADDR              (0x420U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_SNAIL_DUSTER_ENABLE
*/

#define ISP_SNAIL_DUSTER_ENABLE_SIZE (8)
#define ISP_SNAIL_DUSTER_ENABLE_OFFSET (pictorv2_in_ISP_SNAIL_DUSTER_BASE_ADDR + 0x00)
#define ISP_SNAIL_DUSTER_ENABLE_RESET_VALUE (0x01)
#define ISP_SNAIL_DUSTER_ENABLE_BITFIELD_MASK (0x11)
#define ISP_SNAIL_DUSTER_ENABLE_RWMASK (0x11)
#define ISP_SNAIL_DUSTER_ENABLE_ROMASK (0x00)
#define ISP_SNAIL_DUSTER_ENABLE_WOMASK (0x00)
#define ISP_SNAIL_DUSTER_ENABLE_UNUSED_MASK (0xEE)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_SNAIL_DUSTER_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_BAYER_STORE_POST_GAIN
*/

#define pictorv2_in_ISP_BAYER_STORE_POST_GAIN_BASE_ADDR     (0x440U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_BAYER_STORE_POST_GAIN_ENABLE
*/

#define ISP_BAYER_STORE_POST_GAIN_ENABLE_SIZE (8)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_OFFSET (pictorv2_in_ISP_BAYER_STORE_POST_GAIN_BASE_ADDR + 0x00)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_RESET_VALUE (0x00)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_BITFIELD_MASK (0x11)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_RWMASK (0x11)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_ROMASK (0x00)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_WOMASK (0x00)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_UNUSED_MASK (0xEE)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_BAYER_STORE_POST_GAIN_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_BAYER_STORE_POST_GAIN_SELECT
*/

#define ISP_BAYER_STORE_POST_GAIN_SELECT_SIZE (8)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_OFFSET (pictorv2_in_ISP_BAYER_STORE_POST_GAIN_BASE_ADDR + 0x02)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_RESET_VALUE (0x00)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_BITFIELD_MASK (0x11)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_RWMASK (0x11)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_ROMASK (0x00)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_WOMASK (0x00)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_UNUSED_MASK (0xEE)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_select_WIDTH (1)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_select_MASK (0x01)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_BAYER_STORE_POST_GAIN_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_ITPOINT_RE_IN
*/

#define pictorv2_in_ISP_ITPOINT_RE_IN_BASE_ADDR             (0x450U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_ITPOINT_RE_IN_ENABLE
*/

#define ISP_ITPOINT_RE_IN_ENABLE_SIZE (8)
#define ISP_ITPOINT_RE_IN_ENABLE_OFFSET (pictorv2_in_ISP_ITPOINT_RE_IN_BASE_ADDR + 0x00)
#define ISP_ITPOINT_RE_IN_ENABLE_RESET_VALUE (0x00)
#define ISP_ITPOINT_RE_IN_ENABLE_BITFIELD_MASK (0x11)
#define ISP_ITPOINT_RE_IN_ENABLE_RWMASK (0x11)
#define ISP_ITPOINT_RE_IN_ENABLE_ROMASK (0x00)
#define ISP_ITPOINT_RE_IN_ENABLE_WOMASK (0x00)
#define ISP_ITPOINT_RE_IN_ENABLE_UNUSED_MASK (0xEE)
#define ISP_ITPOINT_RE_IN_ENABLE_enable_OFFSET (0x00)
#define ISP_ITPOINT_RE_IN_ENABLE_enable_WIDTH (1)
#define ISP_ITPOINT_RE_IN_ENABLE_enable_MASK (0x01)
#define ISP_ITPOINT_RE_IN_ENABLE_enable_DISABLE (0x00)
#define ISP_ITPOINT_RE_IN_ENABLE_enable_ENABLE (0x01)
#define ISP_ITPOINT_RE_IN_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_ITPOINT_RE_IN_ENABLE_soft_reset_WIDTH (1)
#define ISP_ITPOINT_RE_IN_ENABLE_soft_reset_MASK (0x10)
#define ISP_ITPOINT_RE_IN_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_ITPOINT_RE_IN_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_ITPOINT_RE_IN_PIX_POS
*/

#define ISP_ITPOINT_RE_IN_PIX_POS_SIZE (16)
#define ISP_ITPOINT_RE_IN_PIX_POS_OFFSET (pictorv2_in_ISP_ITPOINT_RE_IN_BASE_ADDR + 0x02)
#define ISP_ITPOINT_RE_IN_PIX_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RE_IN_PIX_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RE_IN_PIX_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_RE_IN_PIX_POS_ROMASK (0x0000)
#define ISP_ITPOINT_RE_IN_PIX_POS_WOMASK (0x0000)
#define ISP_ITPOINT_RE_IN_PIX_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RE_IN_PIX_POS_pix_pos_OFFSET (0x0000)
#define ISP_ITPOINT_RE_IN_PIX_POS_pix_pos_WIDTH (13)
#define ISP_ITPOINT_RE_IN_PIX_POS_pix_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RE_IN_LINE_POS
*/

#define ISP_ITPOINT_RE_IN_LINE_POS_SIZE (16)
#define ISP_ITPOINT_RE_IN_LINE_POS_OFFSET (pictorv2_in_ISP_ITPOINT_RE_IN_BASE_ADDR + 0x04)
#define ISP_ITPOINT_RE_IN_LINE_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RE_IN_LINE_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RE_IN_LINE_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_RE_IN_LINE_POS_ROMASK (0x0000)
#define ISP_ITPOINT_RE_IN_LINE_POS_WOMASK (0x0000)
#define ISP_ITPOINT_RE_IN_LINE_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RE_IN_LINE_POS_line_pos_OFFSET (0x0000)
#define ISP_ITPOINT_RE_IN_LINE_POS_line_pos_WIDTH (13)
#define ISP_ITPOINT_RE_IN_LINE_POS_line_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RE_IN_PIX_CNT
*/

#define ISP_ITPOINT_RE_IN_PIX_CNT_SIZE (16)
#define ISP_ITPOINT_RE_IN_PIX_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RE_IN_BASE_ADDR + 0x06)
#define ISP_ITPOINT_RE_IN_PIX_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RE_IN_PIX_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RE_IN_PIX_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_RE_IN_PIX_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_RE_IN_PIX_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_RE_IN_PIX_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RE_IN_PIX_CNT_pix_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_RE_IN_PIX_CNT_pix_cnt_WIDTH (13)
#define ISP_ITPOINT_RE_IN_PIX_CNT_pix_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RE_IN_LINE_CNT
*/

#define ISP_ITPOINT_RE_IN_LINE_CNT_SIZE (16)
#define ISP_ITPOINT_RE_IN_LINE_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RE_IN_BASE_ADDR + 0x08)
#define ISP_ITPOINT_RE_IN_LINE_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RE_IN_LINE_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RE_IN_LINE_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_RE_IN_LINE_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_RE_IN_LINE_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_RE_IN_LINE_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RE_IN_LINE_CNT_line_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_RE_IN_LINE_CNT_line_cnt_WIDTH (13)
#define ISP_ITPOINT_RE_IN_LINE_CNT_line_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RE_IN_FRAME_CNT
*/

#define ISP_ITPOINT_RE_IN_FRAME_CNT_SIZE (8)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RE_IN_BASE_ADDR + 0x0a)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_RESET_VALUE (0x00)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_BITFIELD_MASK (0xFF)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_RWMASK (0x00)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_ROMASK (0xFF)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_WOMASK (0x00)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_UNUSED_MASK (0x00)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_frame_cnt_OFFSET (0x00)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_frame_cnt_WIDTH (8)
#define ISP_ITPOINT_RE_IN_FRAME_CNT_frame_cnt_MASK (0xFF)

/*
* Register : ISP_ITPOINT_RE_IN_DFV
*/

#define ISP_ITPOINT_RE_IN_DFV_SIZE (8)
#define ISP_ITPOINT_RE_IN_DFV_OFFSET (pictorv2_in_ISP_ITPOINT_RE_IN_BASE_ADDR + 0x0c)
#define ISP_ITPOINT_RE_IN_DFV_RESET_VALUE (0x00)
#define ISP_ITPOINT_RE_IN_DFV_BITFIELD_MASK (0x03)
#define ISP_ITPOINT_RE_IN_DFV_RWMASK (0x03)
#define ISP_ITPOINT_RE_IN_DFV_ROMASK (0x00)
#define ISP_ITPOINT_RE_IN_DFV_WOMASK (0x00)
#define ISP_ITPOINT_RE_IN_DFV_UNUSED_MASK (0xFC)
#define ISP_ITPOINT_RE_IN_DFV_dfv_enable_OFFSET (0x00)
#define ISP_ITPOINT_RE_IN_DFV_dfv_enable_WIDTH (1)
#define ISP_ITPOINT_RE_IN_DFV_dfv_enable_MASK (0x01)
#define ISP_ITPOINT_RE_IN_DFV_dfv_enable_DISABLE (0x00)
#define ISP_ITPOINT_RE_IN_DFV_dfv_enable_ENABLE (0x01)
#define ISP_ITPOINT_RE_IN_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_ITPOINT_RE_IN_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_ITPOINT_RE_IN_DFV_dfv_interrupt_ctrl_MASK (0x02)


/*
* Address Block : ISP_ITPOINT_POST_GAIN
*/

#define pictorv2_in_ISP_ITPOINT_POST_GAIN_BASE_ADDR         (0x460U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_ITPOINT_POST_GAIN_ENABLE
*/

#define ISP_ITPOINT_POST_GAIN_ENABLE_SIZE (8)
#define ISP_ITPOINT_POST_GAIN_ENABLE_OFFSET (pictorv2_in_ISP_ITPOINT_POST_GAIN_BASE_ADDR + 0x00)
#define ISP_ITPOINT_POST_GAIN_ENABLE_RESET_VALUE (0x00)
#define ISP_ITPOINT_POST_GAIN_ENABLE_BITFIELD_MASK (0x11)
#define ISP_ITPOINT_POST_GAIN_ENABLE_RWMASK (0x11)
#define ISP_ITPOINT_POST_GAIN_ENABLE_ROMASK (0x00)
#define ISP_ITPOINT_POST_GAIN_ENABLE_WOMASK (0x00)
#define ISP_ITPOINT_POST_GAIN_ENABLE_UNUSED_MASK (0xEE)
#define ISP_ITPOINT_POST_GAIN_ENABLE_enable_OFFSET (0x00)
#define ISP_ITPOINT_POST_GAIN_ENABLE_enable_WIDTH (1)
#define ISP_ITPOINT_POST_GAIN_ENABLE_enable_MASK (0x01)
#define ISP_ITPOINT_POST_GAIN_ENABLE_enable_DISABLE (0x00)
#define ISP_ITPOINT_POST_GAIN_ENABLE_enable_ENABLE (0x01)
#define ISP_ITPOINT_POST_GAIN_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_ITPOINT_POST_GAIN_ENABLE_soft_reset_WIDTH (1)
#define ISP_ITPOINT_POST_GAIN_ENABLE_soft_reset_MASK (0x10)
#define ISP_ITPOINT_POST_GAIN_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_ITPOINT_POST_GAIN_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_ITPOINT_POST_GAIN_PIX_POS
*/

#define ISP_ITPOINT_POST_GAIN_PIX_POS_SIZE (16)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_OFFSET (pictorv2_in_ISP_ITPOINT_POST_GAIN_BASE_ADDR + 0x02)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_ROMASK (0x0000)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_WOMASK (0x0000)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_pix_pos_OFFSET (0x0000)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_pix_pos_WIDTH (13)
#define ISP_ITPOINT_POST_GAIN_PIX_POS_pix_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_POST_GAIN_LINE_POS
*/

#define ISP_ITPOINT_POST_GAIN_LINE_POS_SIZE (16)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_OFFSET (pictorv2_in_ISP_ITPOINT_POST_GAIN_BASE_ADDR + 0x04)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_ROMASK (0x0000)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_WOMASK (0x0000)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_line_pos_OFFSET (0x0000)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_line_pos_WIDTH (13)
#define ISP_ITPOINT_POST_GAIN_LINE_POS_line_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_POST_GAIN_PIX_CNT
*/

#define ISP_ITPOINT_POST_GAIN_PIX_CNT_SIZE (16)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_POST_GAIN_BASE_ADDR + 0x06)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_pix_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_pix_cnt_WIDTH (13)
#define ISP_ITPOINT_POST_GAIN_PIX_CNT_pix_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_POST_GAIN_LINE_CNT
*/

#define ISP_ITPOINT_POST_GAIN_LINE_CNT_SIZE (16)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_POST_GAIN_BASE_ADDR + 0x08)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_line_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_line_cnt_WIDTH (13)
#define ISP_ITPOINT_POST_GAIN_LINE_CNT_line_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_POST_GAIN_FRAME_CNT
*/

#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_SIZE (8)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_POST_GAIN_BASE_ADDR + 0x0a)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_RESET_VALUE (0x00)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_BITFIELD_MASK (0xFF)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_RWMASK (0x00)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_ROMASK (0xFF)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_WOMASK (0x00)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_UNUSED_MASK (0x00)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_frame_cnt_OFFSET (0x00)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_frame_cnt_WIDTH (8)
#define ISP_ITPOINT_POST_GAIN_FRAME_CNT_frame_cnt_MASK (0xFF)

/*
* Register : ISP_ITPOINT_POST_GAIN_DFV
*/

#define ISP_ITPOINT_POST_GAIN_DFV_SIZE (8)
#define ISP_ITPOINT_POST_GAIN_DFV_OFFSET (pictorv2_in_ISP_ITPOINT_POST_GAIN_BASE_ADDR + 0x0c)
#define ISP_ITPOINT_POST_GAIN_DFV_RESET_VALUE (0x00)
#define ISP_ITPOINT_POST_GAIN_DFV_BITFIELD_MASK (0x03)
#define ISP_ITPOINT_POST_GAIN_DFV_RWMASK (0x03)
#define ISP_ITPOINT_POST_GAIN_DFV_ROMASK (0x00)
#define ISP_ITPOINT_POST_GAIN_DFV_WOMASK (0x00)
#define ISP_ITPOINT_POST_GAIN_DFV_UNUSED_MASK (0xFC)
#define ISP_ITPOINT_POST_GAIN_DFV_dfv_enable_OFFSET (0x00)
#define ISP_ITPOINT_POST_GAIN_DFV_dfv_enable_WIDTH (1)
#define ISP_ITPOINT_POST_GAIN_DFV_dfv_enable_MASK (0x01)
#define ISP_ITPOINT_POST_GAIN_DFV_dfv_enable_DISABLE (0x00)
#define ISP_ITPOINT_POST_GAIN_DFV_dfv_enable_ENABLE (0x01)
#define ISP_ITPOINT_POST_GAIN_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_ITPOINT_POST_GAIN_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_ITPOINT_POST_GAIN_DFV_dfv_interrupt_ctrl_MASK (0x02)


/*
* Address Block : ISP_ITPOINT_RE_OUT_STORE
*/

#define pictorv2_in_ISP_ITPOINT_RE_OUT_STORE_BASE_ADDR      (0x470U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_ITPOINT_RE_OUT_STORE_ENABLE
*/

#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_SIZE (8)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_OFFSET (pictorv2_in_ISP_ITPOINT_RE_OUT_STORE_BASE_ADDR + 0x00)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_RESET_VALUE (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_BITFIELD_MASK (0x11)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_RWMASK (0x11)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_ROMASK (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_WOMASK (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_UNUSED_MASK (0xEE)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_enable_OFFSET (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_enable_WIDTH (1)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_enable_MASK (0x01)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_enable_DISABLE (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_enable_ENABLE (0x01)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_soft_reset_WIDTH (1)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_soft_reset_MASK (0x10)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_ITPOINT_RE_OUT_STORE_PIX_POS
*/

#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_SIZE (16)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_OFFSET (pictorv2_in_ISP_ITPOINT_RE_OUT_STORE_BASE_ADDR + 0x02)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_ROMASK (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_WOMASK (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_pix_pos_OFFSET (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_pix_pos_WIDTH (13)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_POS_pix_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RE_OUT_STORE_LINE_POS
*/

#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_SIZE (16)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_OFFSET (pictorv2_in_ISP_ITPOINT_RE_OUT_STORE_BASE_ADDR + 0x04)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_ROMASK (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_WOMASK (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_line_pos_OFFSET (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_line_pos_WIDTH (13)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_POS_line_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RE_OUT_STORE_PIX_CNT
*/

#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_SIZE (16)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RE_OUT_STORE_BASE_ADDR + 0x06)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_pix_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_pix_cnt_WIDTH (13)
#define ISP_ITPOINT_RE_OUT_STORE_PIX_CNT_pix_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RE_OUT_STORE_LINE_CNT
*/

#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_SIZE (16)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RE_OUT_STORE_BASE_ADDR + 0x08)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_line_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_line_cnt_WIDTH (13)
#define ISP_ITPOINT_RE_OUT_STORE_LINE_CNT_line_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT
*/

#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_SIZE (8)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RE_OUT_STORE_BASE_ADDR + 0x0a)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_RESET_VALUE (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_BITFIELD_MASK (0xFF)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_RWMASK (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_ROMASK (0xFF)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_WOMASK (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_UNUSED_MASK (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_frame_cnt_OFFSET (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_frame_cnt_WIDTH (8)
#define ISP_ITPOINT_RE_OUT_STORE_FRAME_CNT_frame_cnt_MASK (0xFF)

/*
* Register : ISP_ITPOINT_RE_OUT_STORE_DFV
*/

#define ISP_ITPOINT_RE_OUT_STORE_DFV_SIZE (8)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_OFFSET (pictorv2_in_ISP_ITPOINT_RE_OUT_STORE_BASE_ADDR + 0x0c)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_RESET_VALUE (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_BITFIELD_MASK (0x03)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_RWMASK (0x03)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_ROMASK (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_WOMASK (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_UNUSED_MASK (0xFC)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_dfv_enable_OFFSET (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_dfv_enable_WIDTH (1)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_dfv_enable_MASK (0x01)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_dfv_enable_DISABLE (0x00)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_dfv_enable_ENABLE (0x01)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_ITPOINT_RE_OUT_STORE_DFV_dfv_interrupt_ctrl_MASK (0x02)


/*
* Address Block : ISP_DUSTER
*/

#define pictorv2_in_ISP_DUSTER_BASE_ADDR                    (0x480U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_DUSTER_ENABLE
*/

#define ISP_DUSTER_ENABLE_SIZE       (8)
#define ISP_DUSTER_ENABLE_OFFSET     (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x00)
#define ISP_DUSTER_ENABLE_RESET_VALUE (0x00)
#define ISP_DUSTER_ENABLE_BITFIELD_MASK (0x11)
#define ISP_DUSTER_ENABLE_RWMASK     (0x11)
#define ISP_DUSTER_ENABLE_ROMASK     (0x00)
#define ISP_DUSTER_ENABLE_WOMASK     (0x00)
#define ISP_DUSTER_ENABLE_UNUSED_MASK (0xEE)
#define ISP_DUSTER_ENABLE_duster_enable_OFFSET (0x00)
#define ISP_DUSTER_ENABLE_duster_enable_WIDTH (1)
#define ISP_DUSTER_ENABLE_duster_enable_MASK (0x01)
#define ISP_DUSTER_ENABLE_duster_enable_DISABLE (0x00)
#define ISP_DUSTER_ENABLE_duster_enable_ENABLE (0x01)
#define ISP_DUSTER_ENABLE_duster_soft_reset_OFFSET (0x04)
#define ISP_DUSTER_ENABLE_duster_soft_reset_WIDTH (1)
#define ISP_DUSTER_ENABLE_duster_soft_reset_MASK (0x10)

/*
* Register : ISP_DUSTER_DFV
*/

#define ISP_DUSTER_DFV_SIZE          (8)
#define ISP_DUSTER_DFV_OFFSET        (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x02)
#define ISP_DUSTER_DFV_RESET_VALUE   (0x00)
#define ISP_DUSTER_DFV_BITFIELD_MASK (0x03)
#define ISP_DUSTER_DFV_RWMASK        (0x03)
#define ISP_DUSTER_DFV_ROMASK        (0x00)
#define ISP_DUSTER_DFV_WOMASK        (0x00)
#define ISP_DUSTER_DFV_UNUSED_MASK   (0xFC)
#define ISP_DUSTER_DFV_duster_dfv_enable_OFFSET (0x00)
#define ISP_DUSTER_DFV_duster_dfv_enable_WIDTH (1)
#define ISP_DUSTER_DFV_duster_dfv_enable_MASK (0x01)
#define ISP_DUSTER_DFV_duster_dfv_enable_DISABLE (0x00)
#define ISP_DUSTER_DFV_duster_dfv_enable_ENABLE (0x01)
#define ISP_DUSTER_DFV_duster_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_DUSTER_DFV_duster_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_DUSTER_DFV_duster_dfv_interrupt_ctrl_MASK (0x02)

/*
* Register : ISP_DUSTER_SCYT_RANK_HI
*/

#define ISP_DUSTER_SCYT_RANK_HI_SIZE (8)
#define ISP_DUSTER_SCYT_RANK_HI_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x06)
#define ISP_DUSTER_SCYT_RANK_HI_RESET_VALUE (0x00)
#define ISP_DUSTER_SCYT_RANK_HI_BITFIELD_MASK (0x07)
#define ISP_DUSTER_SCYT_RANK_HI_RWMASK (0x07)
#define ISP_DUSTER_SCYT_RANK_HI_ROMASK (0x00)
#define ISP_DUSTER_SCYT_RANK_HI_WOMASK (0x00)
#define ISP_DUSTER_SCYT_RANK_HI_UNUSED_MASK (0xF8)
#define ISP_DUSTER_SCYT_RANK_HI_duster_scyt_rank_hi_OFFSET (0x00)
#define ISP_DUSTER_SCYT_RANK_HI_duster_scyt_rank_hi_WIDTH (3)
#define ISP_DUSTER_SCYT_RANK_HI_duster_scyt_rank_hi_MASK (0x07)

/*
* Register : ISP_DUSTER_SCYT_RANK_LO
*/

#define ISP_DUSTER_SCYT_RANK_LO_SIZE (8)
#define ISP_DUSTER_SCYT_RANK_LO_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x08)
#define ISP_DUSTER_SCYT_RANK_LO_RESET_VALUE (0x00)
#define ISP_DUSTER_SCYT_RANK_LO_BITFIELD_MASK (0x07)
#define ISP_DUSTER_SCYT_RANK_LO_RWMASK (0x07)
#define ISP_DUSTER_SCYT_RANK_LO_ROMASK (0x00)
#define ISP_DUSTER_SCYT_RANK_LO_WOMASK (0x00)
#define ISP_DUSTER_SCYT_RANK_LO_UNUSED_MASK (0xF8)
#define ISP_DUSTER_SCYT_RANK_LO_duster_scyt_rank_lo_OFFSET (0x00)
#define ISP_DUSTER_SCYT_RANK_LO_duster_scyt_rank_lo_WIDTH (3)
#define ISP_DUSTER_SCYT_RANK_LO_duster_scyt_rank_lo_MASK (0x07)

/*
* Register : ISP_DUSTER_SCYT_SMOOTH_HI
*/

#define ISP_DUSTER_SCYT_SMOOTH_HI_SIZE (8)
#define ISP_DUSTER_SCYT_SMOOTH_HI_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x0a)
#define ISP_DUSTER_SCYT_SMOOTH_HI_RESET_VALUE (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_HI_BITFIELD_MASK (0x0F)
#define ISP_DUSTER_SCYT_SMOOTH_HI_RWMASK (0x0F)
#define ISP_DUSTER_SCYT_SMOOTH_HI_ROMASK (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_HI_WOMASK (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_HI_UNUSED_MASK (0xF0)
#define ISP_DUSTER_SCYT_SMOOTH_HI_duster_scyt_smooth_hi_OFFSET (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_HI_duster_scyt_smooth_hi_WIDTH (4)
#define ISP_DUSTER_SCYT_SMOOTH_HI_duster_scyt_smooth_hi_MASK (0x0F)

/*
* Register : ISP_DUSTER_SCYT_SMOOTH_LO
*/

#define ISP_DUSTER_SCYT_SMOOTH_LO_SIZE (8)
#define ISP_DUSTER_SCYT_SMOOTH_LO_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x0c)
#define ISP_DUSTER_SCYT_SMOOTH_LO_RESET_VALUE (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_LO_BITFIELD_MASK (0x0F)
#define ISP_DUSTER_SCYT_SMOOTH_LO_RWMASK (0x0F)
#define ISP_DUSTER_SCYT_SMOOTH_LO_ROMASK (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_LO_WOMASK (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_LO_UNUSED_MASK (0xF0)
#define ISP_DUSTER_SCYT_SMOOTH_LO_duster_scyt_smooth_lo_OFFSET (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_LO_duster_scyt_smooth_lo_WIDTH (4)
#define ISP_DUSTER_SCYT_SMOOTH_LO_duster_scyt_smooth_lo_MASK (0x0F)

/*
* Register : ISP_DUSTER_BYPASS_CTRL
*/

#define ISP_DUSTER_BYPASS_CTRL_SIZE  (16)
#define ISP_DUSTER_BYPASS_CTRL_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x0e)
#define ISP_DUSTER_BYPASS_CTRL_RESET_VALUE (0x40)
#define ISP_DUSTER_BYPASS_CTRL_BITFIELD_MASK (0x037F)
#define ISP_DUSTER_BYPASS_CTRL_RWMASK (0x037F)
#define ISP_DUSTER_BYPASS_CTRL_ROMASK (0x0000)
#define ISP_DUSTER_BYPASS_CTRL_WOMASK (0x0000)
#define ISP_DUSTER_BYPASS_CTRL_UNUSED_MASK (0xFC80)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_bypass_OFFSET (0x0000)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_bypass_WIDTH (1)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_bypass_MASK (0x0001)
#define ISP_DUSTER_BYPASS_CTRL_duster_cc_bypass_OFFSET (0x0001)
#define ISP_DUSTER_BYPASS_CTRL_duster_cc_bypass_WIDTH (1)
#define ISP_DUSTER_BYPASS_CTRL_duster_cc_bypass_MASK (0x0002)
#define ISP_DUSTER_BYPASS_CTRL_duster_detect_cc_bypass_OFFSET (0x0002)
#define ISP_DUSTER_BYPASS_CTRL_duster_detect_cc_bypass_WIDTH (1)
#define ISP_DUSTER_BYPASS_CTRL_duster_detect_cc_bypass_MASK (0x0004)
#define ISP_DUSTER_BYPASS_CTRL_duster_defcor_bypass_OFFSET (0x0003)
#define ISP_DUSTER_BYPASS_CTRL_duster_defcor_bypass_WIDTH (1)
#define ISP_DUSTER_BYPASS_CTRL_duster_defcor_bypass_MASK (0x0008)
#define ISP_DUSTER_BYPASS_CTRL_duster_gaussian_bypass_OFFSET (0x0004)
#define ISP_DUSTER_BYPASS_CTRL_duster_gaussian_bypass_WIDTH (1)
#define ISP_DUSTER_BYPASS_CTRL_duster_gaussian_bypass_MASK (0x0010)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_use_simplified_OFFSET (0x0005)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_use_simplified_WIDTH (1)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_use_simplified_MASK (0x0020)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_enablegrad_OFFSET (0x0006)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_enablegrad_WIDTH (1)
#define ISP_DUSTER_BYPASS_CTRL_duster_rc_enablegrad_MASK (0x0040)
#define ISP_DUSTER_BYPASS_CTRL_duster_scythe_mode_OFFSET (0x0008)
#define ISP_DUSTER_BYPASS_CTRL_duster_scythe_mode_WIDTH (2)
#define ISP_DUSTER_BYPASS_CTRL_duster_scythe_mode_MASK (0x0300)
#define ISP_DUSTER_BYPASS_CTRL_duster_scythe_mode_SCYTHEMAP (0x0000)
#define ISP_DUSTER_BYPASS_CTRL_duster_scythe_mode_SCYTHEANDMAP (0x0001)
#define ISP_DUSTER_BYPASS_CTRL_duster_scythe_mode_BYPASSSCYTHE (0x0002)
#define ISP_DUSTER_BYPASS_CTRL_duster_scythe_mode_FORCESCYTHE (0x0003)

/*
* Register : ISP_DUSTER_CC_LOCAL_SIGMA_TH
*/

#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_SIZE (8)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x10)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_RESET_VALUE (0x10)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_BITFIELD_MASK (0xFF)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_RWMASK (0xFF)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_ROMASK (0x00)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_WOMASK (0x00)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_UNUSED_MASK (0x00)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_duster_cc_local_sigma_th_OFFSET (0x00)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_duster_cc_local_sigma_th_WIDTH (8)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_duster_cc_local_sigma_th_MASK (0xFF)

/*
* Register : ISP_DUSTER_RC_NORM_TH
*/

#define ISP_DUSTER_RC_NORM_TH_SIZE   (8)
#define ISP_DUSTER_RC_NORM_TH_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x12)
#define ISP_DUSTER_RC_NORM_TH_RESET_VALUE (0x10)
#define ISP_DUSTER_RC_NORM_TH_BITFIELD_MASK (0xFF)
#define ISP_DUSTER_RC_NORM_TH_RWMASK (0xFF)
#define ISP_DUSTER_RC_NORM_TH_ROMASK (0x00)
#define ISP_DUSTER_RC_NORM_TH_WOMASK (0x00)
#define ISP_DUSTER_RC_NORM_TH_UNUSED_MASK (0x00)
#define ISP_DUSTER_RC_NORM_TH_duster_rc_norm_th_OFFSET (0x00)
#define ISP_DUSTER_RC_NORM_TH_duster_rc_norm_th_WIDTH (8)
#define ISP_DUSTER_RC_NORM_TH_duster_rc_norm_th_MASK (0xFF)

/*
* Register : ISP_DUSTER_SIGMA_GAUSSIAN
*/

#define ISP_DUSTER_SIGMA_GAUSSIAN_SIZE (8)
#define ISP_DUSTER_SIGMA_GAUSSIAN_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x14)
#define ISP_DUSTER_SIGMA_GAUSSIAN_RESET_VALUE (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_BITFIELD_MASK (0xFF)
#define ISP_DUSTER_SIGMA_GAUSSIAN_RWMASK (0xFF)
#define ISP_DUSTER_SIGMA_GAUSSIAN_ROMASK (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_WOMASK (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_UNUSED_MASK (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_duster_sigma_gaussian_OFFSET (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_duster_sigma_gaussian_WIDTH (8)
#define ISP_DUSTER_SIGMA_GAUSSIAN_duster_sigma_gaussian_MASK (0xFF)

/*
* Register : ISP_DUSTER_GAUSSIAN_TH1
*/

#define ISP_DUSTER_GAUSSIAN_TH1_SIZE (16)
#define ISP_DUSTER_GAUSSIAN_TH1_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x16)
#define ISP_DUSTER_GAUSSIAN_TH1_RESET_VALUE (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH1_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH1_RWMASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH1_ROMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH1_WOMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH1_UNUSED_MASK (0xF000)
#define ISP_DUSTER_GAUSSIAN_TH1_DUSTER_GAUSSIAN_TH1_OFFSET (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH1_DUSTER_GAUSSIAN_TH1_WIDTH (12)
#define ISP_DUSTER_GAUSSIAN_TH1_DUSTER_GAUSSIAN_TH1_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_GAUSSIAN_TH2
*/

#define ISP_DUSTER_GAUSSIAN_TH2_SIZE (16)
#define ISP_DUSTER_GAUSSIAN_TH2_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x18)
#define ISP_DUSTER_GAUSSIAN_TH2_RESET_VALUE (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH2_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH2_RWMASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH2_ROMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH2_WOMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH2_UNUSED_MASK (0xF000)
#define ISP_DUSTER_GAUSSIAN_TH2_DUSTER_GAUSSIAN_TH2_OFFSET (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH2_DUSTER_GAUSSIAN_TH2_WIDTH (12)
#define ISP_DUSTER_GAUSSIAN_TH2_DUSTER_GAUSSIAN_TH2_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_GAUSSIAN_TH3
*/

#define ISP_DUSTER_GAUSSIAN_TH3_SIZE (16)
#define ISP_DUSTER_GAUSSIAN_TH3_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x1a)
#define ISP_DUSTER_GAUSSIAN_TH3_RESET_VALUE (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH3_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH3_RWMASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH3_ROMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH3_WOMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH3_UNUSED_MASK (0xF000)
#define ISP_DUSTER_GAUSSIAN_TH3_duster_gaussian_th3_OFFSET (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH3_duster_gaussian_th3_WIDTH (12)
#define ISP_DUSTER_GAUSSIAN_TH3_duster_gaussian_th3_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_S0
*/

#define ISP_DUSTER_S0_SIZE           (16)
#define ISP_DUSTER_S0_OFFSET         (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x1c)
#define ISP_DUSTER_S0_RESET_VALUE    (0x00)
#define ISP_DUSTER_S0_BITFIELD_MASK  (0x0FFF)
#define ISP_DUSTER_S0_RWMASK         (0x0FFF)
#define ISP_DUSTER_S0_ROMASK         (0x0000)
#define ISP_DUSTER_S0_WOMASK         (0x0000)
#define ISP_DUSTER_S0_UNUSED_MASK    (0xF000)
#define ISP_DUSTER_S0_duster_s0_OFFSET (0x0000)
#define ISP_DUSTER_S0_duster_s0_WIDTH (12)
#define ISP_DUSTER_S0_duster_s0_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_S1
*/

#define ISP_DUSTER_S1_SIZE           (16)
#define ISP_DUSTER_S1_OFFSET         (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x1e)
#define ISP_DUSTER_S1_RESET_VALUE    (0x00)
#define ISP_DUSTER_S1_BITFIELD_MASK  (0x0FFF)
#define ISP_DUSTER_S1_RWMASK         (0x0FFF)
#define ISP_DUSTER_S1_ROMASK         (0x0000)
#define ISP_DUSTER_S1_WOMASK         (0x0000)
#define ISP_DUSTER_S1_UNUSED_MASK    (0xF000)
#define ISP_DUSTER_S1_duster_s1_OFFSET (0x0000)
#define ISP_DUSTER_S1_duster_s1_WIDTH (12)
#define ISP_DUSTER_S1_duster_s1_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_S2
*/

#define ISP_DUSTER_S2_SIZE           (16)
#define ISP_DUSTER_S2_OFFSET         (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x20)
#define ISP_DUSTER_S2_RESET_VALUE    (0x0000)
#define ISP_DUSTER_S2_BITFIELD_MASK  (0x0FFF)
#define ISP_DUSTER_S2_RWMASK         (0x0FFF)
#define ISP_DUSTER_S2_ROMASK         (0x0000)
#define ISP_DUSTER_S2_WOMASK         (0x0000)
#define ISP_DUSTER_S2_UNUSED_MASK    (0xF000)
#define ISP_DUSTER_S2_duster_s2_OFFSET (0x0000)
#define ISP_DUSTER_S2_duster_s2_WIDTH (12)
#define ISP_DUSTER_S2_duster_s2_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_SIGMA_SAMPLES
*/

#define ISP_DUSTER_SIGMA_SAMPLES_SIZE (16)
#define ISP_DUSTER_SIGMA_SAMPLES_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x22)
#define ISP_DUSTER_SIGMA_SAMPLES_RESET_VALUE (0x0000)
#define ISP_DUSTER_SIGMA_SAMPLES_BITFIELD_MASK (0xFFFF)
#define ISP_DUSTER_SIGMA_SAMPLES_RWMASK (0x0000)
#define ISP_DUSTER_SIGMA_SAMPLES_ROMASK (0xFFFF)
#define ISP_DUSTER_SIGMA_SAMPLES_WOMASK (0x0000)
#define ISP_DUSTER_SIGMA_SAMPLES_UNUSED_MASK (0x0000)
#define ISP_DUSTER_SIGMA_SAMPLES_duster_sigma_samples_OFFSET (0x0000)
#define ISP_DUSTER_SIGMA_SAMPLES_duster_sigma_samples_WIDTH (16)
#define ISP_DUSTER_SIGMA_SAMPLES_duster_sigma_samples_MASK (0xFFFF)

/*
* Register : ISP_DUSTER_ZERO_SAMPLES
*/

#define ISP_DUSTER_ZERO_SAMPLES_SIZE (16)
#define ISP_DUSTER_ZERO_SAMPLES_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x24)
#define ISP_DUSTER_ZERO_SAMPLES_RESET_VALUE (0x0000)
#define ISP_DUSTER_ZERO_SAMPLES_BITFIELD_MASK (0xFFFF)
#define ISP_DUSTER_ZERO_SAMPLES_RWMASK (0x0000)
#define ISP_DUSTER_ZERO_SAMPLES_ROMASK (0xFFFF)
#define ISP_DUSTER_ZERO_SAMPLES_WOMASK (0x0000)
#define ISP_DUSTER_ZERO_SAMPLES_UNUSED_MASK (0x0000)
#define ISP_DUSTER_ZERO_SAMPLES_duster_zero_samples_OFFSET (0x0000)
#define ISP_DUSTER_ZERO_SAMPLES_duster_zero_samples_WIDTH (16)
#define ISP_DUSTER_ZERO_SAMPLES_duster_zero_samples_MASK (0xFFFF)

/*
* Register : ISP_DUSTER_NLE_HIST0
*/

#define ISP_DUSTER_NLE_HIST0_SIZE    (16)
#define ISP_DUSTER_NLE_HIST0_OFFSET  (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x26)
#define ISP_DUSTER_NLE_HIST0_RESET_VALUE (0x0000)
#define ISP_DUSTER_NLE_HIST0_BITFIELD_MASK (0xFFFF)
#define ISP_DUSTER_NLE_HIST0_RWMASK  (0x0000)
#define ISP_DUSTER_NLE_HIST0_ROMASK  (0xFFFF)
#define ISP_DUSTER_NLE_HIST0_WOMASK  (0x0000)
#define ISP_DUSTER_NLE_HIST0_UNUSED_MASK (0x0000)
#define ISP_DUSTER_NLE_HIST0_duster_nle_hist0_OFFSET (0x0000)
#define ISP_DUSTER_NLE_HIST0_duster_nle_hist0_WIDTH (16)
#define ISP_DUSTER_NLE_HIST0_duster_nle_hist0_MASK (0xFFFF)

/*
* Register : ISP_DUSTER_NLE_HIST1
*/

#define ISP_DUSTER_NLE_HIST1_SIZE    (16)
#define ISP_DUSTER_NLE_HIST1_OFFSET  (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x28)
#define ISP_DUSTER_NLE_HIST1_RESET_VALUE (0x0000)
#define ISP_DUSTER_NLE_HIST1_BITFIELD_MASK (0xFFFF)
#define ISP_DUSTER_NLE_HIST1_RWMASK  (0x0000)
#define ISP_DUSTER_NLE_HIST1_ROMASK  (0xFFFF)
#define ISP_DUSTER_NLE_HIST1_WOMASK  (0x0000)
#define ISP_DUSTER_NLE_HIST1_UNUSED_MASK (0x0000)
#define ISP_DUSTER_NLE_HIST1_duster_nle_hist1_OFFSET (0x0000)
#define ISP_DUSTER_NLE_HIST1_duster_nle_hist1_WIDTH (16)
#define ISP_DUSTER_NLE_HIST1_duster_nle_hist1_MASK (0xFFFF)

/*
* Register : ISP_DUSTER_ENABLE_STATUS
*/

#define ISP_DUSTER_ENABLE_STATUS_SIZE (8)
#define ISP_DUSTER_ENABLE_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x2a)
#define ISP_DUSTER_ENABLE_STATUS_RESET_VALUE (0x00)
#define ISP_DUSTER_ENABLE_STATUS_BITFIELD_MASK (0x01)
#define ISP_DUSTER_ENABLE_STATUS_RWMASK (0x00)
#define ISP_DUSTER_ENABLE_STATUS_ROMASK (0x01)
#define ISP_DUSTER_ENABLE_STATUS_WOMASK (0x00)
#define ISP_DUSTER_ENABLE_STATUS_UNUSED_MASK (0xFE)
#define ISP_DUSTER_ENABLE_STATUS_duster_enable_status_OFFSET (0x00)
#define ISP_DUSTER_ENABLE_STATUS_duster_enable_status_WIDTH (1)
#define ISP_DUSTER_ENABLE_STATUS_duster_enable_status_MASK (0x01)

/*
* Register : ISP_DUSTER_SCYT_RANK_HI_STATUS
*/

#define ISP_DUSTER_SCYT_RANK_HI_STATUS_SIZE (8)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x2e)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_RESET_VALUE (0x00)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_BITFIELD_MASK (0x07)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_RWMASK (0x00)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_ROMASK (0x07)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_WOMASK (0x00)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_UNUSED_MASK (0xF8)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_duster_scyt_rank_hi_status_OFFSET (0x00)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_duster_scyt_rank_hi_status_WIDTH (3)
#define ISP_DUSTER_SCYT_RANK_HI_STATUS_duster_scyt_rank_hi_status_MASK (0x07)

/*
* Register : ISP_DUSTER_SCYT_RANK_LO_STATUS
*/

#define ISP_DUSTER_SCYT_RANK_LO_STATUS_SIZE (8)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x30)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_RESET_VALUE (0x00)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_BITFIELD_MASK (0x07)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_RWMASK (0x00)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_ROMASK (0x07)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_WOMASK (0x00)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_UNUSED_MASK (0xF8)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_duster_scyt_rank_lo_status_OFFSET (0x00)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_duster_scyt_rank_lo_status_WIDTH (3)
#define ISP_DUSTER_SCYT_RANK_LO_STATUS_duster_scyt_rank_lo_status_MASK (0x07)

/*
* Register : ISP_DUSTER_SCYT_SMOOTH_HI_STATUS
*/

#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_SIZE (8)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x32)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_RESET_VALUE (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_BITFIELD_MASK (0x0F)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_RWMASK (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_ROMASK (0x0F)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_WOMASK (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_UNUSED_MASK (0xF0)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_duster_scyt_smooth_hi_status_OFFSET (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_duster_scyt_smooth_hi_status_WIDTH (4)
#define ISP_DUSTER_SCYT_SMOOTH_HI_STATUS_duster_scyt_smooth_hi_status_MASK (0x0F)

/*
* Register : ISP_DUSTER_SCYT_SMOOTH_LO_STATUS
*/

#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_SIZE (8)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x34)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_RESET_VALUE (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_BITFIELD_MASK (0x0F)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_RWMASK (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_ROMASK (0x0F)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_WOMASK (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_UNUSED_MASK (0xF0)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_duster_scyt_smooth_lo_status_OFFSET (0x00)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_duster_scyt_smooth_lo_status_WIDTH (4)
#define ISP_DUSTER_SCYT_SMOOTH_LO_STATUS_duster_scyt_smooth_lo_status_MASK (0x0F)

/*
* Register : ISP_DUSTER_BYPASS_STATUS
*/

#define ISP_DUSTER_BYPASS_STATUS_SIZE (8)
#define ISP_DUSTER_BYPASS_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x36)
#define ISP_DUSTER_BYPASS_STATUS_RESET_VALUE (0x40)
#define ISP_DUSTER_BYPASS_STATUS_BITFIELD_MASK (0x7F)
#define ISP_DUSTER_BYPASS_STATUS_RWMASK (0x00)
#define ISP_DUSTER_BYPASS_STATUS_ROMASK (0x7F)
#define ISP_DUSTER_BYPASS_STATUS_WOMASK (0x00)
#define ISP_DUSTER_BYPASS_STATUS_UNUSED_MASK (0x80)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_bypass_status_OFFSET (0x00)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_bypass_status_WIDTH (1)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_bypass_status_MASK (0x01)
#define ISP_DUSTER_BYPASS_STATUS_duster_cc_bypass_status_OFFSET (0x01)
#define ISP_DUSTER_BYPASS_STATUS_duster_cc_bypass_status_WIDTH (1)
#define ISP_DUSTER_BYPASS_STATUS_duster_cc_bypass_status_MASK (0x02)
#define ISP_DUSTER_BYPASS_STATUS_duster_detect_cc_bypass_status_OFFSET (0x02)
#define ISP_DUSTER_BYPASS_STATUS_duster_detect_cc_bypass_status_WIDTH (1)
#define ISP_DUSTER_BYPASS_STATUS_duster_detect_cc_bypass_status_MASK (0x04)
#define ISP_DUSTER_BYPASS_STATUS_duster_defcor_bypass_status_OFFSET (0x03)
#define ISP_DUSTER_BYPASS_STATUS_duster_defcor_bypass_status_WIDTH (1)
#define ISP_DUSTER_BYPASS_STATUS_duster_defcor_bypass_status_MASK (0x08)
#define ISP_DUSTER_BYPASS_STATUS_duster_gaussian_bypass_status_OFFSET (0x04)
#define ISP_DUSTER_BYPASS_STATUS_duster_gaussian_bypass_status_WIDTH (1)
#define ISP_DUSTER_BYPASS_STATUS_duster_gaussian_bypass_status_MASK (0x10)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_use_simplified_status_OFFSET (0x05)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_use_simplified_status_WIDTH (1)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_use_simplified_status_MASK (0x20)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_enablegrad_status_OFFSET (0x06)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_enablegrad_status_WIDTH (1)
#define ISP_DUSTER_BYPASS_STATUS_duster_rc_enablegrad_status_MASK (0x40)

/*
* Register : ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS
*/

#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_SIZE (8)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x38)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_RESET_VALUE (0x10)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_BITFIELD_MASK (0xFF)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_RWMASK (0x00)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_ROMASK (0xFF)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_WOMASK (0x00)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_UNUSED_MASK (0x00)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_duster_cc_local_sigma_th_status_OFFSET (0x00)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_duster_cc_local_sigma_th_status_WIDTH (8)
#define ISP_DUSTER_CC_LOCAL_SIGMA_TH_STATUS_duster_cc_local_sigma_th_status_MASK (0xFF)

/*
* Register : ISP_DUSTER_RC_NORM_TH_STATUS
*/

#define ISP_DUSTER_RC_NORM_TH_STATUS_SIZE (8)
#define ISP_DUSTER_RC_NORM_TH_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x3a)
#define ISP_DUSTER_RC_NORM_TH_STATUS_RESET_VALUE (0x10)
#define ISP_DUSTER_RC_NORM_TH_STATUS_BITFIELD_MASK (0xFF)
#define ISP_DUSTER_RC_NORM_TH_STATUS_RWMASK (0x00)
#define ISP_DUSTER_RC_NORM_TH_STATUS_ROMASK (0xFF)
#define ISP_DUSTER_RC_NORM_TH_STATUS_WOMASK (0x00)
#define ISP_DUSTER_RC_NORM_TH_STATUS_UNUSED_MASK (0x00)
#define ISP_DUSTER_RC_NORM_TH_STATUS_duster_rc_norm_th_status_OFFSET (0x00)
#define ISP_DUSTER_RC_NORM_TH_STATUS_duster_rc_norm_th_status_WIDTH (8)
#define ISP_DUSTER_RC_NORM_TH_STATUS_duster_rc_norm_th_status_MASK (0xFF)

/*
* Register : ISP_DUSTER_SIGMA_GAUSSIAN_STATUS
*/

#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_SIZE (8)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x3c)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_RESET_VALUE (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_BITFIELD_MASK (0xFF)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_RWMASK (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_ROMASK (0xFF)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_WOMASK (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_UNUSED_MASK (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_duster_sigma_gaussian_status_OFFSET (0x00)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_duster_sigma_gaussian_status_WIDTH (8)
#define ISP_DUSTER_SIGMA_GAUSSIAN_STATUS_duster_sigma_gaussian_status_MASK (0xFF)

/*
* Register : ISP_DUSTER_GAUSSIAN_TH1_STATUS
*/

#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_SIZE (16)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x3e)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_RESET_VALUE (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_RWMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_ROMASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_WOMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_UNUSED_MASK (0xF000)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_DUSTER_GAUSSIAN_TH1_status_OFFSET (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_DUSTER_GAUSSIAN_TH1_status_WIDTH (12)
#define ISP_DUSTER_GAUSSIAN_TH1_STATUS_DUSTER_GAUSSIAN_TH1_status_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_GAUSSIAN_TH2_STATUS
*/

#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_SIZE (16)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x40)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_RESET_VALUE (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_RWMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_ROMASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_WOMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_UNUSED_MASK (0xF000)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_DUSTER_GAUSSIAN_TH2_status_OFFSET (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_DUSTER_GAUSSIAN_TH2_status_WIDTH (12)
#define ISP_DUSTER_GAUSSIAN_TH2_STATUS_DUSTER_GAUSSIAN_TH2_status_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_GAUSSIAN_TH3_STATUS
*/

#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_SIZE (16)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_OFFSET (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x42)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_RESET_VALUE (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_RWMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_ROMASK (0x0FFF)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_WOMASK (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_UNUSED_MASK (0xF000)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_duster_gaussian_th3_status_OFFSET (0x0000)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_duster_gaussian_th3_status_WIDTH (12)
#define ISP_DUSTER_GAUSSIAN_TH3_STATUS_duster_gaussian_th3_status_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_S0_STATUS
*/

#define ISP_DUSTER_S0_STATUS_SIZE    (16)
#define ISP_DUSTER_S0_STATUS_OFFSET  (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x44)
#define ISP_DUSTER_S0_STATUS_RESET_VALUE (0x00)
#define ISP_DUSTER_S0_STATUS_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_S0_STATUS_RWMASK  (0x0000)
#define ISP_DUSTER_S0_STATUS_ROMASK  (0x0FFF)
#define ISP_DUSTER_S0_STATUS_WOMASK  (0x0000)
#define ISP_DUSTER_S0_STATUS_UNUSED_MASK (0xF000)
#define ISP_DUSTER_S0_STATUS_duster_s0_status_OFFSET (0x0000)
#define ISP_DUSTER_S0_STATUS_duster_s0_status_WIDTH (12)
#define ISP_DUSTER_S0_STATUS_duster_s0_status_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_S1_STATUS
*/

#define ISP_DUSTER_S1_STATUS_SIZE    (16)
#define ISP_DUSTER_S1_STATUS_OFFSET  (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x46)
#define ISP_DUSTER_S1_STATUS_RESET_VALUE (0x00)
#define ISP_DUSTER_S1_STATUS_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_S1_STATUS_RWMASK  (0x0000)
#define ISP_DUSTER_S1_STATUS_ROMASK  (0x0FFF)
#define ISP_DUSTER_S1_STATUS_WOMASK  (0x0000)
#define ISP_DUSTER_S1_STATUS_UNUSED_MASK (0xF000)
#define ISP_DUSTER_S1_STATUS_duster_s1_status_OFFSET (0x0000)
#define ISP_DUSTER_S1_STATUS_duster_s1_status_WIDTH (12)
#define ISP_DUSTER_S1_STATUS_duster_s1_status_MASK (0x0FFF)

/*
* Register : ISP_DUSTER_S2_STATUS
*/

#define ISP_DUSTER_S2_STATUS_SIZE    (16)
#define ISP_DUSTER_S2_STATUS_OFFSET  (pictorv2_in_ISP_DUSTER_BASE_ADDR + 0x48)
#define ISP_DUSTER_S2_STATUS_RESET_VALUE (0x0000)
#define ISP_DUSTER_S2_STATUS_BITFIELD_MASK (0x0FFF)
#define ISP_DUSTER_S2_STATUS_RWMASK  (0x0000)
#define ISP_DUSTER_S2_STATUS_ROMASK  (0x0FFF)
#define ISP_DUSTER_S2_STATUS_WOMASK  (0x0000)
#define ISP_DUSTER_S2_STATUS_UNUSED_MASK (0xF000)
#define ISP_DUSTER_S2_STATUS_duster_s2_status_OFFSET (0x0000)
#define ISP_DUSTER_S2_STATUS_duster_s2_status_WIDTH (12)
#define ISP_DUSTER_S2_STATUS_duster_s2_status_MASK (0x0FFF)


/*
* Address Block : ISP_SNAIL_BINNING
*/

#define pictorv2_in_ISP_SNAIL_BINNING_BASE_ADDR             (0x500U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_SNAIL_BINNING_ENABLE
*/

#define ISP_SNAIL_BINNING_ENABLE_SIZE (8)
#define ISP_SNAIL_BINNING_ENABLE_OFFSET (pictorv2_in_ISP_SNAIL_BINNING_BASE_ADDR + 0x00)
#define ISP_SNAIL_BINNING_ENABLE_RESET_VALUE (0x01)
#define ISP_SNAIL_BINNING_ENABLE_BITFIELD_MASK (0x11)
#define ISP_SNAIL_BINNING_ENABLE_RWMASK (0x11)
#define ISP_SNAIL_BINNING_ENABLE_ROMASK (0x00)
#define ISP_SNAIL_BINNING_ENABLE_WOMASK (0x00)
#define ISP_SNAIL_BINNING_ENABLE_UNUSED_MASK (0xEE)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_SNAIL_BINNING_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_BINNING_REPAIR
*/

#define pictorv2_in_ISP_BINNING_REPAIR_BASE_ADDR            (0x510U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_BINNING_REPAIR_ENABLE
*/

#define ISP_BINNING_REPAIR_ENABLE_SIZE (8)
#define ISP_BINNING_REPAIR_ENABLE_OFFSET (pictorv2_in_ISP_BINNING_REPAIR_BASE_ADDR + 0x00)
#define ISP_BINNING_REPAIR_ENABLE_RESET_VALUE (0x00)
#define ISP_BINNING_REPAIR_ENABLE_BITFIELD_MASK (0x01)
#define ISP_BINNING_REPAIR_ENABLE_RWMASK (0x01)
#define ISP_BINNING_REPAIR_ENABLE_ROMASK (0x00)
#define ISP_BINNING_REPAIR_ENABLE_WOMASK (0x00)
#define ISP_BINNING_REPAIR_ENABLE_UNUSED_MASK (0xFE)
#define ISP_BINNING_REPAIR_ENABLE_binning_repair_enable_OFFSET (0x00)
#define ISP_BINNING_REPAIR_ENABLE_binning_repair_enable_WIDTH (1)
#define ISP_BINNING_REPAIR_ENABLE_binning_repair_enable_MASK (0x01)
#define ISP_BINNING_REPAIR_ENABLE_binning_repair_enable_DISABLE (0x00)
#define ISP_BINNING_REPAIR_ENABLE_binning_repair_enable_ENABLE (0x01)

/*
* Register : ISP_BINNING_REPAIR_CONTROL
*/

#define ISP_BINNING_REPAIR_CONTROL_SIZE (8)
#define ISP_BINNING_REPAIR_CONTROL_OFFSET (pictorv2_in_ISP_BINNING_REPAIR_BASE_ADDR + 0x02)
#define ISP_BINNING_REPAIR_CONTROL_RESET_VALUE (0x00)
#define ISP_BINNING_REPAIR_CONTROL_BITFIELD_MASK (0x31)
#define ISP_BINNING_REPAIR_CONTROL_RWMASK (0x31)
#define ISP_BINNING_REPAIR_CONTROL_ROMASK (0x00)
#define ISP_BINNING_REPAIR_CONTROL_WOMASK (0x00)
#define ISP_BINNING_REPAIR_CONTROL_UNUSED_MASK (0xCE)
#define ISP_BINNING_REPAIR_CONTROL_soft_reset_OFFSET (0x00)
#define ISP_BINNING_REPAIR_CONTROL_soft_reset_WIDTH (1)
#define ISP_BINNING_REPAIR_CONTROL_soft_reset_MASK (0x01)
#define ISP_BINNING_REPAIR_CONTROL_soft_reset_DISABLE (0x00)
#define ISP_BINNING_REPAIR_CONTROL_soft_reset_ENABLE (0x01)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_hjog_OFFSET (0x04)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_hjog_WIDTH (1)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_hjog_MASK (0x10)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_hjog_DISABLE (0x00)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_hjog_ENABLE (0x01)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_vjog_OFFSET (0x05)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_vjog_WIDTH (1)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_vjog_MASK (0x20)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_vjog_DISABLE (0x00)
#define ISP_BINNING_REPAIR_CONTROL_br_coef_vjog_ENABLE (0x01)

/*
* Register : ISP_BINNING_REPAIR_COEF00
*/

#define ISP_BINNING_REPAIR_COEF00_SIZE (8)
#define ISP_BINNING_REPAIR_COEF00_OFFSET (pictorv2_in_ISP_BINNING_REPAIR_BASE_ADDR + 0x04)
#define ISP_BINNING_REPAIR_COEF00_RESET_VALUE (0x01)
#define ISP_BINNING_REPAIR_COEF00_BITFIELD_MASK (0xFF)
#define ISP_BINNING_REPAIR_COEF00_RWMASK (0xFF)
#define ISP_BINNING_REPAIR_COEF00_ROMASK (0x00)
#define ISP_BINNING_REPAIR_COEF00_WOMASK (0x00)
#define ISP_BINNING_REPAIR_COEF00_UNUSED_MASK (0x00)
#define ISP_BINNING_REPAIR_COEF00_br_coef00_OFFSET (0x00)
#define ISP_BINNING_REPAIR_COEF00_br_coef00_WIDTH (8)
#define ISP_BINNING_REPAIR_COEF00_br_coef00_MASK (0xFF)

/*
* Register : ISP_BINNING_REPAIR_COEF01
*/

#define ISP_BINNING_REPAIR_COEF01_SIZE (8)
#define ISP_BINNING_REPAIR_COEF01_OFFSET (pictorv2_in_ISP_BINNING_REPAIR_BASE_ADDR + 0x06)
#define ISP_BINNING_REPAIR_COEF01_RESET_VALUE (0x07)
#define ISP_BINNING_REPAIR_COEF01_BITFIELD_MASK (0xFF)
#define ISP_BINNING_REPAIR_COEF01_RWMASK (0xFF)
#define ISP_BINNING_REPAIR_COEF01_ROMASK (0x00)
#define ISP_BINNING_REPAIR_COEF01_WOMASK (0x00)
#define ISP_BINNING_REPAIR_COEF01_UNUSED_MASK (0x00)
#define ISP_BINNING_REPAIR_COEF01_br_coef01_OFFSET (0x00)
#define ISP_BINNING_REPAIR_COEF01_br_coef01_WIDTH (8)
#define ISP_BINNING_REPAIR_COEF01_br_coef01_MASK (0xFF)

/*
* Register : ISP_BINNING_REPAIR_COEF10
*/

#define ISP_BINNING_REPAIR_COEF10_SIZE (8)
#define ISP_BINNING_REPAIR_COEF10_OFFSET (pictorv2_in_ISP_BINNING_REPAIR_BASE_ADDR + 0x08)
#define ISP_BINNING_REPAIR_COEF10_RESET_VALUE (0x07)
#define ISP_BINNING_REPAIR_COEF10_BITFIELD_MASK (0xFF)
#define ISP_BINNING_REPAIR_COEF10_RWMASK (0xFF)
#define ISP_BINNING_REPAIR_COEF10_ROMASK (0x00)
#define ISP_BINNING_REPAIR_COEF10_WOMASK (0x00)
#define ISP_BINNING_REPAIR_COEF10_UNUSED_MASK (0x00)
#define ISP_BINNING_REPAIR_COEF10_br_coef10_OFFSET (0x00)
#define ISP_BINNING_REPAIR_COEF10_br_coef10_WIDTH (8)
#define ISP_BINNING_REPAIR_COEF10_br_coef10_MASK (0xFF)

/*
* Register : ISP_BINNING_REPAIR_COEF11
*/

#define ISP_BINNING_REPAIR_COEF11_SIZE (8)
#define ISP_BINNING_REPAIR_COEF11_OFFSET (pictorv2_in_ISP_BINNING_REPAIR_BASE_ADDR + 0x0a)
#define ISP_BINNING_REPAIR_COEF11_RESET_VALUE (0x31)
#define ISP_BINNING_REPAIR_COEF11_BITFIELD_MASK (0xFF)
#define ISP_BINNING_REPAIR_COEF11_RWMASK (0xFF)
#define ISP_BINNING_REPAIR_COEF11_ROMASK (0x00)
#define ISP_BINNING_REPAIR_COEF11_WOMASK (0x00)
#define ISP_BINNING_REPAIR_COEF11_UNUSED_MASK (0x00)
#define ISP_BINNING_REPAIR_COEF11_br_coef11_OFFSET (0x00)
#define ISP_BINNING_REPAIR_COEF11_br_coef11_WIDTH (8)
#define ISP_BINNING_REPAIR_COEF11_br_coef11_MASK (0xFF)

/*
* Register : ISP_BINNING_REPAIR_COEF_SFT
*/

#define ISP_BINNING_REPAIR_COEF_SFT_SIZE (8)
#define ISP_BINNING_REPAIR_COEF_SFT_OFFSET (pictorv2_in_ISP_BINNING_REPAIR_BASE_ADDR + 0x0c)
#define ISP_BINNING_REPAIR_COEF_SFT_RESET_VALUE (0x05)
#define ISP_BINNING_REPAIR_COEF_SFT_BITFIELD_MASK (0x07)
#define ISP_BINNING_REPAIR_COEF_SFT_RWMASK (0x07)
#define ISP_BINNING_REPAIR_COEF_SFT_ROMASK (0x00)
#define ISP_BINNING_REPAIR_COEF_SFT_WOMASK (0x00)
#define ISP_BINNING_REPAIR_COEF_SFT_UNUSED_MASK (0xF8)
#define ISP_BINNING_REPAIR_COEF_SFT_br_coef_sft_OFFSET (0x00)
#define ISP_BINNING_REPAIR_COEF_SFT_br_coef_sft_WIDTH (3)
#define ISP_BINNING_REPAIR_COEF_SFT_br_coef_sft_MASK (0x07)


/*
* Address Block : ISP_CROP_BAYER
*/

#define pictorv2_in_ISP_CROP_BAYER_BASE_ADDR                (0x520U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CROP_BAYER_ENABLE
*/

#define ISP_CROP_BAYER_ENABLE_SIZE (8)
#define ISP_CROP_BAYER_ENABLE_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x00)
#define ISP_CROP_BAYER_ENABLE_RESET_VALUE (0x00)
#define ISP_CROP_BAYER_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CROP_BAYER_ENABLE_RWMASK (0x11)
#define ISP_CROP_BAYER_ENABLE_ROMASK (0x00)
#define ISP_CROP_BAYER_ENABLE_WOMASK (0x00)
#define ISP_CROP_BAYER_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CROP_BAYER_ENABLE_crop_enable_OFFSET (0x00)
#define ISP_CROP_BAYER_ENABLE_crop_enable_WIDTH (1)
#define ISP_CROP_BAYER_ENABLE_crop_enable_MASK (0x01)
#define ISP_CROP_BAYER_ENABLE_crop_enable_DISABLE (0x00)
#define ISP_CROP_BAYER_ENABLE_crop_enable_ENABLE (0x01)
#define ISP_CROP_BAYER_ENABLE_crop_soft_reset_OFFSET (0x04)
#define ISP_CROP_BAYER_ENABLE_crop_soft_reset_WIDTH (1)
#define ISP_CROP_BAYER_ENABLE_crop_soft_reset_MASK (0x10)
#define ISP_CROP_BAYER_ENABLE_crop_soft_reset_SOFT_RST_DISABLE (0x00)
#define ISP_CROP_BAYER_ENABLE_crop_soft_reset_SOFT_RST_ENABLE (0x01)

/*
* Register : ISP_CROP_BAYER_SOF_RETIMING
*/

#define ISP_CROP_BAYER_SOF_RETIMING_SIZE (8)
#define ISP_CROP_BAYER_SOF_RETIMING_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x02)
#define ISP_CROP_BAYER_SOF_RETIMING_RESET_VALUE (0x0)
#define ISP_CROP_BAYER_SOF_RETIMING_BITFIELD_MASK (0x01)
#define ISP_CROP_BAYER_SOF_RETIMING_RWMASK (0x01)
#define ISP_CROP_BAYER_SOF_RETIMING_ROMASK (0x00)
#define ISP_CROP_BAYER_SOF_RETIMING_WOMASK (0x00)
#define ISP_CROP_BAYER_SOF_RETIMING_UNUSED_MASK (0xFE)
#define ISP_CROP_BAYER_SOF_RETIMING_crop_sof_retiming_OFFSET (0x00)
#define ISP_CROP_BAYER_SOF_RETIMING_crop_sof_retiming_WIDTH (1)
#define ISP_CROP_BAYER_SOF_RETIMING_crop_sof_retiming_MASK (0x01)
#define ISP_CROP_BAYER_SOF_RETIMING_crop_sof_retiming_DISABLE (0x00)
#define ISP_CROP_BAYER_SOF_RETIMING_crop_sof_retiming_ENABLE (0x01)

/*
* Register : ISP_CROP_BAYER_SHADOW_CROPS
*/

#define ISP_CROP_BAYER_SHADOW_CROPS_SIZE (8)
#define ISP_CROP_BAYER_SHADOW_CROPS_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x04)
#define ISP_CROP_BAYER_SHADOW_CROPS_RESET_VALUE (0x0)
#define ISP_CROP_BAYER_SHADOW_CROPS_BITFIELD_MASK (0x01)
#define ISP_CROP_BAYER_SHADOW_CROPS_RWMASK (0x01)
#define ISP_CROP_BAYER_SHADOW_CROPS_ROMASK (0x00)
#define ISP_CROP_BAYER_SHADOW_CROPS_WOMASK (0x00)
#define ISP_CROP_BAYER_SHADOW_CROPS_UNUSED_MASK (0xFE)
#define ISP_CROP_BAYER_SHADOW_CROPS_crop_shadow_crops_OFFSET (0x00)
#define ISP_CROP_BAYER_SHADOW_CROPS_crop_shadow_crops_WIDTH (1)
#define ISP_CROP_BAYER_SHADOW_CROPS_crop_shadow_crops_MASK (0x01)

/*
* Register : ISP_CROP_BAYER_H_START
*/

#define ISP_CROP_BAYER_H_START_SIZE (16)
#define ISP_CROP_BAYER_H_START_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x06)
#define ISP_CROP_BAYER_H_START_RESET_VALUE (0x000)
#define ISP_CROP_BAYER_H_START_BITFIELD_MASK (0x1FFF)
#define ISP_CROP_BAYER_H_START_RWMASK (0x1FFF)
#define ISP_CROP_BAYER_H_START_ROMASK (0x0000)
#define ISP_CROP_BAYER_H_START_WOMASK (0x0000)
#define ISP_CROP_BAYER_H_START_UNUSED_MASK (0xE000)
#define ISP_CROP_BAYER_H_START_crop_h_start_OFFSET (0x0000)
#define ISP_CROP_BAYER_H_START_crop_h_start_WIDTH (13)
#define ISP_CROP_BAYER_H_START_crop_h_start_MASK (0x1FFF)

/*
* Register : ISP_CROP_BAYER_V_START
*/

#define ISP_CROP_BAYER_V_START_SIZE (16)
#define ISP_CROP_BAYER_V_START_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x08)
#define ISP_CROP_BAYER_V_START_RESET_VALUE (0x00)
#define ISP_CROP_BAYER_V_START_BITFIELD_MASK (0x1FFF)
#define ISP_CROP_BAYER_V_START_RWMASK (0x1FFF)
#define ISP_CROP_BAYER_V_START_ROMASK (0x0000)
#define ISP_CROP_BAYER_V_START_WOMASK (0x0000)
#define ISP_CROP_BAYER_V_START_UNUSED_MASK (0xE000)
#define ISP_CROP_BAYER_V_START_crop_v_start_OFFSET (0x0000)
#define ISP_CROP_BAYER_V_START_crop_v_start_WIDTH (13)
#define ISP_CROP_BAYER_V_START_crop_v_start_MASK (0x1FFF)

/*
* Register : ISP_CROP_BAYER_H_SIZE
*/

#define ISP_CROP_BAYER_H_SIZE_SIZE (16)
#define ISP_CROP_BAYER_H_SIZE_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x0a)
#define ISP_CROP_BAYER_H_SIZE_RESET_VALUE (0x000)
#define ISP_CROP_BAYER_H_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_CROP_BAYER_H_SIZE_RWMASK (0x1FFF)
#define ISP_CROP_BAYER_H_SIZE_ROMASK (0x0000)
#define ISP_CROP_BAYER_H_SIZE_WOMASK (0x0000)
#define ISP_CROP_BAYER_H_SIZE_UNUSED_MASK (0xE000)
#define ISP_CROP_BAYER_H_SIZE_crop_h_size_OFFSET (0x0000)
#define ISP_CROP_BAYER_H_SIZE_crop_h_size_WIDTH (13)
#define ISP_CROP_BAYER_H_SIZE_crop_h_size_MASK (0x1FFF)

/*
* Register : ISP_CROP_BAYER_V_SIZE
*/

#define ISP_CROP_BAYER_V_SIZE_SIZE (16)
#define ISP_CROP_BAYER_V_SIZE_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x0c)
#define ISP_CROP_BAYER_V_SIZE_RESET_VALUE (0x000)
#define ISP_CROP_BAYER_V_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_CROP_BAYER_V_SIZE_RWMASK (0x1FFF)
#define ISP_CROP_BAYER_V_SIZE_ROMASK (0x0000)
#define ISP_CROP_BAYER_V_SIZE_WOMASK (0x0000)
#define ISP_CROP_BAYER_V_SIZE_UNUSED_MASK (0xE000)
#define ISP_CROP_BAYER_V_SIZE_crop_v_size_OFFSET (0x0000)
#define ISP_CROP_BAYER_V_SIZE_crop_v_size_WIDTH (13)
#define ISP_CROP_BAYER_V_SIZE_crop_v_size_MASK (0x1FFF)

/*
* Register : ISP_CROP_BAYER_IACTIVE_PIXS
*/

#define ISP_CROP_BAYER_IACTIVE_PIXS_SIZE (16)
#define ISP_CROP_BAYER_IACTIVE_PIXS_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x0e)
#define ISP_CROP_BAYER_IACTIVE_PIXS_RESET_VALUE (0x000)
#define ISP_CROP_BAYER_IACTIVE_PIXS_BITFIELD_MASK (0x1FFF)
#define ISP_CROP_BAYER_IACTIVE_PIXS_RWMASK (0x1FFF)
#define ISP_CROP_BAYER_IACTIVE_PIXS_ROMASK (0x0000)
#define ISP_CROP_BAYER_IACTIVE_PIXS_WOMASK (0x0000)
#define ISP_CROP_BAYER_IACTIVE_PIXS_UNUSED_MASK (0xE000)
#define ISP_CROP_BAYER_IACTIVE_PIXS_crop_iactive_pixs_OFFSET (0x0000)
#define ISP_CROP_BAYER_IACTIVE_PIXS_crop_iactive_pixs_WIDTH (13)
#define ISP_CROP_BAYER_IACTIVE_PIXS_crop_iactive_pixs_MASK (0x1FFF)

/*
* Register : ISP_CROP_BAYER_IACTIVE_LINES
*/

#define ISP_CROP_BAYER_IACTIVE_LINES_SIZE (16)
#define ISP_CROP_BAYER_IACTIVE_LINES_OFFSET (pictorv2_in_ISP_CROP_BAYER_BASE_ADDR + 0x10)
#define ISP_CROP_BAYER_IACTIVE_LINES_RESET_VALUE (0x000)
#define ISP_CROP_BAYER_IACTIVE_LINES_BITFIELD_MASK (0x1FFF)
#define ISP_CROP_BAYER_IACTIVE_LINES_RWMASK (0x1FFF)
#define ISP_CROP_BAYER_IACTIVE_LINES_ROMASK (0x0000)
#define ISP_CROP_BAYER_IACTIVE_LINES_WOMASK (0x0000)
#define ISP_CROP_BAYER_IACTIVE_LINES_UNUSED_MASK (0xE000)
#define ISP_CROP_BAYER_IACTIVE_LINES_crop_iactive_lines_OFFSET (0x0000)
#define ISP_CROP_BAYER_IACTIVE_LINES_crop_iactive_lines_WIDTH (13)
#define ISP_CROP_BAYER_IACTIVE_LINES_crop_iactive_lines_MASK (0x1FFF)


/*
* Address Block : ISP_BAYER_STORE_RE_OUT
*/

#define pictorv2_in_ISP_BAYER_STORE_RE_OUT_BASE_ADDR        (0x540U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_BAYER_STORE_RE_OUT_ENABLE
*/

#define ISP_BAYER_STORE_RE_OUT_ENABLE_SIZE (8)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_OFFSET (pictorv2_in_ISP_BAYER_STORE_RE_OUT_BASE_ADDR + 0x00)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_RESET_VALUE (0x00)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_BITFIELD_MASK (0x11)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_RWMASK (0x11)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_ROMASK (0x00)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_WOMASK (0x00)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_UNUSED_MASK (0xEE)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_BAYER_STORE_RE_OUT_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_BAYER_STORE_RE_OUT_SELECT
*/

#define ISP_BAYER_STORE_RE_OUT_SELECT_SIZE (8)
#define ISP_BAYER_STORE_RE_OUT_SELECT_OFFSET (pictorv2_in_ISP_BAYER_STORE_RE_OUT_BASE_ADDR + 0x02)
#define ISP_BAYER_STORE_RE_OUT_SELECT_RESET_VALUE (0x00)
#define ISP_BAYER_STORE_RE_OUT_SELECT_BITFIELD_MASK (0x11)
#define ISP_BAYER_STORE_RE_OUT_SELECT_RWMASK (0x11)
#define ISP_BAYER_STORE_RE_OUT_SELECT_ROMASK (0x00)
#define ISP_BAYER_STORE_RE_OUT_SELECT_WOMASK (0x00)
#define ISP_BAYER_STORE_RE_OUT_SELECT_UNUSED_MASK (0xEE)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_select_WIDTH (1)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_select_MASK (0x01)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_BAYER_STORE_RE_OUT_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_SNAIL_BABYLON
*/

#define pictorv2_in_ISP_SNAIL_BABYLON_BASE_ADDR             (0x560U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_SNAIL_BABYLON_ENABLE
*/

#define ISP_SNAIL_BABYLON_ENABLE_SIZE (8)
#define ISP_SNAIL_BABYLON_ENABLE_OFFSET (pictorv2_in_ISP_SNAIL_BABYLON_BASE_ADDR + 0x00)
#define ISP_SNAIL_BABYLON_ENABLE_RESET_VALUE (0x01)
#define ISP_SNAIL_BABYLON_ENABLE_BITFIELD_MASK (0x11)
#define ISP_SNAIL_BABYLON_ENABLE_RWMASK (0x11)
#define ISP_SNAIL_BABYLON_ENABLE_ROMASK (0x00)
#define ISP_SNAIL_BABYLON_ENABLE_WOMASK (0x00)
#define ISP_SNAIL_BABYLON_ENABLE_UNUSED_MASK (0xEE)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_SNAIL_BABYLON_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_BABYLON
*/

#define pictorv2_in_ISP_BABYLON_BASE_ADDR                   (0x570U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_BABYLON_ENABLE
*/

#define ISP_BABYLON_ENABLE_SIZE     (8)
#define ISP_BABYLON_ENABLE_OFFSET   (pictorv2_in_ISP_BABYLON_BASE_ADDR + 0x00)
#define ISP_BABYLON_ENABLE_RESET_VALUE (0x00)
#define ISP_BABYLON_ENABLE_BITFIELD_MASK (0x11)
#define ISP_BABYLON_ENABLE_RWMASK   (0x11)
#define ISP_BABYLON_ENABLE_ROMASK   (0x00)
#define ISP_BABYLON_ENABLE_WOMASK   (0x00)
#define ISP_BABYLON_ENABLE_UNUSED_MASK (0xEE)
#define ISP_BABYLON_ENABLE_enable_babylon_OFFSET (0x00)
#define ISP_BABYLON_ENABLE_enable_babylon_WIDTH (1)
#define ISP_BABYLON_ENABLE_enable_babylon_MASK (0x01)
#define ISP_BABYLON_ENABLE_enable_babylon_DISABLE (0x00)
#define ISP_BABYLON_ENABLE_enable_babylon_ENABLE (0x01)
#define ISP_BABYLON_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_BABYLON_ENABLE_soft_reset_WIDTH (1)
#define ISP_BABYLON_ENABLE_soft_reset_MASK (0x10)
#define ISP_BABYLON_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_BABYLON_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_BABYLON_ZIPPERKILL
*/

#define ISP_BABYLON_ZIPPERKILL_SIZE (8)
#define ISP_BABYLON_ZIPPERKILL_OFFSET (pictorv2_in_ISP_BABYLON_BASE_ADDR + 0x02)
#define ISP_BABYLON_ZIPPERKILL_RESET_VALUE (0x00000008)
#define ISP_BABYLON_ZIPPERKILL_BITFIELD_MASK (0x0F)
#define ISP_BABYLON_ZIPPERKILL_RWMASK (0x0F)
#define ISP_BABYLON_ZIPPERKILL_ROMASK (0x00)
#define ISP_BABYLON_ZIPPERKILL_WOMASK (0x00)
#define ISP_BABYLON_ZIPPERKILL_UNUSED_MASK (0xF0)
#define ISP_BABYLON_ZIPPERKILL_zipperkill_OFFSET (0x00)
#define ISP_BABYLON_ZIPPERKILL_zipperkill_WIDTH (4)
#define ISP_BABYLON_ZIPPERKILL_zipperkill_MASK (0x0F)

/*
* Register : ISP_BABYLON_FLAT_TH
*/

#define ISP_BABYLON_FLAT_TH_SIZE    (8)
#define ISP_BABYLON_FLAT_TH_OFFSET  (pictorv2_in_ISP_BABYLON_BASE_ADDR + 0x04)
#define ISP_BABYLON_FLAT_TH_RESET_VALUE (0x00000010)
#define ISP_BABYLON_FLAT_TH_BITFIELD_MASK (0xFF)
#define ISP_BABYLON_FLAT_TH_RWMASK  (0xFF)
#define ISP_BABYLON_FLAT_TH_ROMASK  (0x00)
#define ISP_BABYLON_FLAT_TH_WOMASK  (0x00)
#define ISP_BABYLON_FLAT_TH_UNUSED_MASK (0x00)
#define ISP_BABYLON_FLAT_TH_flat_th_OFFSET (0x00)
#define ISP_BABYLON_FLAT_TH_flat_th_WIDTH (8)
#define ISP_BABYLON_FLAT_TH_flat_th_MASK (0xFF)


/*
* Address Block : ISP_DMCE_BAYER_LOAD
*/

#define pictorv2_in_ISP_DMCE_BAYER_LOAD_BASE_ADDR           (0x5a0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_DMCE_BAYER_LOAD_ENABLE
*/

#define ISP_DMCE_BAYER_LOAD_ENABLE_SIZE (8)
#define ISP_DMCE_BAYER_LOAD_ENABLE_OFFSET (pictorv2_in_ISP_DMCE_BAYER_LOAD_BASE_ADDR + 0x00)
#define ISP_DMCE_BAYER_LOAD_ENABLE_RESET_VALUE (0x00)
#define ISP_DMCE_BAYER_LOAD_ENABLE_BITFIELD_MASK (0x11)
#define ISP_DMCE_BAYER_LOAD_ENABLE_RWMASK (0x11)
#define ISP_DMCE_BAYER_LOAD_ENABLE_ROMASK (0x00)
#define ISP_DMCE_BAYER_LOAD_ENABLE_WOMASK (0x00)
#define ISP_DMCE_BAYER_LOAD_ENABLE_UNUSED_MASK (0xEE)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_DMCE_BAYER_LOAD_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_DMCE_BAYER_LOAD_SELECT
*/

#define ISP_DMCE_BAYER_LOAD_SELECT_SIZE (8)
#define ISP_DMCE_BAYER_LOAD_SELECT_OFFSET (pictorv2_in_ISP_DMCE_BAYER_LOAD_BASE_ADDR + 0x02)
#define ISP_DMCE_BAYER_LOAD_SELECT_RESET_VALUE (0x00)
#define ISP_DMCE_BAYER_LOAD_SELECT_BITFIELD_MASK (0x11)
#define ISP_DMCE_BAYER_LOAD_SELECT_RWMASK (0x11)
#define ISP_DMCE_BAYER_LOAD_SELECT_ROMASK (0x00)
#define ISP_DMCE_BAYER_LOAD_SELECT_WOMASK (0x00)
#define ISP_DMCE_BAYER_LOAD_SELECT_UNUSED_MASK (0xEE)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_select_WIDTH (1)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_select_MASK (0x01)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_DMCE_BAYER_LOAD_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_DMCE_RGB_LOAD
*/

#define pictorv2_in_ISP_DMCE_RGB_LOAD_BASE_ADDR             (0x5b0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_DMCE_RGB_LOAD_ENABLE
*/

#define ISP_DMCE_RGB_LOAD_ENABLE_SIZE (8)
#define ISP_DMCE_RGB_LOAD_ENABLE_OFFSET (pictorv2_in_ISP_DMCE_RGB_LOAD_BASE_ADDR + 0x00)
#define ISP_DMCE_RGB_LOAD_ENABLE_RESET_VALUE (0x00)
#define ISP_DMCE_RGB_LOAD_ENABLE_BITFIELD_MASK (0x11)
#define ISP_DMCE_RGB_LOAD_ENABLE_RWMASK (0x11)
#define ISP_DMCE_RGB_LOAD_ENABLE_ROMASK (0x00)
#define ISP_DMCE_RGB_LOAD_ENABLE_WOMASK (0x00)
#define ISP_DMCE_RGB_LOAD_ENABLE_UNUSED_MASK (0xEE)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_DMCE_RGB_LOAD_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_DMCE_RGB_LOAD_SELECT
*/

#define ISP_DMCE_RGB_LOAD_SELECT_SIZE (8)
#define ISP_DMCE_RGB_LOAD_SELECT_OFFSET (pictorv2_in_ISP_DMCE_RGB_LOAD_BASE_ADDR + 0x02)
#define ISP_DMCE_RGB_LOAD_SELECT_RESET_VALUE (0x00)
#define ISP_DMCE_RGB_LOAD_SELECT_BITFIELD_MASK (0x11)
#define ISP_DMCE_RGB_LOAD_SELECT_RWMASK (0x11)
#define ISP_DMCE_RGB_LOAD_SELECT_ROMASK (0x00)
#define ISP_DMCE_RGB_LOAD_SELECT_WOMASK (0x00)
#define ISP_DMCE_RGB_LOAD_SELECT_UNUSED_MASK (0xEE)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_select_WIDTH (1)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_select_MASK (0x01)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_DMCE_RGB_LOAD_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_DMCE_RGB_STORE
*/

#define pictorv2_in_ISP_DMCE_RGB_STORE_BASE_ADDR            (0x5c0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_DMCE_RGB_STORE_ENABLE
*/

#define ISP_DMCE_RGB_STORE_ENABLE_SIZE (8)
#define ISP_DMCE_RGB_STORE_ENABLE_OFFSET (pictorv2_in_ISP_DMCE_RGB_STORE_BASE_ADDR + 0x00)
#define ISP_DMCE_RGB_STORE_ENABLE_RESET_VALUE (0x00)
#define ISP_DMCE_RGB_STORE_ENABLE_BITFIELD_MASK (0x11)
#define ISP_DMCE_RGB_STORE_ENABLE_RWMASK (0x11)
#define ISP_DMCE_RGB_STORE_ENABLE_ROMASK (0x00)
#define ISP_DMCE_RGB_STORE_ENABLE_WOMASK (0x00)
#define ISP_DMCE_RGB_STORE_ENABLE_UNUSED_MASK (0xEE)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_DMCE_RGB_STORE_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_DMCE_RGB_STORE_SELECT
*/

#define ISP_DMCE_RGB_STORE_SELECT_SIZE (8)
#define ISP_DMCE_RGB_STORE_SELECT_OFFSET (pictorv2_in_ISP_DMCE_RGB_STORE_BASE_ADDR + 0x02)
#define ISP_DMCE_RGB_STORE_SELECT_RESET_VALUE (0x00)
#define ISP_DMCE_RGB_STORE_SELECT_BITFIELD_MASK (0x11)
#define ISP_DMCE_RGB_STORE_SELECT_RWMASK (0x11)
#define ISP_DMCE_RGB_STORE_SELECT_ROMASK (0x00)
#define ISP_DMCE_RGB_STORE_SELECT_WOMASK (0x00)
#define ISP_DMCE_RGB_STORE_SELECT_UNUSED_MASK (0xEE)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_select_WIDTH (1)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_select_MASK (0x01)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_DMCE_RGB_STORE_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CHANNELMERGE
*/

#define pictorv2_in_ISP_CHANNELMERGE_BASE_ADDR              (0x5d0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CHANNELMERGE_ENABLE
*/

#define ISP_CHANNELMERGE_ENABLE_SIZE (8)
#define ISP_CHANNELMERGE_ENABLE_OFFSET (pictorv2_in_ISP_CHANNELMERGE_BASE_ADDR + 0x00)
#define ISP_CHANNELMERGE_ENABLE_RESET_VALUE (0x00)
#define ISP_CHANNELMERGE_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CHANNELMERGE_ENABLE_RWMASK (0x11)
#define ISP_CHANNELMERGE_ENABLE_ROMASK (0x00)
#define ISP_CHANNELMERGE_ENABLE_WOMASK (0x00)
#define ISP_CHANNELMERGE_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CHANNELMERGE_ENABLE_channel_merge_enable_OFFSET (0x00)
#define ISP_CHANNELMERGE_ENABLE_channel_merge_enable_WIDTH (1)
#define ISP_CHANNELMERGE_ENABLE_channel_merge_enable_MASK (0x01)
#define ISP_CHANNELMERGE_ENABLE_channel_merge_enable_DISABLE (0x00)
#define ISP_CHANNELMERGE_ENABLE_channel_merge_enable_ENABLE (0x01)
#define ISP_CHANNELMERGE_ENABLE_channel_merge_soft_reset_OFFSET (0x04)
#define ISP_CHANNELMERGE_ENABLE_channel_merge_soft_reset_WIDTH (1)
#define ISP_CHANNELMERGE_ENABLE_channel_merge_soft_reset_MASK (0x10)

/*
* Register : ISP_CHANNELMERGE_HSIZE
*/

#define ISP_CHANNELMERGE_HSIZE_SIZE (16)
#define ISP_CHANNELMERGE_HSIZE_OFFSET (pictorv2_in_ISP_CHANNELMERGE_BASE_ADDR + 0x02)
#define ISP_CHANNELMERGE_HSIZE_RESET_VALUE (0x0000)
#define ISP_CHANNELMERGE_HSIZE_BITFIELD_MASK (0x3FFF)
#define ISP_CHANNELMERGE_HSIZE_RWMASK (0x3FFF)
#define ISP_CHANNELMERGE_HSIZE_ROMASK (0x0000)
#define ISP_CHANNELMERGE_HSIZE_WOMASK (0x0000)
#define ISP_CHANNELMERGE_HSIZE_UNUSED_MASK (0xC000)
#define ISP_CHANNELMERGE_HSIZE_channel_merge_hsize_OFFSET (0x0000)
#define ISP_CHANNELMERGE_HSIZE_channel_merge_hsize_WIDTH (14)
#define ISP_CHANNELMERGE_HSIZE_channel_merge_hsize_MASK (0x3FFF)


/*
* Address Block : ISP_DMCE_MUX_DEMOSAIC
*/

#define pictorv2_in_ISP_DMCE_MUX_DEMOSAIC_BASE_ADDR         (0x5e0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_DMCE_MUX_DEMOSAIC_ENABLE
*/

#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_SIZE (8)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_OFFSET (pictorv2_in_ISP_DMCE_MUX_DEMOSAIC_BASE_ADDR + 0x00)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_RESET_VALUE (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_BITFIELD_MASK (0x11)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_RWMASK (0x11)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_ROMASK (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_WOMASK (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_UNUSED_MASK (0xEE)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_DMCE_MUX_DEMOSAIC_SELECT
*/

#define ISP_DMCE_MUX_DEMOSAIC_SELECT_SIZE (8)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_OFFSET (pictorv2_in_ISP_DMCE_MUX_DEMOSAIC_BASE_ADDR + 0x02)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_RESET_VALUE (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_BITFIELD_MASK (0x11)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_RWMASK (0x11)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_ROMASK (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_WOMASK (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_UNUSED_MASK (0xEE)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_select_WIDTH (1)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_select_MASK (0x01)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_DMCE_MUX_DEMOSAIC_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_LINE_BURSTY_ELIM
*/

#define pictorv2_in_ISP_LINE_BURSTY_ELIM_BASE_ADDR          (0x5f0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_LINE_BURSTY_ELIM_ENABLE
*/

#define ISP_LINE_BURSTY_ELIM_ENABLE_SIZE (8)
#define ISP_LINE_BURSTY_ELIM_ENABLE_OFFSET (pictorv2_in_ISP_LINE_BURSTY_ELIM_BASE_ADDR + 0x00)
#define ISP_LINE_BURSTY_ELIM_ENABLE_RESET_VALUE (0x00)
#define ISP_LINE_BURSTY_ELIM_ENABLE_BITFIELD_MASK (0x11)
#define ISP_LINE_BURSTY_ELIM_ENABLE_RWMASK (0x11)
#define ISP_LINE_BURSTY_ELIM_ENABLE_ROMASK (0x00)
#define ISP_LINE_BURSTY_ELIM_ENABLE_WOMASK (0x00)
#define ISP_LINE_BURSTY_ELIM_ENABLE_UNUSED_MASK (0xEE)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_enable_OFFSET (0x00)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_enable_WIDTH (1)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_enable_MASK (0x01)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_enable_DISABLE (0x00)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_enable_ENABLE (0x01)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_soft_reset_OFFSET (0x04)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_soft_reset_WIDTH (1)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_soft_reset_MASK (0x10)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_soft_reset_DISABLE (0x00)
#define ISP_LINE_BURSTY_ELIM_ENABLE_line_blk_elim_soft_reset_ENABLE (0x01)

/*
* Register : ISP_LINE_BURSTY_ELIM_DFV
*/

#define ISP_LINE_BURSTY_ELIM_DFV_SIZE (8)
#define ISP_LINE_BURSTY_ELIM_DFV_OFFSET (pictorv2_in_ISP_LINE_BURSTY_ELIM_BASE_ADDR + 0x02)
#define ISP_LINE_BURSTY_ELIM_DFV_RESET_VALUE (0x00)
#define ISP_LINE_BURSTY_ELIM_DFV_BITFIELD_MASK (0x03)
#define ISP_LINE_BURSTY_ELIM_DFV_RWMASK (0x03)
#define ISP_LINE_BURSTY_ELIM_DFV_ROMASK (0x00)
#define ISP_LINE_BURSTY_ELIM_DFV_WOMASK (0x00)
#define ISP_LINE_BURSTY_ELIM_DFV_UNUSED_MASK (0xFC)
#define ISP_LINE_BURSTY_ELIM_DFV_line_blk_elim_dfv_enable_OFFSET (0x00)
#define ISP_LINE_BURSTY_ELIM_DFV_line_blk_elim_dfv_enable_WIDTH (1)
#define ISP_LINE_BURSTY_ELIM_DFV_line_blk_elim_dfv_enable_MASK (0x01)
#define ISP_LINE_BURSTY_ELIM_DFV_line_blk_elim_dfv_enable_DISABLE (0x00)
#define ISP_LINE_BURSTY_ELIM_DFV_line_blk_elim_dfv_enable_ENABLE (0x01)
#define ISP_LINE_BURSTY_ELIM_DFV_line_blk_elim_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_LINE_BURSTY_ELIM_DFV_line_blk_elim_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_LINE_BURSTY_ELIM_DFV_line_blk_elim_dfv_interrupt_ctrl_MASK (0x02)

/*
* Register : ISP_LINE_BURSTY_ELIM_H_SIZE
*/

#define ISP_LINE_BURSTY_ELIM_H_SIZE_SIZE (16)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_OFFSET (pictorv2_in_ISP_LINE_BURSTY_ELIM_BASE_ADDR + 0x04)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_RESET_VALUE (0x0000)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_BITFIELD_MASK (0x3FFF)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_RWMASK (0x3FFF)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_ROMASK (0x0000)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_WOMASK (0x0000)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_UNUSED_MASK (0xC000)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_line_blk_elim_h_size_OFFSET (0x0000)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_line_blk_elim_h_size_WIDTH (14)
#define ISP_LINE_BURSTY_ELIM_H_SIZE_line_blk_elim_h_size_MASK (0x3FFF)

/*
* Register : ISP_LINE_BURSTY_ELIM_READ_START
*/

#define ISP_LINE_BURSTY_ELIM_READ_START_SIZE (16)
#define ISP_LINE_BURSTY_ELIM_READ_START_OFFSET (pictorv2_in_ISP_LINE_BURSTY_ELIM_BASE_ADDR + 0x06)
#define ISP_LINE_BURSTY_ELIM_READ_START_RESET_VALUE (0x0008)
#define ISP_LINE_BURSTY_ELIM_READ_START_BITFIELD_MASK (0x3FFF)
#define ISP_LINE_BURSTY_ELIM_READ_START_RWMASK (0x3FFF)
#define ISP_LINE_BURSTY_ELIM_READ_START_ROMASK (0x0000)
#define ISP_LINE_BURSTY_ELIM_READ_START_WOMASK (0x0000)
#define ISP_LINE_BURSTY_ELIM_READ_START_UNUSED_MASK (0xC000)
#define ISP_LINE_BURSTY_ELIM_READ_START_line_blk_elim_read_start_OFFSET (0x0000)
#define ISP_LINE_BURSTY_ELIM_READ_START_line_blk_elim_read_start_WIDTH (14)
#define ISP_LINE_BURSTY_ELIM_READ_START_line_blk_elim_read_start_MASK (0x3FFF)


/*
* Address Block : ISP_CE0_IDP_GATE
*/

#define pictorv2_in_ISP_CE0_IDP_GATE_BASE_ADDR              (0x600U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_IDP_GATE_ENABLE
*/

#define ISP_CE0_IDP_GATE_ENABLE_SIZE (8)
#define ISP_CE0_IDP_GATE_ENABLE_OFFSET (pictorv2_in_ISP_CE0_IDP_GATE_BASE_ADDR + 0x00)
#define ISP_CE0_IDP_GATE_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_IDP_GATE_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_IDP_GATE_ENABLE_RWMASK (0x11)
#define ISP_CE0_IDP_GATE_ENABLE_ROMASK (0x00)
#define ISP_CE0_IDP_GATE_ENABLE_WOMASK (0x00)
#define ISP_CE0_IDP_GATE_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE0_IDP_GATE_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE0_IDP_GATE_SELECT
*/

#define ISP_CE0_IDP_GATE_SELECT_SIZE (8)
#define ISP_CE0_IDP_GATE_SELECT_OFFSET (pictorv2_in_ISP_CE0_IDP_GATE_BASE_ADDR + 0x02)
#define ISP_CE0_IDP_GATE_SELECT_RESET_VALUE (0x00)
#define ISP_CE0_IDP_GATE_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE0_IDP_GATE_SELECT_RWMASK (0x11)
#define ISP_CE0_IDP_GATE_SELECT_ROMASK (0x00)
#define ISP_CE0_IDP_GATE_SELECT_WOMASK (0x00)
#define ISP_CE0_IDP_GATE_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE0_IDP_GATE_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE0_CROP
*/

#define pictorv2_in_ISP_CE0_CROP_BASE_ADDR                  (0x610U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_CROP_ENABLE
*/

#define ISP_CE0_CROP_ENABLE_SIZE   (8)
#define ISP_CE0_CROP_ENABLE_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x00)
#define ISP_CE0_CROP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_CROP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_CROP_ENABLE_RWMASK (0x11)
#define ISP_CE0_CROP_ENABLE_ROMASK (0x00)
#define ISP_CE0_CROP_ENABLE_WOMASK (0x00)
#define ISP_CE0_CROP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_CROP_ENABLE_crop_enable_OFFSET (0x00)
#define ISP_CE0_CROP_ENABLE_crop_enable_WIDTH (1)
#define ISP_CE0_CROP_ENABLE_crop_enable_MASK (0x01)
#define ISP_CE0_CROP_ENABLE_crop_enable_DISABLE (0x00)
#define ISP_CE0_CROP_ENABLE_crop_enable_ENABLE (0x01)
#define ISP_CE0_CROP_ENABLE_crop_soft_reset_OFFSET (0x04)
#define ISP_CE0_CROP_ENABLE_crop_soft_reset_WIDTH (1)
#define ISP_CE0_CROP_ENABLE_crop_soft_reset_MASK (0x10)
#define ISP_CE0_CROP_ENABLE_crop_soft_reset_SOFT_RST_DISABLE (0x00)
#define ISP_CE0_CROP_ENABLE_crop_soft_reset_SOFT_RST_ENABLE (0x01)

/*
* Register : ISP_CE0_CROP_SOF_RETIMING
*/

#define ISP_CE0_CROP_SOF_RETIMING_SIZE (8)
#define ISP_CE0_CROP_SOF_RETIMING_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x02)
#define ISP_CE0_CROP_SOF_RETIMING_RESET_VALUE (0x0)
#define ISP_CE0_CROP_SOF_RETIMING_BITFIELD_MASK (0x01)
#define ISP_CE0_CROP_SOF_RETIMING_RWMASK (0x01)
#define ISP_CE0_CROP_SOF_RETIMING_ROMASK (0x00)
#define ISP_CE0_CROP_SOF_RETIMING_WOMASK (0x00)
#define ISP_CE0_CROP_SOF_RETIMING_UNUSED_MASK (0xFE)
#define ISP_CE0_CROP_SOF_RETIMING_crop_sof_retiming_OFFSET (0x00)
#define ISP_CE0_CROP_SOF_RETIMING_crop_sof_retiming_WIDTH (1)
#define ISP_CE0_CROP_SOF_RETIMING_crop_sof_retiming_MASK (0x01)
#define ISP_CE0_CROP_SOF_RETIMING_crop_sof_retiming_DISABLE (0x00)
#define ISP_CE0_CROP_SOF_RETIMING_crop_sof_retiming_ENABLE (0x01)

/*
* Register : ISP_CE0_CROP_SHADOW_CROPS
*/

#define ISP_CE0_CROP_SHADOW_CROPS_SIZE (8)
#define ISP_CE0_CROP_SHADOW_CROPS_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x04)
#define ISP_CE0_CROP_SHADOW_CROPS_RESET_VALUE (0x0)
#define ISP_CE0_CROP_SHADOW_CROPS_BITFIELD_MASK (0x01)
#define ISP_CE0_CROP_SHADOW_CROPS_RWMASK (0x01)
#define ISP_CE0_CROP_SHADOW_CROPS_ROMASK (0x00)
#define ISP_CE0_CROP_SHADOW_CROPS_WOMASK (0x00)
#define ISP_CE0_CROP_SHADOW_CROPS_UNUSED_MASK (0xFE)
#define ISP_CE0_CROP_SHADOW_CROPS_crop_shadow_crops_OFFSET (0x00)
#define ISP_CE0_CROP_SHADOW_CROPS_crop_shadow_crops_WIDTH (1)
#define ISP_CE0_CROP_SHADOW_CROPS_crop_shadow_crops_MASK (0x01)

/*
* Register : ISP_CE0_CROP_H_START
*/

#define ISP_CE0_CROP_H_START_SIZE  (16)
#define ISP_CE0_CROP_H_START_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x06)
#define ISP_CE0_CROP_H_START_RESET_VALUE (0x000)
#define ISP_CE0_CROP_H_START_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CROP_H_START_RWMASK (0x1FFF)
#define ISP_CE0_CROP_H_START_ROMASK (0x0000)
#define ISP_CE0_CROP_H_START_WOMASK (0x0000)
#define ISP_CE0_CROP_H_START_UNUSED_MASK (0xE000)
#define ISP_CE0_CROP_H_START_crop_h_start_OFFSET (0x0000)
#define ISP_CE0_CROP_H_START_crop_h_start_WIDTH (13)
#define ISP_CE0_CROP_H_START_crop_h_start_MASK (0x1FFF)

/*
* Register : ISP_CE0_CROP_V_START
*/

#define ISP_CE0_CROP_V_START_SIZE  (16)
#define ISP_CE0_CROP_V_START_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x08)
#define ISP_CE0_CROP_V_START_RESET_VALUE (0x00)
#define ISP_CE0_CROP_V_START_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CROP_V_START_RWMASK (0x1FFF)
#define ISP_CE0_CROP_V_START_ROMASK (0x0000)
#define ISP_CE0_CROP_V_START_WOMASK (0x0000)
#define ISP_CE0_CROP_V_START_UNUSED_MASK (0xE000)
#define ISP_CE0_CROP_V_START_crop_v_start_OFFSET (0x0000)
#define ISP_CE0_CROP_V_START_crop_v_start_WIDTH (13)
#define ISP_CE0_CROP_V_START_crop_v_start_MASK (0x1FFF)

/*
* Register : ISP_CE0_CROP_H_SIZE
*/

#define ISP_CE0_CROP_H_SIZE_SIZE   (16)
#define ISP_CE0_CROP_H_SIZE_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x0a)
#define ISP_CE0_CROP_H_SIZE_RESET_VALUE (0x000)
#define ISP_CE0_CROP_H_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CROP_H_SIZE_RWMASK (0x1FFF)
#define ISP_CE0_CROP_H_SIZE_ROMASK (0x0000)
#define ISP_CE0_CROP_H_SIZE_WOMASK (0x0000)
#define ISP_CE0_CROP_H_SIZE_UNUSED_MASK (0xE000)
#define ISP_CE0_CROP_H_SIZE_crop_h_size_OFFSET (0x0000)
#define ISP_CE0_CROP_H_SIZE_crop_h_size_WIDTH (13)
#define ISP_CE0_CROP_H_SIZE_crop_h_size_MASK (0x1FFF)

/*
* Register : ISP_CE0_CROP_V_SIZE
*/

#define ISP_CE0_CROP_V_SIZE_SIZE   (16)
#define ISP_CE0_CROP_V_SIZE_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x0c)
#define ISP_CE0_CROP_V_SIZE_RESET_VALUE (0x000)
#define ISP_CE0_CROP_V_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CROP_V_SIZE_RWMASK (0x1FFF)
#define ISP_CE0_CROP_V_SIZE_ROMASK (0x0000)
#define ISP_CE0_CROP_V_SIZE_WOMASK (0x0000)
#define ISP_CE0_CROP_V_SIZE_UNUSED_MASK (0xE000)
#define ISP_CE0_CROP_V_SIZE_crop_v_size_OFFSET (0x0000)
#define ISP_CE0_CROP_V_SIZE_crop_v_size_WIDTH (13)
#define ISP_CE0_CROP_V_SIZE_crop_v_size_MASK (0x1FFF)

/*
* Register : ISP_CE0_CROP_IACTIVE_PIXS
*/

#define ISP_CE0_CROP_IACTIVE_PIXS_SIZE (16)
#define ISP_CE0_CROP_IACTIVE_PIXS_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x0e)
#define ISP_CE0_CROP_IACTIVE_PIXS_RESET_VALUE (0x000)
#define ISP_CE0_CROP_IACTIVE_PIXS_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CROP_IACTIVE_PIXS_RWMASK (0x1FFF)
#define ISP_CE0_CROP_IACTIVE_PIXS_ROMASK (0x0000)
#define ISP_CE0_CROP_IACTIVE_PIXS_WOMASK (0x0000)
#define ISP_CE0_CROP_IACTIVE_PIXS_UNUSED_MASK (0xE000)
#define ISP_CE0_CROP_IACTIVE_PIXS_crop_iactive_pixs_OFFSET (0x0000)
#define ISP_CE0_CROP_IACTIVE_PIXS_crop_iactive_pixs_WIDTH (13)
#define ISP_CE0_CROP_IACTIVE_PIXS_crop_iactive_pixs_MASK (0x1FFF)

/*
* Register : ISP_CE0_CROP_IACTIVE_LINES
*/

#define ISP_CE0_CROP_IACTIVE_LINES_SIZE (16)
#define ISP_CE0_CROP_IACTIVE_LINES_OFFSET (pictorv2_in_ISP_CE0_CROP_BASE_ADDR + 0x10)
#define ISP_CE0_CROP_IACTIVE_LINES_RESET_VALUE (0x000)
#define ISP_CE0_CROP_IACTIVE_LINES_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CROP_IACTIVE_LINES_RWMASK (0x1FFF)
#define ISP_CE0_CROP_IACTIVE_LINES_ROMASK (0x0000)
#define ISP_CE0_CROP_IACTIVE_LINES_WOMASK (0x0000)
#define ISP_CE0_CROP_IACTIVE_LINES_UNUSED_MASK (0xE000)
#define ISP_CE0_CROP_IACTIVE_LINES_crop_iactive_lines_OFFSET (0x0000)
#define ISP_CE0_CROP_IACTIVE_LINES_crop_iactive_lines_WIDTH (13)
#define ISP_CE0_CROP_IACTIVE_LINES_crop_iactive_lines_MASK (0x1FFF)


/*
* Address Block : ISP_CE0_RADIAL_ADSOC_PK
*/

#define pictorv2_in_ISP_CE0_RADIAL_ADSOC_PK_BASE_ADDR       (0x630U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_RADIAL_ADSOC_PK_ENABLE
*/

#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_PK_BASE_ADDR + 0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_RESET_VALUE (0x0)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_BITFIELD_MASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_RWMASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_UNUSED_MASK (0xFE)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_WIDTH (1)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_MASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_DISABLE (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_ENABLE (0x01)

/*
* Register : ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN
*/

#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_PK_BASE_ADDR + 0x02)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_BITFIELD_MASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_RWMASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_UNUSED_MASK (0xFE)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_WIDTH (1)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_MASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_DISABLE (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_ENABLE (0x01)

/*
* Register : ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL
*/

#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_PK_BASE_ADDR + 0x04)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_BITFIELD_MASK (0x3F)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_RWMASK (0x3F)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_UNUSED_MASK (0xC0)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_ADSOC_CORING_LEVEL_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_ADSOC_CORING_LEVEL_WIDTH (6)
#define ISP_CE0_RADIAL_ADSOC_PK_CORING_LEVEL_ADSOC_CORING_LEVEL_MASK (0x3F)

/*
* Register : ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL
*/

#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_SIZE (16)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_PK_BASE_ADDR + 0x06)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_RESET_VALUE (0x1010)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_BITFIELD_MASK (0x1F1F)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_RWMASK (0x1F1F)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_ROMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_WOMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_UNUSED_MASK (0xE0E0)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_BRIGHT_OFFSET (0x0000)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_BRIGHT_WIDTH (5)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_BRIGHT_MASK (0x001F)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_DARK_OFFSET (0x0008)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_DARK_WIDTH (5)
#define ISP_CE0_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_DARK_MASK (0x1F00)

/*
* Register : ISP_CE0_RADIAL_ADSOC_PK_EFFECTS
*/

#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_SIZE (32)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_PK_BASE_ADDR + 0x08)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_RESET_VALUE (0x0)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_BITFIELD_MASK (0x00030307)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_RWMASK (0x00030307)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ROMASK (0x00000000)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_WOMASK (0x00000000)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_UNUSED_MASK (0xFFFCFCF8)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_EMBOSS_SELECT_OFFSET (0x00000000)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_EMBOSS_SELECT_WIDTH (3)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_EMBOSS_SELECT_MASK (0x00000007)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_FLIPPER_OFFSET (0x00000008)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_FLIPPER_WIDTH (2)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_FLIPPER_MASK (0x00000300)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_GREYBACK_OFFSET (0x00000010)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_GREYBACK_WIDTH (2)
#define ISP_CE0_RADIAL_ADSOC_PK_EFFECTS_ADSOC_GREYBACK_MASK (0x00030000)

/*
* Register : ISP_CE0_RADIAL_ADSOC_PK_GAIN
*/

#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_PK_BASE_ADDR + 0x0a)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_RESET_VALUE (0x0)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_BITFIELD_MASK (0xFF)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_RWMASK (0xFF)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_UNUSED_MASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_ADSOC_GAIN_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_ADSOC_GAIN_WIDTH (8)
#define ISP_CE0_RADIAL_ADSOC_PK_GAIN_ADSOC_GAIN_MASK (0xFF)


/*
* Address Block : ISP_CE0_RADIAL_ADSOC_RP
*/

#define pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR       (0x63cU)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_ENABLE
*/

#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_BITFIELD_MASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_RWMASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_UNUSED_MASK (0xFE)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_WIDTH (1)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_MASK (0x01)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_DISABLE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_ENABLE (0x01)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0
*/

#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x02)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_BITFIELD_MASK (0xFF)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_RWMASK (0xFF)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_UNUSED_MASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_rdpk_qvec0_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_rdpk_qvec0_WIDTH (8)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF0_rdpk_qvec0_MASK (0xFF)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1
*/

#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x04)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_BITFIELD_MASK (0xFF)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_RWMASK (0xFF)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_UNUSED_MASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_rdpk_qvec1_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_rdpk_qvec1_WIDTH (8)
#define ISP_CE0_RADIAL_ADSOC_RP_POLYCOEF1_rdpk_qvec1_MASK (0xFF)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT
*/

#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x06)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_BITFIELD_MASK (0x0F)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_RWMASK (0x0F)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_UNUSED_MASK (0xF0)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_rdpk_cof_shift_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_rdpk_cof_shift_WIDTH (4)
#define ISP_CE0_RADIAL_ADSOC_RP_COF_SHIFT_rdpk_cof_shift_MASK (0x0F)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT
*/

#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_SIZE (8)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x08)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_BITFIELD_MASK (0x0F)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_RWMASK (0x0F)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_ROMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_WOMASK (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_UNUSED_MASK (0xF0)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_rdpk_out_shift_OFFSET (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_rdpk_out_shift_WIDTH (4)
#define ISP_CE0_RADIAL_ADSOC_RP_OUT_SHIFT_rdpk_out_shift_MASK (0x0F)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_UNITY
*/

#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_SIZE (16)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x0a)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_BITFIELD_MASK (0x01FF)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_RWMASK (0x01FF)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_ROMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_WOMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_UNUSED_MASK (0xFE00)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_rdpk_unity_OFFSET (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_rdpk_unity_WIDTH (9)
#define ISP_CE0_RADIAL_ADSOC_RP_UNITY_rdpk_unity_MASK (0x01FF)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_HOFFSET
*/

#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_SIZE (16)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x0c)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_BITFIELD_MASK (0x3FFF)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_RWMASK (0x3FFF)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_ROMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_WOMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_UNUSED_MASK (0xC000)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_rdpk_hoffset_OFFSET (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_rdpk_hoffset_WIDTH (14)
#define ISP_CE0_RADIAL_ADSOC_RP_HOFFSET_rdpk_hoffset_MASK (0x3FFF)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_VOFFSET
*/

#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_SIZE (16)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x0e)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_BITFIELD_MASK (0x3FFF)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_RWMASK (0x3FFF)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_ROMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_WOMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_UNUSED_MASK (0xC000)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_rdpk_voffset_OFFSET (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_rdpk_voffset_WIDTH (14)
#define ISP_CE0_RADIAL_ADSOC_RP_VOFFSET_rdpk_voffset_MASK (0x3FFF)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_SCALE_X
*/

#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_SIZE (16)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x10)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_RWMASK (0xFFFF)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_ROMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_WOMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_UNUSED_MASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_rdpk_scaling_factor_x_OFFSET (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_rdpk_scaling_factor_x_WIDTH (16)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_X_rdpk_scaling_factor_x_MASK (0xFFFF)

/*
* Register : ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y
*/

#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_SIZE (16)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_OFFSET (pictorv2_in_ISP_CE0_RADIAL_ADSOC_RP_BASE_ADDR + 0x12)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_RESET_VALUE (0x00)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_RWMASK (0xFFFF)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_ROMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_WOMASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_UNUSED_MASK (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_rdpk_scaling_factor_y_OFFSET (0x0000)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_rdpk_scaling_factor_y_WIDTH (16)
#define ISP_CE0_RADIAL_ADSOC_RP_SCALE_Y_rdpk_scaling_factor_y_MASK (0xFFFF)


/*
* Address Block : ISP_CE0_MUX_GPS
*/

#define pictorv2_in_ISP_CE0_MUX_GPS_BASE_ADDR               (0x650U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_MUX_GPS_ENABLE
*/

#define ISP_CE0_MUX_GPS_ENABLE_SIZE (8)
#define ISP_CE0_MUX_GPS_ENABLE_OFFSET (pictorv2_in_ISP_CE0_MUX_GPS_BASE_ADDR + 0x00)
#define ISP_CE0_MUX_GPS_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_MUX_GPS_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_MUX_GPS_ENABLE_RWMASK (0x11)
#define ISP_CE0_MUX_GPS_ENABLE_ROMASK (0x00)
#define ISP_CE0_MUX_GPS_ENABLE_WOMASK (0x00)
#define ISP_CE0_MUX_GPS_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE0_MUX_GPS_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE0_MUX_GPS_SELECT
*/

#define ISP_CE0_MUX_GPS_SELECT_SIZE (8)
#define ISP_CE0_MUX_GPS_SELECT_OFFSET (pictorv2_in_ISP_CE0_MUX_GPS_BASE_ADDR + 0x02)
#define ISP_CE0_MUX_GPS_SELECT_RESET_VALUE (0x00)
#define ISP_CE0_MUX_GPS_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE0_MUX_GPS_SELECT_RWMASK (0x11)
#define ISP_CE0_MUX_GPS_SELECT_ROMASK (0x00)
#define ISP_CE0_MUX_GPS_SELECT_WOMASK (0x00)
#define ISP_CE0_MUX_GPS_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE0_MUX_GPS_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE0_MUX_SHARP
*/

#define pictorv2_in_ISP_CE0_MUX_SHARP_BASE_ADDR             (0x660U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_MUX_SHARP_ENABLE
*/

#define ISP_CE0_MUX_SHARP_ENABLE_SIZE (8)
#define ISP_CE0_MUX_SHARP_ENABLE_OFFSET (pictorv2_in_ISP_CE0_MUX_SHARP_BASE_ADDR + 0x00)
#define ISP_CE0_MUX_SHARP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_MUX_SHARP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_MUX_SHARP_ENABLE_RWMASK (0x11)
#define ISP_CE0_MUX_SHARP_ENABLE_ROMASK (0x00)
#define ISP_CE0_MUX_SHARP_ENABLE_WOMASK (0x00)
#define ISP_CE0_MUX_SHARP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE0_MUX_SHARP_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE0_MUX_SHARP_SELECT
*/

#define ISP_CE0_MUX_SHARP_SELECT_SIZE (8)
#define ISP_CE0_MUX_SHARP_SELECT_OFFSET (pictorv2_in_ISP_CE0_MUX_SHARP_BASE_ADDR + 0x02)
#define ISP_CE0_MUX_SHARP_SELECT_RESET_VALUE (0x00)
#define ISP_CE0_MUX_SHARP_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE0_MUX_SHARP_SELECT_RWMASK (0x11)
#define ISP_CE0_MUX_SHARP_SELECT_ROMASK (0x00)
#define ISP_CE0_MUX_SHARP_SELECT_WOMASK (0x00)
#define ISP_CE0_MUX_SHARP_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE0_MUX_SHARP_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE0_MUX_UNSHARP
*/

#define pictorv2_in_ISP_CE0_MUX_UNSHARP_BASE_ADDR           (0x670U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_MUX_UNSHARP_ENABLE
*/

#define ISP_CE0_MUX_UNSHARP_ENABLE_SIZE (8)
#define ISP_CE0_MUX_UNSHARP_ENABLE_OFFSET (pictorv2_in_ISP_CE0_MUX_UNSHARP_BASE_ADDR + 0x00)
#define ISP_CE0_MUX_UNSHARP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_MUX_UNSHARP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_MUX_UNSHARP_ENABLE_RWMASK (0x11)
#define ISP_CE0_MUX_UNSHARP_ENABLE_ROMASK (0x00)
#define ISP_CE0_MUX_UNSHARP_ENABLE_WOMASK (0x00)
#define ISP_CE0_MUX_UNSHARP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE0_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE0_MUX_UNSHARP_SELECT
*/

#define ISP_CE0_MUX_UNSHARP_SELECT_SIZE (8)
#define ISP_CE0_MUX_UNSHARP_SELECT_OFFSET (pictorv2_in_ISP_CE0_MUX_UNSHARP_BASE_ADDR + 0x02)
#define ISP_CE0_MUX_UNSHARP_SELECT_RESET_VALUE (0x00)
#define ISP_CE0_MUX_UNSHARP_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE0_MUX_UNSHARP_SELECT_RWMASK (0x11)
#define ISP_CE0_MUX_UNSHARP_SELECT_ROMASK (0x00)
#define ISP_CE0_MUX_UNSHARP_SELECT_WOMASK (0x00)
#define ISP_CE0_MUX_UNSHARP_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE0_MUX_UNSHARP_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE0_FLEXTF_SHARP
*/

#define pictorv2_in_ISP_CE0_FLEXTF_SHARP_BASE_ADDR          (0x680U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_FLEXTF_SHARP_ENABLE
*/

#define ISP_CE0_FLEXTF_SHARP_ENABLE_SIZE (8)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_SHARP_BASE_ADDR + 0x00)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_RWMASK (0x11)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_ROMASK (0x00)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_WOMASK (0x00)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_enable_OFFSET (0x00)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_enable_WIDTH (1)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_enable_MASK (0x01)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_enable_DISABLE (0x00)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_enable_ENABLE (0x01)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_soft_reset_WIDTH (1)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_soft_reset_MASK (0x10)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_CE0_FLEXTF_SHARP_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR
*/

#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_SIZE (16)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_SHARP_BASE_ADDR + 0x02)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_RWMASK (0xFFFF)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_UNUSED_MASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_WIDTH (16)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_MASK (0xFFFF)

/*
* Register : ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED
*/

#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_SIZE (16)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_SHARP_BASE_ADDR + 0x04)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_RWMASK (0xFFFF)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_UNUSED_MASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_last_elt_red_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_last_elt_red_WIDTH (16)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_RED_last_elt_red_MASK (0xFFFF)

/*
* Register : ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE
*/

#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_SIZE (16)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_SHARP_BASE_ADDR + 0x06)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_RWMASK (0xFFFF)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_UNUSED_MASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_last_elt_blue_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_last_elt_blue_WIDTH (16)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_BLUE_last_elt_blue_MASK (0xFFFF)

/*
* Register : ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB
*/

#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_SIZE (16)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_SHARP_BASE_ADDR + 0x08)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_RWMASK (0xFFFF)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_UNUSED_MASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_last_elt_gib_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_last_elt_gib_WIDTH (16)
#define ISP_CE0_FLEXTF_SHARP_LAST_ELT_GIB_last_elt_gib_MASK (0xFFFF)

/*
* Register : ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT
*/

#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_SIZE (16)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_SHARP_BASE_ADDR + 0x0a)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_BITFIELD_MASK (0x0007)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_RWMASK (0x0007)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_UNUSED_MASK (0xFFF8)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_pixel_shift_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_pixel_shift_WIDTH (3)
#define ISP_CE0_FLEXTF_SHARP_PIXELIN_SHIFT_pixel_shift_MASK (0x0007)


/*
* Address Block : ISP_CE0_FLEXTF_UNSHARP
*/

#define pictorv2_in_ISP_CE0_FLEXTF_UNSHARP_BASE_ADDR        (0x690U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_FLEXTF_UNSHARP_ENABLE
*/

#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_SIZE (8)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_UNSHARP_BASE_ADDR + 0x00)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_RWMASK (0x11)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_ROMASK (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_WOMASK (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_enable_OFFSET (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_enable_WIDTH (1)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_enable_MASK (0x01)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_enable_DISABLE (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_enable_ENABLE (0x01)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_soft_reset_WIDTH (1)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_soft_reset_MASK (0x10)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR
*/

#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_SIZE (16)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_UNSHARP_BASE_ADDR + 0x02)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_RWMASK (0xFFFF)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_UNUSED_MASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_WIDTH (16)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_MASK (0xFFFF)

/*
* Register : ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED
*/

#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_SIZE (16)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_UNSHARP_BASE_ADDR + 0x04)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_RWMASK (0xFFFF)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_UNUSED_MASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_last_elt_red_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_last_elt_red_WIDTH (16)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_RED_last_elt_red_MASK (0xFFFF)

/*
* Register : ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE
*/

#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_SIZE (16)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_UNSHARP_BASE_ADDR + 0x06)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_RWMASK (0xFFFF)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_UNUSED_MASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_last_elt_blue_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_last_elt_blue_WIDTH (16)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_BLUE_last_elt_blue_MASK (0xFFFF)

/*
* Register : ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB
*/

#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_SIZE (16)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_UNSHARP_BASE_ADDR + 0x08)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_RWMASK (0xFFFF)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_UNUSED_MASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_last_elt_gib_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_last_elt_gib_WIDTH (16)
#define ISP_CE0_FLEXTF_UNSHARP_LAST_ELT_GIB_last_elt_gib_MASK (0xFFFF)

/*
* Register : ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT
*/

#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_SIZE (16)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_OFFSET (pictorv2_in_ISP_CE0_FLEXTF_UNSHARP_BASE_ADDR + 0x0a)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_RESET_VALUE (0x00)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_BITFIELD_MASK (0x0007)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_RWMASK (0x0007)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_ROMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_WOMASK (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_UNUSED_MASK (0xFFF8)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_pixel_shift_OFFSET (0x0000)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_pixel_shift_WIDTH (3)
#define ISP_CE0_FLEXTF_UNSHARP_PIXELIN_SHIFT_pixel_shift_MASK (0x0007)


/*
* Address Block : ISP_CE0_MUX_MATRIX_ADSOC
*/

#define pictorv2_in_ISP_CE0_MUX_MATRIX_ADSOC_BASE_ADDR      (0x6a0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_MUX_MATRIX_ADSOC_ENABLE
*/

#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_SIZE (8)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_OFFSET (pictorv2_in_ISP_CE0_MUX_MATRIX_ADSOC_BASE_ADDR + 0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_RWMASK (0x11)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_ROMASK (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_WOMASK (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE0_MUX_MATRIX_ADSOC_SELECT
*/

#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_SIZE (8)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_OFFSET (pictorv2_in_ISP_CE0_MUX_MATRIX_ADSOC_BASE_ADDR + 0x02)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_RESET_VALUE (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_RWMASK (0x11)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_ROMASK (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_WOMASK (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE0_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE0_SNAIL0_ADSOC
*/

#define pictorv2_in_ISP_CE0_SNAIL0_ADSOC_BASE_ADDR          (0x6b0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_SNAIL0_ADSOC_ENABLE
*/

#define ISP_CE0_SNAIL0_ADSOC_ENABLE_SIZE (8)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_OFFSET (pictorv2_in_ISP_CE0_SNAIL0_ADSOC_BASE_ADDR + 0x00)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_RESET_VALUE (0x01)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_RWMASK (0x11)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_ROMASK (0x00)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_WOMASK (0x00)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_CE0_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_CE0_SNAIL1_ADSOC
*/

#define pictorv2_in_ISP_CE0_SNAIL1_ADSOC_BASE_ADDR          (0x6c0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_SNAIL1_ADSOC_ENABLE
*/

#define ISP_CE0_SNAIL1_ADSOC_ENABLE_SIZE (8)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_OFFSET (pictorv2_in_ISP_CE0_SNAIL1_ADSOC_BASE_ADDR + 0x00)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_RESET_VALUE (0x01)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_RWMASK (0x11)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_ROMASK (0x00)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_WOMASK (0x00)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_CE0_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_CE0_MATRIX
*/

#define pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR                (0x6d0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_MATRIX_ENABLE
*/

#define ISP_CE0_MATRIX_ENABLE_SIZE (8)
#define ISP_CE0_MATRIX_ENABLE_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x00)
#define ISP_CE0_MATRIX_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_MATRIX_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_MATRIX_ENABLE_RWMASK (0x11)
#define ISP_CE0_MATRIX_ENABLE_ROMASK (0x00)
#define ISP_CE0_MATRIX_ENABLE_WOMASK (0x00)
#define ISP_CE0_MATRIX_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_MATRIX_ENABLE_enable_OFFSET (0x00)
#define ISP_CE0_MATRIX_ENABLE_enable_WIDTH (1)
#define ISP_CE0_MATRIX_ENABLE_enable_MASK (0x01)
#define ISP_CE0_MATRIX_ENABLE_enable_DISABLE (0x00)
#define ISP_CE0_MATRIX_ENABLE_enable_ENABLE (0x01)
#define ISP_CE0_MATRIX_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_CE0_MATRIX_ENABLE_soft_reset_WIDTH (1)
#define ISP_CE0_MATRIX_ENABLE_soft_reset_MASK (0x10)
#define ISP_CE0_MATRIX_ENABLE_soft_reset_DISABLE (0x00)
#define ISP_CE0_MATRIX_ENABLE_soft_reset_ENABLE (0x01)

/*
* Register : ISP_CE0_MATRIX_RCOF00
*/

#define ISP_CE0_MATRIX_RCOF00_SIZE (16)
#define ISP_CE0_MATRIX_RCOF00_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x02)
#define ISP_CE0_MATRIX_RCOF00_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF00_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF00_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF00_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF00_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF00_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF00_rcof00_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF00_rcof00_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF00_rcof00_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_RCOF01
*/

#define ISP_CE0_MATRIX_RCOF01_SIZE (16)
#define ISP_CE0_MATRIX_RCOF01_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x04)
#define ISP_CE0_MATRIX_RCOF01_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF01_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF01_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF01_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF01_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF01_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF01_rcof01_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF01_rcof01_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF01_rcof01_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_RCOF02
*/

#define ISP_CE0_MATRIX_RCOF02_SIZE (16)
#define ISP_CE0_MATRIX_RCOF02_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x06)
#define ISP_CE0_MATRIX_RCOF02_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF02_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF02_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF02_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF02_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF02_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF02_rcof02_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF02_rcof02_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF02_rcof02_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_RCOF10
*/

#define ISP_CE0_MATRIX_RCOF10_SIZE (16)
#define ISP_CE0_MATRIX_RCOF10_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x08)
#define ISP_CE0_MATRIX_RCOF10_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF10_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF10_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF10_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF10_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF10_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF10_rcof10_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF10_rcof10_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF10_rcof10_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_RCOF11
*/

#define ISP_CE0_MATRIX_RCOF11_SIZE (16)
#define ISP_CE0_MATRIX_RCOF11_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x0a)
#define ISP_CE0_MATRIX_RCOF11_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF11_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF11_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF11_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF11_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF11_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF11_rcof11_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF11_rcof11_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF11_rcof11_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_RCOF12
*/

#define ISP_CE0_MATRIX_RCOF12_SIZE (16)
#define ISP_CE0_MATRIX_RCOF12_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x0c)
#define ISP_CE0_MATRIX_RCOF12_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF12_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF12_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF12_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF12_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF12_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF12_rcof12_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF12_rcof12_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF12_rcof12_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_RCOF20
*/

#define ISP_CE0_MATRIX_RCOF20_SIZE (16)
#define ISP_CE0_MATRIX_RCOF20_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x0e)
#define ISP_CE0_MATRIX_RCOF20_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF20_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF20_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF20_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF20_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF20_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF20_rcof20_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF20_rcof20_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF20_rcof20_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_RCOF21
*/

#define ISP_CE0_MATRIX_RCOF21_SIZE (16)
#define ISP_CE0_MATRIX_RCOF21_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x10)
#define ISP_CE0_MATRIX_RCOF21_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF21_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF21_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF21_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF21_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF21_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF21_rcof21_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF21_rcof21_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF21_rcof21_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_RCOF22
*/

#define ISP_CE0_MATRIX_RCOF22_SIZE (16)
#define ISP_CE0_MATRIX_RCOF22_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x12)
#define ISP_CE0_MATRIX_RCOF22_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_RCOF22_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF22_RWMASK (0xFFFF)
#define ISP_CE0_MATRIX_RCOF22_ROMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF22_WOMASK (0x0000)
#define ISP_CE0_MATRIX_RCOF22_UNUSED_MASK (0x0000)
#define ISP_CE0_MATRIX_RCOF22_rcof22_OFFSET (0x0000)
#define ISP_CE0_MATRIX_RCOF22_rcof22_WIDTH (16)
#define ISP_CE0_MATRIX_RCOF22_rcof22_MASK (0xFFFF)

/*
* Register : ISP_CE0_MATRIX_R_OFFSET
*/

#define ISP_CE0_MATRIX_R_OFFSET_SIZE (16)
#define ISP_CE0_MATRIX_R_OFFSET_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x14)
#define ISP_CE0_MATRIX_R_OFFSET_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_R_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_MATRIX_R_OFFSET_RWMASK (0x1FFF)
#define ISP_CE0_MATRIX_R_OFFSET_ROMASK (0x0000)
#define ISP_CE0_MATRIX_R_OFFSET_WOMASK (0x0000)
#define ISP_CE0_MATRIX_R_OFFSET_UNUSED_MASK (0xE000)
#define ISP_CE0_MATRIX_R_OFFSET_r_offset_OFFSET (0x0000)
#define ISP_CE0_MATRIX_R_OFFSET_r_offset_WIDTH (13)
#define ISP_CE0_MATRIX_R_OFFSET_r_offset_MASK (0x1FFF)

/*
* Register : ISP_CE0_MATRIX_G_OFFSET
*/

#define ISP_CE0_MATRIX_G_OFFSET_SIZE (16)
#define ISP_CE0_MATRIX_G_OFFSET_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x16)
#define ISP_CE0_MATRIX_G_OFFSET_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_G_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_MATRIX_G_OFFSET_RWMASK (0x1FFF)
#define ISP_CE0_MATRIX_G_OFFSET_ROMASK (0x0000)
#define ISP_CE0_MATRIX_G_OFFSET_WOMASK (0x0000)
#define ISP_CE0_MATRIX_G_OFFSET_UNUSED_MASK (0xE000)
#define ISP_CE0_MATRIX_G_OFFSET_g_offset_OFFSET (0x0000)
#define ISP_CE0_MATRIX_G_OFFSET_g_offset_WIDTH (13)
#define ISP_CE0_MATRIX_G_OFFSET_g_offset_MASK (0x1FFF)

/*
* Register : ISP_CE0_MATRIX_B_OFFSET
*/

#define ISP_CE0_MATRIX_B_OFFSET_SIZE (16)
#define ISP_CE0_MATRIX_B_OFFSET_OFFSET (pictorv2_in_ISP_CE0_MATRIX_BASE_ADDR + 0x18)
#define ISP_CE0_MATRIX_B_OFFSET_RESET_VALUE (0x0000)
#define ISP_CE0_MATRIX_B_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_MATRIX_B_OFFSET_RWMASK (0x1FFF)
#define ISP_CE0_MATRIX_B_OFFSET_ROMASK (0x0000)
#define ISP_CE0_MATRIX_B_OFFSET_WOMASK (0x0000)
#define ISP_CE0_MATRIX_B_OFFSET_UNUSED_MASK (0xE000)
#define ISP_CE0_MATRIX_B_OFFSET_b_offset_OFFSET (0x0000)
#define ISP_CE0_MATRIX_B_OFFSET_b_offset_WIDTH (13)
#define ISP_CE0_MATRIX_B_OFFSET_b_offset_MASK (0x1FFF)


/*
* Address Block : ISP_CE0_PIXDELAY_0
*/

#define pictorv2_in_ISP_CE0_PIXDELAY_0_BASE_ADDR            (0x6f0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_PIXDELAY_0_ENABLE
*/

#define ISP_CE0_PIXDELAY_0_ENABLE_SIZE (8)
#define ISP_CE0_PIXDELAY_0_ENABLE_OFFSET (pictorv2_in_ISP_CE0_PIXDELAY_0_BASE_ADDR + 0x00)
#define ISP_CE0_PIXDELAY_0_ENABLE_RESET_VALUE (0x01)
#define ISP_CE0_PIXDELAY_0_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_PIXDELAY_0_ENABLE_RWMASK (0x11)
#define ISP_CE0_PIXDELAY_0_ENABLE_ROMASK (0x00)
#define ISP_CE0_PIXDELAY_0_ENABLE_WOMASK (0x00)
#define ISP_CE0_PIXDELAY_0_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_enable_OFFSET (0x00)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_enable_WIDTH (1)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_enable_MASK (0x01)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_enable_DISABLE (0x00)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_enable_ENABLE (0x01)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_soft_reset_OFFSET (0x04)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_soft_reset_WIDTH (1)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_soft_reset_MASK (0x10)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_soft_reset_SOFT_RST_DISABLE (0x00)
#define ISP_CE0_PIXDELAY_0_ENABLE_pix_delay_soft_reset_SOFT_RST_ENABLE (0x01)


/*
* Address Block : ISP_CE0_PIXDELAY_1
*/

#define pictorv2_in_ISP_CE0_PIXDELAY_1_BASE_ADDR            (0x700U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_PIXDELAY_1_ENABLE
*/

#define ISP_CE0_PIXDELAY_1_ENABLE_SIZE (8)
#define ISP_CE0_PIXDELAY_1_ENABLE_OFFSET (pictorv2_in_ISP_CE0_PIXDELAY_1_BASE_ADDR + 0x00)
#define ISP_CE0_PIXDELAY_1_ENABLE_RESET_VALUE (0x01)
#define ISP_CE0_PIXDELAY_1_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_PIXDELAY_1_ENABLE_RWMASK (0x11)
#define ISP_CE0_PIXDELAY_1_ENABLE_ROMASK (0x00)
#define ISP_CE0_PIXDELAY_1_ENABLE_WOMASK (0x00)
#define ISP_CE0_PIXDELAY_1_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_enable_OFFSET (0x00)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_enable_WIDTH (1)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_enable_MASK (0x01)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_enable_DISABLE (0x00)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_enable_ENABLE (0x01)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_soft_reset_OFFSET (0x04)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_soft_reset_WIDTH (1)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_soft_reset_MASK (0x10)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_soft_reset_SOFT_RST_DISABLE (0x00)
#define ISP_CE0_PIXDELAY_1_ENABLE_pix_delay_soft_reset_SOFT_RST_ENABLE (0x01)


/*
* Address Block : ISP_CE0_SPECIALFX
*/

#define pictorv2_in_ISP_CE0_SPECIALFX_BASE_ADDR             (0x710U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_SPECIALFX_SOL_ENABLE
*/

#define ISP_CE0_SPECIALFX_SOL_ENABLE_SIZE (8)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_OFFSET (pictorv2_in_ISP_CE0_SPECIALFX_BASE_ADDR + 0x00)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_RWMASK (0x11)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_ROMASK (0x00)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_WOMASK (0x00)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_sol_enable_OFFSET (0x00)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_sol_enable_WIDTH (1)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_sol_enable_MASK (0x01)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_sol_enable_DISABLE_SOLAR (0x00)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_sol_enable_ENABLE_SOLAR (0x01)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_soft_reset_OFFSET (0x04)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_soft_reset_WIDTH (1)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_soft_reset_MASK (0x10)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_soft_reset_DISABLE_SOFT_RESET (0x00)
#define ISP_CE0_SPECIALFX_SOL_ENABLE_sfx_soft_reset_ENABLE_SOFT_RESET (0x01)

/*
* Register : ISP_CE0_SPECIALFX_NEG_ENABLE
*/

#define ISP_CE0_SPECIALFX_NEG_ENABLE_SIZE (8)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_OFFSET (pictorv2_in_ISP_CE0_SPECIALFX_BASE_ADDR + 0x02)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_BITFIELD_MASK (0x01)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_RWMASK (0x01)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_ROMASK (0x00)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_WOMASK (0x00)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_UNUSED_MASK (0xFE)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_sfx_neg_enable_OFFSET (0x00)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_sfx_neg_enable_WIDTH (1)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_sfx_neg_enable_MASK (0x01)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_sfx_neg_enable_DISABLE_NEG (0x00)
#define ISP_CE0_SPECIALFX_NEG_ENABLE_sfx_neg_enable_ENABLE_NEG (0x01)


/*
* Address Block : ISP_CE0_DITHER
*/

#define pictorv2_in_ISP_CE0_DITHER_BASE_ADDR                (0x720U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_DITHER_ENABLE
*/

#define ISP_CE0_DITHER_ENABLE_SIZE (8)
#define ISP_CE0_DITHER_ENABLE_OFFSET (pictorv2_in_ISP_CE0_DITHER_BASE_ADDR + 0x00)
#define ISP_CE0_DITHER_ENABLE_RESET_VALUE (0x01)
#define ISP_CE0_DITHER_ENABLE_BITFIELD_MASK (0x01)
#define ISP_CE0_DITHER_ENABLE_RWMASK (0x01)
#define ISP_CE0_DITHER_ENABLE_ROMASK (0x00)
#define ISP_CE0_DITHER_ENABLE_WOMASK (0x00)
#define ISP_CE0_DITHER_ENABLE_UNUSED_MASK (0xFE)
#define ISP_CE0_DITHER_ENABLE_enable_OFFSET (0x00)
#define ISP_CE0_DITHER_ENABLE_enable_WIDTH (1)
#define ISP_CE0_DITHER_ENABLE_enable_MASK (0x01)
#define ISP_CE0_DITHER_ENABLE_enable_DISABLE (0x00)
#define ISP_CE0_DITHER_ENABLE_enable_ENABLE (0x01)

/*
* Register : ISP_CE0_DITHER_GREEN_BITS
*/

#define ISP_CE0_DITHER_GREEN_BITS_SIZE (8)
#define ISP_CE0_DITHER_GREEN_BITS_OFFSET (pictorv2_in_ISP_CE0_DITHER_BASE_ADDR + 0x02)
#define ISP_CE0_DITHER_GREEN_BITS_RESET_VALUE (0x06)
#define ISP_CE0_DITHER_GREEN_BITS_BITFIELD_MASK (0x07)
#define ISP_CE0_DITHER_GREEN_BITS_RWMASK (0x07)
#define ISP_CE0_DITHER_GREEN_BITS_ROMASK (0x00)
#define ISP_CE0_DITHER_GREEN_BITS_WOMASK (0x00)
#define ISP_CE0_DITHER_GREEN_BITS_UNUSED_MASK (0xF8)
#define ISP_CE0_DITHER_GREEN_BITS_iGbits_OFFSET (0x00)
#define ISP_CE0_DITHER_GREEN_BITS_iGbits_WIDTH (3)
#define ISP_CE0_DITHER_GREEN_BITS_iGbits_MASK (0x07)

/*
* Register : ISP_CE0_DITHER_REDBLUE_BITS
*/

#define ISP_CE0_DITHER_REDBLUE_BITS_SIZE (8)
#define ISP_CE0_DITHER_REDBLUE_BITS_OFFSET (pictorv2_in_ISP_CE0_DITHER_BASE_ADDR + 0x04)
#define ISP_CE0_DITHER_REDBLUE_BITS_RESET_VALUE (0x05)
#define ISP_CE0_DITHER_REDBLUE_BITS_BITFIELD_MASK (0x07)
#define ISP_CE0_DITHER_REDBLUE_BITS_RWMASK (0x07)
#define ISP_CE0_DITHER_REDBLUE_BITS_ROMASK (0x00)
#define ISP_CE0_DITHER_REDBLUE_BITS_WOMASK (0x00)
#define ISP_CE0_DITHER_REDBLUE_BITS_UNUSED_MASK (0xF8)
#define ISP_CE0_DITHER_REDBLUE_BITS_iRBbits_OFFSET (0x00)
#define ISP_CE0_DITHER_REDBLUE_BITS_iRBbits_WIDTH (3)
#define ISP_CE0_DITHER_REDBLUE_BITS_iRBbits_MASK (0x07)


/*
* Address Block : ISP_CE0_UV_LOAD
*/

#define pictorv2_in_ISP_CE0_UV_LOAD_BASE_ADDR               (0x730U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_UV_LOAD_ENABLE
*/

#define ISP_CE0_UV_LOAD_ENABLE_SIZE (8)
#define ISP_CE0_UV_LOAD_ENABLE_OFFSET (pictorv2_in_ISP_CE0_UV_LOAD_BASE_ADDR + 0x00)
#define ISP_CE0_UV_LOAD_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_UV_LOAD_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_UV_LOAD_ENABLE_RWMASK (0x11)
#define ISP_CE0_UV_LOAD_ENABLE_ROMASK (0x00)
#define ISP_CE0_UV_LOAD_ENABLE_WOMASK (0x00)
#define ISP_CE0_UV_LOAD_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE0_UV_LOAD_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE0_UV_LOAD_SELECT
*/

#define ISP_CE0_UV_LOAD_SELECT_SIZE (8)
#define ISP_CE0_UV_LOAD_SELECT_OFFSET (pictorv2_in_ISP_CE0_UV_LOAD_BASE_ADDR + 0x02)
#define ISP_CE0_UV_LOAD_SELECT_RESET_VALUE (0x00)
#define ISP_CE0_UV_LOAD_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE0_UV_LOAD_SELECT_RWMASK (0x11)
#define ISP_CE0_UV_LOAD_SELECT_ROMASK (0x00)
#define ISP_CE0_UV_LOAD_SELECT_WOMASK (0x00)
#define ISP_CE0_UV_LOAD_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE0_UV_LOAD_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE0_GPSSCALER
*/

#define pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR             (0x780U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_GPSSCALER_ENABLE
*/

#define ISP_CE0_GPSSCALER_ENABLE_SIZE (8)
#define ISP_CE0_GPSSCALER_ENABLE_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x00)
#define ISP_CE0_GPSSCALER_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_GPSSCALER_ENABLE_BITFIELD_MASK (0x13)
#define ISP_CE0_GPSSCALER_ENABLE_RWMASK (0x13)
#define ISP_CE0_GPSSCALER_ENABLE_ROMASK (0x00)
#define ISP_CE0_GPSSCALER_ENABLE_WOMASK (0x00)
#define ISP_CE0_GPSSCALER_ENABLE_UNUSED_MASK (0xEC)
#define ISP_CE0_GPSSCALER_ENABLE_h_gps_enable_OFFSET (0x00)
#define ISP_CE0_GPSSCALER_ENABLE_h_gps_enable_WIDTH (1)
#define ISP_CE0_GPSSCALER_ENABLE_h_gps_enable_MASK (0x01)
#define ISP_CE0_GPSSCALER_ENABLE_h_gps_enable_DISABLE (0x00)
#define ISP_CE0_GPSSCALER_ENABLE_h_gps_enable_ENABLE (0x01)
#define ISP_CE0_GPSSCALER_ENABLE_v_gps_enable_OFFSET (0x01)
#define ISP_CE0_GPSSCALER_ENABLE_v_gps_enable_WIDTH (1)
#define ISP_CE0_GPSSCALER_ENABLE_v_gps_enable_MASK (0x02)
#define ISP_CE0_GPSSCALER_ENABLE_v_gps_enable_DISABLE (0x00)
#define ISP_CE0_GPSSCALER_ENABLE_v_gps_enable_ENABLE (0x01)
#define ISP_CE0_GPSSCALER_ENABLE_gps_soft_reset_OFFSET (0x04)
#define ISP_CE0_GPSSCALER_ENABLE_gps_soft_reset_WIDTH (1)
#define ISP_CE0_GPSSCALER_ENABLE_gps_soft_reset_MASK (0x10)
#define ISP_CE0_GPSSCALER_ENABLE_gps_soft_reset_DISABLE (0x00)
#define ISP_CE0_GPSSCALER_ENABLE_gps_soft_reset_ENABLE (0x01)

/*
* Register : ISP_CE0_GPSSCALER_DOWNSCALING
*/

#define ISP_CE0_GPSSCALER_DOWNSCALING_SIZE (8)
#define ISP_CE0_GPSSCALER_DOWNSCALING_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x02)
#define ISP_CE0_GPSSCALER_DOWNSCALING_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_DOWNSCALING_BITFIELD_MASK (0x01)
#define ISP_CE0_GPSSCALER_DOWNSCALING_RWMASK (0x01)
#define ISP_CE0_GPSSCALER_DOWNSCALING_ROMASK (0x00)
#define ISP_CE0_GPSSCALER_DOWNSCALING_WOMASK (0x00)
#define ISP_CE0_GPSSCALER_DOWNSCALING_UNUSED_MASK (0xFE)
#define ISP_CE0_GPSSCALER_DOWNSCALING_gps_downscaling_OFFSET (0x00)
#define ISP_CE0_GPSSCALER_DOWNSCALING_gps_downscaling_WIDTH (1)
#define ISP_CE0_GPSSCALER_DOWNSCALING_gps_downscaling_MASK (0x01)

/*
* Register : ISP_CE0_GPSSCALER_LR_BORD_PIXS
*/

#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_SIZE (32)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x04)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_h_left_border_pixs_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_h_left_border_pixs_WIDTH (16)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_h_left_border_pixs_MASK (0x0000FFFF)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_h_right_border_pixs_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_h_right_border_pixs_WIDTH (16)
#define ISP_CE0_GPSSCALER_LR_BORD_PIXS_h_right_border_pixs_MASK (0xFFFF0000)

/*
* Register : ISP_CE0_GPSSCALER_TB_BORD_LINES
*/

#define ISP_CE0_GPSSCALER_TB_BORD_LINES_SIZE (32)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x06)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_v_top_border_lines_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_v_top_border_lines_WIDTH (16)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_v_top_border_lines_MASK (0x0000FFFF)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_v_bottom_border_lines_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_v_bottom_border_lines_WIDTH (16)
#define ISP_CE0_GPSSCALER_TB_BORD_LINES_v_bottom_border_lines_MASK (0xFFFF0000)

/*
* Register : ISP_CE0_GPSSCALER_H_V_FIRTAPS
*/

#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_SIZE (16)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x08)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_RWMASK (0xFFFF)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_ROMASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_WOMASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_UNUSED_MASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_v_fir_taps_OFFSET (0x0000)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_v_fir_taps_WIDTH (8)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_v_fir_taps_MASK (0x00FF)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_h_fir_taps_OFFSET (0x0008)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_h_fir_taps_WIDTH (8)
#define ISP_CE0_GPSSCALER_H_V_FIRTAPS_h_fir_taps_MASK (0xFF00)

/*
* Register : ISP_CE0_GPSSCALER_H_V_IPSIZES
*/

#define ISP_CE0_GPSSCALER_H_V_IPSIZES_SIZE (32)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x0a)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_v_input_size_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_v_input_size_WIDTH (16)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_v_input_size_MASK (0x0000FFFF)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_h_input_size_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_h_input_size_WIDTH (16)
#define ISP_CE0_GPSSCALER_H_V_IPSIZES_h_input_size_MASK (0xFFFF0000)

/*
* Register : ISP_CE0_GPSSCALER_H_V_OPSIZES
*/

#define ISP_CE0_GPSSCALER_H_V_OPSIZES_SIZE (32)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x0c)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_v_input_size_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_v_input_size_WIDTH (16)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_v_input_size_MASK (0x0000FFFF)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_h_input_size_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_h_input_size_WIDTH (16)
#define ISP_CE0_GPSSCALER_H_V_OPSIZES_h_input_size_MASK (0xFFFF0000)

/*
* Register : ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS
*/

#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_SIZE (16)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x0e)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_RWMASK (0xFFFF)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_ROMASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_WOMASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_UNUSED_MASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_v_log_phys_polys_OFFSET (0x0000)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_v_log_phys_polys_WIDTH (8)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_v_log_phys_polys_MASK (0x00FF)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_h_log_phys_polys_OFFSET (0x0008)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_h_log_phys_polys_WIDTH (8)
#define ISP_CE0_GPSSCALER_H_V_LOGPHYSPOLYS_h_log_phys_polys_MASK (0xFF00)

/*
* Register : ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY
*/

#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_SIZE (16)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x10)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_RWMASK (0xFFFF)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_ROMASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_WOMASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_UNUSED_MASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_v_kickoff_delay_OFFSET (0x0000)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_v_kickoff_delay_WIDTH (8)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_v_kickoff_delay_MASK (0x00FF)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_h_kickoff_delay_OFFSET (0x0008)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_h_kickoff_delay_WIDTH (8)
#define ISP_CE0_GPSSCALER_H_V_KICKOFF_DLY_h_kickoff_delay_MASK (0xFF00)

/*
* Register : ISP_CE0_GPSSCALER_H_V_CROPFRAC
*/

#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_SIZE (32)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x12)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_v_crop_frac_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_v_crop_frac_WIDTH (16)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_v_crop_frac_MASK (0x0000FFFF)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_h_crop_frac_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_h_crop_frac_WIDTH (16)
#define ISP_CE0_GPSSCALER_H_V_CROPFRAC_h_crop_frac_MASK (0xFFFF0000)

/*
* Register : ISP_CE0_GPSSCALER_H_V_STEPBULK
*/

#define ISP_CE0_GPSSCALER_H_V_STEPBULK_SIZE (16)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x14)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_BITFIELD_MASK (0xFFFF)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_RWMASK (0xFFFF)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_ROMASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_WOMASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_UNUSED_MASK (0x0000)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_v_step_bulk_OFFSET (0x0000)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_v_step_bulk_WIDTH (8)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_v_step_bulk_MASK (0x00FF)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_h_step_bulk_OFFSET (0x0008)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_h_step_bulk_WIDTH (8)
#define ISP_CE0_GPSSCALER_H_V_STEPBULK_h_step_bulk_MASK (0xFF00)

/*
* Register : ISP_CE0_GPSSCALER_H_V_STEPFRAC
*/

#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_SIZE (32)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x16)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_v_step_frac_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_v_step_frac_WIDTH (16)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_v_step_frac_MASK (0x0000FFFF)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_h_step_frac_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_h_step_frac_WIDTH (16)
#define ISP_CE0_GPSSCALER_H_V_STEPFRAC_h_step_frac_MASK (0xFFFF0000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_0_3
*/

#define ISP_CE0_GPSSCALER_HCOF_0_3_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_0_3_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x18)
#define ISP_CE0_GPSSCALER_HCOF_0_3_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_0_3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_0_3_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_0_3_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_0_3_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_0_3_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr3_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr3_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr3_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr2_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr2_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr2_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr1_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr1_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr1_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr0_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr0_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_0_3_h_cof_set_wr0_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_4_7
*/

#define ISP_CE0_GPSSCALER_HCOF_4_7_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_4_7_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x1a)
#define ISP_CE0_GPSSCALER_HCOF_4_7_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_4_7_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_4_7_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_4_7_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_4_7_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_4_7_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr7_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr7_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr7_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr6_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr6_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr6_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr5_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr5_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr5_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr4_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr4_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_4_7_h_cof_set_wr4_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_8_11
*/

#define ISP_CE0_GPSSCALER_HCOF_8_11_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_8_11_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x1c)
#define ISP_CE0_GPSSCALER_HCOF_8_11_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_8_11_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_8_11_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_8_11_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_8_11_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_8_11_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr11_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr11_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr11_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr10_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr10_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr10_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr9_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr9_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr9_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr8_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr8_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_8_11_h_cof_set_wr8_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_12_15
*/

#define ISP_CE0_GPSSCALER_HCOF_12_15_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_12_15_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x1e)
#define ISP_CE0_GPSSCALER_HCOF_12_15_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_12_15_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_12_15_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_12_15_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_12_15_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_12_15_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr15_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr15_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr15_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr14_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr14_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr14_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr13_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr13_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr13_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr12_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr12_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_12_15_h_cof_set_wr12_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_16_19
*/

#define ISP_CE0_GPSSCALER_HCOF_16_19_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_16_19_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x20)
#define ISP_CE0_GPSSCALER_HCOF_16_19_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_16_19_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_16_19_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_16_19_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_16_19_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_16_19_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr19_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr19_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr19_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr18_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr18_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr18_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr17_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr17_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr17_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr16_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr16_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_16_19_h_cof_set_wr16_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_20_23
*/

#define ISP_CE0_GPSSCALER_HCOF_20_23_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_20_23_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x22)
#define ISP_CE0_GPSSCALER_HCOF_20_23_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_20_23_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_20_23_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_20_23_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_20_23_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_20_23_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr23_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr23_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr23_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr22_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr22_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr22_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr21_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr21_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr21_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr20_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr20_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_20_23_h_cof_set_wr20_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_24_27
*/

#define ISP_CE0_GPSSCALER_HCOF_24_27_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_24_27_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x24)
#define ISP_CE0_GPSSCALER_HCOF_24_27_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_24_27_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_24_27_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_24_27_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_24_27_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_24_27_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr27_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr27_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr27_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr26_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr26_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr26_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr25_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr25_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr25_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr24_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr24_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_24_27_h_cof_set_wr24_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_28_31
*/

#define ISP_CE0_GPSSCALER_HCOF_28_31_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_28_31_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x26)
#define ISP_CE0_GPSSCALER_HCOF_28_31_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_28_31_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_28_31_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_28_31_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_28_31_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_28_31_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr31_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr31_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr31_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr30_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr30_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr30_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr29_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr29_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr29_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr28_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr28_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_28_31_h_cof_set_wr28_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_32_35
*/

#define ISP_CE0_GPSSCALER_HCOF_32_35_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_32_35_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x28)
#define ISP_CE0_GPSSCALER_HCOF_32_35_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_32_35_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_32_35_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_32_35_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_32_35_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_32_35_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr35_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr35_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr35_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr34_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr34_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr34_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr33_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr33_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr33_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr32_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr32_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_32_35_h_cof_set_wr32_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_36_39
*/

#define ISP_CE0_GPSSCALER_HCOF_36_39_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_36_39_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x2a)
#define ISP_CE0_GPSSCALER_HCOF_36_39_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_36_39_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_36_39_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_36_39_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_36_39_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_36_39_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr39_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr39_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr39_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr38_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr38_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr38_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr37_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr37_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr37_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr36_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr36_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_36_39_h_cof_set_wr36_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_40_43
*/

#define ISP_CE0_GPSSCALER_HCOF_40_43_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_40_43_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x2c)
#define ISP_CE0_GPSSCALER_HCOF_40_43_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_40_43_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_40_43_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_40_43_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_40_43_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_40_43_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr43_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr43_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr43_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr42_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr42_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr42_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr41_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr41_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr41_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr40_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr40_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_40_43_h_cof_set_wr40_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_44_47
*/

#define ISP_CE0_GPSSCALER_HCOF_44_47_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_44_47_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x2e)
#define ISP_CE0_GPSSCALER_HCOF_44_47_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_44_47_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_44_47_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_44_47_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_44_47_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_44_47_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr47_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr47_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr47_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr46_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr46_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr46_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr45_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr45_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr45_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr44_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr44_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_44_47_h_cof_set_wr44_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_48_51
*/

#define ISP_CE0_GPSSCALER_HCOF_48_51_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_48_51_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x30)
#define ISP_CE0_GPSSCALER_HCOF_48_51_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_48_51_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_48_51_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_48_51_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_48_51_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_48_51_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr51_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr51_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr51_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr50_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr50_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr50_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr49_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr49_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr49_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr48_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr48_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_48_51_h_cof_set_wr48_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_52_55
*/

#define ISP_CE0_GPSSCALER_HCOF_52_55_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_52_55_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x32)
#define ISP_CE0_GPSSCALER_HCOF_52_55_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_52_55_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_52_55_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_52_55_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_52_55_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_52_55_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr55_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr55_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr55_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr54_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr54_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr54_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr53_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr53_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr53_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr52_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr52_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_52_55_h_cof_set_wr52_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_56_59
*/

#define ISP_CE0_GPSSCALER_HCOF_56_59_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_56_59_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x34)
#define ISP_CE0_GPSSCALER_HCOF_56_59_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_56_59_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_56_59_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_56_59_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_56_59_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_56_59_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr59_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr59_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr59_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr58_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr58_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr58_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr57_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr57_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr57_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr56_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr56_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_56_59_h_cof_set_wr56_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_HCOF_60_63
*/

#define ISP_CE0_GPSSCALER_HCOF_60_63_SIZE (32)
#define ISP_CE0_GPSSCALER_HCOF_60_63_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x36)
#define ISP_CE0_GPSSCALER_HCOF_60_63_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_HCOF_60_63_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_60_63_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_HCOF_60_63_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_60_63_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_60_63_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr63_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr63_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr63_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr62_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr62_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr62_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr61_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr61_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr61_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr60_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr60_WIDTH (8)
#define ISP_CE0_GPSSCALER_HCOF_60_63_h_cof_set_wr60_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_0_3
*/

#define ISP_CE0_GPSSCALER_VCOF_0_3_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_0_3_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x38)
#define ISP_CE0_GPSSCALER_VCOF_0_3_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_0_3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_0_3_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_0_3_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_0_3_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_0_3_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr3_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr3_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr3_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr2_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr2_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr2_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr1_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr1_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr1_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr0_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr0_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_0_3_v_cof_set_wr0_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_4_7
*/

#define ISP_CE0_GPSSCALER_VCOF_4_7_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_4_7_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x3a)
#define ISP_CE0_GPSSCALER_VCOF_4_7_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_4_7_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_4_7_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_4_7_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_4_7_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_4_7_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr7_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr7_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr7_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr6_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr6_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr6_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr5_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr5_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr5_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr4_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr4_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_4_7_v_cof_set_wr4_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_8_11
*/

#define ISP_CE0_GPSSCALER_VCOF_8_11_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_8_11_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x3c)
#define ISP_CE0_GPSSCALER_VCOF_8_11_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_8_11_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_8_11_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_8_11_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_8_11_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_8_11_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr11_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr11_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr11_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr10_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr10_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr10_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr9_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr9_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr9_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr8_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr8_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_8_11_v_cof_set_wr8_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_12_15
*/

#define ISP_CE0_GPSSCALER_VCOF_12_15_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_12_15_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x3e)
#define ISP_CE0_GPSSCALER_VCOF_12_15_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_12_15_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_12_15_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_12_15_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_12_15_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_12_15_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr15_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr15_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr15_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr14_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr14_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr14_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr13_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr13_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr13_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr12_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr12_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_12_15_v_cof_set_wr12_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_16_19
*/

#define ISP_CE0_GPSSCALER_VCOF_16_19_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_16_19_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x40)
#define ISP_CE0_GPSSCALER_VCOF_16_19_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_16_19_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_16_19_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_16_19_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_16_19_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_16_19_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr19_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr19_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr19_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr18_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr18_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr18_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr17_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr17_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr17_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr16_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr16_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_16_19_v_cof_set_wr16_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_20_23
*/

#define ISP_CE0_GPSSCALER_VCOF_20_23_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_20_23_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x42)
#define ISP_CE0_GPSSCALER_VCOF_20_23_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_20_23_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_20_23_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_20_23_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_20_23_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_20_23_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr23_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr23_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr23_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr22_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr22_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr22_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr21_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr21_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr21_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr20_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr20_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_20_23_v_cof_set_wr20_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_24_27
*/

#define ISP_CE0_GPSSCALER_VCOF_24_27_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_24_27_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x44)
#define ISP_CE0_GPSSCALER_VCOF_24_27_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_24_27_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_24_27_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_24_27_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_24_27_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_24_27_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr27_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr27_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr27_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr26_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr26_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr26_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr25_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr25_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr25_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr24_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr24_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_24_27_v_cof_set_wr24_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_28_31
*/

#define ISP_CE0_GPSSCALER_VCOF_28_31_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_28_31_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x46)
#define ISP_CE0_GPSSCALER_VCOF_28_31_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_28_31_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_28_31_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_28_31_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_28_31_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_28_31_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr31_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr31_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr31_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr30_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr30_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr30_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr29_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr29_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr29_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr28_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr28_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_28_31_v_cof_set_wr28_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_32_35
*/

#define ISP_CE0_GPSSCALER_VCOF_32_35_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_32_35_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x48)
#define ISP_CE0_GPSSCALER_VCOF_32_35_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_32_35_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_32_35_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_32_35_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_32_35_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_32_35_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr35_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr35_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr35_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr34_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr34_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr34_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr33_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr33_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr33_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr32_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr32_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_32_35_v_cof_set_wr32_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_36_39
*/

#define ISP_CE0_GPSSCALER_VCOF_36_39_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_36_39_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x4a)
#define ISP_CE0_GPSSCALER_VCOF_36_39_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_36_39_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_36_39_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_36_39_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_36_39_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_36_39_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr39_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr39_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr39_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr38_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr38_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr38_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr37_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr37_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr37_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr36_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr36_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_36_39_v_cof_set_wr36_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_40_43
*/

#define ISP_CE0_GPSSCALER_VCOF_40_43_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_40_43_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x4c)
#define ISP_CE0_GPSSCALER_VCOF_40_43_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_40_43_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_40_43_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_40_43_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_40_43_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_40_43_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr43_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr43_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr43_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr42_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr42_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr42_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr41_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr41_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr41_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr40_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr40_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_40_43_v_cof_set_wr40_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_44_47
*/

#define ISP_CE0_GPSSCALER_VCOF_44_47_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_44_47_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x4e)
#define ISP_CE0_GPSSCALER_VCOF_44_47_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_44_47_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_44_47_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_44_47_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_44_47_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_44_47_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr47_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr47_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr47_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr46_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr46_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr46_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr45_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr45_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr45_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr44_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr44_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_44_47_v_cof_set_wr44_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_48_51
*/

#define ISP_CE0_GPSSCALER_VCOF_48_51_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_48_51_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x50)
#define ISP_CE0_GPSSCALER_VCOF_48_51_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_48_51_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_48_51_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_48_51_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_48_51_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_48_51_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr51_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr51_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr51_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr50_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr50_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr50_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr49_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr49_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr49_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr48_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr48_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_48_51_v_cof_set_wr48_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_52_55
*/

#define ISP_CE0_GPSSCALER_VCOF_52_55_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_52_55_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x52)
#define ISP_CE0_GPSSCALER_VCOF_52_55_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_52_55_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_52_55_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_52_55_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_52_55_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_52_55_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr55_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr55_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr55_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr54_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr54_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr54_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr53_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr53_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr53_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr52_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr52_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_52_55_v_cof_set_wr52_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_56_59
*/

#define ISP_CE0_GPSSCALER_VCOF_56_59_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_56_59_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x54)
#define ISP_CE0_GPSSCALER_VCOF_56_59_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_56_59_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_56_59_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_56_59_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_56_59_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_56_59_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr59_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr59_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr59_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr58_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr58_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr58_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr57_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr57_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr57_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr56_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr56_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_56_59_v_cof_set_wr56_MASK (0xFF000000)

/*
* Register : ISP_CE0_GPSSCALER_VCOF_60_63
*/

#define ISP_CE0_GPSSCALER_VCOF_60_63_SIZE (32)
#define ISP_CE0_GPSSCALER_VCOF_60_63_OFFSET (pictorv2_in_ISP_CE0_GPSSCALER_BASE_ADDR + 0x56)
#define ISP_CE0_GPSSCALER_VCOF_60_63_RESET_VALUE (0x0000)
#define ISP_CE0_GPSSCALER_VCOF_60_63_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_60_63_RWMASK (0xFFFFFFFF)
#define ISP_CE0_GPSSCALER_VCOF_60_63_ROMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_60_63_WOMASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_60_63_UNUSED_MASK (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr63_OFFSET (0x00000000)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr63_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr63_MASK (0x000000FF)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr62_OFFSET (0x00000008)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr62_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr62_MASK (0x0000FF00)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr61_OFFSET (0x00000010)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr61_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr61_MASK (0x00FF0000)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr60_OFFSET (0x00000018)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr60_WIDTH (8)
#define ISP_CE0_GPSSCALER_VCOF_60_63_v_cof_set_wr60_MASK (0xFF000000)


/*
* Address Block : ISP_CE0_CODER
*/

#define pictorv2_in_ISP_CE0_CODER_BASE_ADDR                 (0x800U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE0_CODER_ENABLE
*/

#define ISP_CE0_CODER_ENABLE_SIZE (8)
#define ISP_CE0_CODER_ENABLE_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x00)
#define ISP_CE0_CODER_ENABLE_RESET_VALUE (0x00)
#define ISP_CE0_CODER_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE0_CODER_ENABLE_RWMASK (0x11)
#define ISP_CE0_CODER_ENABLE_ROMASK (0x00)
#define ISP_CE0_CODER_ENABLE_WOMASK (0x00)
#define ISP_CE0_CODER_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE0_CODER_ENABLE_enable_OFFSET (0x00)
#define ISP_CE0_CODER_ENABLE_enable_WIDTH (1)
#define ISP_CE0_CODER_ENABLE_enable_MASK (0x01)
#define ISP_CE0_CODER_ENABLE_enable_DISABLE (0x00)
#define ISP_CE0_CODER_ENABLE_enable_ENABLE (0x01)
#define ISP_CE0_CODER_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_CE0_CODER_ENABLE_soft_reset_WIDTH (1)
#define ISP_CE0_CODER_ENABLE_soft_reset_MASK (0x10)
#define ISP_CE0_CODER_ENABLE_soft_reset_DISABLE (0x00)
#define ISP_CE0_CODER_ENABLE_soft_reset_ENABLE (0x01)

/*
* Register : ISP_CE0_CODER_FORMAT
*/

#define ISP_CE0_CODER_FORMAT_SIZE (8)
#define ISP_CE0_CODER_FORMAT_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x02)
#define ISP_CE0_CODER_FORMAT_RESET_VALUE (0x00)
#define ISP_CE0_CODER_FORMAT_BITFIELD_MASK (0x07)
#define ISP_CE0_CODER_FORMAT_RWMASK (0x07)
#define ISP_CE0_CODER_FORMAT_ROMASK (0x00)
#define ISP_CE0_CODER_FORMAT_WOMASK (0x00)
#define ISP_CE0_CODER_FORMAT_UNUSED_MASK (0xF8)
#define ISP_CE0_CODER_FORMAT_yuv_format_OFFSET (0x00)
#define ISP_CE0_CODER_FORMAT_yuv_format_WIDTH (3)
#define ISP_CE0_CODER_FORMAT_yuv_format_MASK (0x07)
#define ISP_CE0_CODER_FORMAT_yuv_format_B_0x0 (0x00)
#define ISP_CE0_CODER_FORMAT_yuv_format_B_0x1 (0x01)
#define ISP_CE0_CODER_FORMAT_yuv_format_B_0x2 (0x02)
#define ISP_CE0_CODER_FORMAT_yuv_format_B_0x3 (0x03)
#define ISP_CE0_CODER_FORMAT_yuv_format_B_0x4 (0x04)
#define ISP_CE0_CODER_FORMAT_yuv_format_B_0x5 (0x05)

/*
* Register : ISP_CE0_CODER_Y_COF00
*/

#define ISP_CE0_CODER_Y_COF00_SIZE (16)
#define ISP_CE0_CODER_Y_COF00_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x04)
#define ISP_CE0_CODER_Y_COF00_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_Y_COF00_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_Y_COF00_RWMASK (0x1FFF)
#define ISP_CE0_CODER_Y_COF00_ROMASK (0x0000)
#define ISP_CE0_CODER_Y_COF00_WOMASK (0x0000)
#define ISP_CE0_CODER_Y_COF00_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_Y_COF00_yuv_y_cof00_OFFSET (0x0000)
#define ISP_CE0_CODER_Y_COF00_yuv_y_cof00_WIDTH (13)
#define ISP_CE0_CODER_Y_COF00_yuv_y_cof00_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_Y_COF01
*/

#define ISP_CE0_CODER_Y_COF01_SIZE (16)
#define ISP_CE0_CODER_Y_COF01_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x06)
#define ISP_CE0_CODER_Y_COF01_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_Y_COF01_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_Y_COF01_RWMASK (0x1FFF)
#define ISP_CE0_CODER_Y_COF01_ROMASK (0x0000)
#define ISP_CE0_CODER_Y_COF01_WOMASK (0x0000)
#define ISP_CE0_CODER_Y_COF01_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_Y_COF01_yuv_y_cof01_OFFSET (0x0000)
#define ISP_CE0_CODER_Y_COF01_yuv_y_cof01_WIDTH (13)
#define ISP_CE0_CODER_Y_COF01_yuv_y_cof01_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_Y_COF02
*/

#define ISP_CE0_CODER_Y_COF02_SIZE (16)
#define ISP_CE0_CODER_Y_COF02_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x08)
#define ISP_CE0_CODER_Y_COF02_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_Y_COF02_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_Y_COF02_RWMASK (0x1FFF)
#define ISP_CE0_CODER_Y_COF02_ROMASK (0x0000)
#define ISP_CE0_CODER_Y_COF02_WOMASK (0x0000)
#define ISP_CE0_CODER_Y_COF02_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_Y_COF02_yuv_y_cof02_OFFSET (0x0000)
#define ISP_CE0_CODER_Y_COF02_yuv_y_cof02_WIDTH (13)
#define ISP_CE0_CODER_Y_COF02_yuv_y_cof02_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_CB_COF10
*/

#define ISP_CE0_CODER_CB_COF10_SIZE (16)
#define ISP_CE0_CODER_CB_COF10_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x0a)
#define ISP_CE0_CODER_CB_COF10_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CB_COF10_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_CB_COF10_RWMASK (0x1FFF)
#define ISP_CE0_CODER_CB_COF10_ROMASK (0x0000)
#define ISP_CE0_CODER_CB_COF10_WOMASK (0x0000)
#define ISP_CE0_CODER_CB_COF10_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_CB_COF10_yuv_cb_cof10_OFFSET (0x0000)
#define ISP_CE0_CODER_CB_COF10_yuv_cb_cof10_WIDTH (13)
#define ISP_CE0_CODER_CB_COF10_yuv_cb_cof10_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_CB_COF11
*/

#define ISP_CE0_CODER_CB_COF11_SIZE (16)
#define ISP_CE0_CODER_CB_COF11_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x0c)
#define ISP_CE0_CODER_CB_COF11_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CB_COF11_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_CB_COF11_RWMASK (0x1FFF)
#define ISP_CE0_CODER_CB_COF11_ROMASK (0x0000)
#define ISP_CE0_CODER_CB_COF11_WOMASK (0x0000)
#define ISP_CE0_CODER_CB_COF11_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_CB_COF11_yuv_cb_cof11_OFFSET (0x0000)
#define ISP_CE0_CODER_CB_COF11_yuv_cb_cof11_WIDTH (13)
#define ISP_CE0_CODER_CB_COF11_yuv_cb_cof11_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_CB_COF12
*/

#define ISP_CE0_CODER_CB_COF12_SIZE (16)
#define ISP_CE0_CODER_CB_COF12_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x0e)
#define ISP_CE0_CODER_CB_COF12_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CB_COF12_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_CB_COF12_RWMASK (0x1FFF)
#define ISP_CE0_CODER_CB_COF12_ROMASK (0x0000)
#define ISP_CE0_CODER_CB_COF12_WOMASK (0x0000)
#define ISP_CE0_CODER_CB_COF12_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_CB_COF12_yuv_cb_cof12_OFFSET (0x0000)
#define ISP_CE0_CODER_CB_COF12_yuv_cb_cof12_WIDTH (13)
#define ISP_CE0_CODER_CB_COF12_yuv_cb_cof12_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_CR_COF20
*/

#define ISP_CE0_CODER_CR_COF20_SIZE (16)
#define ISP_CE0_CODER_CR_COF20_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x10)
#define ISP_CE0_CODER_CR_COF20_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CR_COF20_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_CR_COF20_RWMASK (0x1FFF)
#define ISP_CE0_CODER_CR_COF20_ROMASK (0x0000)
#define ISP_CE0_CODER_CR_COF20_WOMASK (0x0000)
#define ISP_CE0_CODER_CR_COF20_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_CR_COF20_yuv_cr_cof20_OFFSET (0x0000)
#define ISP_CE0_CODER_CR_COF20_yuv_cr_cof20_WIDTH (13)
#define ISP_CE0_CODER_CR_COF20_yuv_cr_cof20_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_CR_COF21
*/

#define ISP_CE0_CODER_CR_COF21_SIZE (16)
#define ISP_CE0_CODER_CR_COF21_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x12)
#define ISP_CE0_CODER_CR_COF21_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CR_COF21_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_CR_COF21_RWMASK (0x1FFF)
#define ISP_CE0_CODER_CR_COF21_ROMASK (0x0000)
#define ISP_CE0_CODER_CR_COF21_WOMASK (0x0000)
#define ISP_CE0_CODER_CR_COF21_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_CR_COF21_yuv_cr_cof21_OFFSET (0x0000)
#define ISP_CE0_CODER_CR_COF21_yuv_cr_cof21_WIDTH (13)
#define ISP_CE0_CODER_CR_COF21_yuv_cr_cof21_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_CR_COF22
*/

#define ISP_CE0_CODER_CR_COF22_SIZE (16)
#define ISP_CE0_CODER_CR_COF22_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x14)
#define ISP_CE0_CODER_CR_COF22_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CR_COF22_BITFIELD_MASK (0x1FFF)
#define ISP_CE0_CODER_CR_COF22_RWMASK (0x1FFF)
#define ISP_CE0_CODER_CR_COF22_ROMASK (0x0000)
#define ISP_CE0_CODER_CR_COF22_WOMASK (0x0000)
#define ISP_CE0_CODER_CR_COF22_UNUSED_MASK (0xE000)
#define ISP_CE0_CODER_CR_COF22_yuv_cr_cof22_OFFSET (0x0000)
#define ISP_CE0_CODER_CR_COF22_yuv_cr_cof22_WIDTH (13)
#define ISP_CE0_CODER_CR_COF22_yuv_cr_cof22_MASK (0x1FFF)

/*
* Register : ISP_CE0_CODER_YFLOOR
*/

#define ISP_CE0_CODER_YFLOOR_SIZE (16)
#define ISP_CE0_CODER_YFLOOR_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x16)
#define ISP_CE0_CODER_YFLOOR_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_YFLOOR_BITFIELD_MASK (0x01FF)
#define ISP_CE0_CODER_YFLOOR_RWMASK (0x01FF)
#define ISP_CE0_CODER_YFLOOR_ROMASK (0x0000)
#define ISP_CE0_CODER_YFLOOR_WOMASK (0x0000)
#define ISP_CE0_CODER_YFLOOR_UNUSED_MASK (0xFE00)
#define ISP_CE0_CODER_YFLOOR_yuv_yfloor_OFFSET (0x0000)
#define ISP_CE0_CODER_YFLOOR_yuv_yfloor_WIDTH (9)
#define ISP_CE0_CODER_YFLOOR_yuv_yfloor_MASK (0x01FF)

/*
* Register : ISP_CE0_CODER_CBFLOOR
*/

#define ISP_CE0_CODER_CBFLOOR_SIZE (16)
#define ISP_CE0_CODER_CBFLOOR_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x18)
#define ISP_CE0_CODER_CBFLOOR_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CBFLOOR_BITFIELD_MASK (0x01FF)
#define ISP_CE0_CODER_CBFLOOR_RWMASK (0x01FF)
#define ISP_CE0_CODER_CBFLOOR_ROMASK (0x0000)
#define ISP_CE0_CODER_CBFLOOR_WOMASK (0x0000)
#define ISP_CE0_CODER_CBFLOOR_UNUSED_MASK (0xFE00)
#define ISP_CE0_CODER_CBFLOOR_yuv_cbfloor_OFFSET (0x0000)
#define ISP_CE0_CODER_CBFLOOR_yuv_cbfloor_WIDTH (9)
#define ISP_CE0_CODER_CBFLOOR_yuv_cbfloor_MASK (0x01FF)

/*
* Register : ISP_CE0_CODER_CRFLOOR
*/

#define ISP_CE0_CODER_CRFLOOR_SIZE (16)
#define ISP_CE0_CODER_CRFLOOR_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x1a)
#define ISP_CE0_CODER_CRFLOOR_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CRFLOOR_BITFIELD_MASK (0x01FF)
#define ISP_CE0_CODER_CRFLOOR_RWMASK (0x01FF)
#define ISP_CE0_CODER_CRFLOOR_ROMASK (0x0000)
#define ISP_CE0_CODER_CRFLOOR_WOMASK (0x0000)
#define ISP_CE0_CODER_CRFLOOR_UNUSED_MASK (0xFE00)
#define ISP_CE0_CODER_CRFLOOR_yuv_crfloor_OFFSET (0x0000)
#define ISP_CE0_CODER_CRFLOOR_yuv_crfloor_WIDTH (9)
#define ISP_CE0_CODER_CRFLOOR_yuv_crfloor_MASK (0x01FF)

/*
* Register : ISP_CE0_CODER_CB_COLOUR_EFFECT
*/

#define ISP_CE0_CODER_CB_COLOUR_EFFECT_SIZE (16)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x1c)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_BITFIELD_MASK (0x0707)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_RWMASK (0x0707)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_ROMASK (0x0000)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_WOMASK (0x0000)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_UNUSED_MASK (0xF8F8)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_lo_OFFSET (0x0000)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_lo_WIDTH (3)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_lo_MASK (0x0007)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_hi_OFFSET (0x0008)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_hi_WIDTH (3)
#define ISP_CE0_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_hi_MASK (0x0700)

/*
* Register : ISP_CE0_CODER_CR_COLOUR_EFFECT
*/

#define ISP_CE0_CODER_CR_COLOUR_EFFECT_SIZE (16)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x1e)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_RESET_VALUE (0x0000)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_BITFIELD_MASK (0x0707)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_RWMASK (0x0707)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_ROMASK (0x0000)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_WOMASK (0x0000)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_UNUSED_MASK (0xF8F8)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_lo_OFFSET (0x0000)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_lo_WIDTH (3)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_lo_MASK (0x0007)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_hi_OFFSET (0x0008)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_hi_WIDTH (3)
#define ISP_CE0_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_hi_MASK (0x0700)

/*
* Register : ISP_CE0_CODER_CH0_MIN_CLIP
*/

#define ISP_CE0_CODER_CH0_MIN_CLIP_SIZE (16)
#define ISP_CE0_CODER_CH0_MIN_CLIP_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x20)
#define ISP_CE0_CODER_CH0_MIN_CLIP_RESET_VALUE (0x00)
#define ISP_CE0_CODER_CH0_MIN_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE0_CODER_CH0_MIN_CLIP_RWMASK (0x0FFF)
#define ISP_CE0_CODER_CH0_MIN_CLIP_ROMASK (0x0000)
#define ISP_CE0_CODER_CH0_MIN_CLIP_WOMASK (0x0000)
#define ISP_CE0_CODER_CH0_MIN_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE0_CODER_CH0_MIN_CLIP_yuv_ch0_min_clip_OFFSET (0x0000)
#define ISP_CE0_CODER_CH0_MIN_CLIP_yuv_ch0_min_clip_WIDTH (12)
#define ISP_CE0_CODER_CH0_MIN_CLIP_yuv_ch0_min_clip_MASK (0x0FFF)

/*
* Register : ISP_CE0_CODER_CH0_MAX_CLIP
*/

#define ISP_CE0_CODER_CH0_MAX_CLIP_SIZE (16)
#define ISP_CE0_CODER_CH0_MAX_CLIP_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x22)
#define ISP_CE0_CODER_CH0_MAX_CLIP_RESET_VALUE (0x00)
#define ISP_CE0_CODER_CH0_MAX_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE0_CODER_CH0_MAX_CLIP_RWMASK (0x0FFF)
#define ISP_CE0_CODER_CH0_MAX_CLIP_ROMASK (0x0000)
#define ISP_CE0_CODER_CH0_MAX_CLIP_WOMASK (0x0000)
#define ISP_CE0_CODER_CH0_MAX_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE0_CODER_CH0_MAX_CLIP_yuv_ch0_max_clip_OFFSET (0x0000)
#define ISP_CE0_CODER_CH0_MAX_CLIP_yuv_ch0_max_clip_WIDTH (12)
#define ISP_CE0_CODER_CH0_MAX_CLIP_yuv_ch0_max_clip_MASK (0x0FFF)

/*
* Register : ISP_CE0_CODER_CH1_MIN_CLIP
*/

#define ISP_CE0_CODER_CH1_MIN_CLIP_SIZE (16)
#define ISP_CE0_CODER_CH1_MIN_CLIP_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x24)
#define ISP_CE0_CODER_CH1_MIN_CLIP_RESET_VALUE (0x00)
#define ISP_CE0_CODER_CH1_MIN_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE0_CODER_CH1_MIN_CLIP_RWMASK (0x0FFF)
#define ISP_CE0_CODER_CH1_MIN_CLIP_ROMASK (0x0000)
#define ISP_CE0_CODER_CH1_MIN_CLIP_WOMASK (0x0000)
#define ISP_CE0_CODER_CH1_MIN_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE0_CODER_CH1_MIN_CLIP_yuv_ch1_min_clip_OFFSET (0x0000)
#define ISP_CE0_CODER_CH1_MIN_CLIP_yuv_ch1_min_clip_WIDTH (12)
#define ISP_CE0_CODER_CH1_MIN_CLIP_yuv_ch1_min_clip_MASK (0x0FFF)

/*
* Register : ISP_CE0_CODER_CH1_MAX_CLIP
*/

#define ISP_CE0_CODER_CH1_MAX_CLIP_SIZE (16)
#define ISP_CE0_CODER_CH1_MAX_CLIP_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x26)
#define ISP_CE0_CODER_CH1_MAX_CLIP_RESET_VALUE (0x00)
#define ISP_CE0_CODER_CH1_MAX_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE0_CODER_CH1_MAX_CLIP_RWMASK (0x0FFF)
#define ISP_CE0_CODER_CH1_MAX_CLIP_ROMASK (0x0000)
#define ISP_CE0_CODER_CH1_MAX_CLIP_WOMASK (0x0000)
#define ISP_CE0_CODER_CH1_MAX_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE0_CODER_CH1_MAX_CLIP_yuv_ch1_max_clip_OFFSET (0x0000)
#define ISP_CE0_CODER_CH1_MAX_CLIP_yuv_ch1_max_clip_WIDTH (12)
#define ISP_CE0_CODER_CH1_MAX_CLIP_yuv_ch1_max_clip_MASK (0x0FFF)

/*
* Register : ISP_CE0_CODER_CH2_MIN_CLIP
*/

#define ISP_CE0_CODER_CH2_MIN_CLIP_SIZE (16)
#define ISP_CE0_CODER_CH2_MIN_CLIP_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x28)
#define ISP_CE0_CODER_CH2_MIN_CLIP_RESET_VALUE (0x00)
#define ISP_CE0_CODER_CH2_MIN_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE0_CODER_CH2_MIN_CLIP_RWMASK (0x0FFF)
#define ISP_CE0_CODER_CH2_MIN_CLIP_ROMASK (0x0000)
#define ISP_CE0_CODER_CH2_MIN_CLIP_WOMASK (0x0000)
#define ISP_CE0_CODER_CH2_MIN_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE0_CODER_CH2_MIN_CLIP_yuv_ch2_min_clip_OFFSET (0x0000)
#define ISP_CE0_CODER_CH2_MIN_CLIP_yuv_ch2_min_clip_WIDTH (12)
#define ISP_CE0_CODER_CH2_MIN_CLIP_yuv_ch2_min_clip_MASK (0x0FFF)

/*
* Register : ISP_CE0_CODER_CH2_MAX_CLIP
*/

#define ISP_CE0_CODER_CH2_MAX_CLIP_SIZE (16)
#define ISP_CE0_CODER_CH2_MAX_CLIP_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x2a)
#define ISP_CE0_CODER_CH2_MAX_CLIP_RESET_VALUE (0x00)
#define ISP_CE0_CODER_CH2_MAX_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE0_CODER_CH2_MAX_CLIP_RWMASK (0x0FFF)
#define ISP_CE0_CODER_CH2_MAX_CLIP_ROMASK (0x0000)
#define ISP_CE0_CODER_CH2_MAX_CLIP_WOMASK (0x0000)
#define ISP_CE0_CODER_CH2_MAX_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE0_CODER_CH2_MAX_CLIP_yuv_ch2_max_clip_OFFSET (0x0000)
#define ISP_CE0_CODER_CH2_MAX_CLIP_yuv_ch2_max_clip_WIDTH (12)
#define ISP_CE0_CODER_CH2_MAX_CLIP_yuv_ch2_max_clip_MASK (0x0FFF)

/*
* Register : ISP_CE0_CODER_RAW_NONACTIVE
*/

#define ISP_CE0_CODER_RAW_NONACTIVE_SIZE (8)
#define ISP_CE0_CODER_RAW_NONACTIVE_OFFSET (pictorv2_in_ISP_CE0_CODER_BASE_ADDR + 0x2c)
#define ISP_CE0_CODER_RAW_NONACTIVE_RESET_VALUE (0x00)
#define ISP_CE0_CODER_RAW_NONACTIVE_BITFIELD_MASK (0x01)
#define ISP_CE0_CODER_RAW_NONACTIVE_RWMASK (0x01)
#define ISP_CE0_CODER_RAW_NONACTIVE_ROMASK (0x00)
#define ISP_CE0_CODER_RAW_NONACTIVE_WOMASK (0x00)
#define ISP_CE0_CODER_RAW_NONACTIVE_UNUSED_MASK (0xFE)
#define ISP_CE0_CODER_RAW_NONACTIVE_yuv_raw_nonactive_OFFSET (0x00)
#define ISP_CE0_CODER_RAW_NONACTIVE_yuv_raw_nonactive_WIDTH (1)
#define ISP_CE0_CODER_RAW_NONACTIVE_yuv_raw_nonactive_MASK (0x01)
#define ISP_CE0_CODER_RAW_NONACTIVE_yuv_raw_nonactive_DISABLE (0x00)
#define ISP_CE0_CODER_RAW_NONACTIVE_yuv_raw_nonactive_ENABLE (0x01)


/*
* Address Block : ISP_OPF0
*/

#define pictorv2_in_ISP_OPF0_BASE_ADDR                      (0x830U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_OPF0_ENABLE
*/

#define ISP_OPF0_ENABLE_SIZE           (8)
#define ISP_OPF0_ENABLE_OFFSET         (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x00)
#define ISP_OPF0_ENABLE_RESET_VALUE    (0x00)
#define ISP_OPF0_ENABLE_BITFIELD_MASK  (0x11)
#define ISP_OPF0_ENABLE_RWMASK         (0x11)
#define ISP_OPF0_ENABLE_ROMASK         (0x00)
#define ISP_OPF0_ENABLE_WOMASK         (0x00)
#define ISP_OPF0_ENABLE_UNUSED_MASK    (0xEE)
#define ISP_OPF0_ENABLE_enable_OFFSET  (0x00)
#define ISP_OPF0_ENABLE_enable_WIDTH   (1)
#define ISP_OPF0_ENABLE_enable_MASK    (0x01)
#define ISP_OPF0_ENABLE_enable_DISABLE (0x00)
#define ISP_OPF0_ENABLE_enable_ENABLE  (0x01)
#define ISP_OPF0_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_OPF0_ENABLE_soft_reset_WIDTH (1)
#define ISP_OPF0_ENABLE_soft_reset_MASK (0x10)
#define ISP_OPF0_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_OPF0_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_OPF0_DFV
*/

#define ISP_OPF0_DFV_SIZE              (8)
#define ISP_OPF0_DFV_OFFSET            (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x02)
#define ISP_OPF0_DFV_RESET_VALUE       (0x00)
#define ISP_OPF0_DFV_BITFIELD_MASK     (0x03)
#define ISP_OPF0_DFV_RWMASK            (0x03)
#define ISP_OPF0_DFV_ROMASK            (0x00)
#define ISP_OPF0_DFV_WOMASK            (0x00)
#define ISP_OPF0_DFV_UNUSED_MASK       (0xFC)
#define ISP_OPF0_DFV_dfv_enable_OFFSET (0x00)
#define ISP_OPF0_DFV_dfv_enable_WIDTH  (1)
#define ISP_OPF0_DFV_dfv_enable_MASK   (0x01)
#define ISP_OPF0_DFV_dfv_enable_DISABLE (0x00)
#define ISP_OPF0_DFV_dfv_enable_ENABLE (0x01)
#define ISP_OPF0_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_OPF0_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_OPF0_DFV_dfv_interrupt_ctrl_MASK (0x02)

/*
* Register : ISP_OPF0_HSYNC_RISING
*/

#define ISP_OPF0_HSYNC_RISING_SIZE     (16)
#define ISP_OPF0_HSYNC_RISING_OFFSET   (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x04)
#define ISP_OPF0_HSYNC_RISING_RESET_VALUE (0x0000)
#define ISP_OPF0_HSYNC_RISING_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_HSYNC_RISING_RWMASK   (0xFFFF)
#define ISP_OPF0_HSYNC_RISING_ROMASK   (0x0000)
#define ISP_OPF0_HSYNC_RISING_WOMASK   (0x0000)
#define ISP_OPF0_HSYNC_RISING_UNUSED_MASK (0x0000)
#define ISP_OPF0_HSYNC_RISING_hsync_rising_OFFSET (0x0000)
#define ISP_OPF0_HSYNC_RISING_hsync_rising_WIDTH (16)
#define ISP_OPF0_HSYNC_RISING_hsync_rising_MASK (0xFFFF)

/*
* Register : ISP_OPF0_HSYNC_FALLING
*/

#define ISP_OPF0_HSYNC_FALLING_SIZE    (16)
#define ISP_OPF0_HSYNC_FALLING_OFFSET  (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x06)
#define ISP_OPF0_HSYNC_FALLING_RESET_VALUE (0x0000)
#define ISP_OPF0_HSYNC_FALLING_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_HSYNC_FALLING_RWMASK  (0xFFFF)
#define ISP_OPF0_HSYNC_FALLING_ROMASK  (0x0000)
#define ISP_OPF0_HSYNC_FALLING_WOMASK  (0x0000)
#define ISP_OPF0_HSYNC_FALLING_UNUSED_MASK (0x0000)
#define ISP_OPF0_HSYNC_FALLING_hsync_falling_OFFSET (0x0000)
#define ISP_OPF0_HSYNC_FALLING_hsync_falling_WIDTH (16)
#define ISP_OPF0_HSYNC_FALLING_hsync_falling_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VSYNC_RISING_FINE
*/

#define ISP_OPF0_VSYNC_RISING_FINE_SIZE (16)
#define ISP_OPF0_VSYNC_RISING_FINE_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x08)
#define ISP_OPF0_VSYNC_RISING_FINE_RESET_VALUE (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VSYNC_RISING_FINE_RWMASK (0xFFFF)
#define ISP_OPF0_VSYNC_RISING_FINE_ROMASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_WOMASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_UNUSED_MASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_vsync_rising_fine_OFFSET (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_vsync_rising_fine_WIDTH (16)
#define ISP_OPF0_VSYNC_RISING_FINE_vsync_rising_fine_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VSYNC_FALLING_FINE
*/

#define ISP_OPF0_VSYNC_FALLING_FINE_SIZE (16)
#define ISP_OPF0_VSYNC_FALLING_FINE_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x0a)
#define ISP_OPF0_VSYNC_FALLING_FINE_RESET_VALUE (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VSYNC_FALLING_FINE_RWMASK (0xFFFF)
#define ISP_OPF0_VSYNC_FALLING_FINE_ROMASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_WOMASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_UNUSED_MASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_vsync_falling_fine_OFFSET (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_vsync_falling_fine_WIDTH (16)
#define ISP_OPF0_VSYNC_FALLING_FINE_vsync_falling_fine_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VSYNC_RISING_COARSE
*/

#define ISP_OPF0_VSYNC_RISING_COARSE_SIZE (16)
#define ISP_OPF0_VSYNC_RISING_COARSE_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x0c)
#define ISP_OPF0_VSYNC_RISING_COARSE_RESET_VALUE (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VSYNC_RISING_COARSE_RWMASK (0xFFFF)
#define ISP_OPF0_VSYNC_RISING_COARSE_ROMASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_WOMASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_UNUSED_MASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_vsync_rising_coarse_OFFSET (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_vsync_rising_coarse_WIDTH (16)
#define ISP_OPF0_VSYNC_RISING_COARSE_vsync_rising_coarse_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VSYNC_FALLING_COARSE
*/

#define ISP_OPF0_VSYNC_FALLING_COARSE_SIZE (16)
#define ISP_OPF0_VSYNC_FALLING_COARSE_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x0e)
#define ISP_OPF0_VSYNC_FALLING_COARSE_RESET_VALUE (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VSYNC_FALLING_COARSE_RWMASK (0xFFFF)
#define ISP_OPF0_VSYNC_FALLING_COARSE_ROMASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_WOMASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_UNUSED_MASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_vsync_falling_coarse_OFFSET (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_vsync_falling_coarse_WIDTH (16)
#define ISP_OPF0_VSYNC_FALLING_COARSE_vsync_falling_coarse_MASK (0xFFFF)

/*
* Register : ISP_OPF0_HCROP_RISING
*/

#define ISP_OPF0_HCROP_RISING_SIZE     (16)
#define ISP_OPF0_HCROP_RISING_OFFSET   (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x10)
#define ISP_OPF0_HCROP_RISING_RESET_VALUE (0x0000)
#define ISP_OPF0_HCROP_RISING_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_HCROP_RISING_RWMASK   (0xFFFF)
#define ISP_OPF0_HCROP_RISING_ROMASK   (0x0000)
#define ISP_OPF0_HCROP_RISING_WOMASK   (0x0000)
#define ISP_OPF0_HCROP_RISING_UNUSED_MASK (0x0000)
#define ISP_OPF0_HCROP_RISING_hcrop_rising_OFFSET (0x0000)
#define ISP_OPF0_HCROP_RISING_hcrop_rising_WIDTH (16)
#define ISP_OPF0_HCROP_RISING_hcrop_rising_MASK (0xFFFF)

/*
* Register : ISP_OPF0_HCROP_FALLING
*/

#define ISP_OPF0_HCROP_FALLING_SIZE    (16)
#define ISP_OPF0_HCROP_FALLING_OFFSET  (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x12)
#define ISP_OPF0_HCROP_FALLING_RESET_VALUE (0x0000)
#define ISP_OPF0_HCROP_FALLING_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_HCROP_FALLING_RWMASK  (0xFFFF)
#define ISP_OPF0_HCROP_FALLING_ROMASK  (0x0000)
#define ISP_OPF0_HCROP_FALLING_WOMASK  (0x0000)
#define ISP_OPF0_HCROP_FALLING_UNUSED_MASK (0x0000)
#define ISP_OPF0_HCROP_FALLING_hcrop_falling_OFFSET (0x0000)
#define ISP_OPF0_HCROP_FALLING_hcrop_falling_WIDTH (16)
#define ISP_OPF0_HCROP_FALLING_hcrop_falling_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VCROP_RISING_COARSE
*/

#define ISP_OPF0_VCROP_RISING_COARSE_SIZE (16)
#define ISP_OPF0_VCROP_RISING_COARSE_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x14)
#define ISP_OPF0_VCROP_RISING_COARSE_RESET_VALUE (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VCROP_RISING_COARSE_RWMASK (0xFFFF)
#define ISP_OPF0_VCROP_RISING_COARSE_ROMASK (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_WOMASK (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_UNUSED_MASK (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_vcrop_rising_coarse_OFFSET (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_vcrop_rising_coarse_WIDTH (16)
#define ISP_OPF0_VCROP_RISING_COARSE_vcrop_rising_coarse_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VCROP_FALLING_COARSE
*/

#define ISP_OPF0_VCROP_FALLING_COARSE_SIZE (16)
#define ISP_OPF0_VCROP_FALLING_COARSE_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x16)
#define ISP_OPF0_VCROP_FALLING_COARSE_RESET_VALUE (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VCROP_FALLING_COARSE_RWMASK (0xFFFF)
#define ISP_OPF0_VCROP_FALLING_COARSE_ROMASK (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_WOMASK (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_UNUSED_MASK (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_vcrop_falling_coarse_OFFSET (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_vcrop_falling_coarse_WIDTH (16)
#define ISP_OPF0_VCROP_FALLING_COARSE_vcrop_falling_coarse_MASK (0xFFFF)

/*
* Register : ISP_OPF0_CONTROL
*/

#define ISP_OPF0_CONTROL_SIZE          (32)
#define ISP_OPF0_CONTROL_OFFSET        (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x18)
#define ISP_OPF0_CONTROL_RESET_VALUE   (0x0000)
#define ISP_OPF0_CONTROL_BITFIELD_MASK (0x0001FFFF)
#define ISP_OPF0_CONTROL_RWMASK        (0x0001FFFF)
#define ISP_OPF0_CONTROL_ROMASK        (0x00000000)
#define ISP_OPF0_CONTROL_WOMASK        (0x00000000)
#define ISP_OPF0_CONTROL_UNUSED_MASK   (0xFFFE0000)
#define ISP_OPF0_CONTROL_sync_based_pixvalid_OFFSET (0x00000000)
#define ISP_OPF0_CONTROL_sync_based_pixvalid_WIDTH (1)
#define ISP_OPF0_CONTROL_sync_based_pixvalid_MASK (0x00000001)
#define ISP_OPF0_CONTROL_sync_based_pixvalid_SYNC_PIX_VALID_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_sync_based_pixvalid_SYNC_PIX_VALID_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_toggle_pix_valid_OFFSET (0x00000001)
#define ISP_OPF0_CONTROL_toggle_pix_valid_WIDTH (1)
#define ISP_OPF0_CONTROL_toggle_pix_valid_MASK (0x00000002)
#define ISP_OPF0_CONTROL_toggle_pix_valid_PIX_VALID_LEVEL (0x00000000)
#define ISP_OPF0_CONTROL_toggle_pix_valid_PIX_VALID_EDGE (0x00000001)
#define ISP_OPF0_CONTROL_rgb_flip_OFFSET (0x00000002)
#define ISP_OPF0_CONTROL_rgb_flip_WIDTH (3)
#define ISP_OPF0_CONTROL_rgb_flip_MASK (0x0000001C)
#define ISP_OPF0_CONTROL_rgb_flip_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_rgb_flip_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_rgb_flip_B_0x2 (0x00000002)
#define ISP_OPF0_CONTROL_rgb_flip_B_0x3 (0x00000003)
#define ISP_OPF0_CONTROL_rgb_flip_B_0x4 (0x00000004)
#define ISP_OPF0_CONTROL_rgb_flip_B_0x5 (0x00000005)
#define ISP_OPF0_CONTROL_rgb_bit_flip_OFFSET (0x00000005)
#define ISP_OPF0_CONTROL_rgb_bit_flip_WIDTH (1)
#define ISP_OPF0_CONTROL_rgb_bit_flip_MASK (0x00000020)
#define ISP_OPF0_CONTROL_rgb_bit_flip_RGB_BITS_SWAP_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_rgb_bit_flip_RGB_BITS_SWAP_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_embedded_code_en_OFFSET (0x00000006)
#define ISP_OPF0_CONTROL_embedded_code_en_WIDTH (1)
#define ISP_OPF0_CONTROL_embedded_code_en_MASK (0x00000040)
#define ISP_OPF0_CONTROL_embedded_code_en_EMB_CODE_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_embedded_code_en_EMB_CODE_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_false_sync_code_protect_en_OFFSET (0x00000007)
#define ISP_OPF0_CONTROL_false_sync_code_protect_en_WIDTH (1)
#define ISP_OPF0_CONTROL_false_sync_code_protect_en_MASK (0x00000080)
#define ISP_OPF0_CONTROL_false_sync_code_protect_en_FSC_PROTECTION_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_false_sync_code_protect_en_FSC_PROTECTION_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_invert_hsync_OFFSET (0x00000008)
#define ISP_OPF0_CONTROL_invert_hsync_WIDTH (1)
#define ISP_OPF0_CONTROL_invert_hsync_MASK (0x00000100)
#define ISP_OPF0_CONTROL_invert_hsync_HSYNC_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_invert_hsync_HSYNC_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_invert_vsync_OFFSET (0x00000009)
#define ISP_OPF0_CONTROL_invert_vsync_WIDTH (1)
#define ISP_OPF0_CONTROL_invert_vsync_MASK (0x00000200)
#define ISP_OPF0_CONTROL_invert_vsync_VSYNC_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_invert_vsync_VSYNC_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_idata_ch0_en_OFFSET (0x0000000a)
#define ISP_OPF0_CONTROL_idata_ch0_en_WIDTH (1)
#define ISP_OPF0_CONTROL_idata_ch0_en_MASK (0x00000400)
#define ISP_OPF0_CONTROL_idata_ch0_en_OPF_CHANNEL_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_idata_ch0_en_OPF_CHANNEL_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_idata_ch1_en_OFFSET (0x0000000b)
#define ISP_OPF0_CONTROL_idata_ch1_en_WIDTH (1)
#define ISP_OPF0_CONTROL_idata_ch1_en_MASK (0x00000800)
#define ISP_OPF0_CONTROL_idata_ch1_en_OPF_CHANNEL_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_idata_ch1_en_OPF_CHANNEL_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_idata_ch2_en_OFFSET (0x0000000c)
#define ISP_OPF0_CONTROL_idata_ch2_en_WIDTH (1)
#define ISP_OPF0_CONTROL_idata_ch2_en_MASK (0x00001000)
#define ISP_OPF0_CONTROL_idata_ch2_en_OPF_CHANNEL_DISABLE (0x00000000)
#define ISP_OPF0_CONTROL_idata_ch2_en_OPF_CHANNEL_ENABLE (0x00000001)
#define ISP_OPF0_CONTROL_opf_output_OFFSET (0x0000000d)
#define ISP_OPF0_CONTROL_opf_output_WIDTH (3)
#define ISP_OPF0_CONTROL_opf_output_MASK (0x0000E000)
#define ISP_OPF0_CONTROL_opf_output_OPF_RGB101010 (0x00000000)
#define ISP_OPF0_CONTROL_opf_output_OPF_RGB888 (0x00000001)
#define ISP_OPF0_CONTROL_opf_output_OPF_RGB565 (0x00000002)
#define ISP_OPF0_CONTROL_opf_output_OPF_RGB555 (0x00000003)
#define ISP_OPF0_CONTROL_opf_output_OPF_RGB444 (0x00000004)
#define ISP_OPF0_CONTROL_opf_output_OPF_YUV (0x00000005)
#define ISP_OPF0_CONTROL_rgb444_format_OFFSET (0x00000010)
#define ISP_OPF0_CONTROL_rgb444_format_WIDTH (1)
#define ISP_OPF0_CONTROL_rgb444_format_MASK (0x00010000)
#define ISP_OPF0_CONTROL_rgb444_format_RGB444_NOPACK (0x00000000)
#define ISP_OPF0_CONTROL_rgb444_format_RGB444_PACKED (0x00000001)

/*
* Register : ISP_OPF0_PIXVALID_LTYPES
*/

#define ISP_OPF0_PIXVALID_LTYPES_SIZE  (8)
#define ISP_OPF0_PIXVALID_LTYPES_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x1a)
#define ISP_OPF0_PIXVALID_LTYPES_RESET_VALUE (0x0000)
#define ISP_OPF0_PIXVALID_LTYPES_BITFIELD_MASK (0x7F)
#define ISP_OPF0_PIXVALID_LTYPES_RWMASK (0x7F)
#define ISP_OPF0_PIXVALID_LTYPES_ROMASK (0x00)
#define ISP_OPF0_PIXVALID_LTYPES_WOMASK (0x00)
#define ISP_OPF0_PIXVALID_LTYPES_UNUSED_MASK (0x80)
#define ISP_OPF0_PIXVALID_LTYPES_pixvalid_linetypes_OFFSET (0x00)
#define ISP_OPF0_PIXVALID_LTYPES_pixvalid_linetypes_WIDTH (6)
#define ISP_OPF0_PIXVALID_LTYPES_pixvalid_linetypes_MASK (0x3F)
#define ISP_OPF0_PIXVALID_LTYPES_eof_blank_only_en_OFFSET (0x06)
#define ISP_OPF0_PIXVALID_LTYPES_eof_blank_only_en_WIDTH (1)
#define ISP_OPF0_PIXVALID_LTYPES_eof_blank_only_en_MASK (0x40)

/*
* Register : ISP_OPF0_YCBCR_FLIP
*/

#define ISP_OPF0_YCBCR_FLIP_SIZE       (8)
#define ISP_OPF0_YCBCR_FLIP_OFFSET     (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x1c)
#define ISP_OPF0_YCBCR_FLIP_RESET_VALUE (0x0000)
#define ISP_OPF0_YCBCR_FLIP_BITFIELD_MASK (0x03)
#define ISP_OPF0_YCBCR_FLIP_RWMASK     (0x03)
#define ISP_OPF0_YCBCR_FLIP_ROMASK     (0x00)
#define ISP_OPF0_YCBCR_FLIP_WOMASK     (0x00)
#define ISP_OPF0_YCBCR_FLIP_UNUSED_MASK (0xFC)
#define ISP_OPF0_YCBCR_FLIP_cbcr_flip_OFFSET (0x00)
#define ISP_OPF0_YCBCR_FLIP_cbcr_flip_WIDTH (1)
#define ISP_OPF0_YCBCR_FLIP_cbcr_flip_MASK (0x01)
#define ISP_OPF0_YCBCR_FLIP_cbcr_flip_B_0x0 (0x00)
#define ISP_OPF0_YCBCR_FLIP_cbcr_flip_B_0x1 (0x01)
#define ISP_OPF0_YCBCR_FLIP_y_cbcr_flip_OFFSET (0x01)
#define ISP_OPF0_YCBCR_FLIP_y_cbcr_flip_WIDTH (1)
#define ISP_OPF0_YCBCR_FLIP_y_cbcr_flip_MASK (0x02)
#define ISP_OPF0_YCBCR_FLIP_y_cbcr_flip_B_0x0 (0x00)
#define ISP_OPF0_YCBCR_FLIP_y_cbcr_flip_B_0x1 (0x01)

/*
* Register : ISP_OPF0_LAST_NONACT_LINE
*/

#define ISP_OPF0_LAST_NONACT_LINE_SIZE (16)
#define ISP_OPF0_LAST_NONACT_LINE_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x1e)
#define ISP_OPF0_LAST_NONACT_LINE_RESET_VALUE (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_LAST_NONACT_LINE_RWMASK (0xFFFF)
#define ISP_OPF0_LAST_NONACT_LINE_ROMASK (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_WOMASK (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_UNUSED_MASK (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_last_nonactive_line_OFFSET (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_last_nonactive_line_WIDTH (16)
#define ISP_OPF0_LAST_NONACT_LINE_last_nonactive_line_MASK (0xFFFF)

/*
* Register : ISP_OPF0_HSYNC_RISING_STATUS
*/

#define ISP_OPF0_HSYNC_RISING_STATUS_SIZE (16)
#define ISP_OPF0_HSYNC_RISING_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x20)
#define ISP_OPF0_HSYNC_RISING_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_HSYNC_RISING_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_HSYNC_RISING_STATUS_RWMASK (0x0000)
#define ISP_OPF0_HSYNC_RISING_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_HSYNC_RISING_STATUS_WOMASK (0x0000)
#define ISP_OPF0_HSYNC_RISING_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_HSYNC_RISING_STATUS_hsync_rising_status_OFFSET (0x0000)
#define ISP_OPF0_HSYNC_RISING_STATUS_hsync_rising_status_WIDTH (16)
#define ISP_OPF0_HSYNC_RISING_STATUS_hsync_rising_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_HSYNC_FALLING_STATUS
*/

#define ISP_OPF0_HSYNC_FALLING_STATUS_SIZE (16)
#define ISP_OPF0_HSYNC_FALLING_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x22)
#define ISP_OPF0_HSYNC_FALLING_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_HSYNC_FALLING_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_HSYNC_FALLING_STATUS_RWMASK (0x0000)
#define ISP_OPF0_HSYNC_FALLING_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_HSYNC_FALLING_STATUS_WOMASK (0x0000)
#define ISP_OPF0_HSYNC_FALLING_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_HSYNC_FALLING_STATUS_hsync_falling_status_OFFSET (0x0000)
#define ISP_OPF0_HSYNC_FALLING_STATUS_hsync_falling_status_WIDTH (16)
#define ISP_OPF0_HSYNC_FALLING_STATUS_hsync_falling_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VSYNC_RISING_FINE_STATUS
*/

#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_SIZE (16)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x24)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_RWMASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_WOMASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_vsync_rising_fine_status_OFFSET (0x0000)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_vsync_rising_fine_status_WIDTH (16)
#define ISP_OPF0_VSYNC_RISING_FINE_STATUS_vsync_rising_fine_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VSYNC_FALLING_FINE_STATUS
*/

#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_SIZE (16)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x26)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_RWMASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_WOMASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_vsync_falling_fine_status_OFFSET (0x0000)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_vsync_falling_fine_status_WIDTH (16)
#define ISP_OPF0_VSYNC_FALLING_FINE_STATUS_vsync_falling_fine_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VSYNC_RISING_COARSE_STATUS
*/

#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_SIZE (16)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x28)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_RWMASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_WOMASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_vsync_rising_coarse_status_OFFSET (0x0000)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_vsync_rising_coarse_status_WIDTH (16)
#define ISP_OPF0_VSYNC_RISING_COARSE_STATUS_vsync_rising_coarse_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VSYNC_FALLING_COARSE_STATUS
*/

#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_SIZE (16)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x2a)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_RWMASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_WOMASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_vsync_falling_coarse_status_OFFSET (0x0000)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_vsync_falling_coarse_status_WIDTH (16)
#define ISP_OPF0_VSYNC_FALLING_COARSE_STATUS_vsync_falling_coarse_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_HCROP_RISING_STATUS
*/

#define ISP_OPF0_HCROP_RISING_STATUS_SIZE (16)
#define ISP_OPF0_HCROP_RISING_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x2c)
#define ISP_OPF0_HCROP_RISING_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_HCROP_RISING_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_HCROP_RISING_STATUS_RWMASK (0x0000)
#define ISP_OPF0_HCROP_RISING_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_HCROP_RISING_STATUS_WOMASK (0x0000)
#define ISP_OPF0_HCROP_RISING_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_HCROP_RISING_STATUS_hcrop_rising_status_OFFSET (0x0000)
#define ISP_OPF0_HCROP_RISING_STATUS_hcrop_rising_status_WIDTH (16)
#define ISP_OPF0_HCROP_RISING_STATUS_hcrop_rising_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_HCROP_FALLING_STATUS
*/

#define ISP_OPF0_HCROP_FALLING_STATUS_SIZE (16)
#define ISP_OPF0_HCROP_FALLING_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x2e)
#define ISP_OPF0_HCROP_FALLING_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_HCROP_FALLING_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_HCROP_FALLING_STATUS_RWMASK (0x0000)
#define ISP_OPF0_HCROP_FALLING_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_HCROP_FALLING_STATUS_WOMASK (0x0000)
#define ISP_OPF0_HCROP_FALLING_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_HCROP_FALLING_STATUS_hcrop_falling_status_OFFSET (0x0000)
#define ISP_OPF0_HCROP_FALLING_STATUS_hcrop_falling_status_WIDTH (16)
#define ISP_OPF0_HCROP_FALLING_STATUS_hcrop_falling_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VCROP_RISING_COARSE_STATUS
*/

#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_SIZE (16)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x30)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_RWMASK (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_WOMASK (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_vcrop_rising_coarse_status_OFFSET (0x0000)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_vcrop_rising_coarse_status_WIDTH (16)
#define ISP_OPF0_VCROP_RISING_COARSE_STATUS_vcrop_rising_coarse_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_VCROP_FALLING_COARSE_STATUS
*/

#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_SIZE (16)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x32)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_RWMASK (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_WOMASK (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_vcrop_falling_coarse_status_OFFSET (0x0000)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_vcrop_falling_coarse_status_WIDTH (16)
#define ISP_OPF0_VCROP_FALLING_COARSE_STATUS_vcrop_falling_coarse_status_MASK (0xFFFF)

/*
* Register : ISP_OPF0_CONTROL_STATUS
*/

#define ISP_OPF0_CONTROL_STATUS_SIZE   (32)
#define ISP_OPF0_CONTROL_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x34)
#define ISP_OPF0_CONTROL_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_CONTROL_STATUS_BITFIELD_MASK (0x0001FFFF)
#define ISP_OPF0_CONTROL_STATUS_RWMASK (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_ROMASK (0x0001FFFF)
#define ISP_OPF0_CONTROL_STATUS_WOMASK (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_UNUSED_MASK (0xFFFE0000)
#define ISP_OPF0_CONTROL_STATUS_sync_based_pixvalid_status_OFFSET (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_sync_based_pixvalid_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_sync_based_pixvalid_status_MASK (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_sync_based_pixvalid_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_sync_based_pixvalid_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_toggle_pix_valid_status_OFFSET (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_toggle_pix_valid_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_toggle_pix_valid_status_MASK (0x00000002)
#define ISP_OPF0_CONTROL_STATUS_toggle_pix_valid_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_toggle_pix_valid_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_OFFSET (0x00000002)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_WIDTH (3)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_MASK (0x0000001C)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_B_0x2 (0x00000002)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_B_0x3 (0x00000003)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_B_0x4 (0x00000004)
#define ISP_OPF0_CONTROL_STATUS_rgb_flip_status_B_0x5 (0x00000005)
#define ISP_OPF0_CONTROL_STATUS_rgb_bit_flip_status_OFFSET (0x00000005)
#define ISP_OPF0_CONTROL_STATUS_rgb_bit_flip_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_rgb_bit_flip_status_MASK (0x00000020)
#define ISP_OPF0_CONTROL_STATUS_rgb_bit_flip_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_rgb_bit_flip_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_embedded_code_en_status_OFFSET (0x00000006)
#define ISP_OPF0_CONTROL_STATUS_embedded_code_en_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_embedded_code_en_status_MASK (0x00000040)
#define ISP_OPF0_CONTROL_STATUS_embedded_code_en_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_embedded_code_en_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_false_sync_code_protect_en_status_OFFSET (0x00000007)
#define ISP_OPF0_CONTROL_STATUS_false_sync_code_protect_en_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_false_sync_code_protect_en_status_MASK (0x00000080)
#define ISP_OPF0_CONTROL_STATUS_false_sync_code_protect_en_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_false_sync_code_protect_en_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_invert_hsync_status_OFFSET (0x00000008)
#define ISP_OPF0_CONTROL_STATUS_invert_hsync_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_invert_hsync_status_MASK (0x00000100)
#define ISP_OPF0_CONTROL_STATUS_invert_hsync_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_invert_hsync_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_invert_vsync_status_OFFSET (0x00000009)
#define ISP_OPF0_CONTROL_STATUS_invert_vsync_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_invert_vsync_status_MASK (0x00000200)
#define ISP_OPF0_CONTROL_STATUS_invert_vsync_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_invert_vsync_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_idata_ch0_en_status_OFFSET (0x0000000a)
#define ISP_OPF0_CONTROL_STATUS_idata_ch0_en_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_idata_ch0_en_status_MASK (0x00000400)
#define ISP_OPF0_CONTROL_STATUS_idata_ch0_en_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_idata_ch0_en_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_idata_ch1_en_status_OFFSET (0x0000000b)
#define ISP_OPF0_CONTROL_STATUS_idata_ch1_en_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_idata_ch1_en_status_MASK (0x00000800)
#define ISP_OPF0_CONTROL_STATUS_idata_ch1_en_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_idata_ch1_en_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_idata_ch2_en_status_OFFSET (0x0000000c)
#define ISP_OPF0_CONTROL_STATUS_idata_ch2_en_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_idata_ch2_en_status_MASK (0x00001000)
#define ISP_OPF0_CONTROL_STATUS_idata_ch2_en_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_idata_ch2_en_status_B_0x1 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_OFFSET (0x0000000d)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_WIDTH (3)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_MASK (0x0000E000)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_OPF_RGB101010 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_OPF_RGB888 (0x00000001)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_OPF_RGB565 (0x00000002)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_OPF_RGB555 (0x00000003)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_OPF_RGB444 (0x00000004)
#define ISP_OPF0_CONTROL_STATUS_opf_output_status_OPF_YUV (0x00000005)
#define ISP_OPF0_CONTROL_STATUS_rgb444_format_status_OFFSET (0x00000010)
#define ISP_OPF0_CONTROL_STATUS_rgb444_format_status_WIDTH (1)
#define ISP_OPF0_CONTROL_STATUS_rgb444_format_status_MASK (0x00010000)
#define ISP_OPF0_CONTROL_STATUS_rgb444_format_status_B_0x0 (0x00000000)
#define ISP_OPF0_CONTROL_STATUS_rgb444_format_status_B_0x1 (0x00000001)

/*
* Register : ISP_OPF0_PIXVALID_LTYPES_STATUS
*/

#define ISP_OPF0_PIXVALID_LTYPES_STATUS_SIZE (8)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x36)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_BITFIELD_MASK (0x7F)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_RWMASK (0x00)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_ROMASK (0x7F)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_WOMASK (0x00)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_UNUSED_MASK (0x80)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_pixvalid_linetypes_status_OFFSET (0x00)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_pixvalid_linetypes_status_WIDTH (6)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_pixvalid_linetypes_status_MASK (0x3F)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_eof_blank_only_en_status_OFFSET (0x06)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_eof_blank_only_en_status_WIDTH (1)
#define ISP_OPF0_PIXVALID_LTYPES_STATUS_eof_blank_only_en_status_MASK (0x40)

/*
* Register : ISP_OPF0_YCBCR_FLIP_STATUS
*/

#define ISP_OPF0_YCBCR_FLIP_STATUS_SIZE (8)
#define ISP_OPF0_YCBCR_FLIP_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x38)
#define ISP_OPF0_YCBCR_FLIP_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_YCBCR_FLIP_STATUS_BITFIELD_MASK (0x03)
#define ISP_OPF0_YCBCR_FLIP_STATUS_RWMASK (0x00)
#define ISP_OPF0_YCBCR_FLIP_STATUS_ROMASK (0x03)
#define ISP_OPF0_YCBCR_FLIP_STATUS_WOMASK (0x00)
#define ISP_OPF0_YCBCR_FLIP_STATUS_UNUSED_MASK (0xFC)
#define ISP_OPF0_YCBCR_FLIP_STATUS_cbcr_flip_status_OFFSET (0x00)
#define ISP_OPF0_YCBCR_FLIP_STATUS_cbcr_flip_status_WIDTH (1)
#define ISP_OPF0_YCBCR_FLIP_STATUS_cbcr_flip_status_MASK (0x01)
#define ISP_OPF0_YCBCR_FLIP_STATUS_cbcr_flip_status_B_0x0 (0x00)
#define ISP_OPF0_YCBCR_FLIP_STATUS_cbcr_flip_status_B_0x1 (0x01)
#define ISP_OPF0_YCBCR_FLIP_STATUS_y_cbcr_flip_status_OFFSET (0x01)
#define ISP_OPF0_YCBCR_FLIP_STATUS_y_cbcr_flip_status_WIDTH (1)
#define ISP_OPF0_YCBCR_FLIP_STATUS_y_cbcr_flip_status_MASK (0x02)
#define ISP_OPF0_YCBCR_FLIP_STATUS_y_cbcr_flip_status_B_0x0 (0x00)
#define ISP_OPF0_YCBCR_FLIP_STATUS_y_cbcr_flip_status_B_0x1 (0x01)

/*
* Register : ISP_OPF0_LAST_NONACT_LINE_STATUS
*/

#define ISP_OPF0_LAST_NONACT_LINE_STATUS_SIZE (16)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_OFFSET (pictorv2_in_ISP_OPF0_BASE_ADDR + 0x3a)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_RWMASK (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_WOMASK (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_last_nonactive_line_status_OFFSET (0x0000)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_last_nonactive_line_status_WIDTH (16)
#define ISP_OPF0_LAST_NONACT_LINE_STATUS_last_nonactive_line_status_MASK (0xFFFF)


/*
* Address Block : ISP_CE1_IDP_GATE
*/

#define pictorv2_in_ISP_CE1_IDP_GATE_BASE_ADDR              (0x880U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_IDP_GATE_ENABLE
*/

#define ISP_CE1_IDP_GATE_ENABLE_SIZE (8)
#define ISP_CE1_IDP_GATE_ENABLE_OFFSET (pictorv2_in_ISP_CE1_IDP_GATE_BASE_ADDR + 0x00)
#define ISP_CE1_IDP_GATE_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_IDP_GATE_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_IDP_GATE_ENABLE_RWMASK (0x11)
#define ISP_CE1_IDP_GATE_ENABLE_ROMASK (0x00)
#define ISP_CE1_IDP_GATE_ENABLE_WOMASK (0x00)
#define ISP_CE1_IDP_GATE_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE1_IDP_GATE_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE1_IDP_GATE_SELECT
*/

#define ISP_CE1_IDP_GATE_SELECT_SIZE (8)
#define ISP_CE1_IDP_GATE_SELECT_OFFSET (pictorv2_in_ISP_CE1_IDP_GATE_BASE_ADDR + 0x02)
#define ISP_CE1_IDP_GATE_SELECT_RESET_VALUE (0x00)
#define ISP_CE1_IDP_GATE_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE1_IDP_GATE_SELECT_RWMASK (0x11)
#define ISP_CE1_IDP_GATE_SELECT_ROMASK (0x00)
#define ISP_CE1_IDP_GATE_SELECT_WOMASK (0x00)
#define ISP_CE1_IDP_GATE_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE1_IDP_GATE_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE1_CROP
*/

#define pictorv2_in_ISP_CE1_CROP_BASE_ADDR                  (0x890U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_CROP_ENABLE
*/

#define ISP_CE1_CROP_ENABLE_SIZE   (8)
#define ISP_CE1_CROP_ENABLE_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x00)
#define ISP_CE1_CROP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_CROP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_CROP_ENABLE_RWMASK (0x11)
#define ISP_CE1_CROP_ENABLE_ROMASK (0x00)
#define ISP_CE1_CROP_ENABLE_WOMASK (0x00)
#define ISP_CE1_CROP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_CROP_ENABLE_crop_enable_OFFSET (0x00)
#define ISP_CE1_CROP_ENABLE_crop_enable_WIDTH (1)
#define ISP_CE1_CROP_ENABLE_crop_enable_MASK (0x01)
#define ISP_CE1_CROP_ENABLE_crop_enable_DISABLE (0x00)
#define ISP_CE1_CROP_ENABLE_crop_enable_ENABLE (0x01)
#define ISP_CE1_CROP_ENABLE_crop_soft_reset_OFFSET (0x04)
#define ISP_CE1_CROP_ENABLE_crop_soft_reset_WIDTH (1)
#define ISP_CE1_CROP_ENABLE_crop_soft_reset_MASK (0x10)
#define ISP_CE1_CROP_ENABLE_crop_soft_reset_SOFT_RST_DISABLE (0x00)
#define ISP_CE1_CROP_ENABLE_crop_soft_reset_SOFT_RST_ENABLE (0x01)

/*
* Register : ISP_CE1_CROP_SOF_RETIMING
*/

#define ISP_CE1_CROP_SOF_RETIMING_SIZE (8)
#define ISP_CE1_CROP_SOF_RETIMING_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x02)
#define ISP_CE1_CROP_SOF_RETIMING_RESET_VALUE (0x0)
#define ISP_CE1_CROP_SOF_RETIMING_BITFIELD_MASK (0x01)
#define ISP_CE1_CROP_SOF_RETIMING_RWMASK (0x01)
#define ISP_CE1_CROP_SOF_RETIMING_ROMASK (0x00)
#define ISP_CE1_CROP_SOF_RETIMING_WOMASK (0x00)
#define ISP_CE1_CROP_SOF_RETIMING_UNUSED_MASK (0xFE)
#define ISP_CE1_CROP_SOF_RETIMING_crop_sof_retiming_OFFSET (0x00)
#define ISP_CE1_CROP_SOF_RETIMING_crop_sof_retiming_WIDTH (1)
#define ISP_CE1_CROP_SOF_RETIMING_crop_sof_retiming_MASK (0x01)
#define ISP_CE1_CROP_SOF_RETIMING_crop_sof_retiming_DISABLE (0x00)
#define ISP_CE1_CROP_SOF_RETIMING_crop_sof_retiming_ENABLE (0x01)

/*
* Register : ISP_CE1_CROP_SHADOW_CROPS
*/

#define ISP_CE1_CROP_SHADOW_CROPS_SIZE (8)
#define ISP_CE1_CROP_SHADOW_CROPS_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x04)
#define ISP_CE1_CROP_SHADOW_CROPS_RESET_VALUE (0x0)
#define ISP_CE1_CROP_SHADOW_CROPS_BITFIELD_MASK (0x01)
#define ISP_CE1_CROP_SHADOW_CROPS_RWMASK (0x01)
#define ISP_CE1_CROP_SHADOW_CROPS_ROMASK (0x00)
#define ISP_CE1_CROP_SHADOW_CROPS_WOMASK (0x00)
#define ISP_CE1_CROP_SHADOW_CROPS_UNUSED_MASK (0xFE)
#define ISP_CE1_CROP_SHADOW_CROPS_crop_shadow_crops_OFFSET (0x00)
#define ISP_CE1_CROP_SHADOW_CROPS_crop_shadow_crops_WIDTH (1)
#define ISP_CE1_CROP_SHADOW_CROPS_crop_shadow_crops_MASK (0x01)

/*
* Register : ISP_CE1_CROP_H_START
*/

#define ISP_CE1_CROP_H_START_SIZE  (16)
#define ISP_CE1_CROP_H_START_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x06)
#define ISP_CE1_CROP_H_START_RESET_VALUE (0x000)
#define ISP_CE1_CROP_H_START_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CROP_H_START_RWMASK (0x1FFF)
#define ISP_CE1_CROP_H_START_ROMASK (0x0000)
#define ISP_CE1_CROP_H_START_WOMASK (0x0000)
#define ISP_CE1_CROP_H_START_UNUSED_MASK (0xE000)
#define ISP_CE1_CROP_H_START_crop_h_start_OFFSET (0x0000)
#define ISP_CE1_CROP_H_START_crop_h_start_WIDTH (13)
#define ISP_CE1_CROP_H_START_crop_h_start_MASK (0x1FFF)

/*
* Register : ISP_CE1_CROP_V_START
*/

#define ISP_CE1_CROP_V_START_SIZE  (16)
#define ISP_CE1_CROP_V_START_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x08)
#define ISP_CE1_CROP_V_START_RESET_VALUE (0x00)
#define ISP_CE1_CROP_V_START_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CROP_V_START_RWMASK (0x1FFF)
#define ISP_CE1_CROP_V_START_ROMASK (0x0000)
#define ISP_CE1_CROP_V_START_WOMASK (0x0000)
#define ISP_CE1_CROP_V_START_UNUSED_MASK (0xE000)
#define ISP_CE1_CROP_V_START_crop_v_start_OFFSET (0x0000)
#define ISP_CE1_CROP_V_START_crop_v_start_WIDTH (13)
#define ISP_CE1_CROP_V_START_crop_v_start_MASK (0x1FFF)

/*
* Register : ISP_CE1_CROP_H_SIZE
*/

#define ISP_CE1_CROP_H_SIZE_SIZE   (16)
#define ISP_CE1_CROP_H_SIZE_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x0a)
#define ISP_CE1_CROP_H_SIZE_RESET_VALUE (0x000)
#define ISP_CE1_CROP_H_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CROP_H_SIZE_RWMASK (0x1FFF)
#define ISP_CE1_CROP_H_SIZE_ROMASK (0x0000)
#define ISP_CE1_CROP_H_SIZE_WOMASK (0x0000)
#define ISP_CE1_CROP_H_SIZE_UNUSED_MASK (0xE000)
#define ISP_CE1_CROP_H_SIZE_crop_h_size_OFFSET (0x0000)
#define ISP_CE1_CROP_H_SIZE_crop_h_size_WIDTH (13)
#define ISP_CE1_CROP_H_SIZE_crop_h_size_MASK (0x1FFF)

/*
* Register : ISP_CE1_CROP_V_SIZE
*/

#define ISP_CE1_CROP_V_SIZE_SIZE   (16)
#define ISP_CE1_CROP_V_SIZE_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x0c)
#define ISP_CE1_CROP_V_SIZE_RESET_VALUE (0x000)
#define ISP_CE1_CROP_V_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CROP_V_SIZE_RWMASK (0x1FFF)
#define ISP_CE1_CROP_V_SIZE_ROMASK (0x0000)
#define ISP_CE1_CROP_V_SIZE_WOMASK (0x0000)
#define ISP_CE1_CROP_V_SIZE_UNUSED_MASK (0xE000)
#define ISP_CE1_CROP_V_SIZE_crop_v_size_OFFSET (0x0000)
#define ISP_CE1_CROP_V_SIZE_crop_v_size_WIDTH (13)
#define ISP_CE1_CROP_V_SIZE_crop_v_size_MASK (0x1FFF)

/*
* Register : ISP_CE1_CROP_IACTIVE_PIXS
*/

#define ISP_CE1_CROP_IACTIVE_PIXS_SIZE (16)
#define ISP_CE1_CROP_IACTIVE_PIXS_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x0e)
#define ISP_CE1_CROP_IACTIVE_PIXS_RESET_VALUE (0x000)
#define ISP_CE1_CROP_IACTIVE_PIXS_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CROP_IACTIVE_PIXS_RWMASK (0x1FFF)
#define ISP_CE1_CROP_IACTIVE_PIXS_ROMASK (0x0000)
#define ISP_CE1_CROP_IACTIVE_PIXS_WOMASK (0x0000)
#define ISP_CE1_CROP_IACTIVE_PIXS_UNUSED_MASK (0xE000)
#define ISP_CE1_CROP_IACTIVE_PIXS_crop_iactive_pixs_OFFSET (0x0000)
#define ISP_CE1_CROP_IACTIVE_PIXS_crop_iactive_pixs_WIDTH (13)
#define ISP_CE1_CROP_IACTIVE_PIXS_crop_iactive_pixs_MASK (0x1FFF)

/*
* Register : ISP_CE1_CROP_IACTIVE_LINES
*/

#define ISP_CE1_CROP_IACTIVE_LINES_SIZE (16)
#define ISP_CE1_CROP_IACTIVE_LINES_OFFSET (pictorv2_in_ISP_CE1_CROP_BASE_ADDR + 0x10)
#define ISP_CE1_CROP_IACTIVE_LINES_RESET_VALUE (0x000)
#define ISP_CE1_CROP_IACTIVE_LINES_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CROP_IACTIVE_LINES_RWMASK (0x1FFF)
#define ISP_CE1_CROP_IACTIVE_LINES_ROMASK (0x0000)
#define ISP_CE1_CROP_IACTIVE_LINES_WOMASK (0x0000)
#define ISP_CE1_CROP_IACTIVE_LINES_UNUSED_MASK (0xE000)
#define ISP_CE1_CROP_IACTIVE_LINES_crop_iactive_lines_OFFSET (0x0000)
#define ISP_CE1_CROP_IACTIVE_LINES_crop_iactive_lines_WIDTH (13)
#define ISP_CE1_CROP_IACTIVE_LINES_crop_iactive_lines_MASK (0x1FFF)


/*
* Address Block : ISP_CE1_RADIAL_ADSOC_PK
*/

#define pictorv2_in_ISP_CE1_RADIAL_ADSOC_PK_BASE_ADDR       (0x8b0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_RADIAL_ADSOC_PK_ENABLE
*/

#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_PK_BASE_ADDR + 0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_RESET_VALUE (0x0)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_BITFIELD_MASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_RWMASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_UNUSED_MASK (0xFE)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_WIDTH (1)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_MASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_DISABLE (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ENABLE_ADSOC_ENABLE_ENABLE (0x01)

/*
* Register : ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN
*/

#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_PK_BASE_ADDR + 0x02)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_BITFIELD_MASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_RWMASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_UNUSED_MASK (0xFE)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_WIDTH (1)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_MASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_DISABLE (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_ADSHARP_EN_ADSOC_ADAPTIVE_SHARPENING_ENABLE (0x01)

/*
* Register : ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL
*/

#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_PK_BASE_ADDR + 0x04)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_BITFIELD_MASK (0x3F)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_RWMASK (0x3F)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_UNUSED_MASK (0xC0)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_ADSOC_CORING_LEVEL_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_ADSOC_CORING_LEVEL_WIDTH (6)
#define ISP_CE1_RADIAL_ADSOC_PK_CORING_LEVEL_ADSOC_CORING_LEVEL_MASK (0x3F)

/*
* Register : ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL
*/

#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_SIZE (16)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_PK_BASE_ADDR + 0x06)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_RESET_VALUE (0x1010)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_BITFIELD_MASK (0x1F1F)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_RWMASK (0x1F1F)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_ROMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_WOMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_UNUSED_MASK (0xE0E0)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_BRIGHT_OFFSET (0x0000)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_BRIGHT_WIDTH (5)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_BRIGHT_MASK (0x001F)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_DARK_OFFSET (0x0008)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_DARK_WIDTH (5)
#define ISP_CE1_RADIAL_ADSOC_PK_OSHOOT_CTRL_ADSOC_OSHOOT_GAIN_DARK_MASK (0x1F00)

/*
* Register : ISP_CE1_RADIAL_ADSOC_PK_EFFECTS
*/

#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_SIZE (32)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_PK_BASE_ADDR + 0x08)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_RESET_VALUE (0x0)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_BITFIELD_MASK (0x00030307)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_RWMASK (0x00030307)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ROMASK (0x00000000)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_WOMASK (0x00000000)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_UNUSED_MASK (0xFFFCFCF8)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_EMBOSS_SELECT_OFFSET (0x00000000)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_EMBOSS_SELECT_WIDTH (3)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_EMBOSS_SELECT_MASK (0x00000007)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_FLIPPER_OFFSET (0x00000008)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_FLIPPER_WIDTH (2)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_FLIPPER_MASK (0x00000300)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_GREYBACK_OFFSET (0x00000010)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_GREYBACK_WIDTH (2)
#define ISP_CE1_RADIAL_ADSOC_PK_EFFECTS_ADSOC_GREYBACK_MASK (0x00030000)

/*
* Register : ISP_CE1_RADIAL_ADSOC_PK_GAIN
*/

#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_PK_BASE_ADDR + 0x0a)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_RESET_VALUE (0x0)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_BITFIELD_MASK (0xFF)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_RWMASK (0xFF)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_UNUSED_MASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_ADSOC_GAIN_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_ADSOC_GAIN_WIDTH (8)
#define ISP_CE1_RADIAL_ADSOC_PK_GAIN_ADSOC_GAIN_MASK (0xFF)


/*
* Address Block : ISP_CE1_RADIAL_ADSOC_RP
*/

#define pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR       (0x8bcU)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_ENABLE
*/

#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_BITFIELD_MASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_RWMASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_UNUSED_MASK (0xFE)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_WIDTH (1)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_MASK (0x01)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_DISABLE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_ENABLE_rdpk_enable_ENABLE (0x01)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0
*/

#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x02)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_BITFIELD_MASK (0xFF)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_RWMASK (0xFF)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_UNUSED_MASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_rdpk_qvec0_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_rdpk_qvec0_WIDTH (8)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF0_rdpk_qvec0_MASK (0xFF)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1
*/

#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x04)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_BITFIELD_MASK (0xFF)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_RWMASK (0xFF)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_UNUSED_MASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_rdpk_qvec1_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_rdpk_qvec1_WIDTH (8)
#define ISP_CE1_RADIAL_ADSOC_RP_POLYCOEF1_rdpk_qvec1_MASK (0xFF)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT
*/

#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x06)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_BITFIELD_MASK (0x0F)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_RWMASK (0x0F)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_UNUSED_MASK (0xF0)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_rdpk_cof_shift_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_rdpk_cof_shift_WIDTH (4)
#define ISP_CE1_RADIAL_ADSOC_RP_COF_SHIFT_rdpk_cof_shift_MASK (0x0F)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT
*/

#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_SIZE (8)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x08)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_BITFIELD_MASK (0x0F)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_RWMASK (0x0F)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_ROMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_WOMASK (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_UNUSED_MASK (0xF0)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_rdpk_out_shift_OFFSET (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_rdpk_out_shift_WIDTH (4)
#define ISP_CE1_RADIAL_ADSOC_RP_OUT_SHIFT_rdpk_out_shift_MASK (0x0F)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_UNITY
*/

#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_SIZE (16)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x0a)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_BITFIELD_MASK (0x01FF)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_RWMASK (0x01FF)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_ROMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_WOMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_UNUSED_MASK (0xFE00)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_rdpk_unity_OFFSET (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_rdpk_unity_WIDTH (9)
#define ISP_CE1_RADIAL_ADSOC_RP_UNITY_rdpk_unity_MASK (0x01FF)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_HOFFSET
*/

#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_SIZE (16)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x0c)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_BITFIELD_MASK (0x3FFF)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_RWMASK (0x3FFF)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_ROMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_WOMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_UNUSED_MASK (0xC000)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_rdpk_hoffset_OFFSET (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_rdpk_hoffset_WIDTH (14)
#define ISP_CE1_RADIAL_ADSOC_RP_HOFFSET_rdpk_hoffset_MASK (0x3FFF)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_VOFFSET
*/

#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_SIZE (16)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x0e)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_BITFIELD_MASK (0x3FFF)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_RWMASK (0x3FFF)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_ROMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_WOMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_UNUSED_MASK (0xC000)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_rdpk_voffset_OFFSET (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_rdpk_voffset_WIDTH (14)
#define ISP_CE1_RADIAL_ADSOC_RP_VOFFSET_rdpk_voffset_MASK (0x3FFF)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_SCALE_X
*/

#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_SIZE (16)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x10)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_RWMASK (0xFFFF)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_ROMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_WOMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_UNUSED_MASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_rdpk_scaling_factor_x_OFFSET (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_rdpk_scaling_factor_x_WIDTH (16)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_X_rdpk_scaling_factor_x_MASK (0xFFFF)

/*
* Register : ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y
*/

#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_SIZE (16)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_OFFSET (pictorv2_in_ISP_CE1_RADIAL_ADSOC_RP_BASE_ADDR + 0x12)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_RESET_VALUE (0x00)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_RWMASK (0xFFFF)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_ROMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_WOMASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_UNUSED_MASK (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_rdpk_scaling_factor_y_OFFSET (0x0000)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_rdpk_scaling_factor_y_WIDTH (16)
#define ISP_CE1_RADIAL_ADSOC_RP_SCALE_Y_rdpk_scaling_factor_y_MASK (0xFFFF)


/*
* Address Block : ISP_CE1_MUX_GPS
*/

#define pictorv2_in_ISP_CE1_MUX_GPS_BASE_ADDR               (0x8d0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_MUX_GPS_ENABLE
*/

#define ISP_CE1_MUX_GPS_ENABLE_SIZE (8)
#define ISP_CE1_MUX_GPS_ENABLE_OFFSET (pictorv2_in_ISP_CE1_MUX_GPS_BASE_ADDR + 0x00)
#define ISP_CE1_MUX_GPS_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_MUX_GPS_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_MUX_GPS_ENABLE_RWMASK (0x11)
#define ISP_CE1_MUX_GPS_ENABLE_ROMASK (0x00)
#define ISP_CE1_MUX_GPS_ENABLE_WOMASK (0x00)
#define ISP_CE1_MUX_GPS_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE1_MUX_GPS_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE1_MUX_GPS_SELECT
*/

#define ISP_CE1_MUX_GPS_SELECT_SIZE (8)
#define ISP_CE1_MUX_GPS_SELECT_OFFSET (pictorv2_in_ISP_CE1_MUX_GPS_BASE_ADDR + 0x02)
#define ISP_CE1_MUX_GPS_SELECT_RESET_VALUE (0x00)
#define ISP_CE1_MUX_GPS_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE1_MUX_GPS_SELECT_RWMASK (0x11)
#define ISP_CE1_MUX_GPS_SELECT_ROMASK (0x00)
#define ISP_CE1_MUX_GPS_SELECT_WOMASK (0x00)
#define ISP_CE1_MUX_GPS_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE1_MUX_GPS_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE1_MUX_SHARP
*/

#define pictorv2_in_ISP_CE1_MUX_SHARP_BASE_ADDR             (0x8e0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_MUX_SHARP_ENABLE
*/

#define ISP_CE1_MUX_SHARP_ENABLE_SIZE (8)
#define ISP_CE1_MUX_SHARP_ENABLE_OFFSET (pictorv2_in_ISP_CE1_MUX_SHARP_BASE_ADDR + 0x00)
#define ISP_CE1_MUX_SHARP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_MUX_SHARP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_MUX_SHARP_ENABLE_RWMASK (0x11)
#define ISP_CE1_MUX_SHARP_ENABLE_ROMASK (0x00)
#define ISP_CE1_MUX_SHARP_ENABLE_WOMASK (0x00)
#define ISP_CE1_MUX_SHARP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE1_MUX_SHARP_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE1_MUX_SHARP_SELECT
*/

#define ISP_CE1_MUX_SHARP_SELECT_SIZE (8)
#define ISP_CE1_MUX_SHARP_SELECT_OFFSET (pictorv2_in_ISP_CE1_MUX_SHARP_BASE_ADDR + 0x02)
#define ISP_CE1_MUX_SHARP_SELECT_RESET_VALUE (0x00)
#define ISP_CE1_MUX_SHARP_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE1_MUX_SHARP_SELECT_RWMASK (0x11)
#define ISP_CE1_MUX_SHARP_SELECT_ROMASK (0x00)
#define ISP_CE1_MUX_SHARP_SELECT_WOMASK (0x00)
#define ISP_CE1_MUX_SHARP_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE1_MUX_SHARP_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE1_MUX_UNSHARP
*/

#define pictorv2_in_ISP_CE1_MUX_UNSHARP_BASE_ADDR           (0x8f0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_MUX_UNSHARP_ENABLE
*/

#define ISP_CE1_MUX_UNSHARP_ENABLE_SIZE (8)
#define ISP_CE1_MUX_UNSHARP_ENABLE_OFFSET (pictorv2_in_ISP_CE1_MUX_UNSHARP_BASE_ADDR + 0x00)
#define ISP_CE1_MUX_UNSHARP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_MUX_UNSHARP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_MUX_UNSHARP_ENABLE_RWMASK (0x11)
#define ISP_CE1_MUX_UNSHARP_ENABLE_ROMASK (0x00)
#define ISP_CE1_MUX_UNSHARP_ENABLE_WOMASK (0x00)
#define ISP_CE1_MUX_UNSHARP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE1_MUX_UNSHARP_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE1_MUX_UNSHARP_SELECT
*/

#define ISP_CE1_MUX_UNSHARP_SELECT_SIZE (8)
#define ISP_CE1_MUX_UNSHARP_SELECT_OFFSET (pictorv2_in_ISP_CE1_MUX_UNSHARP_BASE_ADDR + 0x02)
#define ISP_CE1_MUX_UNSHARP_SELECT_RESET_VALUE (0x00)
#define ISP_CE1_MUX_UNSHARP_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE1_MUX_UNSHARP_SELECT_RWMASK (0x11)
#define ISP_CE1_MUX_UNSHARP_SELECT_ROMASK (0x00)
#define ISP_CE1_MUX_UNSHARP_SELECT_WOMASK (0x00)
#define ISP_CE1_MUX_UNSHARP_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE1_MUX_UNSHARP_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE1_FLEXTF_SHARP
*/

#define pictorv2_in_ISP_CE1_FLEXTF_SHARP_BASE_ADDR          (0x900U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_FLEXTF_SHARP_ENABLE
*/

#define ISP_CE1_FLEXTF_SHARP_ENABLE_SIZE (8)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_SHARP_BASE_ADDR + 0x00)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_RWMASK (0x11)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_ROMASK (0x00)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_WOMASK (0x00)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_enable_OFFSET (0x00)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_enable_WIDTH (1)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_enable_MASK (0x01)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_enable_DISABLE (0x00)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_enable_ENABLE (0x01)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_soft_reset_WIDTH (1)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_soft_reset_MASK (0x10)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_CE1_FLEXTF_SHARP_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR
*/

#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_SIZE (16)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_SHARP_BASE_ADDR + 0x02)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_RWMASK (0xFFFF)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_UNUSED_MASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_WIDTH (16)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_MASK (0xFFFF)

/*
* Register : ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED
*/

#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_SIZE (16)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_SHARP_BASE_ADDR + 0x04)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_RWMASK (0xFFFF)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_UNUSED_MASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_last_elt_red_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_last_elt_red_WIDTH (16)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_RED_last_elt_red_MASK (0xFFFF)

/*
* Register : ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE
*/

#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_SIZE (16)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_SHARP_BASE_ADDR + 0x06)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_RWMASK (0xFFFF)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_UNUSED_MASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_last_elt_blue_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_last_elt_blue_WIDTH (16)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_BLUE_last_elt_blue_MASK (0xFFFF)

/*
* Register : ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB
*/

#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_SIZE (16)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_SHARP_BASE_ADDR + 0x08)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_RWMASK (0xFFFF)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_UNUSED_MASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_last_elt_gib_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_last_elt_gib_WIDTH (16)
#define ISP_CE1_FLEXTF_SHARP_LAST_ELT_GIB_last_elt_gib_MASK (0xFFFF)

/*
* Register : ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT
*/

#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_SIZE (16)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_SHARP_BASE_ADDR + 0x0a)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_BITFIELD_MASK (0x0007)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_RWMASK (0x0007)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_UNUSED_MASK (0xFFF8)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_pixel_shift_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_pixel_shift_WIDTH (3)
#define ISP_CE1_FLEXTF_SHARP_PIXELIN_SHIFT_pixel_shift_MASK (0x0007)


/*
* Address Block : ISP_CE1_FLEXTF_UNSHARP
*/

#define pictorv2_in_ISP_CE1_FLEXTF_UNSHARP_BASE_ADDR        (0x910U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_FLEXTF_UNSHARP_ENABLE
*/

#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_SIZE (8)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_UNSHARP_BASE_ADDR + 0x00)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_RWMASK (0x11)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_ROMASK (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_WOMASK (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_enable_OFFSET (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_enable_WIDTH (1)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_enable_MASK (0x01)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_enable_DISABLE (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_enable_ENABLE (0x01)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_soft_reset_WIDTH (1)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_soft_reset_MASK (0x10)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR
*/

#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_SIZE (16)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_UNSHARP_BASE_ADDR + 0x02)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_RWMASK (0xFFFF)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_UNUSED_MASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_WIDTH (16)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GREEN_GIR_last_elt_green_gir_MASK (0xFFFF)

/*
* Register : ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED
*/

#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_SIZE (16)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_UNSHARP_BASE_ADDR + 0x04)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_RWMASK (0xFFFF)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_UNUSED_MASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_last_elt_red_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_last_elt_red_WIDTH (16)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_RED_last_elt_red_MASK (0xFFFF)

/*
* Register : ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE
*/

#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_SIZE (16)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_UNSHARP_BASE_ADDR + 0x06)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_RWMASK (0xFFFF)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_UNUSED_MASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_last_elt_blue_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_last_elt_blue_WIDTH (16)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_BLUE_last_elt_blue_MASK (0xFFFF)

/*
* Register : ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB
*/

#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_SIZE (16)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_UNSHARP_BASE_ADDR + 0x08)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_RWMASK (0xFFFF)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_UNUSED_MASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_last_elt_gib_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_last_elt_gib_WIDTH (16)
#define ISP_CE1_FLEXTF_UNSHARP_LAST_ELT_GIB_last_elt_gib_MASK (0xFFFF)

/*
* Register : ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT
*/

#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_SIZE (16)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_OFFSET (pictorv2_in_ISP_CE1_FLEXTF_UNSHARP_BASE_ADDR + 0x0a)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_RESET_VALUE (0x00)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_BITFIELD_MASK (0x0007)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_RWMASK (0x0007)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_ROMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_WOMASK (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_UNUSED_MASK (0xFFF8)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_pixel_shift_OFFSET (0x0000)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_pixel_shift_WIDTH (3)
#define ISP_CE1_FLEXTF_UNSHARP_PIXELIN_SHIFT_pixel_shift_MASK (0x0007)


/*
* Address Block : ISP_CE1_MUX_MATRIX_ADSOC
*/

#define pictorv2_in_ISP_CE1_MUX_MATRIX_ADSOC_BASE_ADDR      (0x920U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_MUX_MATRIX_ADSOC_ENABLE
*/

#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_SIZE (8)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_OFFSET (pictorv2_in_ISP_CE1_MUX_MATRIX_ADSOC_BASE_ADDR + 0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_RWMASK (0x11)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_ROMASK (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_WOMASK (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE1_MUX_MATRIX_ADSOC_SELECT
*/

#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_SIZE (8)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_OFFSET (pictorv2_in_ISP_CE1_MUX_MATRIX_ADSOC_BASE_ADDR + 0x02)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_RESET_VALUE (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_RWMASK (0x11)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_ROMASK (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_WOMASK (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE1_MUX_MATRIX_ADSOC_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE1_SNAIL0_ADSOC
*/

#define pictorv2_in_ISP_CE1_SNAIL0_ADSOC_BASE_ADDR          (0x930U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_SNAIL0_ADSOC_ENABLE
*/

#define ISP_CE1_SNAIL0_ADSOC_ENABLE_SIZE (8)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_OFFSET (pictorv2_in_ISP_CE1_SNAIL0_ADSOC_BASE_ADDR + 0x00)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_RESET_VALUE (0x01)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_RWMASK (0x11)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_ROMASK (0x00)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_WOMASK (0x00)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_CE1_SNAIL0_ADSOC_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_CE1_SNAIL1_ADSOC
*/

#define pictorv2_in_ISP_CE1_SNAIL1_ADSOC_BASE_ADDR          (0x940U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_SNAIL1_ADSOC_ENABLE
*/

#define ISP_CE1_SNAIL1_ADSOC_ENABLE_SIZE (8)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_OFFSET (pictorv2_in_ISP_CE1_SNAIL1_ADSOC_BASE_ADDR + 0x00)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_RESET_VALUE (0x01)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_RWMASK (0x11)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_ROMASK (0x00)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_WOMASK (0x00)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_CE1_SNAIL1_ADSOC_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_CE1_MATRIX
*/

#define pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR                (0x950U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_MATRIX_ENABLE
*/

#define ISP_CE1_MATRIX_ENABLE_SIZE (8)
#define ISP_CE1_MATRIX_ENABLE_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x00)
#define ISP_CE1_MATRIX_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_MATRIX_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_MATRIX_ENABLE_RWMASK (0x11)
#define ISP_CE1_MATRIX_ENABLE_ROMASK (0x00)
#define ISP_CE1_MATRIX_ENABLE_WOMASK (0x00)
#define ISP_CE1_MATRIX_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_MATRIX_ENABLE_enable_OFFSET (0x00)
#define ISP_CE1_MATRIX_ENABLE_enable_WIDTH (1)
#define ISP_CE1_MATRIX_ENABLE_enable_MASK (0x01)
#define ISP_CE1_MATRIX_ENABLE_enable_DISABLE (0x00)
#define ISP_CE1_MATRIX_ENABLE_enable_ENABLE (0x01)
#define ISP_CE1_MATRIX_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_CE1_MATRIX_ENABLE_soft_reset_WIDTH (1)
#define ISP_CE1_MATRIX_ENABLE_soft_reset_MASK (0x10)
#define ISP_CE1_MATRIX_ENABLE_soft_reset_DISABLE (0x00)
#define ISP_CE1_MATRIX_ENABLE_soft_reset_ENABLE (0x01)

/*
* Register : ISP_CE1_MATRIX_RCOF00
*/

#define ISP_CE1_MATRIX_RCOF00_SIZE (16)
#define ISP_CE1_MATRIX_RCOF00_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x02)
#define ISP_CE1_MATRIX_RCOF00_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF00_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF00_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF00_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF00_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF00_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF00_rcof00_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF00_rcof00_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF00_rcof00_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_RCOF01
*/

#define ISP_CE1_MATRIX_RCOF01_SIZE (16)
#define ISP_CE1_MATRIX_RCOF01_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x04)
#define ISP_CE1_MATRIX_RCOF01_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF01_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF01_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF01_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF01_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF01_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF01_rcof01_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF01_rcof01_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF01_rcof01_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_RCOF02
*/

#define ISP_CE1_MATRIX_RCOF02_SIZE (16)
#define ISP_CE1_MATRIX_RCOF02_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x06)
#define ISP_CE1_MATRIX_RCOF02_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF02_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF02_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF02_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF02_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF02_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF02_rcof02_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF02_rcof02_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF02_rcof02_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_RCOF10
*/

#define ISP_CE1_MATRIX_RCOF10_SIZE (16)
#define ISP_CE1_MATRIX_RCOF10_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x08)
#define ISP_CE1_MATRIX_RCOF10_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF10_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF10_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF10_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF10_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF10_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF10_rcof10_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF10_rcof10_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF10_rcof10_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_RCOF11
*/

#define ISP_CE1_MATRIX_RCOF11_SIZE (16)
#define ISP_CE1_MATRIX_RCOF11_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x0a)
#define ISP_CE1_MATRIX_RCOF11_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF11_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF11_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF11_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF11_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF11_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF11_rcof11_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF11_rcof11_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF11_rcof11_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_RCOF12
*/

#define ISP_CE1_MATRIX_RCOF12_SIZE (16)
#define ISP_CE1_MATRIX_RCOF12_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x0c)
#define ISP_CE1_MATRIX_RCOF12_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF12_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF12_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF12_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF12_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF12_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF12_rcof12_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF12_rcof12_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF12_rcof12_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_RCOF20
*/

#define ISP_CE1_MATRIX_RCOF20_SIZE (16)
#define ISP_CE1_MATRIX_RCOF20_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x0e)
#define ISP_CE1_MATRIX_RCOF20_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF20_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF20_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF20_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF20_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF20_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF20_rcof20_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF20_rcof20_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF20_rcof20_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_RCOF21
*/

#define ISP_CE1_MATRIX_RCOF21_SIZE (16)
#define ISP_CE1_MATRIX_RCOF21_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x10)
#define ISP_CE1_MATRIX_RCOF21_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF21_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF21_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF21_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF21_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF21_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF21_rcof21_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF21_rcof21_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF21_rcof21_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_RCOF22
*/

#define ISP_CE1_MATRIX_RCOF22_SIZE (16)
#define ISP_CE1_MATRIX_RCOF22_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x12)
#define ISP_CE1_MATRIX_RCOF22_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_RCOF22_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF22_RWMASK (0xFFFF)
#define ISP_CE1_MATRIX_RCOF22_ROMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF22_WOMASK (0x0000)
#define ISP_CE1_MATRIX_RCOF22_UNUSED_MASK (0x0000)
#define ISP_CE1_MATRIX_RCOF22_rcof22_OFFSET (0x0000)
#define ISP_CE1_MATRIX_RCOF22_rcof22_WIDTH (16)
#define ISP_CE1_MATRIX_RCOF22_rcof22_MASK (0xFFFF)

/*
* Register : ISP_CE1_MATRIX_R_OFFSET
*/

#define ISP_CE1_MATRIX_R_OFFSET_SIZE (16)
#define ISP_CE1_MATRIX_R_OFFSET_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x14)
#define ISP_CE1_MATRIX_R_OFFSET_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_R_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_MATRIX_R_OFFSET_RWMASK (0x1FFF)
#define ISP_CE1_MATRIX_R_OFFSET_ROMASK (0x0000)
#define ISP_CE1_MATRIX_R_OFFSET_WOMASK (0x0000)
#define ISP_CE1_MATRIX_R_OFFSET_UNUSED_MASK (0xE000)
#define ISP_CE1_MATRIX_R_OFFSET_r_offset_OFFSET (0x0000)
#define ISP_CE1_MATRIX_R_OFFSET_r_offset_WIDTH (13)
#define ISP_CE1_MATRIX_R_OFFSET_r_offset_MASK (0x1FFF)

/*
* Register : ISP_CE1_MATRIX_G_OFFSET
*/

#define ISP_CE1_MATRIX_G_OFFSET_SIZE (16)
#define ISP_CE1_MATRIX_G_OFFSET_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x16)
#define ISP_CE1_MATRIX_G_OFFSET_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_G_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_MATRIX_G_OFFSET_RWMASK (0x1FFF)
#define ISP_CE1_MATRIX_G_OFFSET_ROMASK (0x0000)
#define ISP_CE1_MATRIX_G_OFFSET_WOMASK (0x0000)
#define ISP_CE1_MATRIX_G_OFFSET_UNUSED_MASK (0xE000)
#define ISP_CE1_MATRIX_G_OFFSET_g_offset_OFFSET (0x0000)
#define ISP_CE1_MATRIX_G_OFFSET_g_offset_WIDTH (13)
#define ISP_CE1_MATRIX_G_OFFSET_g_offset_MASK (0x1FFF)

/*
* Register : ISP_CE1_MATRIX_B_OFFSET
*/

#define ISP_CE1_MATRIX_B_OFFSET_SIZE (16)
#define ISP_CE1_MATRIX_B_OFFSET_OFFSET (pictorv2_in_ISP_CE1_MATRIX_BASE_ADDR + 0x18)
#define ISP_CE1_MATRIX_B_OFFSET_RESET_VALUE (0x0000)
#define ISP_CE1_MATRIX_B_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_MATRIX_B_OFFSET_RWMASK (0x1FFF)
#define ISP_CE1_MATRIX_B_OFFSET_ROMASK (0x0000)
#define ISP_CE1_MATRIX_B_OFFSET_WOMASK (0x0000)
#define ISP_CE1_MATRIX_B_OFFSET_UNUSED_MASK (0xE000)
#define ISP_CE1_MATRIX_B_OFFSET_b_offset_OFFSET (0x0000)
#define ISP_CE1_MATRIX_B_OFFSET_b_offset_WIDTH (13)
#define ISP_CE1_MATRIX_B_OFFSET_b_offset_MASK (0x1FFF)


/*
* Address Block : ISP_CE1_PIXDELAY_0
*/

#define pictorv2_in_ISP_CE1_PIXDELAY_0_BASE_ADDR            (0x970U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_PIXDELAY_0_ENABLE
*/

#define ISP_CE1_PIXDELAY_0_ENABLE_SIZE (8)
#define ISP_CE1_PIXDELAY_0_ENABLE_OFFSET (pictorv2_in_ISP_CE1_PIXDELAY_0_BASE_ADDR + 0x00)
#define ISP_CE1_PIXDELAY_0_ENABLE_RESET_VALUE (0x01)
#define ISP_CE1_PIXDELAY_0_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_PIXDELAY_0_ENABLE_RWMASK (0x11)
#define ISP_CE1_PIXDELAY_0_ENABLE_ROMASK (0x00)
#define ISP_CE1_PIXDELAY_0_ENABLE_WOMASK (0x00)
#define ISP_CE1_PIXDELAY_0_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_enable_OFFSET (0x00)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_enable_WIDTH (1)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_enable_MASK (0x01)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_enable_DISABLE (0x00)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_enable_ENABLE (0x01)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_soft_reset_OFFSET (0x04)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_soft_reset_WIDTH (1)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_soft_reset_MASK (0x10)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_soft_reset_SOFT_RST_DISABLE (0x00)
#define ISP_CE1_PIXDELAY_0_ENABLE_pix_delay_soft_reset_SOFT_RST_ENABLE (0x01)


/*
* Address Block : ISP_CE1_PIXDELAY_1
*/

#define pictorv2_in_ISP_CE1_PIXDELAY_1_BASE_ADDR            (0x980U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_PIXDELAY_1_ENABLE
*/

#define ISP_CE1_PIXDELAY_1_ENABLE_SIZE (8)
#define ISP_CE1_PIXDELAY_1_ENABLE_OFFSET (pictorv2_in_ISP_CE1_PIXDELAY_1_BASE_ADDR + 0x00)
#define ISP_CE1_PIXDELAY_1_ENABLE_RESET_VALUE (0x01)
#define ISP_CE1_PIXDELAY_1_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_PIXDELAY_1_ENABLE_RWMASK (0x11)
#define ISP_CE1_PIXDELAY_1_ENABLE_ROMASK (0x00)
#define ISP_CE1_PIXDELAY_1_ENABLE_WOMASK (0x00)
#define ISP_CE1_PIXDELAY_1_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_enable_OFFSET (0x00)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_enable_WIDTH (1)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_enable_MASK (0x01)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_enable_DISABLE (0x00)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_enable_ENABLE (0x01)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_soft_reset_OFFSET (0x04)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_soft_reset_WIDTH (1)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_soft_reset_MASK (0x10)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_soft_reset_SOFT_RST_DISABLE (0x00)
#define ISP_CE1_PIXDELAY_1_ENABLE_pix_delay_soft_reset_SOFT_RST_ENABLE (0x01)


/*
* Address Block : ISP_CE1_SPECIALFX
*/

#define pictorv2_in_ISP_CE1_SPECIALFX_BASE_ADDR             (0x990U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_SPECIALFX_SOL_ENABLE
*/

#define ISP_CE1_SPECIALFX_SOL_ENABLE_SIZE (8)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_OFFSET (pictorv2_in_ISP_CE1_SPECIALFX_BASE_ADDR + 0x00)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_RWMASK (0x11)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_ROMASK (0x00)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_WOMASK (0x00)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_sol_enable_OFFSET (0x00)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_sol_enable_WIDTH (1)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_sol_enable_MASK (0x01)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_sol_enable_DISABLE_SOLAR (0x00)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_sol_enable_ENABLE_SOLAR (0x01)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_soft_reset_OFFSET (0x04)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_soft_reset_WIDTH (1)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_soft_reset_MASK (0x10)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_soft_reset_DISABLE_SOFT_RESET (0x00)
#define ISP_CE1_SPECIALFX_SOL_ENABLE_sfx_soft_reset_ENABLE_SOFT_RESET (0x01)

/*
* Register : ISP_CE1_SPECIALFX_NEG_ENABLE
*/

#define ISP_CE1_SPECIALFX_NEG_ENABLE_SIZE (8)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_OFFSET (pictorv2_in_ISP_CE1_SPECIALFX_BASE_ADDR + 0x02)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_BITFIELD_MASK (0x01)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_RWMASK (0x01)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_ROMASK (0x00)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_WOMASK (0x00)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_UNUSED_MASK (0xFE)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_sfx_neg_enable_OFFSET (0x00)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_sfx_neg_enable_WIDTH (1)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_sfx_neg_enable_MASK (0x01)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_sfx_neg_enable_DISABLE_NEG (0x00)
#define ISP_CE1_SPECIALFX_NEG_ENABLE_sfx_neg_enable_ENABLE_NEG (0x01)


/*
* Address Block : ISP_CE1_DITHER
*/

#define pictorv2_in_ISP_CE1_DITHER_BASE_ADDR                (0x9a0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_DITHER_ENABLE
*/

#define ISP_CE1_DITHER_ENABLE_SIZE (8)
#define ISP_CE1_DITHER_ENABLE_OFFSET (pictorv2_in_ISP_CE1_DITHER_BASE_ADDR + 0x00)
#define ISP_CE1_DITHER_ENABLE_RESET_VALUE (0x01)
#define ISP_CE1_DITHER_ENABLE_BITFIELD_MASK (0x01)
#define ISP_CE1_DITHER_ENABLE_RWMASK (0x01)
#define ISP_CE1_DITHER_ENABLE_ROMASK (0x00)
#define ISP_CE1_DITHER_ENABLE_WOMASK (0x00)
#define ISP_CE1_DITHER_ENABLE_UNUSED_MASK (0xFE)
#define ISP_CE1_DITHER_ENABLE_enable_OFFSET (0x00)
#define ISP_CE1_DITHER_ENABLE_enable_WIDTH (1)
#define ISP_CE1_DITHER_ENABLE_enable_MASK (0x01)
#define ISP_CE1_DITHER_ENABLE_enable_DISABLE (0x00)
#define ISP_CE1_DITHER_ENABLE_enable_ENABLE (0x01)

/*
* Register : ISP_CE1_DITHER_GREEN_BITS
*/

#define ISP_CE1_DITHER_GREEN_BITS_SIZE (8)
#define ISP_CE1_DITHER_GREEN_BITS_OFFSET (pictorv2_in_ISP_CE1_DITHER_BASE_ADDR + 0x02)
#define ISP_CE1_DITHER_GREEN_BITS_RESET_VALUE (0x06)
#define ISP_CE1_DITHER_GREEN_BITS_BITFIELD_MASK (0x07)
#define ISP_CE1_DITHER_GREEN_BITS_RWMASK (0x07)
#define ISP_CE1_DITHER_GREEN_BITS_ROMASK (0x00)
#define ISP_CE1_DITHER_GREEN_BITS_WOMASK (0x00)
#define ISP_CE1_DITHER_GREEN_BITS_UNUSED_MASK (0xF8)
#define ISP_CE1_DITHER_GREEN_BITS_iGbits_OFFSET (0x00)
#define ISP_CE1_DITHER_GREEN_BITS_iGbits_WIDTH (3)
#define ISP_CE1_DITHER_GREEN_BITS_iGbits_MASK (0x07)

/*
* Register : ISP_CE1_DITHER_REDBLUE_BITS
*/

#define ISP_CE1_DITHER_REDBLUE_BITS_SIZE (8)
#define ISP_CE1_DITHER_REDBLUE_BITS_OFFSET (pictorv2_in_ISP_CE1_DITHER_BASE_ADDR + 0x04)
#define ISP_CE1_DITHER_REDBLUE_BITS_RESET_VALUE (0x05)
#define ISP_CE1_DITHER_REDBLUE_BITS_BITFIELD_MASK (0x07)
#define ISP_CE1_DITHER_REDBLUE_BITS_RWMASK (0x07)
#define ISP_CE1_DITHER_REDBLUE_BITS_ROMASK (0x00)
#define ISP_CE1_DITHER_REDBLUE_BITS_WOMASK (0x00)
#define ISP_CE1_DITHER_REDBLUE_BITS_UNUSED_MASK (0xF8)
#define ISP_CE1_DITHER_REDBLUE_BITS_iRBbits_OFFSET (0x00)
#define ISP_CE1_DITHER_REDBLUE_BITS_iRBbits_WIDTH (3)
#define ISP_CE1_DITHER_REDBLUE_BITS_iRBbits_MASK (0x07)


/*
* Address Block : ISP_CE1_UV_LOAD
*/

#define pictorv2_in_ISP_CE1_UV_LOAD_BASE_ADDR               (0x9b0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_UV_LOAD_ENABLE
*/

#define ISP_CE1_UV_LOAD_ENABLE_SIZE (8)
#define ISP_CE1_UV_LOAD_ENABLE_OFFSET (pictorv2_in_ISP_CE1_UV_LOAD_BASE_ADDR + 0x00)
#define ISP_CE1_UV_LOAD_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_UV_LOAD_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_UV_LOAD_ENABLE_RWMASK (0x11)
#define ISP_CE1_UV_LOAD_ENABLE_ROMASK (0x00)
#define ISP_CE1_UV_LOAD_ENABLE_WOMASK (0x00)
#define ISP_CE1_UV_LOAD_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_CE1_UV_LOAD_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_CE1_UV_LOAD_SELECT
*/

#define ISP_CE1_UV_LOAD_SELECT_SIZE (8)
#define ISP_CE1_UV_LOAD_SELECT_OFFSET (pictorv2_in_ISP_CE1_UV_LOAD_BASE_ADDR + 0x02)
#define ISP_CE1_UV_LOAD_SELECT_RESET_VALUE (0x00)
#define ISP_CE1_UV_LOAD_SELECT_BITFIELD_MASK (0x11)
#define ISP_CE1_UV_LOAD_SELECT_RWMASK (0x11)
#define ISP_CE1_UV_LOAD_SELECT_ROMASK (0x00)
#define ISP_CE1_UV_LOAD_SELECT_WOMASK (0x00)
#define ISP_CE1_UV_LOAD_SELECT_UNUSED_MASK (0xEE)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_select_WIDTH (1)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_select_MASK (0x01)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_CE1_UV_LOAD_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_CE1_GPSSCALER
*/

#define pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR             (0xa00U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_GPSSCALER_ENABLE
*/

#define ISP_CE1_GPSSCALER_ENABLE_SIZE (8)
#define ISP_CE1_GPSSCALER_ENABLE_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x00)
#define ISP_CE1_GPSSCALER_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_GPSSCALER_ENABLE_BITFIELD_MASK (0x13)
#define ISP_CE1_GPSSCALER_ENABLE_RWMASK (0x13)
#define ISP_CE1_GPSSCALER_ENABLE_ROMASK (0x00)
#define ISP_CE1_GPSSCALER_ENABLE_WOMASK (0x00)
#define ISP_CE1_GPSSCALER_ENABLE_UNUSED_MASK (0xEC)
#define ISP_CE1_GPSSCALER_ENABLE_h_gps_enable_OFFSET (0x00)
#define ISP_CE1_GPSSCALER_ENABLE_h_gps_enable_WIDTH (1)
#define ISP_CE1_GPSSCALER_ENABLE_h_gps_enable_MASK (0x01)
#define ISP_CE1_GPSSCALER_ENABLE_h_gps_enable_DISABLE (0x00)
#define ISP_CE1_GPSSCALER_ENABLE_h_gps_enable_ENABLE (0x01)
#define ISP_CE1_GPSSCALER_ENABLE_v_gps_enable_OFFSET (0x01)
#define ISP_CE1_GPSSCALER_ENABLE_v_gps_enable_WIDTH (1)
#define ISP_CE1_GPSSCALER_ENABLE_v_gps_enable_MASK (0x02)
#define ISP_CE1_GPSSCALER_ENABLE_v_gps_enable_DISABLE (0x00)
#define ISP_CE1_GPSSCALER_ENABLE_v_gps_enable_ENABLE (0x01)
#define ISP_CE1_GPSSCALER_ENABLE_gps_soft_reset_OFFSET (0x04)
#define ISP_CE1_GPSSCALER_ENABLE_gps_soft_reset_WIDTH (1)
#define ISP_CE1_GPSSCALER_ENABLE_gps_soft_reset_MASK (0x10)
#define ISP_CE1_GPSSCALER_ENABLE_gps_soft_reset_DISABLE (0x00)
#define ISP_CE1_GPSSCALER_ENABLE_gps_soft_reset_ENABLE (0x01)

/*
* Register : ISP_CE1_GPSSCALER_DOWNSCALING
*/

#define ISP_CE1_GPSSCALER_DOWNSCALING_SIZE (8)
#define ISP_CE1_GPSSCALER_DOWNSCALING_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x02)
#define ISP_CE1_GPSSCALER_DOWNSCALING_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_DOWNSCALING_BITFIELD_MASK (0x01)
#define ISP_CE1_GPSSCALER_DOWNSCALING_RWMASK (0x01)
#define ISP_CE1_GPSSCALER_DOWNSCALING_ROMASK (0x00)
#define ISP_CE1_GPSSCALER_DOWNSCALING_WOMASK (0x00)
#define ISP_CE1_GPSSCALER_DOWNSCALING_UNUSED_MASK (0xFE)
#define ISP_CE1_GPSSCALER_DOWNSCALING_gps_downscaling_OFFSET (0x00)
#define ISP_CE1_GPSSCALER_DOWNSCALING_gps_downscaling_WIDTH (1)
#define ISP_CE1_GPSSCALER_DOWNSCALING_gps_downscaling_MASK (0x01)

/*
* Register : ISP_CE1_GPSSCALER_LR_BORD_PIXS
*/

#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_SIZE (32)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x04)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_h_left_border_pixs_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_h_left_border_pixs_WIDTH (16)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_h_left_border_pixs_MASK (0x0000FFFF)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_h_right_border_pixs_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_h_right_border_pixs_WIDTH (16)
#define ISP_CE1_GPSSCALER_LR_BORD_PIXS_h_right_border_pixs_MASK (0xFFFF0000)

/*
* Register : ISP_CE1_GPSSCALER_TB_BORD_LINES
*/

#define ISP_CE1_GPSSCALER_TB_BORD_LINES_SIZE (32)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x06)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_v_top_border_lines_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_v_top_border_lines_WIDTH (16)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_v_top_border_lines_MASK (0x0000FFFF)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_v_bottom_border_lines_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_v_bottom_border_lines_WIDTH (16)
#define ISP_CE1_GPSSCALER_TB_BORD_LINES_v_bottom_border_lines_MASK (0xFFFF0000)

/*
* Register : ISP_CE1_GPSSCALER_H_V_FIRTAPS
*/

#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_SIZE (16)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x08)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_RWMASK (0xFFFF)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_ROMASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_WOMASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_UNUSED_MASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_v_fir_taps_OFFSET (0x0000)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_v_fir_taps_WIDTH (8)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_v_fir_taps_MASK (0x00FF)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_h_fir_taps_OFFSET (0x0008)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_h_fir_taps_WIDTH (8)
#define ISP_CE1_GPSSCALER_H_V_FIRTAPS_h_fir_taps_MASK (0xFF00)

/*
* Register : ISP_CE1_GPSSCALER_H_V_IPSIZES
*/

#define ISP_CE1_GPSSCALER_H_V_IPSIZES_SIZE (32)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x0a)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_v_input_size_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_v_input_size_WIDTH (16)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_v_input_size_MASK (0x0000FFFF)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_h_input_size_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_h_input_size_WIDTH (16)
#define ISP_CE1_GPSSCALER_H_V_IPSIZES_h_input_size_MASK (0xFFFF0000)

/*
* Register : ISP_CE1_GPSSCALER_H_V_OPSIZES
*/

#define ISP_CE1_GPSSCALER_H_V_OPSIZES_SIZE (32)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x0c)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_v_input_size_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_v_input_size_WIDTH (16)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_v_input_size_MASK (0x0000FFFF)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_h_input_size_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_h_input_size_WIDTH (16)
#define ISP_CE1_GPSSCALER_H_V_OPSIZES_h_input_size_MASK (0xFFFF0000)

/*
* Register : ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS
*/

#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_SIZE (16)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x0e)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_RWMASK (0xFFFF)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_ROMASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_WOMASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_UNUSED_MASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_v_log_phys_polys_OFFSET (0x0000)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_v_log_phys_polys_WIDTH (8)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_v_log_phys_polys_MASK (0x00FF)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_h_log_phys_polys_OFFSET (0x0008)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_h_log_phys_polys_WIDTH (8)
#define ISP_CE1_GPSSCALER_H_V_LOGPHYSPOLYS_h_log_phys_polys_MASK (0xFF00)

/*
* Register : ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY
*/

#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_SIZE (16)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x10)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_RWMASK (0xFFFF)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_ROMASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_WOMASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_UNUSED_MASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_v_kickoff_delay_OFFSET (0x0000)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_v_kickoff_delay_WIDTH (8)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_v_kickoff_delay_MASK (0x00FF)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_h_kickoff_delay_OFFSET (0x0008)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_h_kickoff_delay_WIDTH (8)
#define ISP_CE1_GPSSCALER_H_V_KICKOFF_DLY_h_kickoff_delay_MASK (0xFF00)

/*
* Register : ISP_CE1_GPSSCALER_H_V_CROPFRAC
*/

#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_SIZE (32)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x12)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_v_crop_frac_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_v_crop_frac_WIDTH (16)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_v_crop_frac_MASK (0x0000FFFF)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_h_crop_frac_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_h_crop_frac_WIDTH (16)
#define ISP_CE1_GPSSCALER_H_V_CROPFRAC_h_crop_frac_MASK (0xFFFF0000)

/*
* Register : ISP_CE1_GPSSCALER_H_V_STEPBULK
*/

#define ISP_CE1_GPSSCALER_H_V_STEPBULK_SIZE (16)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x14)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_BITFIELD_MASK (0xFFFF)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_RWMASK (0xFFFF)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_ROMASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_WOMASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_UNUSED_MASK (0x0000)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_v_step_bulk_OFFSET (0x0000)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_v_step_bulk_WIDTH (8)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_v_step_bulk_MASK (0x00FF)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_h_step_bulk_OFFSET (0x0008)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_h_step_bulk_WIDTH (8)
#define ISP_CE1_GPSSCALER_H_V_STEPBULK_h_step_bulk_MASK (0xFF00)

/*
* Register : ISP_CE1_GPSSCALER_H_V_STEPFRAC
*/

#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_SIZE (32)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x16)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_v_step_frac_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_v_step_frac_WIDTH (16)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_v_step_frac_MASK (0x0000FFFF)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_h_step_frac_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_h_step_frac_WIDTH (16)
#define ISP_CE1_GPSSCALER_H_V_STEPFRAC_h_step_frac_MASK (0xFFFF0000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_0_3
*/

#define ISP_CE1_GPSSCALER_HCOF_0_3_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_0_3_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x18)
#define ISP_CE1_GPSSCALER_HCOF_0_3_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_0_3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_0_3_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_0_3_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_0_3_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_0_3_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr3_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr3_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr3_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr2_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr2_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr2_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr1_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr1_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr1_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr0_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr0_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_0_3_h_cof_set_wr0_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_4_7
*/

#define ISP_CE1_GPSSCALER_HCOF_4_7_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_4_7_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x1a)
#define ISP_CE1_GPSSCALER_HCOF_4_7_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_4_7_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_4_7_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_4_7_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_4_7_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_4_7_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr7_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr7_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr7_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr6_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr6_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr6_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr5_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr5_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr5_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr4_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr4_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_4_7_h_cof_set_wr4_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_8_11
*/

#define ISP_CE1_GPSSCALER_HCOF_8_11_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_8_11_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x1c)
#define ISP_CE1_GPSSCALER_HCOF_8_11_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_8_11_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_8_11_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_8_11_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_8_11_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_8_11_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr11_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr11_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr11_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr10_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr10_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr10_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr9_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr9_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr9_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr8_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr8_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_8_11_h_cof_set_wr8_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_12_15
*/

#define ISP_CE1_GPSSCALER_HCOF_12_15_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_12_15_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x1e)
#define ISP_CE1_GPSSCALER_HCOF_12_15_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_12_15_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_12_15_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_12_15_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_12_15_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_12_15_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr15_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr15_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr15_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr14_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr14_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr14_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr13_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr13_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr13_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr12_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr12_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_12_15_h_cof_set_wr12_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_16_19
*/

#define ISP_CE1_GPSSCALER_HCOF_16_19_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_16_19_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x20)
#define ISP_CE1_GPSSCALER_HCOF_16_19_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_16_19_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_16_19_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_16_19_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_16_19_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_16_19_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr19_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr19_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr19_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr18_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr18_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr18_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr17_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr17_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr17_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr16_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr16_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_16_19_h_cof_set_wr16_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_20_23
*/

#define ISP_CE1_GPSSCALER_HCOF_20_23_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_20_23_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x22)
#define ISP_CE1_GPSSCALER_HCOF_20_23_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_20_23_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_20_23_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_20_23_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_20_23_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_20_23_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr23_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr23_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr23_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr22_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr22_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr22_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr21_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr21_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr21_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr20_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr20_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_20_23_h_cof_set_wr20_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_24_27
*/

#define ISP_CE1_GPSSCALER_HCOF_24_27_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_24_27_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x24)
#define ISP_CE1_GPSSCALER_HCOF_24_27_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_24_27_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_24_27_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_24_27_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_24_27_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_24_27_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr27_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr27_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr27_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr26_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr26_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr26_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr25_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr25_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr25_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr24_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr24_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_24_27_h_cof_set_wr24_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_28_31
*/

#define ISP_CE1_GPSSCALER_HCOF_28_31_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_28_31_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x26)
#define ISP_CE1_GPSSCALER_HCOF_28_31_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_28_31_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_28_31_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_28_31_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_28_31_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_28_31_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr31_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr31_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr31_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr30_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr30_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr30_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr29_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr29_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr29_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr28_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr28_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_28_31_h_cof_set_wr28_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_32_35
*/

#define ISP_CE1_GPSSCALER_HCOF_32_35_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_32_35_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x28)
#define ISP_CE1_GPSSCALER_HCOF_32_35_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_32_35_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_32_35_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_32_35_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_32_35_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_32_35_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr35_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr35_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr35_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr34_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr34_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr34_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr33_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr33_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr33_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr32_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr32_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_32_35_h_cof_set_wr32_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_36_39
*/

#define ISP_CE1_GPSSCALER_HCOF_36_39_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_36_39_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x2a)
#define ISP_CE1_GPSSCALER_HCOF_36_39_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_36_39_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_36_39_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_36_39_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_36_39_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_36_39_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr39_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr39_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr39_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr38_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr38_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr38_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr37_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr37_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr37_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr36_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr36_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_36_39_h_cof_set_wr36_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_40_43
*/

#define ISP_CE1_GPSSCALER_HCOF_40_43_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_40_43_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x2c)
#define ISP_CE1_GPSSCALER_HCOF_40_43_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_40_43_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_40_43_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_40_43_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_40_43_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_40_43_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr43_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr43_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr43_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr42_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr42_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr42_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr41_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr41_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr41_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr40_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr40_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_40_43_h_cof_set_wr40_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_44_47
*/

#define ISP_CE1_GPSSCALER_HCOF_44_47_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_44_47_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x2e)
#define ISP_CE1_GPSSCALER_HCOF_44_47_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_44_47_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_44_47_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_44_47_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_44_47_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_44_47_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr47_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr47_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr47_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr46_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr46_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr46_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr45_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr45_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr45_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr44_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr44_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_44_47_h_cof_set_wr44_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_48_51
*/

#define ISP_CE1_GPSSCALER_HCOF_48_51_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_48_51_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x30)
#define ISP_CE1_GPSSCALER_HCOF_48_51_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_48_51_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_48_51_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_48_51_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_48_51_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_48_51_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr51_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr51_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr51_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr50_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr50_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr50_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr49_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr49_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr49_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr48_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr48_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_48_51_h_cof_set_wr48_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_52_55
*/

#define ISP_CE1_GPSSCALER_HCOF_52_55_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_52_55_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x32)
#define ISP_CE1_GPSSCALER_HCOF_52_55_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_52_55_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_52_55_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_52_55_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_52_55_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_52_55_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr55_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr55_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr55_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr54_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr54_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr54_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr53_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr53_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr53_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr52_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr52_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_52_55_h_cof_set_wr52_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_56_59
*/

#define ISP_CE1_GPSSCALER_HCOF_56_59_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_56_59_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x34)
#define ISP_CE1_GPSSCALER_HCOF_56_59_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_56_59_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_56_59_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_56_59_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_56_59_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_56_59_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr59_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr59_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr59_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr58_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr58_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr58_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr57_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr57_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr57_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr56_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr56_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_56_59_h_cof_set_wr56_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_HCOF_60_63
*/

#define ISP_CE1_GPSSCALER_HCOF_60_63_SIZE (32)
#define ISP_CE1_GPSSCALER_HCOF_60_63_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x36)
#define ISP_CE1_GPSSCALER_HCOF_60_63_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_HCOF_60_63_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_60_63_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_HCOF_60_63_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_60_63_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_60_63_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr63_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr63_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr63_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr62_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr62_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr62_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr61_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr61_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr61_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr60_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr60_WIDTH (8)
#define ISP_CE1_GPSSCALER_HCOF_60_63_h_cof_set_wr60_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_0_3
*/

#define ISP_CE1_GPSSCALER_VCOF_0_3_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_0_3_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x38)
#define ISP_CE1_GPSSCALER_VCOF_0_3_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_0_3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_0_3_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_0_3_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_0_3_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_0_3_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr3_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr3_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr3_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr2_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr2_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr2_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr1_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr1_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr1_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr0_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr0_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_0_3_v_cof_set_wr0_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_4_7
*/

#define ISP_CE1_GPSSCALER_VCOF_4_7_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_4_7_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x3a)
#define ISP_CE1_GPSSCALER_VCOF_4_7_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_4_7_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_4_7_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_4_7_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_4_7_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_4_7_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr7_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr7_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr7_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr6_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr6_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr6_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr5_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr5_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr5_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr4_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr4_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_4_7_v_cof_set_wr4_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_8_11
*/

#define ISP_CE1_GPSSCALER_VCOF_8_11_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_8_11_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x3c)
#define ISP_CE1_GPSSCALER_VCOF_8_11_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_8_11_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_8_11_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_8_11_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_8_11_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_8_11_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr11_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr11_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr11_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr10_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr10_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr10_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr9_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr9_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr9_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr8_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr8_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_8_11_v_cof_set_wr8_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_12_15
*/

#define ISP_CE1_GPSSCALER_VCOF_12_15_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_12_15_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x3e)
#define ISP_CE1_GPSSCALER_VCOF_12_15_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_12_15_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_12_15_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_12_15_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_12_15_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_12_15_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr15_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr15_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr15_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr14_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr14_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr14_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr13_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr13_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr13_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr12_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr12_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_12_15_v_cof_set_wr12_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_16_19
*/

#define ISP_CE1_GPSSCALER_VCOF_16_19_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_16_19_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x40)
#define ISP_CE1_GPSSCALER_VCOF_16_19_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_16_19_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_16_19_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_16_19_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_16_19_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_16_19_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr19_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr19_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr19_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr18_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr18_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr18_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr17_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr17_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr17_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr16_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr16_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_16_19_v_cof_set_wr16_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_20_23
*/

#define ISP_CE1_GPSSCALER_VCOF_20_23_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_20_23_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x42)
#define ISP_CE1_GPSSCALER_VCOF_20_23_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_20_23_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_20_23_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_20_23_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_20_23_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_20_23_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr23_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr23_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr23_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr22_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr22_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr22_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr21_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr21_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr21_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr20_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr20_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_20_23_v_cof_set_wr20_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_24_27
*/

#define ISP_CE1_GPSSCALER_VCOF_24_27_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_24_27_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x44)
#define ISP_CE1_GPSSCALER_VCOF_24_27_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_24_27_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_24_27_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_24_27_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_24_27_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_24_27_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr27_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr27_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr27_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr26_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr26_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr26_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr25_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr25_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr25_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr24_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr24_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_24_27_v_cof_set_wr24_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_28_31
*/

#define ISP_CE1_GPSSCALER_VCOF_28_31_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_28_31_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x46)
#define ISP_CE1_GPSSCALER_VCOF_28_31_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_28_31_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_28_31_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_28_31_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_28_31_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_28_31_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr31_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr31_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr31_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr30_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr30_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr30_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr29_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr29_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr29_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr28_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr28_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_28_31_v_cof_set_wr28_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_32_35
*/

#define ISP_CE1_GPSSCALER_VCOF_32_35_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_32_35_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x48)
#define ISP_CE1_GPSSCALER_VCOF_32_35_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_32_35_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_32_35_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_32_35_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_32_35_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_32_35_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr35_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr35_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr35_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr34_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr34_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr34_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr33_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr33_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr33_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr32_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr32_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_32_35_v_cof_set_wr32_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_36_39
*/

#define ISP_CE1_GPSSCALER_VCOF_36_39_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_36_39_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x4a)
#define ISP_CE1_GPSSCALER_VCOF_36_39_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_36_39_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_36_39_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_36_39_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_36_39_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_36_39_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr39_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr39_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr39_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr38_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr38_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr38_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr37_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr37_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr37_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr36_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr36_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_36_39_v_cof_set_wr36_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_40_43
*/

#define ISP_CE1_GPSSCALER_VCOF_40_43_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_40_43_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x4c)
#define ISP_CE1_GPSSCALER_VCOF_40_43_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_40_43_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_40_43_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_40_43_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_40_43_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_40_43_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr43_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr43_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr43_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr42_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr42_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr42_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr41_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr41_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr41_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr40_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr40_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_40_43_v_cof_set_wr40_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_44_47
*/

#define ISP_CE1_GPSSCALER_VCOF_44_47_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_44_47_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x4e)
#define ISP_CE1_GPSSCALER_VCOF_44_47_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_44_47_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_44_47_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_44_47_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_44_47_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_44_47_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr47_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr47_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr47_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr46_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr46_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr46_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr45_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr45_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr45_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr44_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr44_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_44_47_v_cof_set_wr44_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_48_51
*/

#define ISP_CE1_GPSSCALER_VCOF_48_51_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_48_51_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x50)
#define ISP_CE1_GPSSCALER_VCOF_48_51_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_48_51_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_48_51_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_48_51_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_48_51_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_48_51_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr51_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr51_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr51_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr50_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr50_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr50_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr49_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr49_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr49_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr48_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr48_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_48_51_v_cof_set_wr48_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_52_55
*/

#define ISP_CE1_GPSSCALER_VCOF_52_55_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_52_55_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x52)
#define ISP_CE1_GPSSCALER_VCOF_52_55_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_52_55_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_52_55_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_52_55_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_52_55_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_52_55_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr55_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr55_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr55_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr54_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr54_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr54_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr53_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr53_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr53_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr52_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr52_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_52_55_v_cof_set_wr52_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_56_59
*/

#define ISP_CE1_GPSSCALER_VCOF_56_59_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_56_59_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x54)
#define ISP_CE1_GPSSCALER_VCOF_56_59_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_56_59_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_56_59_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_56_59_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_56_59_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_56_59_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr59_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr59_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr59_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr58_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr58_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr58_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr57_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr57_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr57_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr56_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr56_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_56_59_v_cof_set_wr56_MASK (0xFF000000)

/*
* Register : ISP_CE1_GPSSCALER_VCOF_60_63
*/

#define ISP_CE1_GPSSCALER_VCOF_60_63_SIZE (32)
#define ISP_CE1_GPSSCALER_VCOF_60_63_OFFSET (pictorv2_in_ISP_CE1_GPSSCALER_BASE_ADDR + 0x56)
#define ISP_CE1_GPSSCALER_VCOF_60_63_RESET_VALUE (0x0000)
#define ISP_CE1_GPSSCALER_VCOF_60_63_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_60_63_RWMASK (0xFFFFFFFF)
#define ISP_CE1_GPSSCALER_VCOF_60_63_ROMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_60_63_WOMASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_60_63_UNUSED_MASK (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr63_OFFSET (0x00000000)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr63_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr63_MASK (0x000000FF)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr62_OFFSET (0x00000008)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr62_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr62_MASK (0x0000FF00)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr61_OFFSET (0x00000010)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr61_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr61_MASK (0x00FF0000)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr60_OFFSET (0x00000018)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr60_WIDTH (8)
#define ISP_CE1_GPSSCALER_VCOF_60_63_v_cof_set_wr60_MASK (0xFF000000)


/*
* Address Block : ISP_CE1_CODER
*/

#define pictorv2_in_ISP_CE1_CODER_BASE_ADDR                 (0xa80U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_CE1_CODER_ENABLE
*/

#define ISP_CE1_CODER_ENABLE_SIZE (8)
#define ISP_CE1_CODER_ENABLE_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x00)
#define ISP_CE1_CODER_ENABLE_RESET_VALUE (0x00)
#define ISP_CE1_CODER_ENABLE_BITFIELD_MASK (0x11)
#define ISP_CE1_CODER_ENABLE_RWMASK (0x11)
#define ISP_CE1_CODER_ENABLE_ROMASK (0x00)
#define ISP_CE1_CODER_ENABLE_WOMASK (0x00)
#define ISP_CE1_CODER_ENABLE_UNUSED_MASK (0xEE)
#define ISP_CE1_CODER_ENABLE_enable_OFFSET (0x00)
#define ISP_CE1_CODER_ENABLE_enable_WIDTH (1)
#define ISP_CE1_CODER_ENABLE_enable_MASK (0x01)
#define ISP_CE1_CODER_ENABLE_enable_DISABLE (0x00)
#define ISP_CE1_CODER_ENABLE_enable_ENABLE (0x01)
#define ISP_CE1_CODER_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_CE1_CODER_ENABLE_soft_reset_WIDTH (1)
#define ISP_CE1_CODER_ENABLE_soft_reset_MASK (0x10)
#define ISP_CE1_CODER_ENABLE_soft_reset_DISABLE (0x00)
#define ISP_CE1_CODER_ENABLE_soft_reset_ENABLE (0x01)

/*
* Register : ISP_CE1_CODER_FORMAT
*/

#define ISP_CE1_CODER_FORMAT_SIZE (8)
#define ISP_CE1_CODER_FORMAT_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x02)
#define ISP_CE1_CODER_FORMAT_RESET_VALUE (0x00)
#define ISP_CE1_CODER_FORMAT_BITFIELD_MASK (0x07)
#define ISP_CE1_CODER_FORMAT_RWMASK (0x07)
#define ISP_CE1_CODER_FORMAT_ROMASK (0x00)
#define ISP_CE1_CODER_FORMAT_WOMASK (0x00)
#define ISP_CE1_CODER_FORMAT_UNUSED_MASK (0xF8)
#define ISP_CE1_CODER_FORMAT_yuv_format_OFFSET (0x00)
#define ISP_CE1_CODER_FORMAT_yuv_format_WIDTH (3)
#define ISP_CE1_CODER_FORMAT_yuv_format_MASK (0x07)
#define ISP_CE1_CODER_FORMAT_yuv_format_B_0x0 (0x00)
#define ISP_CE1_CODER_FORMAT_yuv_format_B_0x1 (0x01)
#define ISP_CE1_CODER_FORMAT_yuv_format_B_0x2 (0x02)
#define ISP_CE1_CODER_FORMAT_yuv_format_B_0x3 (0x03)
#define ISP_CE1_CODER_FORMAT_yuv_format_B_0x4 (0x04)
#define ISP_CE1_CODER_FORMAT_yuv_format_B_0x5 (0x05)

/*
* Register : ISP_CE1_CODER_Y_COF00
*/

#define ISP_CE1_CODER_Y_COF00_SIZE (16)
#define ISP_CE1_CODER_Y_COF00_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x04)
#define ISP_CE1_CODER_Y_COF00_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_Y_COF00_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_Y_COF00_RWMASK (0x1FFF)
#define ISP_CE1_CODER_Y_COF00_ROMASK (0x0000)
#define ISP_CE1_CODER_Y_COF00_WOMASK (0x0000)
#define ISP_CE1_CODER_Y_COF00_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_Y_COF00_yuv_y_cof00_OFFSET (0x0000)
#define ISP_CE1_CODER_Y_COF00_yuv_y_cof00_WIDTH (13)
#define ISP_CE1_CODER_Y_COF00_yuv_y_cof00_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_Y_COF01
*/

#define ISP_CE1_CODER_Y_COF01_SIZE (16)
#define ISP_CE1_CODER_Y_COF01_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x06)
#define ISP_CE1_CODER_Y_COF01_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_Y_COF01_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_Y_COF01_RWMASK (0x1FFF)
#define ISP_CE1_CODER_Y_COF01_ROMASK (0x0000)
#define ISP_CE1_CODER_Y_COF01_WOMASK (0x0000)
#define ISP_CE1_CODER_Y_COF01_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_Y_COF01_yuv_y_cof01_OFFSET (0x0000)
#define ISP_CE1_CODER_Y_COF01_yuv_y_cof01_WIDTH (13)
#define ISP_CE1_CODER_Y_COF01_yuv_y_cof01_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_Y_COF02
*/

#define ISP_CE1_CODER_Y_COF02_SIZE (16)
#define ISP_CE1_CODER_Y_COF02_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x08)
#define ISP_CE1_CODER_Y_COF02_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_Y_COF02_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_Y_COF02_RWMASK (0x1FFF)
#define ISP_CE1_CODER_Y_COF02_ROMASK (0x0000)
#define ISP_CE1_CODER_Y_COF02_WOMASK (0x0000)
#define ISP_CE1_CODER_Y_COF02_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_Y_COF02_yuv_y_cof02_OFFSET (0x0000)
#define ISP_CE1_CODER_Y_COF02_yuv_y_cof02_WIDTH (13)
#define ISP_CE1_CODER_Y_COF02_yuv_y_cof02_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_CB_COF10
*/

#define ISP_CE1_CODER_CB_COF10_SIZE (16)
#define ISP_CE1_CODER_CB_COF10_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x0a)
#define ISP_CE1_CODER_CB_COF10_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CB_COF10_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_CB_COF10_RWMASK (0x1FFF)
#define ISP_CE1_CODER_CB_COF10_ROMASK (0x0000)
#define ISP_CE1_CODER_CB_COF10_WOMASK (0x0000)
#define ISP_CE1_CODER_CB_COF10_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_CB_COF10_yuv_cb_cof10_OFFSET (0x0000)
#define ISP_CE1_CODER_CB_COF10_yuv_cb_cof10_WIDTH (13)
#define ISP_CE1_CODER_CB_COF10_yuv_cb_cof10_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_CB_COF11
*/

#define ISP_CE1_CODER_CB_COF11_SIZE (16)
#define ISP_CE1_CODER_CB_COF11_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x0c)
#define ISP_CE1_CODER_CB_COF11_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CB_COF11_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_CB_COF11_RWMASK (0x1FFF)
#define ISP_CE1_CODER_CB_COF11_ROMASK (0x0000)
#define ISP_CE1_CODER_CB_COF11_WOMASK (0x0000)
#define ISP_CE1_CODER_CB_COF11_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_CB_COF11_yuv_cb_cof11_OFFSET (0x0000)
#define ISP_CE1_CODER_CB_COF11_yuv_cb_cof11_WIDTH (13)
#define ISP_CE1_CODER_CB_COF11_yuv_cb_cof11_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_CB_COF12
*/

#define ISP_CE1_CODER_CB_COF12_SIZE (16)
#define ISP_CE1_CODER_CB_COF12_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x0e)
#define ISP_CE1_CODER_CB_COF12_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CB_COF12_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_CB_COF12_RWMASK (0x1FFF)
#define ISP_CE1_CODER_CB_COF12_ROMASK (0x0000)
#define ISP_CE1_CODER_CB_COF12_WOMASK (0x0000)
#define ISP_CE1_CODER_CB_COF12_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_CB_COF12_yuv_cb_cof12_OFFSET (0x0000)
#define ISP_CE1_CODER_CB_COF12_yuv_cb_cof12_WIDTH (13)
#define ISP_CE1_CODER_CB_COF12_yuv_cb_cof12_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_CR_COF20
*/

#define ISP_CE1_CODER_CR_COF20_SIZE (16)
#define ISP_CE1_CODER_CR_COF20_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x10)
#define ISP_CE1_CODER_CR_COF20_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CR_COF20_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_CR_COF20_RWMASK (0x1FFF)
#define ISP_CE1_CODER_CR_COF20_ROMASK (0x0000)
#define ISP_CE1_CODER_CR_COF20_WOMASK (0x0000)
#define ISP_CE1_CODER_CR_COF20_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_CR_COF20_yuv_cr_cof20_OFFSET (0x0000)
#define ISP_CE1_CODER_CR_COF20_yuv_cr_cof20_WIDTH (13)
#define ISP_CE1_CODER_CR_COF20_yuv_cr_cof20_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_CR_COF21
*/

#define ISP_CE1_CODER_CR_COF21_SIZE (16)
#define ISP_CE1_CODER_CR_COF21_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x12)
#define ISP_CE1_CODER_CR_COF21_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CR_COF21_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_CR_COF21_RWMASK (0x1FFF)
#define ISP_CE1_CODER_CR_COF21_ROMASK (0x0000)
#define ISP_CE1_CODER_CR_COF21_WOMASK (0x0000)
#define ISP_CE1_CODER_CR_COF21_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_CR_COF21_yuv_cr_cof21_OFFSET (0x0000)
#define ISP_CE1_CODER_CR_COF21_yuv_cr_cof21_WIDTH (13)
#define ISP_CE1_CODER_CR_COF21_yuv_cr_cof21_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_CR_COF22
*/

#define ISP_CE1_CODER_CR_COF22_SIZE (16)
#define ISP_CE1_CODER_CR_COF22_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x14)
#define ISP_CE1_CODER_CR_COF22_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CR_COF22_BITFIELD_MASK (0x1FFF)
#define ISP_CE1_CODER_CR_COF22_RWMASK (0x1FFF)
#define ISP_CE1_CODER_CR_COF22_ROMASK (0x0000)
#define ISP_CE1_CODER_CR_COF22_WOMASK (0x0000)
#define ISP_CE1_CODER_CR_COF22_UNUSED_MASK (0xE000)
#define ISP_CE1_CODER_CR_COF22_yuv_cr_cof22_OFFSET (0x0000)
#define ISP_CE1_CODER_CR_COF22_yuv_cr_cof22_WIDTH (13)
#define ISP_CE1_CODER_CR_COF22_yuv_cr_cof22_MASK (0x1FFF)

/*
* Register : ISP_CE1_CODER_YFLOOR
*/

#define ISP_CE1_CODER_YFLOOR_SIZE (16)
#define ISP_CE1_CODER_YFLOOR_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x16)
#define ISP_CE1_CODER_YFLOOR_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_YFLOOR_BITFIELD_MASK (0x01FF)
#define ISP_CE1_CODER_YFLOOR_RWMASK (0x01FF)
#define ISP_CE1_CODER_YFLOOR_ROMASK (0x0000)
#define ISP_CE1_CODER_YFLOOR_WOMASK (0x0000)
#define ISP_CE1_CODER_YFLOOR_UNUSED_MASK (0xFE00)
#define ISP_CE1_CODER_YFLOOR_yuv_yfloor_OFFSET (0x0000)
#define ISP_CE1_CODER_YFLOOR_yuv_yfloor_WIDTH (9)
#define ISP_CE1_CODER_YFLOOR_yuv_yfloor_MASK (0x01FF)

/*
* Register : ISP_CE1_CODER_CBFLOOR
*/

#define ISP_CE1_CODER_CBFLOOR_SIZE (16)
#define ISP_CE1_CODER_CBFLOOR_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x18)
#define ISP_CE1_CODER_CBFLOOR_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CBFLOOR_BITFIELD_MASK (0x01FF)
#define ISP_CE1_CODER_CBFLOOR_RWMASK (0x01FF)
#define ISP_CE1_CODER_CBFLOOR_ROMASK (0x0000)
#define ISP_CE1_CODER_CBFLOOR_WOMASK (0x0000)
#define ISP_CE1_CODER_CBFLOOR_UNUSED_MASK (0xFE00)
#define ISP_CE1_CODER_CBFLOOR_yuv_cbfloor_OFFSET (0x0000)
#define ISP_CE1_CODER_CBFLOOR_yuv_cbfloor_WIDTH (9)
#define ISP_CE1_CODER_CBFLOOR_yuv_cbfloor_MASK (0x01FF)

/*
* Register : ISP_CE1_CODER_CRFLOOR
*/

#define ISP_CE1_CODER_CRFLOOR_SIZE (16)
#define ISP_CE1_CODER_CRFLOOR_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x1a)
#define ISP_CE1_CODER_CRFLOOR_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CRFLOOR_BITFIELD_MASK (0x01FF)
#define ISP_CE1_CODER_CRFLOOR_RWMASK (0x01FF)
#define ISP_CE1_CODER_CRFLOOR_ROMASK (0x0000)
#define ISP_CE1_CODER_CRFLOOR_WOMASK (0x0000)
#define ISP_CE1_CODER_CRFLOOR_UNUSED_MASK (0xFE00)
#define ISP_CE1_CODER_CRFLOOR_yuv_crfloor_OFFSET (0x0000)
#define ISP_CE1_CODER_CRFLOOR_yuv_crfloor_WIDTH (9)
#define ISP_CE1_CODER_CRFLOOR_yuv_crfloor_MASK (0x01FF)

/*
* Register : ISP_CE1_CODER_CB_COLOUR_EFFECT
*/

#define ISP_CE1_CODER_CB_COLOUR_EFFECT_SIZE (16)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x1c)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_BITFIELD_MASK (0x0707)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_RWMASK (0x0707)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_ROMASK (0x0000)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_WOMASK (0x0000)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_UNUSED_MASK (0xF8F8)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_lo_OFFSET (0x0000)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_lo_WIDTH (3)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_lo_MASK (0x0007)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_hi_OFFSET (0x0008)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_hi_WIDTH (3)
#define ISP_CE1_CODER_CB_COLOUR_EFFECT_yuv_cb_colour_effect_hi_MASK (0x0700)

/*
* Register : ISP_CE1_CODER_CR_COLOUR_EFFECT
*/

#define ISP_CE1_CODER_CR_COLOUR_EFFECT_SIZE (16)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x1e)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_RESET_VALUE (0x0000)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_BITFIELD_MASK (0x0707)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_RWMASK (0x0707)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_ROMASK (0x0000)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_WOMASK (0x0000)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_UNUSED_MASK (0xF8F8)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_lo_OFFSET (0x0000)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_lo_WIDTH (3)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_lo_MASK (0x0007)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_hi_OFFSET (0x0008)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_hi_WIDTH (3)
#define ISP_CE1_CODER_CR_COLOUR_EFFECT_yuv_cr_colour_effect_hi_MASK (0x0700)

/*
* Register : ISP_CE1_CODER_CH0_MIN_CLIP
*/

#define ISP_CE1_CODER_CH0_MIN_CLIP_SIZE (16)
#define ISP_CE1_CODER_CH0_MIN_CLIP_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x20)
#define ISP_CE1_CODER_CH0_MIN_CLIP_RESET_VALUE (0x00)
#define ISP_CE1_CODER_CH0_MIN_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE1_CODER_CH0_MIN_CLIP_RWMASK (0x0FFF)
#define ISP_CE1_CODER_CH0_MIN_CLIP_ROMASK (0x0000)
#define ISP_CE1_CODER_CH0_MIN_CLIP_WOMASK (0x0000)
#define ISP_CE1_CODER_CH0_MIN_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE1_CODER_CH0_MIN_CLIP_yuv_ch0_min_clip_OFFSET (0x0000)
#define ISP_CE1_CODER_CH0_MIN_CLIP_yuv_ch0_min_clip_WIDTH (12)
#define ISP_CE1_CODER_CH0_MIN_CLIP_yuv_ch0_min_clip_MASK (0x0FFF)

/*
* Register : ISP_CE1_CODER_CH0_MAX_CLIP
*/

#define ISP_CE1_CODER_CH0_MAX_CLIP_SIZE (16)
#define ISP_CE1_CODER_CH0_MAX_CLIP_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x22)
#define ISP_CE1_CODER_CH0_MAX_CLIP_RESET_VALUE (0x00)
#define ISP_CE1_CODER_CH0_MAX_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE1_CODER_CH0_MAX_CLIP_RWMASK (0x0FFF)
#define ISP_CE1_CODER_CH0_MAX_CLIP_ROMASK (0x0000)
#define ISP_CE1_CODER_CH0_MAX_CLIP_WOMASK (0x0000)
#define ISP_CE1_CODER_CH0_MAX_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE1_CODER_CH0_MAX_CLIP_yuv_ch0_max_clip_OFFSET (0x0000)
#define ISP_CE1_CODER_CH0_MAX_CLIP_yuv_ch0_max_clip_WIDTH (12)
#define ISP_CE1_CODER_CH0_MAX_CLIP_yuv_ch0_max_clip_MASK (0x0FFF)

/*
* Register : ISP_CE1_CODER_CH1_MIN_CLIP
*/

#define ISP_CE1_CODER_CH1_MIN_CLIP_SIZE (16)
#define ISP_CE1_CODER_CH1_MIN_CLIP_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x24)
#define ISP_CE1_CODER_CH1_MIN_CLIP_RESET_VALUE (0x00)
#define ISP_CE1_CODER_CH1_MIN_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE1_CODER_CH1_MIN_CLIP_RWMASK (0x0FFF)
#define ISP_CE1_CODER_CH1_MIN_CLIP_ROMASK (0x0000)
#define ISP_CE1_CODER_CH1_MIN_CLIP_WOMASK (0x0000)
#define ISP_CE1_CODER_CH1_MIN_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE1_CODER_CH1_MIN_CLIP_yuv_ch1_min_clip_OFFSET (0x0000)
#define ISP_CE1_CODER_CH1_MIN_CLIP_yuv_ch1_min_clip_WIDTH (12)
#define ISP_CE1_CODER_CH1_MIN_CLIP_yuv_ch1_min_clip_MASK (0x0FFF)

/*
* Register : ISP_CE1_CODER_CH1_MAX_CLIP
*/

#define ISP_CE1_CODER_CH1_MAX_CLIP_SIZE (16)
#define ISP_CE1_CODER_CH1_MAX_CLIP_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x26)
#define ISP_CE1_CODER_CH1_MAX_CLIP_RESET_VALUE (0x00)
#define ISP_CE1_CODER_CH1_MAX_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE1_CODER_CH1_MAX_CLIP_RWMASK (0x0FFF)
#define ISP_CE1_CODER_CH1_MAX_CLIP_ROMASK (0x0000)
#define ISP_CE1_CODER_CH1_MAX_CLIP_WOMASK (0x0000)
#define ISP_CE1_CODER_CH1_MAX_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE1_CODER_CH1_MAX_CLIP_yuv_ch1_max_clip_OFFSET (0x0000)
#define ISP_CE1_CODER_CH1_MAX_CLIP_yuv_ch1_max_clip_WIDTH (12)
#define ISP_CE1_CODER_CH1_MAX_CLIP_yuv_ch1_max_clip_MASK (0x0FFF)

/*
* Register : ISP_CE1_CODER_CH2_MIN_CLIP
*/

#define ISP_CE1_CODER_CH2_MIN_CLIP_SIZE (16)
#define ISP_CE1_CODER_CH2_MIN_CLIP_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x28)
#define ISP_CE1_CODER_CH2_MIN_CLIP_RESET_VALUE (0x00)
#define ISP_CE1_CODER_CH2_MIN_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE1_CODER_CH2_MIN_CLIP_RWMASK (0x0FFF)
#define ISP_CE1_CODER_CH2_MIN_CLIP_ROMASK (0x0000)
#define ISP_CE1_CODER_CH2_MIN_CLIP_WOMASK (0x0000)
#define ISP_CE1_CODER_CH2_MIN_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE1_CODER_CH2_MIN_CLIP_yuv_ch2_min_clip_OFFSET (0x0000)
#define ISP_CE1_CODER_CH2_MIN_CLIP_yuv_ch2_min_clip_WIDTH (12)
#define ISP_CE1_CODER_CH2_MIN_CLIP_yuv_ch2_min_clip_MASK (0x0FFF)

/*
* Register : ISP_CE1_CODER_CH2_MAX_CLIP
*/

#define ISP_CE1_CODER_CH2_MAX_CLIP_SIZE (16)
#define ISP_CE1_CODER_CH2_MAX_CLIP_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x2a)
#define ISP_CE1_CODER_CH2_MAX_CLIP_RESET_VALUE (0x00)
#define ISP_CE1_CODER_CH2_MAX_CLIP_BITFIELD_MASK (0x0FFF)
#define ISP_CE1_CODER_CH2_MAX_CLIP_RWMASK (0x0FFF)
#define ISP_CE1_CODER_CH2_MAX_CLIP_ROMASK (0x0000)
#define ISP_CE1_CODER_CH2_MAX_CLIP_WOMASK (0x0000)
#define ISP_CE1_CODER_CH2_MAX_CLIP_UNUSED_MASK (0xF000)
#define ISP_CE1_CODER_CH2_MAX_CLIP_yuv_ch2_max_clip_OFFSET (0x0000)
#define ISP_CE1_CODER_CH2_MAX_CLIP_yuv_ch2_max_clip_WIDTH (12)
#define ISP_CE1_CODER_CH2_MAX_CLIP_yuv_ch2_max_clip_MASK (0x0FFF)

/*
* Register : ISP_CE1_CODER_RAW_NONACTIVE
*/

#define ISP_CE1_CODER_RAW_NONACTIVE_SIZE (8)
#define ISP_CE1_CODER_RAW_NONACTIVE_OFFSET (pictorv2_in_ISP_CE1_CODER_BASE_ADDR + 0x2c)
#define ISP_CE1_CODER_RAW_NONACTIVE_RESET_VALUE (0x00)
#define ISP_CE1_CODER_RAW_NONACTIVE_BITFIELD_MASK (0x01)
#define ISP_CE1_CODER_RAW_NONACTIVE_RWMASK (0x01)
#define ISP_CE1_CODER_RAW_NONACTIVE_ROMASK (0x00)
#define ISP_CE1_CODER_RAW_NONACTIVE_WOMASK (0x00)
#define ISP_CE1_CODER_RAW_NONACTIVE_UNUSED_MASK (0xFE)
#define ISP_CE1_CODER_RAW_NONACTIVE_yuv_raw_nonactive_OFFSET (0x00)
#define ISP_CE1_CODER_RAW_NONACTIVE_yuv_raw_nonactive_WIDTH (1)
#define ISP_CE1_CODER_RAW_NONACTIVE_yuv_raw_nonactive_MASK (0x01)
#define ISP_CE1_CODER_RAW_NONACTIVE_yuv_raw_nonactive_DISABLE (0x00)
#define ISP_CE1_CODER_RAW_NONACTIVE_yuv_raw_nonactive_ENABLE (0x01)


/*
* Address Block : ISP_OPF1
*/

#define pictorv2_in_ISP_OPF1_BASE_ADDR                      (0xab0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_OPF1_ENABLE
*/

#define ISP_OPF1_ENABLE_SIZE           (8)
#define ISP_OPF1_ENABLE_OFFSET         (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x00)
#define ISP_OPF1_ENABLE_RESET_VALUE    (0x00)
#define ISP_OPF1_ENABLE_BITFIELD_MASK  (0x11)
#define ISP_OPF1_ENABLE_RWMASK         (0x11)
#define ISP_OPF1_ENABLE_ROMASK         (0x00)
#define ISP_OPF1_ENABLE_WOMASK         (0x00)
#define ISP_OPF1_ENABLE_UNUSED_MASK    (0xEE)
#define ISP_OPF1_ENABLE_enable_OFFSET  (0x00)
#define ISP_OPF1_ENABLE_enable_WIDTH   (1)
#define ISP_OPF1_ENABLE_enable_MASK    (0x01)
#define ISP_OPF1_ENABLE_enable_DISABLE (0x00)
#define ISP_OPF1_ENABLE_enable_ENABLE  (0x01)
#define ISP_OPF1_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_OPF1_ENABLE_soft_reset_WIDTH (1)
#define ISP_OPF1_ENABLE_soft_reset_MASK (0x10)
#define ISP_OPF1_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_OPF1_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_OPF1_DFV
*/

#define ISP_OPF1_DFV_SIZE              (8)
#define ISP_OPF1_DFV_OFFSET            (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x02)
#define ISP_OPF1_DFV_RESET_VALUE       (0x00)
#define ISP_OPF1_DFV_BITFIELD_MASK     (0x03)
#define ISP_OPF1_DFV_RWMASK            (0x03)
#define ISP_OPF1_DFV_ROMASK            (0x00)
#define ISP_OPF1_DFV_WOMASK            (0x00)
#define ISP_OPF1_DFV_UNUSED_MASK       (0xFC)
#define ISP_OPF1_DFV_dfv_enable_OFFSET (0x00)
#define ISP_OPF1_DFV_dfv_enable_WIDTH  (1)
#define ISP_OPF1_DFV_dfv_enable_MASK   (0x01)
#define ISP_OPF1_DFV_dfv_enable_DISABLE (0x00)
#define ISP_OPF1_DFV_dfv_enable_ENABLE (0x01)
#define ISP_OPF1_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_OPF1_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_OPF1_DFV_dfv_interrupt_ctrl_MASK (0x02)

/*
* Register : ISP_OPF1_HSYNC_RISING
*/

#define ISP_OPF1_HSYNC_RISING_SIZE     (16)
#define ISP_OPF1_HSYNC_RISING_OFFSET   (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x04)
#define ISP_OPF1_HSYNC_RISING_RESET_VALUE (0x0000)
#define ISP_OPF1_HSYNC_RISING_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_HSYNC_RISING_RWMASK   (0xFFFF)
#define ISP_OPF1_HSYNC_RISING_ROMASK   (0x0000)
#define ISP_OPF1_HSYNC_RISING_WOMASK   (0x0000)
#define ISP_OPF1_HSYNC_RISING_UNUSED_MASK (0x0000)
#define ISP_OPF1_HSYNC_RISING_hsync_rising_OFFSET (0x0000)
#define ISP_OPF1_HSYNC_RISING_hsync_rising_WIDTH (16)
#define ISP_OPF1_HSYNC_RISING_hsync_rising_MASK (0xFFFF)

/*
* Register : ISP_OPF1_HSYNC_FALLING
*/

#define ISP_OPF1_HSYNC_FALLING_SIZE    (16)
#define ISP_OPF1_HSYNC_FALLING_OFFSET  (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x06)
#define ISP_OPF1_HSYNC_FALLING_RESET_VALUE (0x0000)
#define ISP_OPF1_HSYNC_FALLING_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_HSYNC_FALLING_RWMASK  (0xFFFF)
#define ISP_OPF1_HSYNC_FALLING_ROMASK  (0x0000)
#define ISP_OPF1_HSYNC_FALLING_WOMASK  (0x0000)
#define ISP_OPF1_HSYNC_FALLING_UNUSED_MASK (0x0000)
#define ISP_OPF1_HSYNC_FALLING_hsync_falling_OFFSET (0x0000)
#define ISP_OPF1_HSYNC_FALLING_hsync_falling_WIDTH (16)
#define ISP_OPF1_HSYNC_FALLING_hsync_falling_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VSYNC_RISING_FINE
*/

#define ISP_OPF1_VSYNC_RISING_FINE_SIZE (16)
#define ISP_OPF1_VSYNC_RISING_FINE_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x08)
#define ISP_OPF1_VSYNC_RISING_FINE_RESET_VALUE (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VSYNC_RISING_FINE_RWMASK (0xFFFF)
#define ISP_OPF1_VSYNC_RISING_FINE_ROMASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_WOMASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_UNUSED_MASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_vsync_rising_fine_OFFSET (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_vsync_rising_fine_WIDTH (16)
#define ISP_OPF1_VSYNC_RISING_FINE_vsync_rising_fine_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VSYNC_FALLING_FINE
*/

#define ISP_OPF1_VSYNC_FALLING_FINE_SIZE (16)
#define ISP_OPF1_VSYNC_FALLING_FINE_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x0a)
#define ISP_OPF1_VSYNC_FALLING_FINE_RESET_VALUE (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VSYNC_FALLING_FINE_RWMASK (0xFFFF)
#define ISP_OPF1_VSYNC_FALLING_FINE_ROMASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_WOMASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_UNUSED_MASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_vsync_falling_fine_OFFSET (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_vsync_falling_fine_WIDTH (16)
#define ISP_OPF1_VSYNC_FALLING_FINE_vsync_falling_fine_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VSYNC_RISING_COARSE
*/

#define ISP_OPF1_VSYNC_RISING_COARSE_SIZE (16)
#define ISP_OPF1_VSYNC_RISING_COARSE_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x0c)
#define ISP_OPF1_VSYNC_RISING_COARSE_RESET_VALUE (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VSYNC_RISING_COARSE_RWMASK (0xFFFF)
#define ISP_OPF1_VSYNC_RISING_COARSE_ROMASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_WOMASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_UNUSED_MASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_vsync_rising_coarse_OFFSET (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_vsync_rising_coarse_WIDTH (16)
#define ISP_OPF1_VSYNC_RISING_COARSE_vsync_rising_coarse_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VSYNC_FALLING_COARSE
*/

#define ISP_OPF1_VSYNC_FALLING_COARSE_SIZE (16)
#define ISP_OPF1_VSYNC_FALLING_COARSE_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x0e)
#define ISP_OPF1_VSYNC_FALLING_COARSE_RESET_VALUE (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VSYNC_FALLING_COARSE_RWMASK (0xFFFF)
#define ISP_OPF1_VSYNC_FALLING_COARSE_ROMASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_WOMASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_UNUSED_MASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_vsync_falling_coarse_OFFSET (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_vsync_falling_coarse_WIDTH (16)
#define ISP_OPF1_VSYNC_FALLING_COARSE_vsync_falling_coarse_MASK (0xFFFF)

/*
* Register : ISP_OPF1_HCROP_RISING
*/

#define ISP_OPF1_HCROP_RISING_SIZE     (16)
#define ISP_OPF1_HCROP_RISING_OFFSET   (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x10)
#define ISP_OPF1_HCROP_RISING_RESET_VALUE (0x0000)
#define ISP_OPF1_HCROP_RISING_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_HCROP_RISING_RWMASK   (0xFFFF)
#define ISP_OPF1_HCROP_RISING_ROMASK   (0x0000)
#define ISP_OPF1_HCROP_RISING_WOMASK   (0x0000)
#define ISP_OPF1_HCROP_RISING_UNUSED_MASK (0x0000)
#define ISP_OPF1_HCROP_RISING_hcrop_rising_OFFSET (0x0000)
#define ISP_OPF1_HCROP_RISING_hcrop_rising_WIDTH (16)
#define ISP_OPF1_HCROP_RISING_hcrop_rising_MASK (0xFFFF)

/*
* Register : ISP_OPF1_HCROP_FALLING
*/

#define ISP_OPF1_HCROP_FALLING_SIZE    (16)
#define ISP_OPF1_HCROP_FALLING_OFFSET  (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x12)
#define ISP_OPF1_HCROP_FALLING_RESET_VALUE (0x0000)
#define ISP_OPF1_HCROP_FALLING_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_HCROP_FALLING_RWMASK  (0xFFFF)
#define ISP_OPF1_HCROP_FALLING_ROMASK  (0x0000)
#define ISP_OPF1_HCROP_FALLING_WOMASK  (0x0000)
#define ISP_OPF1_HCROP_FALLING_UNUSED_MASK (0x0000)
#define ISP_OPF1_HCROP_FALLING_hcrop_falling_OFFSET (0x0000)
#define ISP_OPF1_HCROP_FALLING_hcrop_falling_WIDTH (16)
#define ISP_OPF1_HCROP_FALLING_hcrop_falling_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VCROP_RISING_COARSE
*/

#define ISP_OPF1_VCROP_RISING_COARSE_SIZE (16)
#define ISP_OPF1_VCROP_RISING_COARSE_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x14)
#define ISP_OPF1_VCROP_RISING_COARSE_RESET_VALUE (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VCROP_RISING_COARSE_RWMASK (0xFFFF)
#define ISP_OPF1_VCROP_RISING_COARSE_ROMASK (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_WOMASK (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_UNUSED_MASK (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_vcrop_rising_coarse_OFFSET (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_vcrop_rising_coarse_WIDTH (16)
#define ISP_OPF1_VCROP_RISING_COARSE_vcrop_rising_coarse_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VCROP_FALLING_COARSE
*/

#define ISP_OPF1_VCROP_FALLING_COARSE_SIZE (16)
#define ISP_OPF1_VCROP_FALLING_COARSE_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x16)
#define ISP_OPF1_VCROP_FALLING_COARSE_RESET_VALUE (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VCROP_FALLING_COARSE_RWMASK (0xFFFF)
#define ISP_OPF1_VCROP_FALLING_COARSE_ROMASK (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_WOMASK (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_UNUSED_MASK (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_vcrop_falling_coarse_OFFSET (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_vcrop_falling_coarse_WIDTH (16)
#define ISP_OPF1_VCROP_FALLING_COARSE_vcrop_falling_coarse_MASK (0xFFFF)

/*
* Register : ISP_OPF1_CONTROL
*/

#define ISP_OPF1_CONTROL_SIZE          (32)
#define ISP_OPF1_CONTROL_OFFSET        (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x18)
#define ISP_OPF1_CONTROL_RESET_VALUE   (0x0000)
#define ISP_OPF1_CONTROL_BITFIELD_MASK (0x0001FFFF)
#define ISP_OPF1_CONTROL_RWMASK        (0x0001FFFF)
#define ISP_OPF1_CONTROL_ROMASK        (0x00000000)
#define ISP_OPF1_CONTROL_WOMASK        (0x00000000)
#define ISP_OPF1_CONTROL_UNUSED_MASK   (0xFFFE0000)
#define ISP_OPF1_CONTROL_sync_based_pixvalid_OFFSET (0x00000000)
#define ISP_OPF1_CONTROL_sync_based_pixvalid_WIDTH (1)
#define ISP_OPF1_CONTROL_sync_based_pixvalid_MASK (0x00000001)
#define ISP_OPF1_CONTROL_sync_based_pixvalid_SYNC_PIX_VALID_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_sync_based_pixvalid_SYNC_PIX_VALID_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_toggle_pix_valid_OFFSET (0x00000001)
#define ISP_OPF1_CONTROL_toggle_pix_valid_WIDTH (1)
#define ISP_OPF1_CONTROL_toggle_pix_valid_MASK (0x00000002)
#define ISP_OPF1_CONTROL_toggle_pix_valid_PIX_VALID_LEVEL (0x00000000)
#define ISP_OPF1_CONTROL_toggle_pix_valid_PIX_VALID_EDGE (0x00000001)
#define ISP_OPF1_CONTROL_rgb_flip_OFFSET (0x00000002)
#define ISP_OPF1_CONTROL_rgb_flip_WIDTH (3)
#define ISP_OPF1_CONTROL_rgb_flip_MASK (0x0000001C)
#define ISP_OPF1_CONTROL_rgb_flip_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_rgb_flip_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_rgb_flip_B_0x2 (0x00000002)
#define ISP_OPF1_CONTROL_rgb_flip_B_0x3 (0x00000003)
#define ISP_OPF1_CONTROL_rgb_flip_B_0x4 (0x00000004)
#define ISP_OPF1_CONTROL_rgb_flip_B_0x5 (0x00000005)
#define ISP_OPF1_CONTROL_rgb_bit_flip_OFFSET (0x00000005)
#define ISP_OPF1_CONTROL_rgb_bit_flip_WIDTH (1)
#define ISP_OPF1_CONTROL_rgb_bit_flip_MASK (0x00000020)
#define ISP_OPF1_CONTROL_rgb_bit_flip_RGB_BITS_SWAP_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_rgb_bit_flip_RGB_BITS_SWAP_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_embedded_code_en_OFFSET (0x00000006)
#define ISP_OPF1_CONTROL_embedded_code_en_WIDTH (1)
#define ISP_OPF1_CONTROL_embedded_code_en_MASK (0x00000040)
#define ISP_OPF1_CONTROL_embedded_code_en_EMB_CODE_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_embedded_code_en_EMB_CODE_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_false_sync_code_protect_en_OFFSET (0x00000007)
#define ISP_OPF1_CONTROL_false_sync_code_protect_en_WIDTH (1)
#define ISP_OPF1_CONTROL_false_sync_code_protect_en_MASK (0x00000080)
#define ISP_OPF1_CONTROL_false_sync_code_protect_en_FSC_PROTECTION_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_false_sync_code_protect_en_FSC_PROTECTION_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_invert_hsync_OFFSET (0x00000008)
#define ISP_OPF1_CONTROL_invert_hsync_WIDTH (1)
#define ISP_OPF1_CONTROL_invert_hsync_MASK (0x00000100)
#define ISP_OPF1_CONTROL_invert_hsync_HSYNC_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_invert_hsync_HSYNC_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_invert_vsync_OFFSET (0x00000009)
#define ISP_OPF1_CONTROL_invert_vsync_WIDTH (1)
#define ISP_OPF1_CONTROL_invert_vsync_MASK (0x00000200)
#define ISP_OPF1_CONTROL_invert_vsync_VSYNC_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_invert_vsync_VSYNC_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_idata_ch0_en_OFFSET (0x0000000a)
#define ISP_OPF1_CONTROL_idata_ch0_en_WIDTH (1)
#define ISP_OPF1_CONTROL_idata_ch0_en_MASK (0x00000400)
#define ISP_OPF1_CONTROL_idata_ch0_en_OPF_CHANNEL_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_idata_ch0_en_OPF_CHANNEL_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_idata_ch1_en_OFFSET (0x0000000b)
#define ISP_OPF1_CONTROL_idata_ch1_en_WIDTH (1)
#define ISP_OPF1_CONTROL_idata_ch1_en_MASK (0x00000800)
#define ISP_OPF1_CONTROL_idata_ch1_en_OPF_CHANNEL_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_idata_ch1_en_OPF_CHANNEL_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_idata_ch2_en_OFFSET (0x0000000c)
#define ISP_OPF1_CONTROL_idata_ch2_en_WIDTH (1)
#define ISP_OPF1_CONTROL_idata_ch2_en_MASK (0x00001000)
#define ISP_OPF1_CONTROL_idata_ch2_en_OPF_CHANNEL_DISABLE (0x00000000)
#define ISP_OPF1_CONTROL_idata_ch2_en_OPF_CHANNEL_ENABLE (0x00000001)
#define ISP_OPF1_CONTROL_opf_output_OFFSET (0x0000000d)
#define ISP_OPF1_CONTROL_opf_output_WIDTH (3)
#define ISP_OPF1_CONTROL_opf_output_MASK (0x0000E000)
#define ISP_OPF1_CONTROL_opf_output_OPF_RGB101010 (0x00000000)
#define ISP_OPF1_CONTROL_opf_output_OPF_RGB888 (0x00000001)
#define ISP_OPF1_CONTROL_opf_output_OPF_RGB565 (0x00000002)
#define ISP_OPF1_CONTROL_opf_output_OPF_RGB555 (0x00000003)
#define ISP_OPF1_CONTROL_opf_output_OPF_RGB444 (0x00000004)
#define ISP_OPF1_CONTROL_opf_output_OPF_YUV (0x00000005)
#define ISP_OPF1_CONTROL_rgb444_format_OFFSET (0x00000010)
#define ISP_OPF1_CONTROL_rgb444_format_WIDTH (1)
#define ISP_OPF1_CONTROL_rgb444_format_MASK (0x00010000)
#define ISP_OPF1_CONTROL_rgb444_format_RGB444_NOPACK (0x00000000)
#define ISP_OPF1_CONTROL_rgb444_format_RGB444_PACKED (0x00000001)

/*
* Register : ISP_OPF1_PIXVALID_LTYPES
*/

#define ISP_OPF1_PIXVALID_LTYPES_SIZE  (8)
#define ISP_OPF1_PIXVALID_LTYPES_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x1a)
#define ISP_OPF1_PIXVALID_LTYPES_RESET_VALUE (0x0000)
#define ISP_OPF1_PIXVALID_LTYPES_BITFIELD_MASK (0x7F)
#define ISP_OPF1_PIXVALID_LTYPES_RWMASK (0x7F)
#define ISP_OPF1_PIXVALID_LTYPES_ROMASK (0x00)
#define ISP_OPF1_PIXVALID_LTYPES_WOMASK (0x00)
#define ISP_OPF1_PIXVALID_LTYPES_UNUSED_MASK (0x80)
#define ISP_OPF1_PIXVALID_LTYPES_pixvalid_linetypes_OFFSET (0x00)
#define ISP_OPF1_PIXVALID_LTYPES_pixvalid_linetypes_WIDTH (6)
#define ISP_OPF1_PIXVALID_LTYPES_pixvalid_linetypes_MASK (0x3F)
#define ISP_OPF1_PIXVALID_LTYPES_eof_blank_only_en_OFFSET (0x06)
#define ISP_OPF1_PIXVALID_LTYPES_eof_blank_only_en_WIDTH (1)
#define ISP_OPF1_PIXVALID_LTYPES_eof_blank_only_en_MASK (0x40)

/*
* Register : ISP_OPF1_YCBCR_FLIP
*/

#define ISP_OPF1_YCBCR_FLIP_SIZE       (8)
#define ISP_OPF1_YCBCR_FLIP_OFFSET     (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x1c)
#define ISP_OPF1_YCBCR_FLIP_RESET_VALUE (0x0000)
#define ISP_OPF1_YCBCR_FLIP_BITFIELD_MASK (0x03)
#define ISP_OPF1_YCBCR_FLIP_RWMASK     (0x03)
#define ISP_OPF1_YCBCR_FLIP_ROMASK     (0x00)
#define ISP_OPF1_YCBCR_FLIP_WOMASK     (0x00)
#define ISP_OPF1_YCBCR_FLIP_UNUSED_MASK (0xFC)
#define ISP_OPF1_YCBCR_FLIP_cbcr_flip_OFFSET (0x00)
#define ISP_OPF1_YCBCR_FLIP_cbcr_flip_WIDTH (1)
#define ISP_OPF1_YCBCR_FLIP_cbcr_flip_MASK (0x01)
#define ISP_OPF1_YCBCR_FLIP_cbcr_flip_B_0x0 (0x00)
#define ISP_OPF1_YCBCR_FLIP_cbcr_flip_B_0x1 (0x01)
#define ISP_OPF1_YCBCR_FLIP_y_cbcr_flip_OFFSET (0x01)
#define ISP_OPF1_YCBCR_FLIP_y_cbcr_flip_WIDTH (1)
#define ISP_OPF1_YCBCR_FLIP_y_cbcr_flip_MASK (0x02)
#define ISP_OPF1_YCBCR_FLIP_y_cbcr_flip_B_0x0 (0x00)
#define ISP_OPF1_YCBCR_FLIP_y_cbcr_flip_B_0x1 (0x01)

/*
* Register : ISP_OPF1_LAST_NONACT_LINE
*/

#define ISP_OPF1_LAST_NONACT_LINE_SIZE (16)
#define ISP_OPF1_LAST_NONACT_LINE_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x1e)
#define ISP_OPF1_LAST_NONACT_LINE_RESET_VALUE (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_LAST_NONACT_LINE_RWMASK (0xFFFF)
#define ISP_OPF1_LAST_NONACT_LINE_ROMASK (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_WOMASK (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_UNUSED_MASK (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_last_nonactive_line_OFFSET (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_last_nonactive_line_WIDTH (16)
#define ISP_OPF1_LAST_NONACT_LINE_last_nonactive_line_MASK (0xFFFF)

/*
* Register : ISP_OPF1_HSYNC_RISING_STATUS
*/

#define ISP_OPF1_HSYNC_RISING_STATUS_SIZE (16)
#define ISP_OPF1_HSYNC_RISING_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x20)
#define ISP_OPF1_HSYNC_RISING_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_HSYNC_RISING_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_HSYNC_RISING_STATUS_RWMASK (0x0000)
#define ISP_OPF1_HSYNC_RISING_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_HSYNC_RISING_STATUS_WOMASK (0x0000)
#define ISP_OPF1_HSYNC_RISING_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_HSYNC_RISING_STATUS_hsync_rising_status_OFFSET (0x0000)
#define ISP_OPF1_HSYNC_RISING_STATUS_hsync_rising_status_WIDTH (16)
#define ISP_OPF1_HSYNC_RISING_STATUS_hsync_rising_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_HSYNC_FALLING_STATUS
*/

#define ISP_OPF1_HSYNC_FALLING_STATUS_SIZE (16)
#define ISP_OPF1_HSYNC_FALLING_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x22)
#define ISP_OPF1_HSYNC_FALLING_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_HSYNC_FALLING_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_HSYNC_FALLING_STATUS_RWMASK (0x0000)
#define ISP_OPF1_HSYNC_FALLING_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_HSYNC_FALLING_STATUS_WOMASK (0x0000)
#define ISP_OPF1_HSYNC_FALLING_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_HSYNC_FALLING_STATUS_hsync_falling_status_OFFSET (0x0000)
#define ISP_OPF1_HSYNC_FALLING_STATUS_hsync_falling_status_WIDTH (16)
#define ISP_OPF1_HSYNC_FALLING_STATUS_hsync_falling_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VSYNC_RISING_FINE_STATUS
*/

#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_SIZE (16)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x24)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_RWMASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_WOMASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_vsync_rising_fine_status_OFFSET (0x0000)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_vsync_rising_fine_status_WIDTH (16)
#define ISP_OPF1_VSYNC_RISING_FINE_STATUS_vsync_rising_fine_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VSYNC_FALLING_FINE_STATUS
*/

#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_SIZE (16)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x26)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_RWMASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_WOMASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_vsync_falling_fine_status_OFFSET (0x0000)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_vsync_falling_fine_status_WIDTH (16)
#define ISP_OPF1_VSYNC_FALLING_FINE_STATUS_vsync_falling_fine_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VSYNC_RISING_COARSE_STATUS
*/

#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_SIZE (16)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x28)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_RWMASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_WOMASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_vsync_rising_coarse_status_OFFSET (0x0000)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_vsync_rising_coarse_status_WIDTH (16)
#define ISP_OPF1_VSYNC_RISING_COARSE_STATUS_vsync_rising_coarse_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VSYNC_FALLING_COARSE_STATUS
*/

#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_SIZE (16)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x2a)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_RWMASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_WOMASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_vsync_falling_coarse_status_OFFSET (0x0000)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_vsync_falling_coarse_status_WIDTH (16)
#define ISP_OPF1_VSYNC_FALLING_COARSE_STATUS_vsync_falling_coarse_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_HCROP_RISING_STATUS
*/

#define ISP_OPF1_HCROP_RISING_STATUS_SIZE (16)
#define ISP_OPF1_HCROP_RISING_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x2c)
#define ISP_OPF1_HCROP_RISING_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_HCROP_RISING_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_HCROP_RISING_STATUS_RWMASK (0x0000)
#define ISP_OPF1_HCROP_RISING_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_HCROP_RISING_STATUS_WOMASK (0x0000)
#define ISP_OPF1_HCROP_RISING_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_HCROP_RISING_STATUS_hcrop_rising_status_OFFSET (0x0000)
#define ISP_OPF1_HCROP_RISING_STATUS_hcrop_rising_status_WIDTH (16)
#define ISP_OPF1_HCROP_RISING_STATUS_hcrop_rising_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_HCROP_FALLING_STATUS
*/

#define ISP_OPF1_HCROP_FALLING_STATUS_SIZE (16)
#define ISP_OPF1_HCROP_FALLING_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x2e)
#define ISP_OPF1_HCROP_FALLING_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_HCROP_FALLING_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_HCROP_FALLING_STATUS_RWMASK (0x0000)
#define ISP_OPF1_HCROP_FALLING_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_HCROP_FALLING_STATUS_WOMASK (0x0000)
#define ISP_OPF1_HCROP_FALLING_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_HCROP_FALLING_STATUS_hcrop_falling_status_OFFSET (0x0000)
#define ISP_OPF1_HCROP_FALLING_STATUS_hcrop_falling_status_WIDTH (16)
#define ISP_OPF1_HCROP_FALLING_STATUS_hcrop_falling_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VCROP_RISING_COARSE_STATUS
*/

#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_SIZE (16)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x30)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_RWMASK (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_WOMASK (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_vcrop_rising_coarse_status_OFFSET (0x0000)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_vcrop_rising_coarse_status_WIDTH (16)
#define ISP_OPF1_VCROP_RISING_COARSE_STATUS_vcrop_rising_coarse_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_VCROP_FALLING_COARSE_STATUS
*/

#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_SIZE (16)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x32)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_RWMASK (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_WOMASK (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_vcrop_falling_coarse_status_OFFSET (0x0000)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_vcrop_falling_coarse_status_WIDTH (16)
#define ISP_OPF1_VCROP_FALLING_COARSE_STATUS_vcrop_falling_coarse_status_MASK (0xFFFF)

/*
* Register : ISP_OPF1_CONTROL_STATUS
*/

#define ISP_OPF1_CONTROL_STATUS_SIZE   (32)
#define ISP_OPF1_CONTROL_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x34)
#define ISP_OPF1_CONTROL_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_CONTROL_STATUS_BITFIELD_MASK (0x0001FFFF)
#define ISP_OPF1_CONTROL_STATUS_RWMASK (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_ROMASK (0x0001FFFF)
#define ISP_OPF1_CONTROL_STATUS_WOMASK (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_UNUSED_MASK (0xFFFE0000)
#define ISP_OPF1_CONTROL_STATUS_sync_based_pixvalid_status_OFFSET (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_sync_based_pixvalid_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_sync_based_pixvalid_status_MASK (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_sync_based_pixvalid_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_sync_based_pixvalid_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_toggle_pix_valid_status_OFFSET (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_toggle_pix_valid_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_toggle_pix_valid_status_MASK (0x00000002)
#define ISP_OPF1_CONTROL_STATUS_toggle_pix_valid_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_toggle_pix_valid_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_OFFSET (0x00000002)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_WIDTH (3)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_MASK (0x0000001C)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_B_0x2 (0x00000002)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_B_0x3 (0x00000003)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_B_0x4 (0x00000004)
#define ISP_OPF1_CONTROL_STATUS_rgb_flip_status_B_0x5 (0x00000005)
#define ISP_OPF1_CONTROL_STATUS_rgb_bit_flip_status_OFFSET (0x00000005)
#define ISP_OPF1_CONTROL_STATUS_rgb_bit_flip_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_rgb_bit_flip_status_MASK (0x00000020)
#define ISP_OPF1_CONTROL_STATUS_rgb_bit_flip_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_rgb_bit_flip_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_embedded_code_en_status_OFFSET (0x00000006)
#define ISP_OPF1_CONTROL_STATUS_embedded_code_en_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_embedded_code_en_status_MASK (0x00000040)
#define ISP_OPF1_CONTROL_STATUS_embedded_code_en_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_embedded_code_en_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_false_sync_code_protect_en_status_OFFSET (0x00000007)
#define ISP_OPF1_CONTROL_STATUS_false_sync_code_protect_en_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_false_sync_code_protect_en_status_MASK (0x00000080)
#define ISP_OPF1_CONTROL_STATUS_false_sync_code_protect_en_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_false_sync_code_protect_en_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_invert_hsync_status_OFFSET (0x00000008)
#define ISP_OPF1_CONTROL_STATUS_invert_hsync_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_invert_hsync_status_MASK (0x00000100)
#define ISP_OPF1_CONTROL_STATUS_invert_hsync_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_invert_hsync_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_invert_vsync_status_OFFSET (0x00000009)
#define ISP_OPF1_CONTROL_STATUS_invert_vsync_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_invert_vsync_status_MASK (0x00000200)
#define ISP_OPF1_CONTROL_STATUS_invert_vsync_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_invert_vsync_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_idata_ch0_en_status_OFFSET (0x0000000a)
#define ISP_OPF1_CONTROL_STATUS_idata_ch0_en_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_idata_ch0_en_status_MASK (0x00000400)
#define ISP_OPF1_CONTROL_STATUS_idata_ch0_en_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_idata_ch0_en_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_idata_ch1_en_status_OFFSET (0x0000000b)
#define ISP_OPF1_CONTROL_STATUS_idata_ch1_en_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_idata_ch1_en_status_MASK (0x00000800)
#define ISP_OPF1_CONTROL_STATUS_idata_ch1_en_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_idata_ch1_en_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_idata_ch2_en_status_OFFSET (0x0000000c)
#define ISP_OPF1_CONTROL_STATUS_idata_ch2_en_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_idata_ch2_en_status_MASK (0x00001000)
#define ISP_OPF1_CONTROL_STATUS_idata_ch2_en_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_idata_ch2_en_status_B_0x1 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_OFFSET (0x0000000d)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_WIDTH (3)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_MASK (0x0000E000)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_OPF_RGB101010 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_OPF_RGB888 (0x00000001)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_OPF_RGB565 (0x00000002)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_OPF_RGB555 (0x00000003)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_OPF_RGB444 (0x00000004)
#define ISP_OPF1_CONTROL_STATUS_opf_output_status_OPF_YUV (0x00000005)
#define ISP_OPF1_CONTROL_STATUS_rgb444_format_status_OFFSET (0x00000010)
#define ISP_OPF1_CONTROL_STATUS_rgb444_format_status_WIDTH (1)
#define ISP_OPF1_CONTROL_STATUS_rgb444_format_status_MASK (0x00010000)
#define ISP_OPF1_CONTROL_STATUS_rgb444_format_status_B_0x0 (0x00000000)
#define ISP_OPF1_CONTROL_STATUS_rgb444_format_status_B_0x1 (0x00000001)

/*
* Register : ISP_OPF1_PIXVALID_LTYPES_STATUS
*/

#define ISP_OPF1_PIXVALID_LTYPES_STATUS_SIZE (8)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x36)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_BITFIELD_MASK (0x7F)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_RWMASK (0x00)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_ROMASK (0x7F)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_WOMASK (0x00)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_UNUSED_MASK (0x80)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_pixvalid_linetypes_status_OFFSET (0x00)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_pixvalid_linetypes_status_WIDTH (6)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_pixvalid_linetypes_status_MASK (0x3F)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_eof_blank_only_en_status_OFFSET (0x06)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_eof_blank_only_en_status_WIDTH (1)
#define ISP_OPF1_PIXVALID_LTYPES_STATUS_eof_blank_only_en_status_MASK (0x40)

/*
* Register : ISP_OPF1_YCBCR_FLIP_STATUS
*/

#define ISP_OPF1_YCBCR_FLIP_STATUS_SIZE (8)
#define ISP_OPF1_YCBCR_FLIP_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x38)
#define ISP_OPF1_YCBCR_FLIP_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_YCBCR_FLIP_STATUS_BITFIELD_MASK (0x03)
#define ISP_OPF1_YCBCR_FLIP_STATUS_RWMASK (0x00)
#define ISP_OPF1_YCBCR_FLIP_STATUS_ROMASK (0x03)
#define ISP_OPF1_YCBCR_FLIP_STATUS_WOMASK (0x00)
#define ISP_OPF1_YCBCR_FLIP_STATUS_UNUSED_MASK (0xFC)
#define ISP_OPF1_YCBCR_FLIP_STATUS_cbcr_flip_status_OFFSET (0x00)
#define ISP_OPF1_YCBCR_FLIP_STATUS_cbcr_flip_status_WIDTH (1)
#define ISP_OPF1_YCBCR_FLIP_STATUS_cbcr_flip_status_MASK (0x01)
#define ISP_OPF1_YCBCR_FLIP_STATUS_cbcr_flip_status_B_0x0 (0x00)
#define ISP_OPF1_YCBCR_FLIP_STATUS_cbcr_flip_status_B_0x1 (0x01)
#define ISP_OPF1_YCBCR_FLIP_STATUS_y_cbcr_flip_status_OFFSET (0x01)
#define ISP_OPF1_YCBCR_FLIP_STATUS_y_cbcr_flip_status_WIDTH (1)
#define ISP_OPF1_YCBCR_FLIP_STATUS_y_cbcr_flip_status_MASK (0x02)
#define ISP_OPF1_YCBCR_FLIP_STATUS_y_cbcr_flip_status_B_0x0 (0x00)
#define ISP_OPF1_YCBCR_FLIP_STATUS_y_cbcr_flip_status_B_0x1 (0x01)

/*
* Register : ISP_OPF1_LAST_NONACT_LINE_STATUS
*/

#define ISP_OPF1_LAST_NONACT_LINE_STATUS_SIZE (16)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_OFFSET (pictorv2_in_ISP_OPF1_BASE_ADDR + 0x3a)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_RESET_VALUE (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_BITFIELD_MASK (0xFFFF)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_RWMASK (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_ROMASK (0xFFFF)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_WOMASK (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_UNUSED_MASK (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_last_nonactive_line_status_OFFSET (0x0000)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_last_nonactive_line_status_WIDTH (16)
#define ISP_OPF1_LAST_NONACT_LINE_STATUS_last_nonactive_line_status_MASK (0xFFFF)


/*
* Address Block : ISP_STATS_ACCWZ
*/

#define pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR               (0xb00U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_ACCWZ_ENABLE
*/

#define ISP_STATS_ACCWZ_ENABLE_SIZE (8)
#define ISP_STATS_ACCWZ_ENABLE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x00)
#define ISP_STATS_ACCWZ_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ENABLE_BITFIELD_MASK (0x11)
#define ISP_STATS_ACCWZ_ENABLE_RWMASK (0x11)
#define ISP_STATS_ACCWZ_ENABLE_ROMASK (0x00)
#define ISP_STATS_ACCWZ_ENABLE_WOMASK (0x00)
#define ISP_STATS_ACCWZ_ENABLE_UNUSED_MASK (0xEE)
#define ISP_STATS_ACCWZ_ENABLE_enable_OFFSET (0x00)
#define ISP_STATS_ACCWZ_ENABLE_enable_WIDTH (1)
#define ISP_STATS_ACCWZ_ENABLE_enable_MASK (0x01)
#define ISP_STATS_ACCWZ_ENABLE_enable_DISABLE (0x00)
#define ISP_STATS_ACCWZ_ENABLE_enable_ENABLE (0x01)
#define ISP_STATS_ACCWZ_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_STATS_ACCWZ_ENABLE_soft_reset_WIDTH (1)
#define ISP_STATS_ACCWZ_ENABLE_soft_reset_MASK (0x10)
#define ISP_STATS_ACCWZ_ENABLE_soft_reset_DISABLE_SOFTRESET (0x00)
#define ISP_STATS_ACCWZ_ENABLE_soft_reset_ENABLE_SOFTRESET (0x01)

/*
* Register : ISP_STATS_ACCWZ_ZONE_GAINS
*/

#define ISP_STATS_ACCWZ_ZONE_GAINS_SIZE (32)
#define ISP_STATS_ACCWZ_ZONE_GAINS_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x02)
#define ISP_STATS_ACCWZ_ZONE_GAINS_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ZONE_GAINS_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ZONE_GAINS_RWMASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ZONE_GAINS_ROMASK (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_WOMASK (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone0_OFFSET (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone0_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone0_MASK (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone0_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone0_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone0_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone0_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone1_OFFSET (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone1_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone1_MASK (0x0000000C)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone1_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone1_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone1_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone1_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone2_OFFSET (0x00000004)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone2_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone2_MASK (0x00000030)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone2_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone2_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone2_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone2_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone3_OFFSET (0x00000006)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone3_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone3_MASK (0x000000C0)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone3_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone3_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone3_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone3_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone4_OFFSET (0x00000008)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone4_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone4_MASK (0x00000300)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone4_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone4_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone4_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone4_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone5_OFFSET (0x0000000a)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone5_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone5_MASK (0x00000C00)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone5_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone5_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone5_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone5_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone6_OFFSET (0x0000000c)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone6_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone6_MASK (0x00003000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone6_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone6_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone6_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone6_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone7_OFFSET (0x0000000e)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone7_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone7_MASK (0x0000C000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone7_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone7_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone7_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone7_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone8_OFFSET (0x00000010)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone8_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone8_MASK (0x00030000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone8_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone8_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone8_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone8_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone9_OFFSET (0x00000012)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone9_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone9_MASK (0x000C0000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone9_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone9_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone9_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone9_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone10_OFFSET (0x00000014)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone10_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone10_MASK (0x00300000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone10_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone10_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone10_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone10_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone11_OFFSET (0x00000016)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone11_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone11_MASK (0x00C00000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone11_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone11_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone11_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone11_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone12_OFFSET (0x00000018)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone12_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone12_MASK (0x03000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone12_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone12_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone12_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone12_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone13_OFFSET (0x0000001a)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone13_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone13_MASK (0x0C000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone13_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone13_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone13_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone13_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone14_OFFSET (0x0000001c)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone14_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone14_MASK (0x30000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone14_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone14_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone14_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone14_GAIN_4X (0x00000003)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone15_OFFSET (0x0000001e)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone15_WIDTH (2)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone15_MASK (0xC0000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone15_GAIN_0X (0x00000000)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone15_GAIN_1X (0x00000001)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone15_GAIN_2X (0x00000002)
#define ISP_STATS_ACCWZ_ZONE_GAINS_gain_zone15_GAIN_4X (0x00000003)

/*
* Register : ISP_STATS_ACCWZ_ACC0_THRESH_LO
*/

#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_SIZE (16)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x04)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_RWMASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_UNUSED_MASK (0xF000)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_thresh_lo_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_thresh_lo_WIDTH (12)
#define ISP_STATS_ACCWZ_ACC0_THRESH_LO_thresh_lo_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC0_THRESH_HI
*/

#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_SIZE (16)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x06)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_RWMASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_UNUSED_MASK (0xF000)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_thresh_hi_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_thresh_hi_WIDTH (12)
#define ISP_STATS_ACCWZ_ACC0_THRESH_HI_thresh_hi_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC0_CTRL
*/

#define ISP_STATS_ACCWZ_ACC0_CTRL_SIZE (8)
#define ISP_STATS_ACCWZ_ACC0_CTRL_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x08)
#define ISP_STATS_ACCWZ_ACC0_CTRL_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_BITFIELD_MASK (0xFF)
#define ISP_STATS_ACCWZ_ACC0_CTRL_RWMASK (0xFF)
#define ISP_STATS_ACCWZ_ACC0_CTRL_ROMASK (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_WOMASK (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_UNUSED_MASK (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_mode_OFFSET (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_mode_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC0_CTRL_mode_MASK (0x03)
#define ISP_STATS_ACCWZ_ACC0_CTRL_mode_FULL_PIXELVAL (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_mode_CLIP_PIXELVAL (0x01)
#define ISP_STATS_ACCWZ_ACC0_CTRL_mode_HISTOGRAM (0x02)
#define ISP_STATS_ACCWZ_ACC0_CTRL_mode_ZERO (0x03)
#define ISP_STATS_ACCWZ_ACC0_CTRL_type_OFFSET (0x02)
#define ISP_STATS_ACCWZ_ACC0_CTRL_type_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC0_CTRL_type_MASK (0x0C)
#define ISP_STATS_ACCWZ_ACC0_CTRL_type_ACC_ZONED (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_type_ACC_FLAT (0x01)
#define ISP_STATS_ACCWZ_ACC0_CTRL_type_ACC_BLACK (0x02)
#define ISP_STATS_ACCWZ_ACC0_CTRL_type_ACC_DARK (0x03)
#define ISP_STATS_ACCWZ_ACC0_CTRL_color_OFFSET (0x04)
#define ISP_STATS_ACCWZ_ACC0_CTRL_color_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC0_CTRL_color_MASK (0x30)
#define ISP_STATS_ACCWZ_ACC0_CTRL_color_GIR (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_color_RED (0x01)
#define ISP_STATS_ACCWZ_ACC0_CTRL_color_BLU (0x02)
#define ISP_STATS_ACCWZ_ACC0_CTRL_color_GIB (0x03)
#define ISP_STATS_ACCWZ_ACC0_CTRL_src_OFFSET (0x06)
#define ISP_STATS_ACCWZ_ACC0_CTRL_src_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC0_CTRL_src_MASK (0xC0)
#define ISP_STATS_ACCWZ_ACC0_CTRL_src_SRC_IDP_0 (0x00)
#define ISP_STATS_ACCWZ_ACC0_CTRL_src_SRC_IDP_1 (0x01)
#define ISP_STATS_ACCWZ_ACC0_CTRL_src_SRC_IDP_2 (0x02)
#define ISP_STATS_ACCWZ_ACC0_CTRL_src_SRC_IDP_3 (0x03)

/*
* Register : ISP_STATS_ACCWZ_ACC1_THRESH_LO
*/

#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_SIZE (16)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x0a)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_RWMASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_UNUSED_MASK (0xF000)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_thresh_lo_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_thresh_lo_WIDTH (12)
#define ISP_STATS_ACCWZ_ACC1_THRESH_LO_thresh_lo_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC1_THRESH_HI
*/

#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_SIZE (16)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x0c)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_RWMASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_UNUSED_MASK (0xF000)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_thresh_hi_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_thresh_hi_WIDTH (12)
#define ISP_STATS_ACCWZ_ACC1_THRESH_HI_thresh_hi_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC1_CTRL
*/

#define ISP_STATS_ACCWZ_ACC1_CTRL_SIZE (8)
#define ISP_STATS_ACCWZ_ACC1_CTRL_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x0e)
#define ISP_STATS_ACCWZ_ACC1_CTRL_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_BITFIELD_MASK (0xFF)
#define ISP_STATS_ACCWZ_ACC1_CTRL_RWMASK (0xFF)
#define ISP_STATS_ACCWZ_ACC1_CTRL_ROMASK (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_WOMASK (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_UNUSED_MASK (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_mode_OFFSET (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_mode_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC1_CTRL_mode_MASK (0x03)
#define ISP_STATS_ACCWZ_ACC1_CTRL_mode_FULL_PIXELVAL (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_mode_CLIP_PIXELVAL (0x01)
#define ISP_STATS_ACCWZ_ACC1_CTRL_mode_HISTOGRAM (0x02)
#define ISP_STATS_ACCWZ_ACC1_CTRL_mode_ZERO (0x03)
#define ISP_STATS_ACCWZ_ACC1_CTRL_type_OFFSET (0x02)
#define ISP_STATS_ACCWZ_ACC1_CTRL_type_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC1_CTRL_type_MASK (0x0C)
#define ISP_STATS_ACCWZ_ACC1_CTRL_type_ACC_ZONED (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_type_ACC_FLAT (0x01)
#define ISP_STATS_ACCWZ_ACC1_CTRL_type_ACC_BLACK (0x02)
#define ISP_STATS_ACCWZ_ACC1_CTRL_type_ACC_DARK (0x03)
#define ISP_STATS_ACCWZ_ACC1_CTRL_color_OFFSET (0x04)
#define ISP_STATS_ACCWZ_ACC1_CTRL_color_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC1_CTRL_color_MASK (0x30)
#define ISP_STATS_ACCWZ_ACC1_CTRL_color_GIR (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_color_RED (0x01)
#define ISP_STATS_ACCWZ_ACC1_CTRL_color_BLU (0x02)
#define ISP_STATS_ACCWZ_ACC1_CTRL_color_GIB (0x03)
#define ISP_STATS_ACCWZ_ACC1_CTRL_src_OFFSET (0x06)
#define ISP_STATS_ACCWZ_ACC1_CTRL_src_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC1_CTRL_src_MASK (0xC0)
#define ISP_STATS_ACCWZ_ACC1_CTRL_src_SRC_IDP_0 (0x00)
#define ISP_STATS_ACCWZ_ACC1_CTRL_src_SRC_IDP_1 (0x01)
#define ISP_STATS_ACCWZ_ACC1_CTRL_src_SRC_IDP_2 (0x02)
#define ISP_STATS_ACCWZ_ACC1_CTRL_src_SRC_IDP_3 (0x03)

/*
* Register : ISP_STATS_ACCWZ_ACC2_THRESH_LO
*/

#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_SIZE (16)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x10)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_RWMASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_UNUSED_MASK (0xF000)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_thresh_lo_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_thresh_lo_WIDTH (12)
#define ISP_STATS_ACCWZ_ACC2_THRESH_LO_thresh_lo_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC2_THRESH_HI
*/

#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_SIZE (16)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x12)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_RWMASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_UNUSED_MASK (0xF000)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_thresh_hi_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_thresh_hi_WIDTH (12)
#define ISP_STATS_ACCWZ_ACC2_THRESH_HI_thresh_hi_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC2_CTRL
*/

#define ISP_STATS_ACCWZ_ACC2_CTRL_SIZE (8)
#define ISP_STATS_ACCWZ_ACC2_CTRL_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x14)
#define ISP_STATS_ACCWZ_ACC2_CTRL_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_BITFIELD_MASK (0xFF)
#define ISP_STATS_ACCWZ_ACC2_CTRL_RWMASK (0xFF)
#define ISP_STATS_ACCWZ_ACC2_CTRL_ROMASK (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_WOMASK (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_UNUSED_MASK (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_mode_OFFSET (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_mode_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC2_CTRL_mode_MASK (0x03)
#define ISP_STATS_ACCWZ_ACC2_CTRL_mode_FULL_PIXELVAL (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_mode_CLIP_PIXELVAL (0x01)
#define ISP_STATS_ACCWZ_ACC2_CTRL_mode_HISTOGRAM (0x02)
#define ISP_STATS_ACCWZ_ACC2_CTRL_mode_ZERO (0x03)
#define ISP_STATS_ACCWZ_ACC2_CTRL_type_OFFSET (0x02)
#define ISP_STATS_ACCWZ_ACC2_CTRL_type_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC2_CTRL_type_MASK (0x0C)
#define ISP_STATS_ACCWZ_ACC2_CTRL_type_ACC_ZONED (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_type_ACC_FLAT (0x01)
#define ISP_STATS_ACCWZ_ACC2_CTRL_type_ACC_BLACK (0x02)
#define ISP_STATS_ACCWZ_ACC2_CTRL_type_ACC_DARK (0x03)
#define ISP_STATS_ACCWZ_ACC2_CTRL_color_OFFSET (0x04)
#define ISP_STATS_ACCWZ_ACC2_CTRL_color_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC2_CTRL_color_MASK (0x30)
#define ISP_STATS_ACCWZ_ACC2_CTRL_color_GIR (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_color_RED (0x01)
#define ISP_STATS_ACCWZ_ACC2_CTRL_color_BLU (0x02)
#define ISP_STATS_ACCWZ_ACC2_CTRL_color_GIB (0x03)
#define ISP_STATS_ACCWZ_ACC2_CTRL_src_OFFSET (0x06)
#define ISP_STATS_ACCWZ_ACC2_CTRL_src_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC2_CTRL_src_MASK (0xC0)
#define ISP_STATS_ACCWZ_ACC2_CTRL_src_SRC_IDP_0 (0x00)
#define ISP_STATS_ACCWZ_ACC2_CTRL_src_SRC_IDP_1 (0x01)
#define ISP_STATS_ACCWZ_ACC2_CTRL_src_SRC_IDP_2 (0x02)
#define ISP_STATS_ACCWZ_ACC2_CTRL_src_SRC_IDP_3 (0x03)

/*
* Register : ISP_STATS_ACCWZ_ACC3_THRESH_LO
*/

#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_SIZE (16)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x16)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_RWMASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_UNUSED_MASK (0xF000)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_thresh_lo_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_thresh_lo_WIDTH (12)
#define ISP_STATS_ACCWZ_ACC3_THRESH_LO_thresh_lo_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC3_THRESH_HI
*/

#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_SIZE (16)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x18)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_RWMASK (0x0FFF)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_UNUSED_MASK (0xF000)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_thresh_hi_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_thresh_hi_WIDTH (12)
#define ISP_STATS_ACCWZ_ACC3_THRESH_HI_thresh_hi_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC3_CTRL
*/

#define ISP_STATS_ACCWZ_ACC3_CTRL_SIZE (8)
#define ISP_STATS_ACCWZ_ACC3_CTRL_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x1a)
#define ISP_STATS_ACCWZ_ACC3_CTRL_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_BITFIELD_MASK (0xFF)
#define ISP_STATS_ACCWZ_ACC3_CTRL_RWMASK (0xFF)
#define ISP_STATS_ACCWZ_ACC3_CTRL_ROMASK (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_WOMASK (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_UNUSED_MASK (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_mode_OFFSET (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_mode_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC3_CTRL_mode_MASK (0x03)
#define ISP_STATS_ACCWZ_ACC3_CTRL_mode_FULL_PIXELVAL (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_mode_CLIP_PIXELVAL (0x01)
#define ISP_STATS_ACCWZ_ACC3_CTRL_mode_HISTOGRAM (0x02)
#define ISP_STATS_ACCWZ_ACC3_CTRL_mode_ZERO (0x03)
#define ISP_STATS_ACCWZ_ACC3_CTRL_type_OFFSET (0x02)
#define ISP_STATS_ACCWZ_ACC3_CTRL_type_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC3_CTRL_type_MASK (0x0C)
#define ISP_STATS_ACCWZ_ACC3_CTRL_type_ACC_ZONED (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_type_ACC_FLAT (0x01)
#define ISP_STATS_ACCWZ_ACC3_CTRL_type_ACC_BLACK (0x02)
#define ISP_STATS_ACCWZ_ACC3_CTRL_type_ACC_DARK (0x03)
#define ISP_STATS_ACCWZ_ACC3_CTRL_color_OFFSET (0x04)
#define ISP_STATS_ACCWZ_ACC3_CTRL_color_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC3_CTRL_color_MASK (0x30)
#define ISP_STATS_ACCWZ_ACC3_CTRL_color_GIR (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_color_RED (0x01)
#define ISP_STATS_ACCWZ_ACC3_CTRL_color_BLU (0x02)
#define ISP_STATS_ACCWZ_ACC3_CTRL_color_GIB (0x03)
#define ISP_STATS_ACCWZ_ACC3_CTRL_src_OFFSET (0x06)
#define ISP_STATS_ACCWZ_ACC3_CTRL_src_WIDTH (2)
#define ISP_STATS_ACCWZ_ACC3_CTRL_src_MASK (0xC0)
#define ISP_STATS_ACCWZ_ACC3_CTRL_src_SRC_IDP_0 (0x00)
#define ISP_STATS_ACCWZ_ACC3_CTRL_src_SRC_IDP_1 (0x01)
#define ISP_STATS_ACCWZ_ACC3_CTRL_src_SRC_IDP_2 (0x02)
#define ISP_STATS_ACCWZ_ACC3_CTRL_src_SRC_IDP_3 (0x03)

/*
* Register : ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET
*/

#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_SIZE (16)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x1c)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_zone_x_offset_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_zone_x_offset_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_OFFSET_zone_x_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET
*/

#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_SIZE (16)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x1e)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_zone_y_offset_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_zone_y_offset_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_OFFSET_zone_y_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET
*/

#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_SIZE (16)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x20)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_zone_x_offset_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_zone_x_offset_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_OFFSET_zone_x_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET
*/

#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_SIZE (16)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x22)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_zone_y_offset_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_zone_y_offset_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_OFFSET_zone_y_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET
*/

#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_SIZE (16)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x24)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_zone_x_offset_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_zone_x_offset_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_OFFSET_zone_x_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET
*/

#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_SIZE (16)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x26)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_zone_y_offset_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_zone_y_offset_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_OFFSET_zone_y_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET
*/

#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_SIZE (16)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x28)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_zone_x_offset_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_zone_x_offset_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_OFFSET_zone_x_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET
*/

#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_SIZE (16)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x2a)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_zone_y_offset_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_zone_y_offset_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_OFFSET_zone_y_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE
*/

#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_SIZE (16)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x2c)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_zone_x_size_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_zone_x_size_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC0_ZONE_X_SIZE_zone_x_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE
*/

#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_SIZE (16)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x2e)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_zone_y_size_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_zone_y_size_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC0_ZONE_Y_SIZE_zone_y_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE
*/

#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_SIZE (16)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x30)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_zone_x_size_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_zone_x_size_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC1_ZONE_X_SIZE_zone_x_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE
*/

#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_SIZE (16)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x32)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_zone_y_size_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_zone_y_size_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC1_ZONE_Y_SIZE_zone_y_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE
*/

#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_SIZE (16)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x34)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_zone_x_size_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_zone_x_size_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC2_ZONE_X_SIZE_zone_x_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE
*/

#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_SIZE (16)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x36)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_zone_y_size_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_zone_y_size_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC2_ZONE_Y_SIZE_zone_y_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE
*/

#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_SIZE (16)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x38)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_zone_x_size_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_zone_x_size_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC3_ZONE_X_SIZE_zone_x_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE
*/

#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_SIZE (16)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x3a)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_ROMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_WOMASK (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_zone_y_size_OFFSET (0x0000)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_zone_y_size_WIDTH (13)
#define ISP_STATS_ACCWZ_ACC3_ZONE_Y_SIZE_zone_y_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACCWZ_ACC0
*/

#define ISP_STATS_ACCWZ_ACC0_SIZE (32)
#define ISP_STATS_ACCWZ_ACC0_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x3c)
#define ISP_STATS_ACCWZ_ACC0_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC0_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ACC0_RWMASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC0_ROMASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ACC0_WOMASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC0_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC0_accu_OFFSET (0x00000000)
#define ISP_STATS_ACCWZ_ACC0_accu_WIDTH (32)
#define ISP_STATS_ACCWZ_ACC0_accu_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACCWZ_ACC1
*/

#define ISP_STATS_ACCWZ_ACC1_SIZE (32)
#define ISP_STATS_ACCWZ_ACC1_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x3e)
#define ISP_STATS_ACCWZ_ACC1_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC1_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ACC1_RWMASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC1_ROMASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ACC1_WOMASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC1_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC1_accu_OFFSET (0x00000000)
#define ISP_STATS_ACCWZ_ACC1_accu_WIDTH (32)
#define ISP_STATS_ACCWZ_ACC1_accu_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACCWZ_ACC2
*/

#define ISP_STATS_ACCWZ_ACC2_SIZE (32)
#define ISP_STATS_ACCWZ_ACC2_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x40)
#define ISP_STATS_ACCWZ_ACC2_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC2_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ACC2_RWMASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC2_ROMASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ACC2_WOMASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC2_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC2_accu_OFFSET (0x00000000)
#define ISP_STATS_ACCWZ_ACC2_accu_WIDTH (32)
#define ISP_STATS_ACCWZ_ACC2_accu_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACCWZ_ACC3
*/

#define ISP_STATS_ACCWZ_ACC3_SIZE (32)
#define ISP_STATS_ACCWZ_ACC3_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x42)
#define ISP_STATS_ACCWZ_ACC3_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ACC3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ACC3_RWMASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC3_ROMASK (0xFFFFFFFF)
#define ISP_STATS_ACCWZ_ACC3_WOMASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC3_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACCWZ_ACC3_accu_OFFSET (0x00000000)
#define ISP_STATS_ACCWZ_ACC3_accu_WIDTH (32)
#define ISP_STATS_ACCWZ_ACC3_accu_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACCWZ_ZONE_STATUS
*/

#define ISP_STATS_ACCWZ_ZONE_STATUS_SIZE (8)
#define ISP_STATS_ACCWZ_ZONE_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x44)
#define ISP_STATS_ACCWZ_ZONE_STATUS_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_ZONE_STATUS_BITFIELD_MASK (0x0F)
#define ISP_STATS_ACCWZ_ZONE_STATUS_RWMASK (0x00)
#define ISP_STATS_ACCWZ_ZONE_STATUS_ROMASK (0x0F)
#define ISP_STATS_ACCWZ_ZONE_STATUS_WOMASK (0x00)
#define ISP_STATS_ACCWZ_ZONE_STATUS_UNUSED_MASK (0xF0)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc0_zones_error_OFFSET (0x00)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc0_zones_error_WIDTH (1)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc0_zones_error_MASK (0x01)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc0_zones_error_NO_ERROR (0x00)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc0_zones_error_ERROR (0x01)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc1_zones_error_OFFSET (0x01)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc1_zones_error_WIDTH (1)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc1_zones_error_MASK (0x02)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc1_zones_error_NO_ERROR (0x00)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc1_zones_error_ERROR (0x01)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc2_zones_error_OFFSET (0x02)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc2_zones_error_WIDTH (1)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc2_zones_error_MASK (0x04)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc2_zones_error_NO_ERROR (0x00)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc2_zones_error_ERROR (0x01)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc3_zones_error_OFFSET (0x03)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc3_zones_error_WIDTH (1)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc3_zones_error_MASK (0x08)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc3_zones_error_NO_ERROR (0x00)
#define ISP_STATS_ACCWZ_ZONE_STATUS_acc3_zones_error_ERROR (0x01)

/*
* Register : ISP_STATS_ACCWZ_DFV
*/

#define ISP_STATS_ACCWZ_DFV_SIZE (8)
#define ISP_STATS_ACCWZ_DFV_OFFSET (pictorv2_in_ISP_STATS_ACCWZ_BASE_ADDR + 0x46)
#define ISP_STATS_ACCWZ_DFV_RESET_VALUE (0x00)
#define ISP_STATS_ACCWZ_DFV_BITFIELD_MASK (0x1F)
#define ISP_STATS_ACCWZ_DFV_RWMASK (0x1F)
#define ISP_STATS_ACCWZ_DFV_ROMASK (0x00)
#define ISP_STATS_ACCWZ_DFV_WOMASK (0x00)
#define ISP_STATS_ACCWZ_DFV_UNUSED_MASK (0xE0)
#define ISP_STATS_ACCWZ_DFV_dfv_enable_OFFSET (0x00)
#define ISP_STATS_ACCWZ_DFV_dfv_enable_WIDTH (1)
#define ISP_STATS_ACCWZ_DFV_dfv_enable_MASK (0x01)
#define ISP_STATS_ACCWZ_DFV_dfv_enable_DFV_DISABLE (0x00)
#define ISP_STATS_ACCWZ_DFV_dfv_enable_B_0x1 (0x01)
#define ISP_STATS_ACCWZ_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_STATS_ACCWZ_DFV_dfv_interrupt_ctrl_WIDTH (4)
#define ISP_STATS_ACCWZ_DFV_dfv_interrupt_ctrl_MASK (0x1E)


/*
* Address Block : ISP_STATS_ACC_8x6
*/

#define pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR             (0xb80U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_ACC_8x6_ENABLE
*/

#define ISP_STATS_ACC_8x6_ENABLE_SIZE (8)
#define ISP_STATS_ACC_8x6_ENABLE_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x00)
#define ISP_STATS_ACC_8x6_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_ACC_8x6_ENABLE_BITFIELD_MASK (0x01)
#define ISP_STATS_ACC_8x6_ENABLE_RWMASK (0x01)
#define ISP_STATS_ACC_8x6_ENABLE_ROMASK (0x00)
#define ISP_STATS_ACC_8x6_ENABLE_WOMASK (0x00)
#define ISP_STATS_ACC_8x6_ENABLE_UNUSED_MASK (0xFE)
#define ISP_STATS_ACC_8x6_ENABLE_enable_OFFSET (0x00)
#define ISP_STATS_ACC_8x6_ENABLE_enable_WIDTH (1)
#define ISP_STATS_ACC_8x6_ENABLE_enable_MASK (0x01)
#define ISP_STATS_ACC_8x6_ENABLE_enable_B_0x0 (0x00)
#define ISP_STATS_ACC_8x6_ENABLE_enable_B_0x1 (0x01)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ
*/

#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_SIZE (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x02)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_RWMASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_ROMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_zone_gains_1_16_req_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_zone_gains_1_16_req_WIDTH (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_REQ_zone_gains_1_16_req_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ
*/

#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_SIZE (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x04)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_RWMASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_ROMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_zone_gains_17_32_req_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_zone_gains_17_32_req_WIDTH (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_REQ_zone_gains_17_32_req_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ
*/

#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_SIZE (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x06)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_RWMASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_ROMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_zone_gains_33_48_req_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_zone_gains_33_48_req_WIDTH (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_REQ_zone_gains_33_48_req_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_CTRL_REQ
*/

#define ISP_STATS_ACC_8x6_CTRL_REQ_SIZE (16)
#define ISP_STATS_ACC_8x6_CTRL_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x08)
#define ISP_STATS_ACC_8x6_CTRL_REQ_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_REQ_BITFIELD_MASK (0x01FF)
#define ISP_STATS_ACC_8x6_CTRL_REQ_RWMASK (0x01FF)
#define ISP_STATS_ACC_8x6_CTRL_REQ_ROMASK (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_REQ_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_REQ_UNUSED_MASK (0xFE00)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_mode_req_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_mode_req_WIDTH (2)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_mode_req_MASK (0x0003)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_mode_req_FULL_PIXELVAL (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_mode_req_CLIP_PIXELVAL (0x0001)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_mode_req_HISTOGRAM (0x0002)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_mode_req_ZERO (0x0003)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_type_req_OFFSET (0x0002)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_type_req_WIDTH (2)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_type_req_MASK (0x000C)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_type_req_ACC_ZONED (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_type_req_ACC_FLAT (0x0001)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_type_req_ACC_BLACK (0x0002)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_type_req_ACC_DARK (0x0003)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_color_req_OFFSET (0x0004)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_color_req_WIDTH (2)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_color_req_MASK (0x0030)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_color_req_GIR (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_color_req_RED (0x0001)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_color_req_BLU (0x0002)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_color_req_GIB (0x0003)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_src_req_OFFSET (0x0006)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_src_req_WIDTH (2)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_src_req_MASK (0x00C0)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_src_req_SRC_IDP_0 (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_src_req_SRC_IDP_1 (0x0001)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_src_req_SRC_IDP_2 (0x0002)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_src_req_SRC_IDP_3 (0x0003)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_staggered_req_OFFSET (0x0008)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_staggered_req_WIDTH (1)
#define ISP_STATS_ACC_8x6_CTRL_REQ_acc_staggered_req_MASK (0x0100)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ
*/

#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_SIZE (16)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x0a)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_RWMASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_ROMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_UNUSED_MASK (0xE000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_acc_zone_x_offset_req_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_acc_zone_x_offset_req_WIDTH (13)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_REQ_acc_zone_x_offset_req_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ
*/

#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_SIZE (16)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x0b)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_RWMASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_ROMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_UNUSED_MASK (0xE000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_acc_zone_y_offset_req_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_acc_zone_y_offset_req_WIDTH (13)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_REQ_acc_zone_y_offset_req_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ
*/

#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_SIZE (16)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x0c)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_RWMASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_ROMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_UNUSED_MASK (0xE000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_acc_zone_x_size_req_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_acc_zone_x_size_req_WIDTH (13)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_REQ_acc_zone_x_size_req_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ
*/

#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_SIZE (16)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x0d)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_RWMASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_ROMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_UNUSED_MASK (0xE000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_acc_zone_y_size_req_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_acc_zone_y_size_req_WIDTH (13)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_REQ_acc_zone_y_size_req_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACC_8x6_THRESHOLDLO_REQ
*/

#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_SIZE (16)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x0e)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_RWMASK (0x0FFF)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_ROMASK (0x0000)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_UNUSED_MASK (0xF000)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_acc_thresh_lo_req_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_acc_thresh_lo_req_WIDTH (12)
#define ISP_STATS_ACC_8x6_THRESHOLDLO_REQ_acc_thresh_lo_req_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACC_8x6_THRESHOLDHI_REQ
*/

#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_SIZE (16)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x0f)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_RWMASK (0x0FFF)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_ROMASK (0x0000)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_UNUSED_MASK (0xF000)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_acc_thresh_hi_req_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_acc_thresh_hi_req_WIDTH (12)
#define ISP_STATS_ACC_8x6_THRESHOLDHI_REQ_acc_thresh_hi_req_MASK (0x0FFF)

/*
* Register : ISP_STATS_ACC_8x6_DFV
*/

#define ISP_STATS_ACC_8x6_DFV_SIZE (8)
#define ISP_STATS_ACC_8x6_DFV_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x10)
#define ISP_STATS_ACC_8x6_DFV_RESET_VALUE (0x00)
#define ISP_STATS_ACC_8x6_DFV_BITFIELD_MASK (0x03)
#define ISP_STATS_ACC_8x6_DFV_RWMASK (0x03)
#define ISP_STATS_ACC_8x6_DFV_ROMASK (0x00)
#define ISP_STATS_ACC_8x6_DFV_WOMASK (0x00)
#define ISP_STATS_ACC_8x6_DFV_UNUSED_MASK (0xFC)
#define ISP_STATS_ACC_8x6_DFV_dfv_enable_OFFSET (0x00)
#define ISP_STATS_ACC_8x6_DFV_dfv_enable_WIDTH (1)
#define ISP_STATS_ACC_8x6_DFV_dfv_enable_MASK (0x01)
#define ISP_STATS_ACC_8x6_DFV_dfv_interrupt_control_OFFSET (0x01)
#define ISP_STATS_ACC_8x6_DFV_dfv_interrupt_control_WIDTH (1)
#define ISP_STATS_ACC_8x6_DFV_dfv_interrupt_control_MASK (0x02)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS
*/

#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_SIZE (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x12)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_ROMASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_zone_gains_1_16_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_zone_gains_1_16_WIDTH (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_1_16_STATUS_zone_gains_1_16_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS
*/

#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_SIZE (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x14)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_ROMASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_zone_gains_17_32_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_zone_gains_17_32_WIDTH (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_17_32_STATUS_zone_gains_17_32_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS
*/

#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_SIZE (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x16)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_ROMASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_zone_gains_33_48_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_zone_gains_33_48_WIDTH (32)
#define ISP_STATS_ACC_8x6_ZONE_GAINS_33_48_STATUS_zone_gains_33_48_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_CTRL_STATUS
*/

#define ISP_STATS_ACC_8x6_CTRL_STATUS_SIZE (16)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x18)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_BITFIELD_MASK (0x01FF)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_RWMASK (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_ROMASK (0x01FF)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_UNUSED_MASK (0xFE00)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_mode_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_mode_WIDTH (2)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_mode_MASK (0x0003)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_type_OFFSET (0x0002)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_type_WIDTH (2)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_type_MASK (0x000C)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_color_OFFSET (0x0004)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_color_WIDTH (2)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_color_MASK (0x0030)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_src_OFFSET (0x0006)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_src_WIDTH (2)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_src_MASK (0x00C0)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_staggered_OFFSET (0x0008)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_staggered_WIDTH (1)
#define ISP_STATS_ACC_8x6_CTRL_STATUS_acc_staggered_MASK (0x0100)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS
*/

#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_SIZE (16)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x1a)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_RWMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_ROMASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_UNUSED_MASK (0xE000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_acc_zone_x_offset_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_acc_zone_x_offset_WIDTH (13)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETX_STATUS_acc_zone_x_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS
*/

#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_SIZE (16)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x1b)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_RWMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_ROMASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_UNUSED_MASK (0xE000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_acc_zone_y_offset_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_acc_zone_y_offset_WIDTH (13)
#define ISP_STATS_ACC_8x6_ZONE_OFFSETY_STATUS_acc_zone_y_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS
*/

#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_SIZE (16)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x1c)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_RWMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_ROMASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_UNUSED_MASK (0xE000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_acc_zone_x_size_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_acc_zone_x_size_WIDTH (13)
#define ISP_STATS_ACC_8x6_ZONE_SIZEX_STATUS_acc_zone_x_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS
*/

#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_SIZE (16)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x1d)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_RESET_VALUE (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_RWMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_ROMASK (0x1FFF)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_WOMASK (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_UNUSED_MASK (0xE000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_acc_zone_y_size_OFFSET (0x0000)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_acc_zone_y_size_WIDTH (13)
#define ISP_STATS_ACC_8x6_ZONE_SIZEY_STATUS_acc_zone_y_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_TOTAL
*/

#define ISP_STATS_ACC_8x6_ACC_TOTAL_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x1e)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_ROMASK (0xFFFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_UNUSED_MASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_acc_total_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_acc_total_WIDTH (32)
#define ISP_STATS_ACC_8x6_ACC_TOTAL_acc_total_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_1
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_1_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x20)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_1_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_2
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_2_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x22)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_2_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_3
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_3_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x24)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_3_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_4
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_4_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x26)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_4_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_5
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_5_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x28)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_5_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_6
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_6_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x2a)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_6_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_7
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_7_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x2c)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_7_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_8
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_8_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x2e)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_8_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_9
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_9_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x30)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_9_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_10
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_10_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_10_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_11
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_11_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x34)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_11_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_12
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_12_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x36)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_12_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_13
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_13_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x38)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_13_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_14
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_14_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x3a)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_14_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_15
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_15_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x3c)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_15_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_16
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_16_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x3e)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_16_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_17
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_17_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x40)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_17_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_18
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_18_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x42)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_18_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_19
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_19_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x44)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_19_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_20
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_20_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x46)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_20_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_21
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_21_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x48)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_21_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_22
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_22_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x4a)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_22_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_23
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_23_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x4c)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_23_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_24
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_24_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x4e)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_24_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_25
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_25_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x50)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_25_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_26
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_26_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x52)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_26_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_27
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_27_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x54)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_27_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_28
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_28_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x56)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_28_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_29
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_29_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x58)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_29_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_30
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_30_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x5a)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_30_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_31
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_31_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x5c)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_31_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_32
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_32_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x5e)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_32_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_33
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_33_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x60)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_33_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_34
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_34_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x62)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_34_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_35
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_35_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x64)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_35_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_36
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_36_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x66)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_36_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_37
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_37_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x68)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_37_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_38
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_38_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x6a)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_38_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_39
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_39_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x6c)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_39_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_40
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_40_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x6e)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_40_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_41
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_41_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x70)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_41_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_42
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_42_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x72)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_42_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_43
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_43_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x74)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_43_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_44
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_44_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x76)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_44_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_45
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_45_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x78)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_45_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_46
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_46_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x7a)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_46_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_47
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_47_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x7c)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_47_accu_MASK (0x1FFFFFFF)

/*
* Register : ISP_STATS_ACC_8x6_ACC_ZONE_48
*/

#define ISP_STATS_ACC_8x6_ACC_ZONE_48_SIZE (32)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_OFFSET (pictorv2_in_ISP_STATS_ACC_8x6_BASE_ADDR + 0x7e)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_RESET_VALUE (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_BITFIELD_MASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_RWMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_ROMASK (0x1FFFFFFF)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_WOMASK (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_UNUSED_MASK (0xE0000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_accu_OFFSET (0x00000000)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_accu_WIDTH (29)
#define ISP_STATS_ACC_8x6_ACC_ZONE_48_accu_MASK (0x1FFFFFFF)


/*
* Address Block : ISP_STATS_MUX_MWWB
*/

#define pictorv2_in_ISP_STATS_MUX_MWWB_BASE_ADDR            (0xc00U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_MUX_MWWB_ENABLE
*/

#define ISP_STATS_MUX_MWWB_ENABLE_SIZE (8)
#define ISP_STATS_MUX_MWWB_ENABLE_OFFSET (pictorv2_in_ISP_STATS_MUX_MWWB_BASE_ADDR + 0x00)
#define ISP_STATS_MUX_MWWB_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_MUX_MWWB_ENABLE_BITFIELD_MASK (0x11)
#define ISP_STATS_MUX_MWWB_ENABLE_RWMASK (0x11)
#define ISP_STATS_MUX_MWWB_ENABLE_ROMASK (0x00)
#define ISP_STATS_MUX_MWWB_ENABLE_WOMASK (0x00)
#define ISP_STATS_MUX_MWWB_ENABLE_UNUSED_MASK (0xEE)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_STATS_MUX_MWWB_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_STATS_MUX_MWWB_SELECT
*/

#define ISP_STATS_MUX_MWWB_SELECT_SIZE (8)
#define ISP_STATS_MUX_MWWB_SELECT_OFFSET (pictorv2_in_ISP_STATS_MUX_MWWB_BASE_ADDR + 0x02)
#define ISP_STATS_MUX_MWWB_SELECT_RESET_VALUE (0x00)
#define ISP_STATS_MUX_MWWB_SELECT_BITFIELD_MASK (0x11)
#define ISP_STATS_MUX_MWWB_SELECT_RWMASK (0x11)
#define ISP_STATS_MUX_MWWB_SELECT_ROMASK (0x00)
#define ISP_STATS_MUX_MWWB_SELECT_WOMASK (0x00)
#define ISP_STATS_MUX_MWWB_SELECT_UNUSED_MASK (0xEE)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_select_WIDTH (1)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_select_MASK (0x01)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_STATS_MUX_MWWB_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_STATS_MPSS
*/

#define pictorv2_in_ISP_STATS_MPSS_BASE_ADDR                (0xc10U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_MPSS_ENABLE
*/

#define ISP_STATS_MPSS_ENABLE_SIZE (8)
#define ISP_STATS_MPSS_ENABLE_OFFSET (pictorv2_in_ISP_STATS_MPSS_BASE_ADDR + 0x00)
#define ISP_STATS_MPSS_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_ENABLE_BITFIELD_MASK (0x01)
#define ISP_STATS_MPSS_ENABLE_RWMASK (0x01)
#define ISP_STATS_MPSS_ENABLE_ROMASK (0x00)
#define ISP_STATS_MPSS_ENABLE_WOMASK (0x00)
#define ISP_STATS_MPSS_ENABLE_UNUSED_MASK (0xFE)
#define ISP_STATS_MPSS_ENABLE_enable_OFFSET (0x00)
#define ISP_STATS_MPSS_ENABLE_enable_WIDTH (1)
#define ISP_STATS_MPSS_ENABLE_enable_MASK (0x01)
#define ISP_STATS_MPSS_ENABLE_enable_B_0x0 (0x00)
#define ISP_STATS_MPSS_ENABLE_enable_B_0x1 (0x01)

/*
* Register : ISP_STATS_MPSS_CTRL
*/

#define ISP_STATS_MPSS_CTRL_SIZE (8)
#define ISP_STATS_MPSS_CTRL_OFFSET (pictorv2_in_ISP_STATS_MPSS_BASE_ADDR + 0x02)
#define ISP_STATS_MPSS_CTRL_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_CTRL_BITFIELD_MASK (0x01)
#define ISP_STATS_MPSS_CTRL_RWMASK (0x01)
#define ISP_STATS_MPSS_CTRL_ROMASK (0x00)
#define ISP_STATS_MPSS_CTRL_WOMASK (0x00)
#define ISP_STATS_MPSS_CTRL_UNUSED_MASK (0xFE)
#define ISP_STATS_MPSS_CTRL_stgrd_OFFSET (0x00)
#define ISP_STATS_MPSS_CTRL_stgrd_WIDTH (1)
#define ISP_STATS_MPSS_CTRL_stgrd_MASK (0x01)
#define ISP_STATS_MPSS_CTRL_stgrd_B_0x0 (0x00)
#define ISP_STATS_MPSS_CTRL_stgrd_B_0x1 (0x01)

/*
* Register : ISP_STATS_MPSS_PARAM_HOR
*/

#define ISP_STATS_MPSS_PARAM_HOR_SIZE (8)
#define ISP_STATS_MPSS_PARAM_HOR_OFFSET (pictorv2_in_ISP_STATS_MPSS_BASE_ADDR + 0x04)
#define ISP_STATS_MPSS_PARAM_HOR_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_PARAM_HOR_BITFIELD_MASK (0x0F)
#define ISP_STATS_MPSS_PARAM_HOR_RWMASK (0x0F)
#define ISP_STATS_MPSS_PARAM_HOR_ROMASK (0x00)
#define ISP_STATS_MPSS_PARAM_HOR_WOMASK (0x00)
#define ISP_STATS_MPSS_PARAM_HOR_UNUSED_MASK (0xF0)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_OFFSET (0x00)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_WIDTH (4)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_MASK (0x0F)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_B_0x0 (0x00)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_B_0x1 (0x01)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_B_0x2 (0x02)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_B_0x3 (0x03)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_B_0x4 (0x04)
#define ISP_STATS_MPSS_PARAM_HOR_iqval_h_B_0x5 (0x05)

/*
* Register : ISP_STATS_MPSS_PARAM_VER
*/

#define ISP_STATS_MPSS_PARAM_VER_SIZE (8)
#define ISP_STATS_MPSS_PARAM_VER_OFFSET (pictorv2_in_ISP_STATS_MPSS_BASE_ADDR + 0x06)
#define ISP_STATS_MPSS_PARAM_VER_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_PARAM_VER_BITFIELD_MASK (0x0F)
#define ISP_STATS_MPSS_PARAM_VER_RWMASK (0x0F)
#define ISP_STATS_MPSS_PARAM_VER_ROMASK (0x00)
#define ISP_STATS_MPSS_PARAM_VER_WOMASK (0x00)
#define ISP_STATS_MPSS_PARAM_VER_UNUSED_MASK (0xF0)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_OFFSET (0x00)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_WIDTH (4)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_MASK (0x0F)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_B_0x0 (0x00)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_B_0x1 (0x01)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_B_0x2 (0x02)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_B_0x3 (0x03)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_B_0x4 (0x04)
#define ISP_STATS_MPSS_PARAM_VER_iqval_v_B_0x5 (0x05)

/*
* Register : ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT
*/

#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_SIZE (8)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_OFFSET (pictorv2_in_ISP_STATS_MPSS_BASE_ADDR + 0x08)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_BITFIELD_MASK (0x7F)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_RWMASK (0x7F)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_ROMASK (0x00)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_WOMASK (0x00)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_UNUSED_MASK (0x80)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_ofirstmin4_offset_cnt_OFFSET (0x00)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_ofirstmin4_offset_cnt_WIDTH (7)
#define ISP_STATS_MPSS_OFIRSTMIN4_OFFSET_CNT_ofirstmin4_offset_cnt_MASK (0x7F)

/*
* Register : ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES
*/

#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_SIZE (16)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_OFFSET (pictorv2_in_ISP_STATS_MPSS_BASE_ADDR + 0x0a)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_RESET_VALUE (0x0000)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_RWMASK (0xFFFF)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_ROMASK (0x0000)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_WOMASK (0x0000)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_UNUSED_MASK (0x0000)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_num_active_subsampled_lines_OFFSET (0x0000)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_num_active_subsampled_lines_WIDTH (16)
#define ISP_STATS_MPSS_NUM_ACTIVE_SS_LINES_num_active_subsampled_lines_MASK (0xFFFF)


/*
* Address Block : ISP_STATS_SNAIL_MWWB
*/

#define pictorv2_in_ISP_STATS_SNAIL_MWWB_BASE_ADDR          (0xc20U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_SNAIL_MWWB_ENABLE
*/

#define ISP_STATS_SNAIL_MWWB_ENABLE_SIZE (8)
#define ISP_STATS_SNAIL_MWWB_ENABLE_OFFSET (pictorv2_in_ISP_STATS_SNAIL_MWWB_BASE_ADDR + 0x00)
#define ISP_STATS_SNAIL_MWWB_ENABLE_RESET_VALUE (0x01)
#define ISP_STATS_SNAIL_MWWB_ENABLE_BITFIELD_MASK (0x11)
#define ISP_STATS_SNAIL_MWWB_ENABLE_RWMASK (0x11)
#define ISP_STATS_SNAIL_MWWB_ENABLE_ROMASK (0x00)
#define ISP_STATS_SNAIL_MWWB_ENABLE_WOMASK (0x00)
#define ISP_STATS_SNAIL_MWWB_ENABLE_UNUSED_MASK (0xEE)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_enable_OFFSET (0x00)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_enable_WIDTH (1)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_enable_MASK (0x01)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_enable_DISABLE (0x00)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_enable_ENABLE (0x01)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_soft_reset_OFFSET (0x04)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_soft_reset_WIDTH (1)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_soft_reset_MASK (0x10)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_soft_reset_SOFT_RESET_DISABLE (0x00)
#define ISP_STATS_SNAIL_MWWB_ENABLE_snailnorec_soft_reset_SOFT_RESET_ENABLE (0x01)


/*
* Address Block : ISP_STATS_MWWB
*/

#define pictorv2_in_ISP_STATS_MWWB_BASE_ADDR                (0xc30U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_MWWB_ENABLE
*/

#define ISP_STATS_MWWB_ENABLE_SIZE (8)
#define ISP_STATS_MWWB_ENABLE_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x00)
#define ISP_STATS_MWWB_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_MWWB_ENABLE_BITFIELD_MASK (0x01)
#define ISP_STATS_MWWB_ENABLE_RWMASK (0x01)
#define ISP_STATS_MWWB_ENABLE_ROMASK (0x00)
#define ISP_STATS_MWWB_ENABLE_WOMASK (0x00)
#define ISP_STATS_MWWB_ENABLE_UNUSED_MASK (0xFE)
#define ISP_STATS_MWWB_ENABLE_enable_OFFSET (0x00)
#define ISP_STATS_MWWB_ENABLE_enable_WIDTH (1)
#define ISP_STATS_MWWB_ENABLE_enable_MASK (0x01)
#define ISP_STATS_MWWB_ENABLE_enable_DISABLE (0x00)
#define ISP_STATS_MWWB_ENABLE_enable_ENABLE (0x01)

/*
* Register : ISP_STATS_MWWB_CTRL_STATUS
*/

#define ISP_STATS_MWWB_CTRL_STATUS_SIZE (8)
#define ISP_STATS_MWWB_CTRL_STATUS_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x02)
#define ISP_STATS_MWWB_CTRL_STATUS_RESET_VALUE (0x00)
#define ISP_STATS_MWWB_CTRL_STATUS_BITFIELD_MASK (0x03)
#define ISP_STATS_MWWB_CTRL_STATUS_RWMASK (0x00)
#define ISP_STATS_MWWB_CTRL_STATUS_ROMASK (0x03)
#define ISP_STATS_MWWB_CTRL_STATUS_WOMASK (0x00)
#define ISP_STATS_MWWB_CTRL_STATUS_UNUSED_MASK (0xFC)
#define ISP_STATS_MWWB_CTRL_STATUS_fresh_stale_stats_OFFSET (0x00)
#define ISP_STATS_MWWB_CTRL_STATUS_fresh_stale_stats_WIDTH (1)
#define ISP_STATS_MWWB_CTRL_STATUS_fresh_stale_stats_MASK (0x01)
#define ISP_STATS_MWWB_CTRL_STATUS_fresh_stale_stats_B_0x0 (0x00)
#define ISP_STATS_MWWB_CTRL_STATUS_fresh_stale_stats_B_0x1 (0x01)
#define ISP_STATS_MWWB_CTRL_STATUS_zones_error_OFFSET (0x01)
#define ISP_STATS_MWWB_CTRL_STATUS_zones_error_WIDTH (1)
#define ISP_STATS_MWWB_CTRL_STATUS_zones_error_MASK (0x02)

/*
* Register : ISP_STATS_MWWB_ZONE_OFFSET_VER
*/

#define ISP_STATS_MWWB_ZONE_OFFSET_VER_SIZE (16)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x04)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_RWMASK (0xFFFF)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_ROMASK (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_WOMASK (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_UNUSED_MASK (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_vert_offset_OFFSET (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_vert_offset_WIDTH (16)
#define ISP_STATS_MWWB_ZONE_OFFSET_VER_vert_offset_MASK (0xFFFF)

/*
* Register : ISP_STATS_MWWB_ZONE_OFFSET_HOR
*/

#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_SIZE (16)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x06)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_RWMASK (0xFFFF)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_ROMASK (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_WOMASK (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_UNUSED_MASK (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_horz_offset_OFFSET (0x0000)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_horz_offset_WIDTH (16)
#define ISP_STATS_MWWB_ZONE_OFFSET_HOR_horz_offset_MASK (0xFFFF)

/*
* Register : ISP_STATS_MWWB_ZONE_SIZE_VER
*/

#define ISP_STATS_MWWB_ZONE_SIZE_VER_SIZE (16)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x08)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_RWMASK (0xFFFF)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_ROMASK (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_WOMASK (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_UNUSED_MASK (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_vert_size_OFFSET (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_vert_size_WIDTH (16)
#define ISP_STATS_MWWB_ZONE_SIZE_VER_vert_size_MASK (0xFFFF)

/*
* Register : ISP_STATS_MWWB_ZONE_SIZE_HOR
*/

#define ISP_STATS_MWWB_ZONE_SIZE_HOR_SIZE (16)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x0a)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_RWMASK (0xFFFF)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_ROMASK (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_WOMASK (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_UNUSED_MASK (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_horz_size_OFFSET (0x0000)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_horz_size_WIDTH (16)
#define ISP_STATS_MWWB_ZONE_SIZE_HOR_horz_size_MASK (0xFFFF)

/*
* Register : ISP_STATS_MWWB_SATUR_THRESH
*/

#define ISP_STATS_MWWB_SATUR_THRESH_SIZE (16)
#define ISP_STATS_MWWB_SATUR_THRESH_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x0c)
#define ISP_STATS_MWWB_SATUR_THRESH_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_SATUR_THRESH_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_MWWB_SATUR_THRESH_RWMASK (0x0FFF)
#define ISP_STATS_MWWB_SATUR_THRESH_ROMASK (0x0000)
#define ISP_STATS_MWWB_SATUR_THRESH_WOMASK (0x0000)
#define ISP_STATS_MWWB_SATUR_THRESH_UNUSED_MASK (0xF000)
#define ISP_STATS_MWWB_SATUR_THRESH_Satur_Thresh_OFFSET (0x0000)
#define ISP_STATS_MWWB_SATUR_THRESH_Satur_Thresh_WIDTH (12)
#define ISP_STATS_MWWB_SATUR_THRESH_Satur_Thresh_MASK (0x0FFF)

/*
* Register : ISP_STATS_MWWB_RED_TILT_GAIN
*/

#define ISP_STATS_MWWB_RED_TILT_GAIN_SIZE (16)
#define ISP_STATS_MWWB_RED_TILT_GAIN_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x0e)
#define ISP_STATS_MWWB_RED_TILT_GAIN_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_RED_TILT_GAIN_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MWWB_RED_TILT_GAIN_RWMASK (0xFFFF)
#define ISP_STATS_MWWB_RED_TILT_GAIN_ROMASK (0x0000)
#define ISP_STATS_MWWB_RED_TILT_GAIN_WOMASK (0x0000)
#define ISP_STATS_MWWB_RED_TILT_GAIN_UNUSED_MASK (0x0000)
#define ISP_STATS_MWWB_RED_TILT_GAIN_iRedTiltGain_OFFSET (0x0000)
#define ISP_STATS_MWWB_RED_TILT_GAIN_iRedTiltGain_WIDTH (16)
#define ISP_STATS_MWWB_RED_TILT_GAIN_iRedTiltGain_MASK (0xFFFF)

/*
* Register : ISP_STATS_MWWB_GREEN1_TILT_GAIN
*/

#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_SIZE (16)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x10)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_RWMASK (0xFFFF)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_ROMASK (0x0000)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_WOMASK (0x0000)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_UNUSED_MASK (0x0000)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_iGrn1TiltGain_OFFSET (0x0000)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_iGrn1TiltGain_WIDTH (16)
#define ISP_STATS_MWWB_GREEN1_TILT_GAIN_iGrn1TiltGain_MASK (0xFFFF)

/*
* Register : ISP_STATS_MWWB_GREEN2_TILT_GAIN
*/

#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_SIZE (16)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x12)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_RWMASK (0xFFFF)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_ROMASK (0x0000)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_WOMASK (0x0000)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_UNUSED_MASK (0x0000)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_iGrn2TiltGain_OFFSET (0x0000)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_iGrn2TiltGain_WIDTH (16)
#define ISP_STATS_MWWB_GREEN2_TILT_GAIN_iGrn2TiltGain_MASK (0xFFFF)

/*
* Register : ISP_STATS_MWWB_BLUE_TILT_GAIN
*/

#define ISP_STATS_MWWB_BLUE_TILT_GAIN_SIZE (16)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x14)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_RESET_VALUE (0x0000)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_RWMASK (0xFFFF)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_ROMASK (0x0000)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_WOMASK (0x0000)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_UNUSED_MASK (0x0000)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_iBluTiltGain_OFFSET (0x0000)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_iBluTiltGain_WIDTH (16)
#define ISP_STATS_MWWB_BLUE_TILT_GAIN_iBluTiltGain_MASK (0xFFFF)

/*
* Register : ISP_STATS_MWWB_RED_ENERGY
*/

#define ISP_STATS_MWWB_RED_ENERGY_SIZE (32)
#define ISP_STATS_MWWB_RED_ENERGY_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x16)
#define ISP_STATS_MWWB_RED_ENERGY_RESET_VALUE (0x00000000)
#define ISP_STATS_MWWB_RED_ENERGY_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_MWWB_RED_ENERGY_RWMASK (0x00000000)
#define ISP_STATS_MWWB_RED_ENERGY_ROMASK (0xFFFFFFFF)
#define ISP_STATS_MWWB_RED_ENERGY_WOMASK (0x00000000)
#define ISP_STATS_MWWB_RED_ENERGY_UNUSED_MASK (0x00000000)
#define ISP_STATS_MWWB_RED_ENERGY_oRedEnergy_OFFSET (0x00000000)
#define ISP_STATS_MWWB_RED_ENERGY_oRedEnergy_WIDTH (32)
#define ISP_STATS_MWWB_RED_ENERGY_oRedEnergy_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_MWWB_GREEN1_ENERGY
*/

#define ISP_STATS_MWWB_GREEN1_ENERGY_SIZE (32)
#define ISP_STATS_MWWB_GREEN1_ENERGY_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x18)
#define ISP_STATS_MWWB_GREEN1_ENERGY_RESET_VALUE (0x00000000)
#define ISP_STATS_MWWB_GREEN1_ENERGY_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_MWWB_GREEN1_ENERGY_RWMASK (0x00000000)
#define ISP_STATS_MWWB_GREEN1_ENERGY_ROMASK (0xFFFFFFFF)
#define ISP_STATS_MWWB_GREEN1_ENERGY_WOMASK (0x00000000)
#define ISP_STATS_MWWB_GREEN1_ENERGY_UNUSED_MASK (0x00000000)
#define ISP_STATS_MWWB_GREEN1_ENERGY_oGrn1Energy_OFFSET (0x00000000)
#define ISP_STATS_MWWB_GREEN1_ENERGY_oGrn1Energy_WIDTH (32)
#define ISP_STATS_MWWB_GREEN1_ENERGY_oGrn1Energy_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_MWWB_GREEN2_ENERGY
*/

#define ISP_STATS_MWWB_GREEN2_ENERGY_SIZE (32)
#define ISP_STATS_MWWB_GREEN2_ENERGY_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x1a)
#define ISP_STATS_MWWB_GREEN2_ENERGY_RESET_VALUE (0x00000000)
#define ISP_STATS_MWWB_GREEN2_ENERGY_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_MWWB_GREEN2_ENERGY_RWMASK (0x00000000)
#define ISP_STATS_MWWB_GREEN2_ENERGY_ROMASK (0xFFFFFFFF)
#define ISP_STATS_MWWB_GREEN2_ENERGY_WOMASK (0x00000000)
#define ISP_STATS_MWWB_GREEN2_ENERGY_UNUSED_MASK (0x00000000)
#define ISP_STATS_MWWB_GREEN2_ENERGY_oGrn2Energy_OFFSET (0x00000000)
#define ISP_STATS_MWWB_GREEN2_ENERGY_oGrn2Energy_WIDTH (32)
#define ISP_STATS_MWWB_GREEN2_ENERGY_oGrn2Energy_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_MWWB_BLUE_ENERGY
*/

#define ISP_STATS_MWWB_BLUE_ENERGY_SIZE (32)
#define ISP_STATS_MWWB_BLUE_ENERGY_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x1c)
#define ISP_STATS_MWWB_BLUE_ENERGY_RESET_VALUE (0x00000000)
#define ISP_STATS_MWWB_BLUE_ENERGY_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_MWWB_BLUE_ENERGY_RWMASK (0x00000000)
#define ISP_STATS_MWWB_BLUE_ENERGY_ROMASK (0xFFFFFFFF)
#define ISP_STATS_MWWB_BLUE_ENERGY_WOMASK (0x00000000)
#define ISP_STATS_MWWB_BLUE_ENERGY_UNUSED_MASK (0x00000000)
#define ISP_STATS_MWWB_BLUE_ENERGY_oBluEnergy_OFFSET (0x00000000)
#define ISP_STATS_MWWB_BLUE_ENERGY_oBluEnergy_WIDTH (32)
#define ISP_STATS_MWWB_BLUE_ENERGY_oBluEnergy_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_MWWB_TOTAL_PIXELS
*/

#define ISP_STATS_MWWB_TOTAL_PIXELS_SIZE (32)
#define ISP_STATS_MWWB_TOTAL_PIXELS_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x1e)
#define ISP_STATS_MWWB_TOTAL_PIXELS_RESET_VALUE (0x00000000)
#define ISP_STATS_MWWB_TOTAL_PIXELS_BITFIELD_MASK (0x00FFFFFF)
#define ISP_STATS_MWWB_TOTAL_PIXELS_RWMASK (0x00000000)
#define ISP_STATS_MWWB_TOTAL_PIXELS_ROMASK (0x00FFFFFF)
#define ISP_STATS_MWWB_TOTAL_PIXELS_WOMASK (0x00000000)
#define ISP_STATS_MWWB_TOTAL_PIXELS_UNUSED_MASK (0xFF000000)
#define ISP_STATS_MWWB_TOTAL_PIXELS_total_pixels_OFFSET (0x00000000)
#define ISP_STATS_MWWB_TOTAL_PIXELS_total_pixels_WIDTH (24)
#define ISP_STATS_MWWB_TOTAL_PIXELS_total_pixels_MASK (0x00FFFFFF)

/*
* Register : ISP_STATS_MWWB_DFV
*/

#define ISP_STATS_MWWB_DFV_SIZE  (8)
#define ISP_STATS_MWWB_DFV_OFFSET (pictorv2_in_ISP_STATS_MWWB_BASE_ADDR + 0x20)
#define ISP_STATS_MWWB_DFV_RESET_VALUE (0x00)
#define ISP_STATS_MWWB_DFV_BITFIELD_MASK (0x03)
#define ISP_STATS_MWWB_DFV_RWMASK (0x03)
#define ISP_STATS_MWWB_DFV_ROMASK (0x00)
#define ISP_STATS_MWWB_DFV_WOMASK (0x00)
#define ISP_STATS_MWWB_DFV_UNUSED_MASK (0xFC)
#define ISP_STATS_MWWB_DFV_dfv_enable_OFFSET (0x00)
#define ISP_STATS_MWWB_DFV_dfv_enable_WIDTH (1)
#define ISP_STATS_MWWB_DFV_dfv_enable_MASK (0x01)
#define ISP_STATS_MWWB_DFV_dfv_enable_DISABLE (0x00)
#define ISP_STATS_MWWB_DFV_dfv_enable_ENABLE (0x01)
#define ISP_STATS_MWWB_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_STATS_MWWB_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_MWWB_DFV_dfv_interrupt_ctrl_MASK (0x02)


/*
* Address Block : ISP_STATS_MUX_HIST
*/

#define pictorv2_in_ISP_STATS_MUX_HIST_BASE_ADDR            (0xc60U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_MUX_HIST_ENABLE
*/

#define ISP_STATS_MUX_HIST_ENABLE_SIZE (8)
#define ISP_STATS_MUX_HIST_ENABLE_OFFSET (pictorv2_in_ISP_STATS_MUX_HIST_BASE_ADDR + 0x00)
#define ISP_STATS_MUX_HIST_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_MUX_HIST_ENABLE_BITFIELD_MASK (0x11)
#define ISP_STATS_MUX_HIST_ENABLE_RWMASK (0x11)
#define ISP_STATS_MUX_HIST_ENABLE_ROMASK (0x00)
#define ISP_STATS_MUX_HIST_ENABLE_WOMASK (0x00)
#define ISP_STATS_MUX_HIST_ENABLE_UNUSED_MASK (0xEE)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_STATS_MUX_HIST_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_STATS_MUX_HIST_SELECT
*/

#define ISP_STATS_MUX_HIST_SELECT_SIZE (8)
#define ISP_STATS_MUX_HIST_SELECT_OFFSET (pictorv2_in_ISP_STATS_MUX_HIST_BASE_ADDR + 0x02)
#define ISP_STATS_MUX_HIST_SELECT_RESET_VALUE (0x00)
#define ISP_STATS_MUX_HIST_SELECT_BITFIELD_MASK (0x11)
#define ISP_STATS_MUX_HIST_SELECT_RWMASK (0x11)
#define ISP_STATS_MUX_HIST_SELECT_ROMASK (0x00)
#define ISP_STATS_MUX_HIST_SELECT_WOMASK (0x00)
#define ISP_STATS_MUX_HIST_SELECT_UNUSED_MASK (0xEE)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_select_WIDTH (1)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_select_MASK (0x01)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_STATS_MUX_HIST_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_STATS_HIST
*/

#define pictorv2_in_ISP_STATS_HIST_BASE_ADDR                (0xc80U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_HIST_ENABLE
*/

#define ISP_STATS_HIST_ENABLE_SIZE (8)
#define ISP_STATS_HIST_ENABLE_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x00)
#define ISP_STATS_HIST_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_HIST_ENABLE_BITFIELD_MASK (0x11)
#define ISP_STATS_HIST_ENABLE_RWMASK (0x11)
#define ISP_STATS_HIST_ENABLE_ROMASK (0x00)
#define ISP_STATS_HIST_ENABLE_WOMASK (0x00)
#define ISP_STATS_HIST_ENABLE_UNUSED_MASK (0xEE)
#define ISP_STATS_HIST_ENABLE_enable_OFFSET (0x00)
#define ISP_STATS_HIST_ENABLE_enable_WIDTH (1)
#define ISP_STATS_HIST_ENABLE_enable_MASK (0x01)
#define ISP_STATS_HIST_ENABLE_enable_DISABLE (0x00)
#define ISP_STATS_HIST_ENABLE_enable_ENABLE (0x01)
#define ISP_STATS_HIST_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_STATS_HIST_ENABLE_soft_reset_WIDTH (1)
#define ISP_STATS_HIST_ENABLE_soft_reset_MASK (0x10)
#define ISP_STATS_HIST_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_STATS_HIST_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_STATS_HIST_CMD
*/

#define ISP_STATS_HIST_CMD_SIZE  (8)
#define ISP_STATS_HIST_CMD_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x02)
#define ISP_STATS_HIST_CMD_RESET_VALUE (0x00)
#define ISP_STATS_HIST_CMD_BITFIELD_MASK (0x03)
#define ISP_STATS_HIST_CMD_RWMASK (0x03)
#define ISP_STATS_HIST_CMD_ROMASK (0x00)
#define ISP_STATS_HIST_CMD_WOMASK (0x00)
#define ISP_STATS_HIST_CMD_UNUSED_MASK (0xFC)
#define ISP_STATS_HIST_CMD_cmd_rwp_OFFSET (0x00)
#define ISP_STATS_HIST_CMD_cmd_rwp_WIDTH (2)
#define ISP_STATS_HIST_CMD_cmd_rwp_MASK (0x03)
#define ISP_STATS_HIST_CMD_cmd_rwp_IDLE (0x00)
#define ISP_STATS_HIST_CMD_cmd_rwp_GRAB (0x01)
#define ISP_STATS_HIST_CMD_cmd_rwp_STILL (0x02)

/*
* Register : ISP_STATS_HIST_X_SIZE
*/

#define ISP_STATS_HIST_X_SIZE_SIZE (16)
#define ISP_STATS_HIST_X_SIZE_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x04)
#define ISP_STATS_HIST_X_SIZE_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_X_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_HIST_X_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_HIST_X_SIZE_ROMASK (0x0000)
#define ISP_STATS_HIST_X_SIZE_WOMASK (0x0000)
#define ISP_STATS_HIST_X_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_HIST_X_SIZE_x_size_OFFSET (0x0000)
#define ISP_STATS_HIST_X_SIZE_x_size_WIDTH (13)
#define ISP_STATS_HIST_X_SIZE_x_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_HIST_Y_SIZE
*/

#define ISP_STATS_HIST_Y_SIZE_SIZE (16)
#define ISP_STATS_HIST_Y_SIZE_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x06)
#define ISP_STATS_HIST_Y_SIZE_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_Y_SIZE_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_HIST_Y_SIZE_RWMASK (0x1FFF)
#define ISP_STATS_HIST_Y_SIZE_ROMASK (0x0000)
#define ISP_STATS_HIST_Y_SIZE_WOMASK (0x0000)
#define ISP_STATS_HIST_Y_SIZE_UNUSED_MASK (0xE000)
#define ISP_STATS_HIST_Y_SIZE_y_size_OFFSET (0x0000)
#define ISP_STATS_HIST_Y_SIZE_y_size_WIDTH (13)
#define ISP_STATS_HIST_Y_SIZE_y_size_MASK (0x1FFF)

/*
* Register : ISP_STATS_HIST_X_OFFSET
*/

#define ISP_STATS_HIST_X_OFFSET_SIZE (16)
#define ISP_STATS_HIST_X_OFFSET_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x08)
#define ISP_STATS_HIST_X_OFFSET_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_X_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_HIST_X_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_HIST_X_OFFSET_ROMASK (0x0000)
#define ISP_STATS_HIST_X_OFFSET_WOMASK (0x0000)
#define ISP_STATS_HIST_X_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_HIST_X_OFFSET_x_offset_OFFSET (0x0000)
#define ISP_STATS_HIST_X_OFFSET_x_offset_WIDTH (13)
#define ISP_STATS_HIST_X_OFFSET_x_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_HIST_Y_OFFSET
*/

#define ISP_STATS_HIST_Y_OFFSET_SIZE (16)
#define ISP_STATS_HIST_Y_OFFSET_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x0a)
#define ISP_STATS_HIST_Y_OFFSET_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_Y_OFFSET_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_HIST_Y_OFFSET_RWMASK (0x1FFF)
#define ISP_STATS_HIST_Y_OFFSET_ROMASK (0x0000)
#define ISP_STATS_HIST_Y_OFFSET_WOMASK (0x0000)
#define ISP_STATS_HIST_Y_OFFSET_UNUSED_MASK (0xE000)
#define ISP_STATS_HIST_Y_OFFSET_y_offset_OFFSET (0x0000)
#define ISP_STATS_HIST_Y_OFFSET_y_offset_WIDTH (13)
#define ISP_STATS_HIST_Y_OFFSET_y_offset_MASK (0x1FFF)

/*
* Register : ISP_STATS_HIST_PIXELIN_SHIFT
*/

#define ISP_STATS_HIST_PIXELIN_SHIFT_SIZE (8)
#define ISP_STATS_HIST_PIXELIN_SHIFT_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x0c)
#define ISP_STATS_HIST_PIXELIN_SHIFT_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_PIXELIN_SHIFT_BITFIELD_MASK (0x07)
#define ISP_STATS_HIST_PIXELIN_SHIFT_RWMASK (0x07)
#define ISP_STATS_HIST_PIXELIN_SHIFT_ROMASK (0x00)
#define ISP_STATS_HIST_PIXELIN_SHIFT_WOMASK (0x00)
#define ISP_STATS_HIST_PIXELIN_SHIFT_UNUSED_MASK (0xF8)
#define ISP_STATS_HIST_PIXELIN_SHIFT_pixel_shift_OFFSET (0x00)
#define ISP_STATS_HIST_PIXELIN_SHIFT_pixel_shift_WIDTH (3)
#define ISP_STATS_HIST_PIXELIN_SHIFT_pixel_shift_MASK (0x07)

/*
* Register : ISP_STATS_HIST_DARKEST_G
*/

#define ISP_STATS_HIST_DARKEST_G_SIZE (16)
#define ISP_STATS_HIST_DARKEST_G_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x0e)
#define ISP_STATS_HIST_DARKEST_G_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_DARKEST_G_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_DARKEST_G_RWMASK (0x0000)
#define ISP_STATS_HIST_DARKEST_G_ROMASK (0x0FFF)
#define ISP_STATS_HIST_DARKEST_G_WOMASK (0x0000)
#define ISP_STATS_HIST_DARKEST_G_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_DARKEST_G_g_dark_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_DARKEST_G_g_dark_bin_WIDTH (12)
#define ISP_STATS_HIST_DARKEST_G_g_dark_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_BRIGHTEST_G
*/

#define ISP_STATS_HIST_BRIGHTEST_G_SIZE (16)
#define ISP_STATS_HIST_BRIGHTEST_G_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x10)
#define ISP_STATS_HIST_BRIGHTEST_G_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_G_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_BRIGHTEST_G_RWMASK (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_G_ROMASK (0x0FFF)
#define ISP_STATS_HIST_BRIGHTEST_G_WOMASK (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_G_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_BRIGHTEST_G_g_bright_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_G_g_bright_bin_WIDTH (12)
#define ISP_STATS_HIST_BRIGHTEST_G_g_bright_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_HIGHEST_G
*/

#define ISP_STATS_HIST_HIGHEST_G_SIZE (16)
#define ISP_STATS_HIST_HIGHEST_G_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x12)
#define ISP_STATS_HIST_HIGHEST_G_RESET_VALUE (0x00)
#define ISP_STATS_HIST_HIGHEST_G_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_HIGHEST_G_RWMASK (0x0000)
#define ISP_STATS_HIST_HIGHEST_G_ROMASK (0x0FFF)
#define ISP_STATS_HIST_HIGHEST_G_WOMASK (0x0000)
#define ISP_STATS_HIST_HIGHEST_G_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_HIGHEST_G_g_highest_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_HIGHEST_G_g_highest_bin_WIDTH (12)
#define ISP_STATS_HIST_HIGHEST_G_g_highest_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_DARKEST_R
*/

#define ISP_STATS_HIST_DARKEST_R_SIZE (16)
#define ISP_STATS_HIST_DARKEST_R_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x14)
#define ISP_STATS_HIST_DARKEST_R_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_DARKEST_R_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_DARKEST_R_RWMASK (0x0000)
#define ISP_STATS_HIST_DARKEST_R_ROMASK (0x0FFF)
#define ISP_STATS_HIST_DARKEST_R_WOMASK (0x0000)
#define ISP_STATS_HIST_DARKEST_R_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_DARKEST_R_red_dark_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_DARKEST_R_red_dark_bin_WIDTH (12)
#define ISP_STATS_HIST_DARKEST_R_red_dark_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_BRIGHTEST_R
*/

#define ISP_STATS_HIST_BRIGHTEST_R_SIZE (16)
#define ISP_STATS_HIST_BRIGHTEST_R_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x16)
#define ISP_STATS_HIST_BRIGHTEST_R_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_R_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_BRIGHTEST_R_RWMASK (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_R_ROMASK (0x0FFF)
#define ISP_STATS_HIST_BRIGHTEST_R_WOMASK (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_R_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_BRIGHTEST_R_red_bright_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_R_red_bright_bin_WIDTH (12)
#define ISP_STATS_HIST_BRIGHTEST_R_red_bright_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_HIGHEST_R
*/

#define ISP_STATS_HIST_HIGHEST_R_SIZE (16)
#define ISP_STATS_HIST_HIGHEST_R_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x18)
#define ISP_STATS_HIST_HIGHEST_R_RESET_VALUE (0x00)
#define ISP_STATS_HIST_HIGHEST_R_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_HIGHEST_R_RWMASK (0x0000)
#define ISP_STATS_HIST_HIGHEST_R_ROMASK (0x0FFF)
#define ISP_STATS_HIST_HIGHEST_R_WOMASK (0x0000)
#define ISP_STATS_HIST_HIGHEST_R_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_HIGHEST_R_red_highest_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_HIGHEST_R_red_highest_bin_WIDTH (12)
#define ISP_STATS_HIST_HIGHEST_R_red_highest_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_DARKEST_B
*/

#define ISP_STATS_HIST_DARKEST_B_SIZE (16)
#define ISP_STATS_HIST_DARKEST_B_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x1a)
#define ISP_STATS_HIST_DARKEST_B_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_DARKEST_B_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_DARKEST_B_RWMASK (0x0000)
#define ISP_STATS_HIST_DARKEST_B_ROMASK (0x0FFF)
#define ISP_STATS_HIST_DARKEST_B_WOMASK (0x0000)
#define ISP_STATS_HIST_DARKEST_B_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_DARKEST_B_blue_dark_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_DARKEST_B_blue_dark_bin_WIDTH (12)
#define ISP_STATS_HIST_DARKEST_B_blue_dark_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_BRIGHTEST_B
*/

#define ISP_STATS_HIST_BRIGHTEST_B_SIZE (16)
#define ISP_STATS_HIST_BRIGHTEST_B_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x1c)
#define ISP_STATS_HIST_BRIGHTEST_B_RESET_VALUE (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_B_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_BRIGHTEST_B_RWMASK (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_B_ROMASK (0x0FFF)
#define ISP_STATS_HIST_BRIGHTEST_B_WOMASK (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_B_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_BRIGHTEST_B_blue_bright_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_BRIGHTEST_B_blue_bright_bin_WIDTH (12)
#define ISP_STATS_HIST_BRIGHTEST_B_blue_bright_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_HIGHEST_B
*/

#define ISP_STATS_HIST_HIGHEST_B_SIZE (16)
#define ISP_STATS_HIST_HIGHEST_B_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x1e)
#define ISP_STATS_HIST_HIGHEST_B_RESET_VALUE (0x00)
#define ISP_STATS_HIST_HIGHEST_B_BITFIELD_MASK (0x0FFF)
#define ISP_STATS_HIST_HIGHEST_B_RWMASK (0x0000)
#define ISP_STATS_HIST_HIGHEST_B_ROMASK (0x0FFF)
#define ISP_STATS_HIST_HIGHEST_B_WOMASK (0x0000)
#define ISP_STATS_HIST_HIGHEST_B_UNUSED_MASK (0xF000)
#define ISP_STATS_HIST_HIGHEST_B_blue_highest_bin_OFFSET (0x0000)
#define ISP_STATS_HIST_HIGHEST_B_blue_highest_bin_WIDTH (12)
#define ISP_STATS_HIST_HIGHEST_B_blue_highest_bin_MASK (0x0FFF)

/*
* Register : ISP_STATS_HIST_STATUS
*/

#define ISP_STATS_HIST_STATUS_SIZE (8)
#define ISP_STATS_HIST_STATUS_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x20)
#define ISP_STATS_HIST_STATUS_RESET_VALUE (0x00)
#define ISP_STATS_HIST_STATUS_BITFIELD_MASK (0x07)
#define ISP_STATS_HIST_STATUS_RWMASK (0x00)
#define ISP_STATS_HIST_STATUS_ROMASK (0x07)
#define ISP_STATS_HIST_STATUS_WOMASK (0x00)
#define ISP_STATS_HIST_STATUS_UNUSED_MASK (0xF8)
#define ISP_STATS_HIST_STATUS_status_OFFSET (0x00)
#define ISP_STATS_HIST_STATUS_status_WIDTH (3)
#define ISP_STATS_HIST_STATUS_status_MASK (0x07)
#define ISP_STATS_HIST_STATUS_status_IDLE (0x00)
#define ISP_STATS_HIST_STATUS_status_READY (0x01)
#define ISP_STATS_HIST_STATUS_status_ON_PROGRESS (0x02)
#define ISP_STATS_HIST_STATUS_status_COMPLETED (0x03)

/*
* Register : ISP_STATS_HIST_DFV
*/

#define ISP_STATS_HIST_DFV_SIZE  (8)
#define ISP_STATS_HIST_DFV_OFFSET (pictorv2_in_ISP_STATS_HIST_BASE_ADDR + 0x22)
#define ISP_STATS_HIST_DFV_RESET_VALUE (0x00)
#define ISP_STATS_HIST_DFV_BITFIELD_MASK (0x03)
#define ISP_STATS_HIST_DFV_RWMASK (0x03)
#define ISP_STATS_HIST_DFV_ROMASK (0x00)
#define ISP_STATS_HIST_DFV_WOMASK (0x00)
#define ISP_STATS_HIST_DFV_UNUSED_MASK (0xFC)
#define ISP_STATS_HIST_DFV_dfv_enable_OFFSET (0x00)
#define ISP_STATS_HIST_DFV_dfv_enable_WIDTH (1)
#define ISP_STATS_HIST_DFV_dfv_enable_MASK (0x01)
#define ISP_STATS_HIST_DFV_dfv_enable_DISABLE (0x00)
#define ISP_STATS_HIST_DFV_dfv_enable_ENABLE (0x01)
#define ISP_STATS_HIST_DFV_dfv_interrupt_control_OFFSET (0x01)
#define ISP_STATS_HIST_DFV_dfv_interrupt_control_WIDTH (1)
#define ISP_STATS_HIST_DFV_dfv_interrupt_control_MASK (0x02)


/*
* Address Block : ISP_STATS_MUX_GLACE
*/

#define pictorv2_in_ISP_STATS_MUX_GLACE_BASE_ADDR           (0xcb0U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_MUX_GLACE_ENABLE
*/

#define ISP_STATS_MUX_GLACE_ENABLE_SIZE (8)
#define ISP_STATS_MUX_GLACE_ENABLE_OFFSET (pictorv2_in_ISP_STATS_MUX_GLACE_BASE_ADDR + 0x00)
#define ISP_STATS_MUX_GLACE_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_MUX_GLACE_ENABLE_BITFIELD_MASK (0x11)
#define ISP_STATS_MUX_GLACE_ENABLE_RWMASK (0x11)
#define ISP_STATS_MUX_GLACE_ENABLE_ROMASK (0x00)
#define ISP_STATS_MUX_GLACE_ENABLE_WOMASK (0x00)
#define ISP_STATS_MUX_GLACE_ENABLE_UNUSED_MASK (0xEE)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_enable_OFFSET (0x00)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_enable_WIDTH (1)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_enable_MASK (0x01)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_enable_DISABLE (0x00)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_enable_ENABLE (0x01)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_soft_reset_OFFSET (0x04)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_soft_reset_WIDTH (1)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_soft_reset_MASK (0x10)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_soft_reset_B_0x0 (0x00)
#define ISP_STATS_MUX_GLACE_ENABLE_mux2to1_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_STATS_MUX_GLACE_SELECT
*/

#define ISP_STATS_MUX_GLACE_SELECT_SIZE (8)
#define ISP_STATS_MUX_GLACE_SELECT_OFFSET (pictorv2_in_ISP_STATS_MUX_GLACE_BASE_ADDR + 0x02)
#define ISP_STATS_MUX_GLACE_SELECT_RESET_VALUE (0x00)
#define ISP_STATS_MUX_GLACE_SELECT_BITFIELD_MASK (0x11)
#define ISP_STATS_MUX_GLACE_SELECT_RWMASK (0x11)
#define ISP_STATS_MUX_GLACE_SELECT_ROMASK (0x00)
#define ISP_STATS_MUX_GLACE_SELECT_WOMASK (0x00)
#define ISP_STATS_MUX_GLACE_SELECT_UNUSED_MASK (0xEE)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_select_OFFSET (0x00)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_select_WIDTH (1)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_select_MASK (0x01)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_select_IDP0 (0x00)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_select_IDP1 (0x01)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_shadow_en_OFFSET (0x04)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_shadow_en_WIDTH (1)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_shadow_en_MASK (0x10)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_shadow_en_B_0x0 (0x00)
#define ISP_STATS_MUX_GLACE_SELECT_mux2to1_shadow_en_B_0x1 (0x01)


/*
* Address Block : ISP_STATS_GLACE
*/

#define pictorv2_in_ISP_STATS_GLACE_BASE_ADDR               (0xd00U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_GLACE_ACC_ENABLE
*/

#define ISP_STATS_GLACE_ACC_ENABLE_SIZE (8)
#define ISP_STATS_GLACE_ACC_ENABLE_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x00)
#define ISP_STATS_GLACE_ACC_ENABLE_RESET_VALUE (0x0)
#define ISP_STATS_GLACE_ACC_ENABLE_BITFIELD_MASK (0x11)
#define ISP_STATS_GLACE_ACC_ENABLE_RWMASK (0x11)
#define ISP_STATS_GLACE_ACC_ENABLE_ROMASK (0x00)
#define ISP_STATS_GLACE_ACC_ENABLE_WOMASK (0x00)
#define ISP_STATS_GLACE_ACC_ENABLE_UNUSED_MASK (0xEE)
#define ISP_STATS_GLACE_ACC_ENABLE_GLACE_ACC_ENABLE_OFFSET (0x00)
#define ISP_STATS_GLACE_ACC_ENABLE_GLACE_ACC_ENABLE_WIDTH (1)
#define ISP_STATS_GLACE_ACC_ENABLE_GLACE_ACC_ENABLE_MASK (0x01)
#define ISP_STATS_GLACE_ACC_ENABLE_GLACE_ACC_ENABLE_DISABLE (0x00)
#define ISP_STATS_GLACE_ACC_ENABLE_GLACE_ACC_ENABLE_ENABLE (0x01)
#define ISP_STATS_GLACE_ACC_ENABLE_SOFT_RESET_OFFSET (0x04)
#define ISP_STATS_GLACE_ACC_ENABLE_SOFT_RESET_WIDTH (1)
#define ISP_STATS_GLACE_ACC_ENABLE_SOFT_RESET_MASK (0x10)
#define ISP_STATS_GLACE_ACC_ENABLE_SOFT_RESET_B_0x0 (0x00)
#define ISP_STATS_GLACE_ACC_ENABLE_SOFT_RESET_B_0x1 (0x01)

/*
* Register : ISP_STATS_GLACE_DFV
*/

#define ISP_STATS_GLACE_DFV_SIZE (8)
#define ISP_STATS_GLACE_DFV_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x02)
#define ISP_STATS_GLACE_DFV_RESET_VALUE (0x0)
#define ISP_STATS_GLACE_DFV_BITFIELD_MASK (0x03)
#define ISP_STATS_GLACE_DFV_RWMASK (0x03)
#define ISP_STATS_GLACE_DFV_ROMASK (0x00)
#define ISP_STATS_GLACE_DFV_WOMASK (0x00)
#define ISP_STATS_GLACE_DFV_UNUSED_MASK (0xFC)
#define ISP_STATS_GLACE_DFV_GLACE_DFV_ENABLE_OFFSET (0x00)
#define ISP_STATS_GLACE_DFV_GLACE_DFV_ENABLE_WIDTH (1)
#define ISP_STATS_GLACE_DFV_GLACE_DFV_ENABLE_MASK (0x01)
#define ISP_STATS_GLACE_DFV_GLACE_DFV_ENABLE_DISABLE (0x00)
#define ISP_STATS_GLACE_DFV_GLACE_DFV_ENABLE_ENABLE (0x01)
#define ISP_STATS_GLACE_DFV_GLACE_DFV_INTERRUPT_ENABLE_OFFSET (0x01)
#define ISP_STATS_GLACE_DFV_GLACE_DFV_INTERRUPT_ENABLE_WIDTH (1)
#define ISP_STATS_GLACE_DFV_GLACE_DFV_INTERRUPT_ENABLE_MASK (0x02)

/*
* Register : ISP_STATS_GLACE_H_ROI_START
*/

#define ISP_STATS_GLACE_H_ROI_START_SIZE (16)
#define ISP_STATS_GLACE_H_ROI_START_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x04)
#define ISP_STATS_GLACE_H_ROI_START_RESET_VALUE (0x0)
#define ISP_STATS_GLACE_H_ROI_START_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_GLACE_H_ROI_START_RWMASK (0x1FFF)
#define ISP_STATS_GLACE_H_ROI_START_ROMASK (0x0000)
#define ISP_STATS_GLACE_H_ROI_START_WOMASK (0x0000)
#define ISP_STATS_GLACE_H_ROI_START_UNUSED_MASK (0xE000)
#define ISP_STATS_GLACE_H_ROI_START_GLACE_H_ROI_START_OFFSET (0x0000)
#define ISP_STATS_GLACE_H_ROI_START_GLACE_H_ROI_START_WIDTH (13)
#define ISP_STATS_GLACE_H_ROI_START_GLACE_H_ROI_START_MASK (0x1FFF)

/*
* Register : ISP_STATS_GLACE_V_ROI_START
*/

#define ISP_STATS_GLACE_V_ROI_START_SIZE (16)
#define ISP_STATS_GLACE_V_ROI_START_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x06)
#define ISP_STATS_GLACE_V_ROI_START_RESET_VALUE (0x0)
#define ISP_STATS_GLACE_V_ROI_START_BITFIELD_MASK (0x1FFF)
#define ISP_STATS_GLACE_V_ROI_START_RWMASK (0x1FFF)
#define ISP_STATS_GLACE_V_ROI_START_ROMASK (0x0000)
#define ISP_STATS_GLACE_V_ROI_START_WOMASK (0x0000)
#define ISP_STATS_GLACE_V_ROI_START_UNUSED_MASK (0xE000)
#define ISP_STATS_GLACE_V_ROI_START_GLACE_V_ROI_START_OFFSET (0x0000)
#define ISP_STATS_GLACE_V_ROI_START_GLACE_V_ROI_START_WIDTH (13)
#define ISP_STATS_GLACE_V_ROI_START_GLACE_V_ROI_START_MASK (0x1FFF)

/*
* Register : ISP_STATS_GLACE_H_BLK_SIZE
*/

#define ISP_STATS_GLACE_H_BLK_SIZE_SIZE (8)
#define ISP_STATS_GLACE_H_BLK_SIZE_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x08)
#define ISP_STATS_GLACE_H_BLK_SIZE_RESET_VALUE (0x3A)
#define ISP_STATS_GLACE_H_BLK_SIZE_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_H_BLK_SIZE_RWMASK (0xFF)
#define ISP_STATS_GLACE_H_BLK_SIZE_ROMASK (0x00)
#define ISP_STATS_GLACE_H_BLK_SIZE_WOMASK (0x00)
#define ISP_STATS_GLACE_H_BLK_SIZE_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_H_BLK_SIZE_GLACE_H_BLK_SIZE_OFFSET (0x00)
#define ISP_STATS_GLACE_H_BLK_SIZE_GLACE_H_BLK_SIZE_WIDTH (8)
#define ISP_STATS_GLACE_H_BLK_SIZE_GLACE_H_BLK_SIZE_MASK (0xFF)

/*
* Register : ISP_STATS_GLACE_V_BLK_SIZE
*/

#define ISP_STATS_GLACE_V_BLK_SIZE_SIZE (8)
#define ISP_STATS_GLACE_V_BLK_SIZE_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x0a)
#define ISP_STATS_GLACE_V_BLK_SIZE_RESET_VALUE (0x3A)
#define ISP_STATS_GLACE_V_BLK_SIZE_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_V_BLK_SIZE_RWMASK (0xFF)
#define ISP_STATS_GLACE_V_BLK_SIZE_ROMASK (0x00)
#define ISP_STATS_GLACE_V_BLK_SIZE_WOMASK (0x00)
#define ISP_STATS_GLACE_V_BLK_SIZE_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_V_BLK_SIZE_GLACE_V_BLK_SIZE_OFFSET (0x00)
#define ISP_STATS_GLACE_V_BLK_SIZE_GLACE_V_BLK_SIZE_WIDTH (8)
#define ISP_STATS_GLACE_V_BLK_SIZE_GLACE_V_BLK_SIZE_MASK (0xFF)

/*
* Register : ISP_STATS_GLACE_H_GRID_SIZE
*/

#define ISP_STATS_GLACE_H_GRID_SIZE_SIZE (8)
#define ISP_STATS_GLACE_H_GRID_SIZE_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x0c)
#define ISP_STATS_GLACE_H_GRID_SIZE_RESET_VALUE (0x48)
#define ISP_STATS_GLACE_H_GRID_SIZE_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_H_GRID_SIZE_RWMASK (0xFF)
#define ISP_STATS_GLACE_H_GRID_SIZE_ROMASK (0x00)
#define ISP_STATS_GLACE_H_GRID_SIZE_WOMASK (0x00)
#define ISP_STATS_GLACE_H_GRID_SIZE_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_H_GRID_SIZE_GLACE_H_GRID_SIZE_OFFSET (0x00)
#define ISP_STATS_GLACE_H_GRID_SIZE_GLACE_H_GRID_SIZE_WIDTH (8)
#define ISP_STATS_GLACE_H_GRID_SIZE_GLACE_H_GRID_SIZE_MASK (0xFF)

/*
* Register : ISP_STATS_GLACE_V_GRID_SIZE
*/

#define ISP_STATS_GLACE_V_GRID_SIZE_SIZE (8)
#define ISP_STATS_GLACE_V_GRID_SIZE_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x0e)
#define ISP_STATS_GLACE_V_GRID_SIZE_RESET_VALUE (0x48)
#define ISP_STATS_GLACE_V_GRID_SIZE_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_V_GRID_SIZE_RWMASK (0xFF)
#define ISP_STATS_GLACE_V_GRID_SIZE_ROMASK (0x00)
#define ISP_STATS_GLACE_V_GRID_SIZE_WOMASK (0x00)
#define ISP_STATS_GLACE_V_GRID_SIZE_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_V_GRID_SIZE_GLACE_V_GRID_SIZE_OFFSET (0x00)
#define ISP_STATS_GLACE_V_GRID_SIZE_GLACE_V_GRID_SIZE_WIDTH (8)
#define ISP_STATS_GLACE_V_GRID_SIZE_GLACE_V_GRID_SIZE_MASK (0xFF)

/*
* Register : ISP_STATS_GLACE_SAT_LEVEL_R
*/

#define ISP_STATS_GLACE_SAT_LEVEL_R_SIZE (8)
#define ISP_STATS_GLACE_SAT_LEVEL_R_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x10)
#define ISP_STATS_GLACE_SAT_LEVEL_R_RESET_VALUE (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_R_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_R_RWMASK (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_R_ROMASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_R_WOMASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_R_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_R_GLACE_SAT_LEVEL_R_OFFSET (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_R_GLACE_SAT_LEVEL_R_WIDTH (8)
#define ISP_STATS_GLACE_SAT_LEVEL_R_GLACE_SAT_LEVEL_R_MASK (0xFF)

/*
* Register : ISP_STATS_GLACE_SAT_LEVEL_G
*/

#define ISP_STATS_GLACE_SAT_LEVEL_G_SIZE (8)
#define ISP_STATS_GLACE_SAT_LEVEL_G_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x12)
#define ISP_STATS_GLACE_SAT_LEVEL_G_RESET_VALUE (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_G_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_G_RWMASK (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_G_ROMASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_G_WOMASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_G_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_G_GLACE_SAT_LEVEL_G_OFFSET (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_G_GLACE_SAT_LEVEL_G_WIDTH (8)
#define ISP_STATS_GLACE_SAT_LEVEL_G_GLACE_SAT_LEVEL_G_MASK (0xFF)

/*
* Register : ISP_STATS_GLACE_SAT_LEVEL_B
*/

#define ISP_STATS_GLACE_SAT_LEVEL_B_SIZE (8)
#define ISP_STATS_GLACE_SAT_LEVEL_B_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x14)
#define ISP_STATS_GLACE_SAT_LEVEL_B_RESET_VALUE (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_B_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_B_RWMASK (0xFF)
#define ISP_STATS_GLACE_SAT_LEVEL_B_ROMASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_B_WOMASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_B_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_B_GLACE_SAT_LEVEL_B_OFFSET (0x00)
#define ISP_STATS_GLACE_SAT_LEVEL_B_GLACE_SAT_LEVEL_B_WIDTH (8)
#define ISP_STATS_GLACE_SAT_LEVEL_B_GLACE_SAT_LEVEL_B_MASK (0xFF)

/*
* Register : ISP_STATS_GLACE_AV_MULT
*/

#define ISP_STATS_GLACE_AV_MULT_SIZE (32)
#define ISP_STATS_GLACE_AV_MULT_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x16)
#define ISP_STATS_GLACE_AV_MULT_RESET_VALUE (0x1)
#define ISP_STATS_GLACE_AV_MULT_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_GLACE_AV_MULT_RWMASK (0xFFFFFFFF)
#define ISP_STATS_GLACE_AV_MULT_ROMASK (0x00000000)
#define ISP_STATS_GLACE_AV_MULT_WOMASK (0x00000000)
#define ISP_STATS_GLACE_AV_MULT_UNUSED_MASK (0x00000000)
#define ISP_STATS_GLACE_AV_MULT_GLACE_AV_MULT_OFFSET (0x00000000)
#define ISP_STATS_GLACE_AV_MULT_GLACE_AV_MULT_WIDTH (32)
#define ISP_STATS_GLACE_AV_MULT_GLACE_AV_MULT_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_GLACE_AV_SHIFT
*/

#define ISP_STATS_GLACE_AV_SHIFT_SIZE (32)
#define ISP_STATS_GLACE_AV_SHIFT_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x18)
#define ISP_STATS_GLACE_AV_SHIFT_RESET_VALUE (0xB)
#define ISP_STATS_GLACE_AV_SHIFT_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_GLACE_AV_SHIFT_RWMASK (0xFFFFFFFF)
#define ISP_STATS_GLACE_AV_SHIFT_ROMASK (0x00000000)
#define ISP_STATS_GLACE_AV_SHIFT_WOMASK (0x00000000)
#define ISP_STATS_GLACE_AV_SHIFT_UNUSED_MASK (0x00000000)
#define ISP_STATS_GLACE_AV_SHIFT_GLACE_AV_SHIFT_OFFSET (0x00000000)
#define ISP_STATS_GLACE_AV_SHIFT_GLACE_AV_SHIFT_WIDTH (32)
#define ISP_STATS_GLACE_AV_SHIFT_GLACE_AV_SHIFT_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_GLACE_AV_MULT_WIDTH
*/

#define ISP_STATS_GLACE_AV_MULT_WIDTH_SIZE (8)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x1a)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_RESET_VALUE (0x0)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_RWMASK (0x00)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_ROMASK (0xFF)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_WOMASK (0x00)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_GLACE_AV_MULT_WIDTH_OFFSET (0x00)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_GLACE_AV_MULT_WIDTH_WIDTH (8)
#define ISP_STATS_GLACE_AV_MULT_WIDTH_GLACE_AV_MULT_WIDTH_MASK (0xFF)

/*
* Register : ISP_STATS_GLACE_AV_SHIFT_WIDTH
*/

#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_SIZE (8)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_OFFSET (pictorv2_in_ISP_STATS_GLACE_BASE_ADDR + 0x1c)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_RESET_VALUE (0x0)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_BITFIELD_MASK (0xFF)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_RWMASK (0x00)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_ROMASK (0xFF)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_WOMASK (0x00)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_UNUSED_MASK (0x00)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_GLACE_AV_SHIFT_WIDTH_OFFSET (0x00)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_GLACE_AV_SHIFT_WIDTH_WIDTH (8)
#define ISP_STATS_GLACE_AV_SHIFT_WIDTH_GLACE_AV_SHIFT_WIDTH_MASK (0xFF)


/*
* Address Block : ISP_STATS_MPSS_GLACE
*/

#define pictorv2_in_ISP_STATS_MPSS_GLACE_BASE_ADDR          (0xd60U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_MPSS_GLACE_ENABLE
*/

#define ISP_STATS_MPSS_GLACE_ENABLE_SIZE (8)
#define ISP_STATS_MPSS_GLACE_ENABLE_OFFSET (pictorv2_in_ISP_STATS_MPSS_GLACE_BASE_ADDR + 0x00)
#define ISP_STATS_MPSS_GLACE_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_GLACE_ENABLE_BITFIELD_MASK (0x01)
#define ISP_STATS_MPSS_GLACE_ENABLE_RWMASK (0x01)
#define ISP_STATS_MPSS_GLACE_ENABLE_ROMASK (0x00)
#define ISP_STATS_MPSS_GLACE_ENABLE_WOMASK (0x00)
#define ISP_STATS_MPSS_GLACE_ENABLE_UNUSED_MASK (0xFE)
#define ISP_STATS_MPSS_GLACE_ENABLE_enable_OFFSET (0x00)
#define ISP_STATS_MPSS_GLACE_ENABLE_enable_WIDTH (1)
#define ISP_STATS_MPSS_GLACE_ENABLE_enable_MASK (0x01)
#define ISP_STATS_MPSS_GLACE_ENABLE_enable_B_0x0 (0x00)
#define ISP_STATS_MPSS_GLACE_ENABLE_enable_B_0x1 (0x01)

/*
* Register : ISP_STATS_MPSS_GLACE_CTRL
*/

#define ISP_STATS_MPSS_GLACE_CTRL_SIZE (8)
#define ISP_STATS_MPSS_GLACE_CTRL_OFFSET (pictorv2_in_ISP_STATS_MPSS_GLACE_BASE_ADDR + 0x02)
#define ISP_STATS_MPSS_GLACE_CTRL_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_GLACE_CTRL_BITFIELD_MASK (0x01)
#define ISP_STATS_MPSS_GLACE_CTRL_RWMASK (0x01)
#define ISP_STATS_MPSS_GLACE_CTRL_ROMASK (0x00)
#define ISP_STATS_MPSS_GLACE_CTRL_WOMASK (0x00)
#define ISP_STATS_MPSS_GLACE_CTRL_UNUSED_MASK (0xFE)
#define ISP_STATS_MPSS_GLACE_CTRL_stgrd_OFFSET (0x00)
#define ISP_STATS_MPSS_GLACE_CTRL_stgrd_WIDTH (1)
#define ISP_STATS_MPSS_GLACE_CTRL_stgrd_MASK (0x01)
#define ISP_STATS_MPSS_GLACE_CTRL_stgrd_B_0x0 (0x00)
#define ISP_STATS_MPSS_GLACE_CTRL_stgrd_B_0x1 (0x01)

/*
* Register : ISP_STATS_MPSS_GLACE_PARAM_HOR
*/

#define ISP_STATS_MPSS_GLACE_PARAM_HOR_SIZE (8)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_OFFSET (pictorv2_in_ISP_STATS_MPSS_GLACE_BASE_ADDR + 0x04)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_BITFIELD_MASK (0x0F)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_RWMASK (0x0F)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_ROMASK (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_WOMASK (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_UNUSED_MASK (0xF0)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_OFFSET (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_WIDTH (4)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_MASK (0x0F)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_B_0x0 (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_B_0x1 (0x01)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_B_0x2 (0x02)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_B_0x3 (0x03)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_B_0x4 (0x04)
#define ISP_STATS_MPSS_GLACE_PARAM_HOR_iqval_h_B_0x5 (0x05)

/*
* Register : ISP_STATS_MPSS_GLACE_PARAM_VER
*/

#define ISP_STATS_MPSS_GLACE_PARAM_VER_SIZE (8)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_OFFSET (pictorv2_in_ISP_STATS_MPSS_GLACE_BASE_ADDR + 0x06)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_BITFIELD_MASK (0x0F)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_RWMASK (0x0F)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_ROMASK (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_WOMASK (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_UNUSED_MASK (0xF0)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_OFFSET (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_WIDTH (4)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_MASK (0x0F)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_B_0x0 (0x00)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_B_0x1 (0x01)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_B_0x2 (0x02)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_B_0x3 (0x03)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_B_0x4 (0x04)
#define ISP_STATS_MPSS_GLACE_PARAM_VER_iqval_v_B_0x5 (0x05)

/*
* Register : ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT
*/

#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_SIZE (8)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_OFFSET (pictorv2_in_ISP_STATS_MPSS_GLACE_BASE_ADDR + 0x08)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_RESET_VALUE (0x00)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_BITFIELD_MASK (0x7F)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_RWMASK (0x7F)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_ROMASK (0x00)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_WOMASK (0x00)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_UNUSED_MASK (0x80)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_ofirstmin4_offset_cnt_OFFSET (0x00)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_ofirstmin4_offset_cnt_WIDTH (7)
#define ISP_STATS_MPSS_GLACE_OFIRSTMIN4_OFFSET_CNT_ofirstmin4_offset_cnt_MASK (0x7F)

/*
* Register : ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES
*/

#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_SIZE (16)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_OFFSET (pictorv2_in_ISP_STATS_MPSS_GLACE_BASE_ADDR + 0x0a)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_RESET_VALUE (0x0000)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_RWMASK (0xFFFF)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_ROMASK (0x0000)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_WOMASK (0x0000)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_UNUSED_MASK (0x0000)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_num_active_subsampled_lines_OFFSET (0x0000)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_num_active_subsampled_lines_WIDTH (16)
#define ISP_STATS_MPSS_GLACE_NUM_ACTIVE_SS_LINES_num_active_subsampled_lines_MASK (0xFFFF)


/*
* Address Block : ISP_STATS_AF
*/

#define pictorv2_in_ISP_STATS_AF_BASE_ADDR                  (0xd80U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_AF_ENABLE
*/

#define ISP_STATS_AF_ENABLE_SIZE   (8)
#define ISP_STATS_AF_ENABLE_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x00)
#define ISP_STATS_AF_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_AF_ENABLE_BITFIELD_MASK (0x01)
#define ISP_STATS_AF_ENABLE_RWMASK (0x01)
#define ISP_STATS_AF_ENABLE_ROMASK (0x00)
#define ISP_STATS_AF_ENABLE_WOMASK (0x00)
#define ISP_STATS_AF_ENABLE_UNUSED_MASK (0xFE)
#define ISP_STATS_AF_ENABLE_enable_OFFSET (0x00)
#define ISP_STATS_AF_ENABLE_enable_WIDTH (1)
#define ISP_STATS_AF_ENABLE_enable_MASK (0x01)
#define ISP_STATS_AF_ENABLE_enable_DISABLE (0x00)
#define ISP_STATS_AF_ENABLE_enable_ENABLE (0x01)

/*
* Register : ISP_STATS_AF_STATS_ZONE_CTRL
*/

#define ISP_STATS_AF_STATS_ZONE_CTRL_SIZE (8)
#define ISP_STATS_AF_STATS_ZONE_CTRL_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x02)
#define ISP_STATS_AF_STATS_ZONE_CTRL_RESET_VALUE (0x00)
#define ISP_STATS_AF_STATS_ZONE_CTRL_BITFIELD_MASK (0x07)
#define ISP_STATS_AF_STATS_ZONE_CTRL_RWMASK (0x07)
#define ISP_STATS_AF_STATS_ZONE_CTRL_ROMASK (0x00)
#define ISP_STATS_AF_STATS_ZONE_CTRL_WOMASK (0x00)
#define ISP_STATS_AF_STATS_ZONE_CTRL_UNUSED_MASK (0xF8)
#define ISP_STATS_AF_STATS_ZONE_CTRL_coring_en_OFFSET (0x00)
#define ISP_STATS_AF_STATS_ZONE_CTRL_coring_en_WIDTH (1)
#define ISP_STATS_AF_STATS_ZONE_CTRL_coring_en_MASK (0x01)
#define ISP_STATS_AF_STATS_ZONE_CTRL_coring_en_B_0x0 (0x00)
#define ISP_STATS_AF_STATS_ZONE_CTRL_coring_en_B_0x1 (0x01)
#define ISP_STATS_AF_STATS_ZONE_CTRL_abs_square_en_OFFSET (0x01)
#define ISP_STATS_AF_STATS_ZONE_CTRL_abs_square_en_WIDTH (1)
#define ISP_STATS_AF_STATS_ZONE_CTRL_abs_square_en_MASK (0x02)
#define ISP_STATS_AF_STATS_ZONE_CTRL_abs_square_en_B_0x0 (0x00)
#define ISP_STATS_AF_STATS_ZONE_CTRL_abs_square_en_B_0x1 (0x01)
#define ISP_STATS_AF_STATS_ZONE_CTRL_light_change_stats_en_OFFSET (0x02)
#define ISP_STATS_AF_STATS_ZONE_CTRL_light_change_stats_en_WIDTH (1)
#define ISP_STATS_AF_STATS_ZONE_CTRL_light_change_stats_en_MASK (0x04)
#define ISP_STATS_AF_STATS_ZONE_CTRL_light_change_stats_en_DISABLE (0x00)
#define ISP_STATS_AF_STATS_ZONE_CTRL_light_change_stats_en_Enable (0x01)

/*
* Register : ISP_STATS_AF_STATS_ZONE_ENABLE
*/

#define ISP_STATS_AF_STATS_ZONE_ENABLE_SIZE (16)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x04)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_BITFIELD_MASK (0x03FF)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_RWMASK (0x03FF)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_ROMASK (0x0000)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_WOMASK (0x0000)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_UNUSED_MASK (0xFC00)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_zone_enable_OFFSET (0x0000)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_zone_enable_WIDTH (10)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_zone_enable_MASK (0x03FF)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_zone_enable_DISABLE (0x0000)
#define ISP_STATS_AF_STATS_ZONE_ENABLE_zone_enable_Enable (0x0001)

/*
* Register : ISP_STATS_AF_CORING
*/

#define ISP_STATS_AF_CORING_SIZE   (8)
#define ISP_STATS_AF_CORING_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x06)
#define ISP_STATS_AF_CORING_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_CORING_BITFIELD_MASK (0xFF)
#define ISP_STATS_AF_CORING_RWMASK (0xFF)
#define ISP_STATS_AF_CORING_ROMASK (0x00)
#define ISP_STATS_AF_CORING_WOMASK (0x00)
#define ISP_STATS_AF_CORING_UNUSED_MASK (0x00)
#define ISP_STATS_AF_CORING_coring_value_OFFSET (0x00)
#define ISP_STATS_AF_CORING_coring_value_WIDTH (8)
#define ISP_STATS_AF_CORING_coring_value_MASK (0xFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_0
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x08)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_0_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_0
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x0a)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_0_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_0
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x0c)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_0_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_0
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x0e)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_0_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x10)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_0_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x12)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_0_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_1
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x14)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_1_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_1
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_1_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_1
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x18)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_1_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_1
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x1a)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_1_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x1c)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_1_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x1e)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_1_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_2
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x20)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_2_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_2
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x22)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_2_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_2
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x24)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_2_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_2
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x26)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_2_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x28)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_2_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x2a)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_2_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_3
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x2c)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_3_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_3
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x2e)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_3_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_3
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x30)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_3_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_3
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x32)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_3_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x34)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_3_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x36)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_3_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_4
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x38)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_4_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_4
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x3a)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_4_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_4
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x3c)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_4_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_4
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x3e)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_4_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x40)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_4_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x42)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_4_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_5
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x44)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_5_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_5
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x46)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_5_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_5
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x48)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_5_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_5
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x4a)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_5_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x4c)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_5_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x4e)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_5_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_6
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x50)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_6_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_6
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x52)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_6_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_6
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x54)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_6_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_6
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x56)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_6_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x58)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_6_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x5a)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_6_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_7
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x5c)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_7_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_7
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x5e)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_7_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_7
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x60)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_7_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_7
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x62)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_7_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x64)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_7_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x66)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_7_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_8
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x68)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_8_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_8
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x6a)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_8_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_8
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x6c)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_8_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_8
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x6e)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_8_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x70)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_8_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x72)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_8_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_START_OFFSET_9
*/

#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_SIZE (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x74)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_x_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_x_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_START_OFFSET_9_x_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_START_OFFSET_9
*/

#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x76)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_y_start_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_y_start_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_START_OFFSET_9_y_start_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_X_END_OFFSET_9
*/

#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_SIZE (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x78)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_x_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_x_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_X_END_OFFSET_9_x_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_Y_END_OFFSET_9
*/

#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_SIZE (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x7a)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_RESET_VALUE (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_RWMASK (0xFFFF)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_ROMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_WOMASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_UNUSED_MASK (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_y_end_OFFSET (0x0000)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_y_end_WIDTH (16)
#define ISP_STATS_AF_ZONE_Y_END_OFFSET_9_y_end_MASK (0xFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x7c)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_acc_value_focus_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_acc_value_focus_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_FOCUS_9_acc_value_focus_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9
*/

#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_SIZE (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_OFFSET (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x7e)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_RESET_VALUE (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_RWMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_ROMASK (0xFFFFFFFF)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_WOMASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_UNUSED_MASK (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_acc_value_light_change_OFFSET (0x00000000)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_acc_value_light_change_WIDTH (32)
#define ISP_STATS_AF_ZONE_ACC_VALUE_LIGHT_CHANGE_9_acc_value_light_change_MASK (0xFFFFFFFF)

/*
* Register : ISP_STATS_AF_DFV
*/

#define ISP_STATS_AF_DFV_SIZE      (16)
#define ISP_STATS_AF_DFV_OFFSET    (pictorv2_in_ISP_STATS_AF_BASE_ADDR + 0x80)
#define ISP_STATS_AF_DFV_RESET_VALUE (0x00)
#define ISP_STATS_AF_DFV_BITFIELD_MASK (0x07FF)
#define ISP_STATS_AF_DFV_RWMASK    (0x07FF)
#define ISP_STATS_AF_DFV_ROMASK    (0x0000)
#define ISP_STATS_AF_DFV_WOMASK    (0x0000)
#define ISP_STATS_AF_DFV_UNUSED_MASK (0xF800)
#define ISP_STATS_AF_DFV_dfv_enable_OFFSET (0x0000)
#define ISP_STATS_AF_DFV_dfv_enable_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_enable_MASK (0x0001)
#define ISP_STATS_AF_DFV_dfv_enable_DISABLE (0x0000)
#define ISP_STATS_AF_DFV_dfv_enable_ENABLE (0x0001)
#define ISP_STATS_AF_DFV_dfv_0_interrupt_ctrl_OFFSET (0x0001)
#define ISP_STATS_AF_DFV_dfv_0_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_0_interrupt_ctrl_MASK (0x0002)
#define ISP_STATS_AF_DFV_dfv_1_interrupt_ctrl_OFFSET (0x0002)
#define ISP_STATS_AF_DFV_dfv_1_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_1_interrupt_ctrl_MASK (0x0004)
#define ISP_STATS_AF_DFV_dfv_2_interrupt_ctrl_OFFSET (0x0003)
#define ISP_STATS_AF_DFV_dfv_2_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_2_interrupt_ctrl_MASK (0x0008)
#define ISP_STATS_AF_DFV_dfv_3_interrupt_ctrl_OFFSET (0x0004)
#define ISP_STATS_AF_DFV_dfv_3_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_3_interrupt_ctrl_MASK (0x0010)
#define ISP_STATS_AF_DFV_dfv_4_interrupt_ctrl_OFFSET (0x0005)
#define ISP_STATS_AF_DFV_dfv_4_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_4_interrupt_ctrl_MASK (0x0020)
#define ISP_STATS_AF_DFV_dfv_5_interrupt_ctrl_OFFSET (0x0006)
#define ISP_STATS_AF_DFV_dfv_5_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_5_interrupt_ctrl_MASK (0x0040)
#define ISP_STATS_AF_DFV_dfv_6_interrupt_ctrl_OFFSET (0x0007)
#define ISP_STATS_AF_DFV_dfv_6_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_6_interrupt_ctrl_MASK (0x0080)
#define ISP_STATS_AF_DFV_dfv_7_interrupt_ctrl_OFFSET (0x0008)
#define ISP_STATS_AF_DFV_dfv_7_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_7_interrupt_ctrl_MASK (0x0100)
#define ISP_STATS_AF_DFV_dfv_8_interrupt_ctrl_OFFSET (0x0009)
#define ISP_STATS_AF_DFV_dfv_8_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_8_interrupt_ctrl_MASK (0x0200)
#define ISP_STATS_AF_DFV_dfv_9_interrupt_ctrl_OFFSET (0x000a)
#define ISP_STATS_AF_DFV_dfv_9_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_AF_DFV_dfv_9_interrupt_ctrl_MASK (0x0400)


/*
* Address Block : ISP_STATS_SKINTONE
*/

#define pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR            (0xe80U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_STATS_SKINTONE_ENABLE
*/

#define ISP_STATS_SKINTONE_ENABLE_SIZE (8)
#define ISP_STATS_SKINTONE_ENABLE_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x00)
#define ISP_STATS_SKINTONE_ENABLE_RESET_VALUE (0x00)
#define ISP_STATS_SKINTONE_ENABLE_BITFIELD_MASK (0x01)
#define ISP_STATS_SKINTONE_ENABLE_RWMASK (0x01)
#define ISP_STATS_SKINTONE_ENABLE_ROMASK (0x00)
#define ISP_STATS_SKINTONE_ENABLE_WOMASK (0x00)
#define ISP_STATS_SKINTONE_ENABLE_UNUSED_MASK (0xFE)
#define ISP_STATS_SKINTONE_ENABLE_enable_OFFSET (0x00)
#define ISP_STATS_SKINTONE_ENABLE_enable_WIDTH (1)
#define ISP_STATS_SKINTONE_ENABLE_enable_MASK (0x01)
#define ISP_STATS_SKINTONE_ENABLE_enable_DISABLE (0x00)
#define ISP_STATS_SKINTONE_ENABLE_enable_ENABLE (0x01)

/*
* Register : ISP_STATS_SKINTONE_ZONE_VERT_OFFSET
*/

#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_SIZE (16)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x02)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_RESET_VALUE (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_RWMASK (0xFFFF)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_ROMASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_WOMASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_UNUSED_MASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_zone_y_offset_OFFSET (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_zone_y_offset_WIDTH (16)
#define ISP_STATS_SKINTONE_ZONE_VERT_OFFSET_zone_y_offset_MASK (0xFFFF)

/*
* Register : ISP_STATS_SKINTONE_ZONE_HOR_OFFSET
*/

#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_SIZE (16)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x04)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_RESET_VALUE (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_RWMASK (0xFFFF)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_ROMASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_WOMASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_UNUSED_MASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_zone_x_offset_OFFSET (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_zone_x_offset_WIDTH (16)
#define ISP_STATS_SKINTONE_ZONE_HOR_OFFSET_zone_x_offset_MASK (0xFFFF)

/*
* Register : ISP_STATS_SKINTONE_ZONE_VERT_SIZE
*/

#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_SIZE (16)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x06)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_RESET_VALUE (0x0002)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_RWMASK (0xFFFF)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_ROMASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_WOMASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_UNUSED_MASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_zone_y_size_OFFSET (0x0000)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_zone_y_size_WIDTH (16)
#define ISP_STATS_SKINTONE_ZONE_VERT_SIZE_zone_y_size_MASK (0xFFFF)

/*
* Register : ISP_STATS_SKINTONE_ZONE_HOR_SIZE
*/

#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_SIZE (16)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x08)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_RESET_VALUE (0x0002)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_RWMASK (0xFFFF)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_ROMASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_WOMASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_UNUSED_MASK (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_zone_x_size_OFFSET (0x0000)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_zone_x_size_WIDTH (16)
#define ISP_STATS_SKINTONE_ZONE_HOR_SIZE_zone_x_size_MASK (0xFFFF)

/*
* Register : ISP_STATS_SKINTONE_THRESHOLD
*/

#define ISP_STATS_SKINTONE_THRESHOLD_SIZE (16)
#define ISP_STATS_SKINTONE_THRESHOLD_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x0a)
#define ISP_STATS_SKINTONE_THRESHOLD_RESET_VALUE (0x0210)
#define ISP_STATS_SKINTONE_THRESHOLD_BITFIELD_MASK (0xFFFF)
#define ISP_STATS_SKINTONE_THRESHOLD_RWMASK (0xFFFF)
#define ISP_STATS_SKINTONE_THRESHOLD_ROMASK (0x0000)
#define ISP_STATS_SKINTONE_THRESHOLD_WOMASK (0x0000)
#define ISP_STATS_SKINTONE_THRESHOLD_UNUSED_MASK (0x0000)
#define ISP_STATS_SKINTONE_THRESHOLD_skinTresh_OFFSET (0x0000)
#define ISP_STATS_SKINTONE_THRESHOLD_skinTresh_WIDTH (16)
#define ISP_STATS_SKINTONE_THRESHOLD_skinTresh_MASK (0xFFFF)

/*
* Register : ISP_STATS_SKINTONE_PATTERN
*/

#define ISP_STATS_SKINTONE_PATTERN_SIZE (8)
#define ISP_STATS_SKINTONE_PATTERN_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x0c)
#define ISP_STATS_SKINTONE_PATTERN_RESET_VALUE (0x00)
#define ISP_STATS_SKINTONE_PATTERN_BITFIELD_MASK (0x03)
#define ISP_STATS_SKINTONE_PATTERN_RWMASK (0x03)
#define ISP_STATS_SKINTONE_PATTERN_ROMASK (0x00)
#define ISP_STATS_SKINTONE_PATTERN_WOMASK (0x00)
#define ISP_STATS_SKINTONE_PATTERN_UNUSED_MASK (0xFC)
#define ISP_STATS_SKINTONE_PATTERN_pattern_OFFSET (0x00)
#define ISP_STATS_SKINTONE_PATTERN_pattern_WIDTH (2)
#define ISP_STATS_SKINTONE_PATTERN_pattern_MASK (0x03)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_0
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_0_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x0e)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_0_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_1
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_1_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x10)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_1_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_2
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_2_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x12)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_2_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_3
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_3_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x14)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_3_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_4
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_4_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x16)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_4_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_5
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_5_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x18)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_5_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_6
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_6_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x1a)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_6_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_7
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_7_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x1c)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_7_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_8
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_8_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x1e)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_8_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_9
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_9_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x20)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_9_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_10
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_10_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x22)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_10_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_11
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_11_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x24)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_11_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_12
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_12_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x26)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_12_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_13
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_13_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x28)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_13_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_14
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_14_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x2a)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_14_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_ACC_SKIN_15
*/

#define ISP_STATS_SKINTONE_ACC_SKIN_15_SIZE (32)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x2c)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_RESET_VALUE (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_BITFIELD_MASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_RWMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_ROMASK (0x03FFFFFF)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_WOMASK (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_UNUSED_MASK (0xFC000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_acc_skin_OFFSET (0x00000000)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_acc_skin_WIDTH (26)
#define ISP_STATS_SKINTONE_ACC_SKIN_15_acc_skin_MASK (0x03FFFFFF)

/*
* Register : ISP_STATS_SKINTONE_STATUS
*/

#define ISP_STATS_SKINTONE_STATUS_SIZE (8)
#define ISP_STATS_SKINTONE_STATUS_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x2e)
#define ISP_STATS_SKINTONE_STATUS_RESET_VALUE (0x00)
#define ISP_STATS_SKINTONE_STATUS_BITFIELD_MASK (0x01)
#define ISP_STATS_SKINTONE_STATUS_RWMASK (0x00)
#define ISP_STATS_SKINTONE_STATUS_ROMASK (0x01)
#define ISP_STATS_SKINTONE_STATUS_WOMASK (0x00)
#define ISP_STATS_SKINTONE_STATUS_UNUSED_MASK (0xFE)
#define ISP_STATS_SKINTONE_STATUS_zones_error_OFFSET (0x00)
#define ISP_STATS_SKINTONE_STATUS_zones_error_WIDTH (1)
#define ISP_STATS_SKINTONE_STATUS_zones_error_MASK (0x01)

/*
* Register : ISP_STATS_SKINTONE_DFV
*/

#define ISP_STATS_SKINTONE_DFV_SIZE (8)
#define ISP_STATS_SKINTONE_DFV_OFFSET (pictorv2_in_ISP_STATS_SKINTONE_BASE_ADDR + 0x30)
#define ISP_STATS_SKINTONE_DFV_RESET_VALUE (0x00)
#define ISP_STATS_SKINTONE_DFV_BITFIELD_MASK (0x03)
#define ISP_STATS_SKINTONE_DFV_RWMASK (0x03)
#define ISP_STATS_SKINTONE_DFV_ROMASK (0x00)
#define ISP_STATS_SKINTONE_DFV_WOMASK (0x00)
#define ISP_STATS_SKINTONE_DFV_UNUSED_MASK (0xFC)
#define ISP_STATS_SKINTONE_DFV_dfv_enable_OFFSET (0x00)
#define ISP_STATS_SKINTONE_DFV_dfv_enable_WIDTH (1)
#define ISP_STATS_SKINTONE_DFV_dfv_enable_MASK (0x01)
#define ISP_STATS_SKINTONE_DFV_dfv_enable_DISABLE (0x00)
#define ISP_STATS_SKINTONE_DFV_dfv_enable_ENABLE (0x01)
#define ISP_STATS_SKINTONE_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_STATS_SKINTONE_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_STATS_SKINTONE_DFV_dfv_interrupt_ctrl_MASK (0x02)


/*
* Address Block : ISP_ITPOINT_DMCE_IN
*/

#define pictorv2_in_ISP_ITPOINT_DMCE_IN_BASE_ADDR           (0xf20U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_ITPOINT_DMCE_IN_ENABLE
*/

#define ISP_ITPOINT_DMCE_IN_ENABLE_SIZE (8)
#define ISP_ITPOINT_DMCE_IN_ENABLE_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_IN_BASE_ADDR + 0x00)
#define ISP_ITPOINT_DMCE_IN_ENABLE_RESET_VALUE (0x00)
#define ISP_ITPOINT_DMCE_IN_ENABLE_BITFIELD_MASK (0x11)
#define ISP_ITPOINT_DMCE_IN_ENABLE_RWMASK (0x11)
#define ISP_ITPOINT_DMCE_IN_ENABLE_ROMASK (0x00)
#define ISP_ITPOINT_DMCE_IN_ENABLE_WOMASK (0x00)
#define ISP_ITPOINT_DMCE_IN_ENABLE_UNUSED_MASK (0xEE)
#define ISP_ITPOINT_DMCE_IN_ENABLE_enable_OFFSET (0x00)
#define ISP_ITPOINT_DMCE_IN_ENABLE_enable_WIDTH (1)
#define ISP_ITPOINT_DMCE_IN_ENABLE_enable_MASK (0x01)
#define ISP_ITPOINT_DMCE_IN_ENABLE_enable_DISABLE (0x00)
#define ISP_ITPOINT_DMCE_IN_ENABLE_enable_ENABLE (0x01)
#define ISP_ITPOINT_DMCE_IN_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_ITPOINT_DMCE_IN_ENABLE_soft_reset_WIDTH (1)
#define ISP_ITPOINT_DMCE_IN_ENABLE_soft_reset_MASK (0x10)
#define ISP_ITPOINT_DMCE_IN_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_ITPOINT_DMCE_IN_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_ITPOINT_DMCE_IN_PIX_POS
*/

#define ISP_ITPOINT_DMCE_IN_PIX_POS_SIZE (16)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_IN_BASE_ADDR + 0x02)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_ROMASK (0x0000)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_WOMASK (0x0000)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_pix_pos_OFFSET (0x0000)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_pix_pos_WIDTH (13)
#define ISP_ITPOINT_DMCE_IN_PIX_POS_pix_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_DMCE_IN_LINE_POS
*/

#define ISP_ITPOINT_DMCE_IN_LINE_POS_SIZE (16)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_IN_BASE_ADDR + 0x04)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_ROMASK (0x0000)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_WOMASK (0x0000)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_line_pos_OFFSET (0x0000)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_line_pos_WIDTH (13)
#define ISP_ITPOINT_DMCE_IN_LINE_POS_line_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_DMCE_IN_PIX_CNT
*/

#define ISP_ITPOINT_DMCE_IN_PIX_CNT_SIZE (16)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_IN_BASE_ADDR + 0x06)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_pix_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_pix_cnt_WIDTH (13)
#define ISP_ITPOINT_DMCE_IN_PIX_CNT_pix_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_DMCE_IN_LINE_CNT
*/

#define ISP_ITPOINT_DMCE_IN_LINE_CNT_SIZE (16)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_IN_BASE_ADDR + 0x08)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_line_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_line_cnt_WIDTH (13)
#define ISP_ITPOINT_DMCE_IN_LINE_CNT_line_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_DMCE_IN_FRAME_CNT
*/

#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_SIZE (8)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_IN_BASE_ADDR + 0x0a)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_RESET_VALUE (0x00)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_BITFIELD_MASK (0xFF)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_RWMASK (0x00)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_ROMASK (0xFF)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_WOMASK (0x00)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_UNUSED_MASK (0x00)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_frame_cnt_OFFSET (0x00)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_frame_cnt_WIDTH (8)
#define ISP_ITPOINT_DMCE_IN_FRAME_CNT_frame_cnt_MASK (0xFF)

/*
* Register : ISP_ITPOINT_DMCE_IN_DFV
*/

#define ISP_ITPOINT_DMCE_IN_DFV_SIZE (8)
#define ISP_ITPOINT_DMCE_IN_DFV_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_IN_BASE_ADDR + 0x0c)
#define ISP_ITPOINT_DMCE_IN_DFV_RESET_VALUE (0x00)
#define ISP_ITPOINT_DMCE_IN_DFV_BITFIELD_MASK (0x03)
#define ISP_ITPOINT_DMCE_IN_DFV_RWMASK (0x03)
#define ISP_ITPOINT_DMCE_IN_DFV_ROMASK (0x00)
#define ISP_ITPOINT_DMCE_IN_DFV_WOMASK (0x00)
#define ISP_ITPOINT_DMCE_IN_DFV_UNUSED_MASK (0xFC)
#define ISP_ITPOINT_DMCE_IN_DFV_dfv_enable_OFFSET (0x00)
#define ISP_ITPOINT_DMCE_IN_DFV_dfv_enable_WIDTH (1)
#define ISP_ITPOINT_DMCE_IN_DFV_dfv_enable_MASK (0x01)
#define ISP_ITPOINT_DMCE_IN_DFV_dfv_enable_DISABLE (0x00)
#define ISP_ITPOINT_DMCE_IN_DFV_dfv_enable_ENABLE (0x01)
#define ISP_ITPOINT_DMCE_IN_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_ITPOINT_DMCE_IN_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_ITPOINT_DMCE_IN_DFV_dfv_interrupt_ctrl_MASK (0x02)


/*
* Address Block : ISP_ITPOINT_DMCE_OUT
*/

#define pictorv2_in_ISP_ITPOINT_DMCE_OUT_BASE_ADDR          (0xf30U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_ITPOINT_DMCE_OUT_ENABLE
*/

#define ISP_ITPOINT_DMCE_OUT_ENABLE_SIZE (8)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_OUT_BASE_ADDR + 0x00)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_RESET_VALUE (0x00)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_BITFIELD_MASK (0x11)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_RWMASK (0x11)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_ROMASK (0x00)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_WOMASK (0x00)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_UNUSED_MASK (0xEE)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_enable_OFFSET (0x00)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_enable_WIDTH (1)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_enable_MASK (0x01)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_enable_DISABLE (0x00)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_enable_ENABLE (0x01)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_soft_reset_WIDTH (1)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_soft_reset_MASK (0x10)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_ITPOINT_DMCE_OUT_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_ITPOINT_DMCE_OUT_PIX_POS
*/

#define ISP_ITPOINT_DMCE_OUT_PIX_POS_SIZE (16)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_OUT_BASE_ADDR + 0x02)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_ROMASK (0x0000)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_WOMASK (0x0000)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_pix_pos_OFFSET (0x0000)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_pix_pos_WIDTH (13)
#define ISP_ITPOINT_DMCE_OUT_PIX_POS_pix_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_DMCE_OUT_LINE_POS
*/

#define ISP_ITPOINT_DMCE_OUT_LINE_POS_SIZE (16)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_OUT_BASE_ADDR + 0x04)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_ROMASK (0x0000)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_WOMASK (0x0000)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_line_pos_OFFSET (0x0000)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_line_pos_WIDTH (13)
#define ISP_ITPOINT_DMCE_OUT_LINE_POS_line_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_DMCE_OUT_PIX_CNT
*/

#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_SIZE (16)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_OUT_BASE_ADDR + 0x06)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_pix_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_pix_cnt_WIDTH (13)
#define ISP_ITPOINT_DMCE_OUT_PIX_CNT_pix_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_DMCE_OUT_LINE_CNT
*/

#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_SIZE (16)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_OUT_BASE_ADDR + 0x08)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_line_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_line_cnt_WIDTH (13)
#define ISP_ITPOINT_DMCE_OUT_LINE_CNT_line_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_DMCE_OUT_FRAME_CNT
*/

#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_SIZE (8)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_OUT_BASE_ADDR + 0x0a)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_RESET_VALUE (0x00)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_BITFIELD_MASK (0xFF)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_RWMASK (0x00)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_ROMASK (0xFF)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_WOMASK (0x00)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_UNUSED_MASK (0x00)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_frame_cnt_OFFSET (0x00)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_frame_cnt_WIDTH (8)
#define ISP_ITPOINT_DMCE_OUT_FRAME_CNT_frame_cnt_MASK (0xFF)

/*
* Register : ISP_ITPOINT_DMCE_OUT_DFV
*/

#define ISP_ITPOINT_DMCE_OUT_DFV_SIZE (8)
#define ISP_ITPOINT_DMCE_OUT_DFV_OFFSET (pictorv2_in_ISP_ITPOINT_DMCE_OUT_BASE_ADDR + 0x0c)
#define ISP_ITPOINT_DMCE_OUT_DFV_RESET_VALUE (0x00)
#define ISP_ITPOINT_DMCE_OUT_DFV_BITFIELD_MASK (0x03)
#define ISP_ITPOINT_DMCE_OUT_DFV_RWMASK (0x03)
#define ISP_ITPOINT_DMCE_OUT_DFV_ROMASK (0x00)
#define ISP_ITPOINT_DMCE_OUT_DFV_WOMASK (0x00)
#define ISP_ITPOINT_DMCE_OUT_DFV_UNUSED_MASK (0xFC)
#define ISP_ITPOINT_DMCE_OUT_DFV_dfv_enable_OFFSET (0x00)
#define ISP_ITPOINT_DMCE_OUT_DFV_dfv_enable_WIDTH (1)
#define ISP_ITPOINT_DMCE_OUT_DFV_dfv_enable_MASK (0x01)
#define ISP_ITPOINT_DMCE_OUT_DFV_dfv_enable_DISABLE (0x00)
#define ISP_ITPOINT_DMCE_OUT_DFV_dfv_enable_ENABLE (0x01)
#define ISP_ITPOINT_DMCE_OUT_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_ITPOINT_DMCE_OUT_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_ITPOINT_DMCE_OUT_DFV_dfv_interrupt_ctrl_MASK (0x02)


/*
* Address Block : ISP_ITPOINT_RGB_STORE
*/

#define pictorv2_in_ISP_ITPOINT_RGB_STORE_BASE_ADDR         (0xf40U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_ITPOINT_RGB_STORE_ENABLE
*/

#define ISP_ITPOINT_RGB_STORE_ENABLE_SIZE (8)
#define ISP_ITPOINT_RGB_STORE_ENABLE_OFFSET (pictorv2_in_ISP_ITPOINT_RGB_STORE_BASE_ADDR + 0x00)
#define ISP_ITPOINT_RGB_STORE_ENABLE_RESET_VALUE (0x00)
#define ISP_ITPOINT_RGB_STORE_ENABLE_BITFIELD_MASK (0x11)
#define ISP_ITPOINT_RGB_STORE_ENABLE_RWMASK (0x11)
#define ISP_ITPOINT_RGB_STORE_ENABLE_ROMASK (0x00)
#define ISP_ITPOINT_RGB_STORE_ENABLE_WOMASK (0x00)
#define ISP_ITPOINT_RGB_STORE_ENABLE_UNUSED_MASK (0xEE)
#define ISP_ITPOINT_RGB_STORE_ENABLE_enable_OFFSET (0x00)
#define ISP_ITPOINT_RGB_STORE_ENABLE_enable_WIDTH (1)
#define ISP_ITPOINT_RGB_STORE_ENABLE_enable_MASK (0x01)
#define ISP_ITPOINT_RGB_STORE_ENABLE_enable_DISABLE (0x00)
#define ISP_ITPOINT_RGB_STORE_ENABLE_enable_ENABLE (0x01)
#define ISP_ITPOINT_RGB_STORE_ENABLE_soft_reset_OFFSET (0x04)
#define ISP_ITPOINT_RGB_STORE_ENABLE_soft_reset_WIDTH (1)
#define ISP_ITPOINT_RGB_STORE_ENABLE_soft_reset_MASK (0x10)
#define ISP_ITPOINT_RGB_STORE_ENABLE_soft_reset_B_0x0 (0x00)
#define ISP_ITPOINT_RGB_STORE_ENABLE_soft_reset_B_0x1 (0x01)

/*
* Register : ISP_ITPOINT_RGB_STORE_PIX_POS
*/

#define ISP_ITPOINT_RGB_STORE_PIX_POS_SIZE (16)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_OFFSET (pictorv2_in_ISP_ITPOINT_RGB_STORE_BASE_ADDR + 0x02)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_ROMASK (0x0000)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_WOMASK (0x0000)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_pix_pos_OFFSET (0x0000)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_pix_pos_WIDTH (13)
#define ISP_ITPOINT_RGB_STORE_PIX_POS_pix_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RGB_STORE_LINE_POS
*/

#define ISP_ITPOINT_RGB_STORE_LINE_POS_SIZE (16)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_OFFSET (pictorv2_in_ISP_ITPOINT_RGB_STORE_BASE_ADDR + 0x04)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_RWMASK (0x1FFF)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_ROMASK (0x0000)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_WOMASK (0x0000)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_line_pos_OFFSET (0x0000)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_line_pos_WIDTH (13)
#define ISP_ITPOINT_RGB_STORE_LINE_POS_line_pos_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RGB_STORE_PIX_CNT
*/

#define ISP_ITPOINT_RGB_STORE_PIX_CNT_SIZE (16)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RGB_STORE_BASE_ADDR + 0x06)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_pix_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_pix_cnt_WIDTH (13)
#define ISP_ITPOINT_RGB_STORE_PIX_CNT_pix_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RGB_STORE_LINE_CNT
*/

#define ISP_ITPOINT_RGB_STORE_LINE_CNT_SIZE (16)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RGB_STORE_BASE_ADDR + 0x08)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_RESET_VALUE (0x0000)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_BITFIELD_MASK (0x1FFF)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_RWMASK (0x0000)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_ROMASK (0x1FFF)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_WOMASK (0x0000)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_UNUSED_MASK (0xE000)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_line_cnt_OFFSET (0x0000)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_line_cnt_WIDTH (13)
#define ISP_ITPOINT_RGB_STORE_LINE_CNT_line_cnt_MASK (0x1FFF)

/*
* Register : ISP_ITPOINT_RGB_STORE_FRAME_CNT
*/

#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_SIZE (8)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_OFFSET (pictorv2_in_ISP_ITPOINT_RGB_STORE_BASE_ADDR + 0x0a)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_RESET_VALUE (0x00)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_BITFIELD_MASK (0xFF)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_RWMASK (0x00)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_ROMASK (0xFF)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_WOMASK (0x00)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_UNUSED_MASK (0x00)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_frame_cnt_OFFSET (0x00)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_frame_cnt_WIDTH (8)
#define ISP_ITPOINT_RGB_STORE_FRAME_CNT_frame_cnt_MASK (0xFF)

/*
* Register : ISP_ITPOINT_RGB_STORE_DFV
*/

#define ISP_ITPOINT_RGB_STORE_DFV_SIZE (8)
#define ISP_ITPOINT_RGB_STORE_DFV_OFFSET (pictorv2_in_ISP_ITPOINT_RGB_STORE_BASE_ADDR + 0x0c)
#define ISP_ITPOINT_RGB_STORE_DFV_RESET_VALUE (0x00)
#define ISP_ITPOINT_RGB_STORE_DFV_BITFIELD_MASK (0x03)
#define ISP_ITPOINT_RGB_STORE_DFV_RWMASK (0x03)
#define ISP_ITPOINT_RGB_STORE_DFV_ROMASK (0x00)
#define ISP_ITPOINT_RGB_STORE_DFV_WOMASK (0x00)
#define ISP_ITPOINT_RGB_STORE_DFV_UNUSED_MASK (0xFC)
#define ISP_ITPOINT_RGB_STORE_DFV_dfv_enable_OFFSET (0x00)
#define ISP_ITPOINT_RGB_STORE_DFV_dfv_enable_WIDTH (1)
#define ISP_ITPOINT_RGB_STORE_DFV_dfv_enable_MASK (0x01)
#define ISP_ITPOINT_RGB_STORE_DFV_dfv_enable_DISABLE (0x00)
#define ISP_ITPOINT_RGB_STORE_DFV_dfv_enable_ENABLE (0x01)
#define ISP_ITPOINT_RGB_STORE_DFV_dfv_interrupt_ctrl_OFFSET (0x01)
#define ISP_ITPOINT_RGB_STORE_DFV_dfv_interrupt_ctrl_WIDTH (1)
#define ISP_ITPOINT_RGB_STORE_DFV_dfv_interrupt_ctrl_MASK (0x02)


/*
* Address Block : ISP_SMIARX3D
*/

#define pictorv2_in_ISP_SMIARX3D_BASE_ADDR                  (0x1c00U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : ISP_SMIARX3D_CTRL
*/

#define ISP_SMIARX3D_CTRL_SIZE     (32)
#define ISP_SMIARX3D_CTRL_OFFSET   (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x00)
#define ISP_SMIARX3D_CTRL_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_CTRL_BITFIELD_MASK (0x00010101)
#define ISP_SMIARX3D_CTRL_RWMASK   (0x00010101)
#define ISP_SMIARX3D_CTRL_ROMASK   (0x00000000)
#define ISP_SMIARX3D_CTRL_WOMASK   (0x00000000)
#define ISP_SMIARX3D_CTRL_UNUSED_MASK (0xFFFEFEFE)
#define ISP_SMIARX3D_CTRL_rx_start_OFFSET (0x00000000)
#define ISP_SMIARX3D_CTRL_rx_start_WIDTH (1)
#define ISP_SMIARX3D_CTRL_rx_start_MASK (0x00000001)
#define ISP_SMIARX3D_CTRL_rx_stop_OFFSET (0x00000008)
#define ISP_SMIARX3D_CTRL_rx_stop_WIDTH (1)
#define ISP_SMIARX3D_CTRL_rx_stop_MASK (0x00000100)
#define ISP_SMIARX3D_CTRL_rx_abort_OFFSET (0x00000010)
#define ISP_SMIARX3D_CTRL_rx_abort_WIDTH (1)
#define ISP_SMIARX3D_CTRL_rx_abort_MASK (0x00010000)

/*
* Register : ISP_SMIARX3D_SETUP
*/

#define ISP_SMIARX3D_SETUP_SIZE    (32)
#define ISP_SMIARX3D_SETUP_OFFSET  (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x02)
#define ISP_SMIARX3D_SETUP_RESET_VALUE (0x00000600)
#define ISP_SMIARX3D_SETUP_BITFIELD_MASK (0x3F1F7FFF)
#define ISP_SMIARX3D_SETUP_RWMASK  (0x3F1F7FFF)
#define ISP_SMIARX3D_SETUP_ROMASK  (0x00000000)
#define ISP_SMIARX3D_SETUP_WOMASK  (0x00000000)
#define ISP_SMIARX3D_SETUP_UNUSED_MASK (0xC0E08000)
#define ISP_SMIARX3D_SETUP_ip_pix_width_OFFSET (0x00000000)
#define ISP_SMIARX3D_SETUP_ip_pix_width_WIDTH (4)
#define ISP_SMIARX3D_SETUP_ip_pix_width_MASK (0x0000000F)
#define ISP_SMIARX3D_SETUP_ip_pix_width_B_0x6 (0x00000006)
#define ISP_SMIARX3D_SETUP_ip_pix_width_B_0x7 (0x00000007)
#define ISP_SMIARX3D_SETUP_ip_pix_width_B_0x8 (0x00000008)
#define ISP_SMIARX3D_SETUP_ip_pix_width_B_0xA (0x0000000A)
#define ISP_SMIARX3D_SETUP_ip_pix_width_B_0xC (0x0000000C)
#define ISP_SMIARX3D_SETUP_op_pix_width_OFFSET (0x00000004)
#define ISP_SMIARX3D_SETUP_op_pix_width_WIDTH (4)
#define ISP_SMIARX3D_SETUP_op_pix_width_MASK (0x000000F0)
#define ISP_SMIARX3D_SETUP_op_pix_width_B_0x6 (0x00000006)
#define ISP_SMIARX3D_SETUP_op_pix_width_B_0x7 (0x00000007)
#define ISP_SMIARX3D_SETUP_op_pix_width_B_0x8 (0x00000008)
#define ISP_SMIARX3D_SETUP_op_pix_width_B_0xA (0x0000000A)
#define ISP_SMIARX3D_SETUP_op_pix_width_B_0xC (0x0000000C)
#define ISP_SMIARX3D_SETUP_parallel_enable_OFFSET (0x00000008)
#define ISP_SMIARX3D_SETUP_parallel_enable_WIDTH (1)
#define ISP_SMIARX3D_SETUP_parallel_enable_MASK (0x00000100)
#define ISP_SMIARX3D_SETUP_vsync_polarity_OFFSET (0x00000009)
#define ISP_SMIARX3D_SETUP_vsync_polarity_WIDTH (1)
#define ISP_SMIARX3D_SETUP_vsync_polarity_MASK (0x00000200)
#define ISP_SMIARX3D_SETUP_vsync_polarity_ACTIVE_LOW (0x00000000)
#define ISP_SMIARX3D_SETUP_vsync_polarity_ACTIVE_HIGH (0x00000001)
#define ISP_SMIARX3D_SETUP_hsync_polarity_OFFSET (0x0000000a)
#define ISP_SMIARX3D_SETUP_hsync_polarity_WIDTH (1)
#define ISP_SMIARX3D_SETUP_hsync_polarity_MASK (0x00000400)
#define ISP_SMIARX3D_SETUP_hsync_polarity_ACTIVE_LOW (0x00000000)
#define ISP_SMIARX3D_SETUP_hsync_polarity_ACTIVE_HIGH (0x00000001)
#define ISP_SMIARX3D_SETUP_ds_mode_OFFSET (0x0000000b)
#define ISP_SMIARX3D_SETUP_ds_mode_WIDTH (1)
#define ISP_SMIARX3D_SETUP_ds_mode_MASK (0x00000800)
#define ISP_SMIARX3D_SETUP_ds_mode_DISABLE (0x00000000)
#define ISP_SMIARX3D_SETUP_ds_mode_ENABLE (0x00000001)
#define ISP_SMIARX3D_SETUP_dcpx_enable_OFFSET (0x0000000c)
#define ISP_SMIARX3D_SETUP_dcpx_enable_WIDTH (1)
#define ISP_SMIARX3D_SETUP_dcpx_enable_MASK (0x00001000)
#define ISP_SMIARX3D_SETUP_dcpx_enable_DISABLE (0x00000000)
#define ISP_SMIARX3D_SETUP_dcpx_enable_ENABLE (0x00000001)
#define ISP_SMIARX3D_SETUP_ccp_sel_OFFSET (0x0000000d)
#define ISP_SMIARX3D_SETUP_ccp_sel_WIDTH (1)
#define ISP_SMIARX3D_SETUP_ccp_sel_MASK (0x00002000)
#define ISP_SMIARX3D_SETUP_reset_ccp_rx_n_OFFSET (0x0000000e)
#define ISP_SMIARX3D_SETUP_reset_ccp_rx_n_WIDTH (1)
#define ISP_SMIARX3D_SETUP_reset_ccp_rx_n_MASK (0x00004000)
#define ISP_SMIARX3D_SETUP_auto_sync_OFFSET (0x00000010)
#define ISP_SMIARX3D_SETUP_auto_sync_WIDTH (1)
#define ISP_SMIARX3D_SETUP_auto_sync_MASK (0x00010000)
#define ISP_SMIARX3D_SETUP_auto_sync_SYNCHRO_SENSOR (0x00000000)
#define ISP_SMIARX3D_SETUP_auto_sync_SYNCHRO_AUTO (0x00000001)
#define ISP_SMIARX3D_SETUP_pattern_type_OFFSET (0x00000011)
#define ISP_SMIARX3D_SETUP_pattern_type_WIDTH (3)
#define ISP_SMIARX3D_SETUP_pattern_type_MASK (0x000E0000)
#define ISP_SMIARX3D_SETUP_pattern_type_PATTERN_DISABLE (0x00000000)
#define ISP_SMIARX3D_SETUP_pattern_type_PATTERN_COLOUR_BAR (0x00000001)
#define ISP_SMIARX3D_SETUP_pattern_type_PATTERN_GRAD_BAR (0x00000002)
#define ISP_SMIARX3D_SETUP_pattern_type_PATTERN_DIAG_GREY (0x00000003)
#define ISP_SMIARX3D_SETUP_pattern_type_PATTERN_PSEUDORANDOM (0x00000004)
#define ISP_SMIARX3D_SETUP_pattern_type_PATTERN_HOR_GREY (0x00000005)
#define ISP_SMIARX3D_SETUP_pattern_type_PATTERN_VERT_GREY (0x00000006)
#define ISP_SMIARX3D_SETUP_pattern_type_PATTERN_SOLID (0x00000007)
#define ISP_SMIARX3D_SETUP_no_sof_OFFSET (0x00000014)
#define ISP_SMIARX3D_SETUP_no_sof_WIDTH (1)
#define ISP_SMIARX3D_SETUP_no_sof_MASK (0x00100000)
#define ISP_SMIARX3D_SETUP_clr_ccp_shift_sync_OFFSET (0x00000018)
#define ISP_SMIARX3D_SETUP_clr_ccp_shift_sync_WIDTH (1)
#define ISP_SMIARX3D_SETUP_clr_ccp_shift_sync_MASK (0x01000000)
#define ISP_SMIARX3D_SETUP_clr_ccp_crc_error_OFFSET (0x00000019)
#define ISP_SMIARX3D_SETUP_clr_ccp_crc_error_WIDTH (1)
#define ISP_SMIARX3D_SETUP_clr_ccp_crc_error_MASK (0x02000000)
#define ISP_SMIARX3D_SETUP_clr_pixel_sync_error_OFFSET (0x0000001a)
#define ISP_SMIARX3D_SETUP_clr_pixel_sync_error_WIDTH (1)
#define ISP_SMIARX3D_SETUP_clr_pixel_sync_error_MASK (0x04000000)
#define ISP_SMIARX3D_SETUP_clr_aborted_iframe_OFFSET (0x0000001b)
#define ISP_SMIARX3D_SETUP_clr_aborted_iframe_WIDTH (1)
#define ISP_SMIARX3D_SETUP_clr_aborted_iframe_MASK (0x08000000)
#define ISP_SMIARX3D_SETUP_clr_insuff_iline_OFFSET (0x0000001c)
#define ISP_SMIARX3D_SETUP_clr_insuff_iline_WIDTH (1)
#define ISP_SMIARX3D_SETUP_clr_insuff_iline_MASK (0x10000000)
#define ISP_SMIARX3D_SETUP_fifo_rd_rst_OFFSET (0x0000001d)
#define ISP_SMIARX3D_SETUP_fifo_rd_rst_WIDTH (1)
#define ISP_SMIARX3D_SETUP_fifo_rd_rst_MASK (0x20000000)

/*
* Register : ISP_SMIARX3D_FRAME_CTRL
*/

#define ISP_SMIARX3D_FRAME_CTRL_SIZE (32)
#define ISP_SMIARX3D_FRAME_CTRL_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x04)
#define ISP_SMIARX3D_FRAME_CTRL_RESET_VALUE (0x01000000)
#define ISP_SMIARX3D_FRAME_CTRL_BITFIELD_MASK (0x07FFFFFF)
#define ISP_SMIARX3D_FRAME_CTRL_RWMASK (0x07FFFFFF)
#define ISP_SMIARX3D_FRAME_CTRL_ROMASK (0x00000000)
#define ISP_SMIARX3D_FRAME_CTRL_WOMASK (0x00000000)
#define ISP_SMIARX3D_FRAME_CTRL_UNUSED_MASK (0xF8000000)
#define ISP_SMIARX3D_FRAME_CTRL_latency_lines_OFFSET (0x00000000)
#define ISP_SMIARX3D_FRAME_CTRL_latency_lines_WIDTH (8)
#define ISP_SMIARX3D_FRAME_CTRL_latency_lines_MASK (0x000000FF)
#define ISP_SMIARX3D_FRAME_CTRL_stream_size_OFFSET (0x00000008)
#define ISP_SMIARX3D_FRAME_CTRL_stream_size_WIDTH (8)
#define ISP_SMIARX3D_FRAME_CTRL_stream_size_MASK (0x0000FF00)
#define ISP_SMIARX3D_FRAME_CTRL_start_grab_dly_OFFSET (0x00000010)
#define ISP_SMIARX3D_FRAME_CTRL_start_grab_dly_WIDTH (8)
#define ISP_SMIARX3D_FRAME_CTRL_start_grab_dly_MASK (0x00FF0000)
#define ISP_SMIARX3D_FRAME_CTRL_ffhc_control_OFFSET (0x00000018)
#define ISP_SMIARX3D_FRAME_CTRL_ffhc_control_WIDTH (2)
#define ISP_SMIARX3D_FRAME_CTRL_ffhc_control_MASK (0x03000000)
#define ISP_SMIARX3D_FRAME_CTRL_ffhc_control_FFHC_DISABLE (0x00000000)
#define ISP_SMIARX3D_FRAME_CTRL_ffhc_control_FFHC_FULL_AUTO (0x00000001)
#define ISP_SMIARX3D_FRAME_CTRL_ffhc_control_FFHC_SEMI_AUTO (0x00000002)
#define ISP_SMIARX3D_FRAME_CTRL_ffhc_control_FFHC_MANUAL (0x00000003)
#define ISP_SMIARX3D_FRAME_CTRL_stop_at_interframe_OFFSET (0x0000001a)
#define ISP_SMIARX3D_FRAME_CTRL_stop_at_interframe_WIDTH (1)
#define ISP_SMIARX3D_FRAME_CTRL_stop_at_interframe_MASK (0x04000000)

/*
* Register : ISP_SMIARX3D_STATUS
*/

#define ISP_SMIARX3D_STATUS_SIZE   (32)
#define ISP_SMIARX3D_STATUS_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x06)
#define ISP_SMIARX3D_STATUS_RESET_VALUE (0x002000FF)
#define ISP_SMIARX3D_STATUS_BITFIELD_MASK (0x1F3FFFFF)
#define ISP_SMIARX3D_STATUS_RWMASK (0x00000000)
#define ISP_SMIARX3D_STATUS_ROMASK (0x1F3FFFFF)
#define ISP_SMIARX3D_STATUS_WOMASK (0x00000000)
#define ISP_SMIARX3D_STATUS_UNUSED_MASK (0xE0C00000)
#define ISP_SMIARX3D_STATUS_frame_counter_OFFSET (0x00000000)
#define ISP_SMIARX3D_STATUS_frame_counter_WIDTH (8)
#define ISP_SMIARX3D_STATUS_frame_counter_MASK (0x000000FF)
#define ISP_SMIARX3D_STATUS_rx_state_OFFSET (0x00000008)
#define ISP_SMIARX3D_STATUS_rx_state_WIDTH (2)
#define ISP_SMIARX3D_STATUS_rx_state_MASK (0x00000300)
#define ISP_SMIARX3D_STATUS_rx_state_GEN_IDLE (0x00000000)
#define ISP_SMIARX3D_STATUS_rx_state_GEN_WAITVSTART (0x00000001)
#define ISP_SMIARX3D_STATUS_rx_state_GEN_RUNNING (0x00000002)
#define ISP_SMIARX3D_STATUS_rx_state_GEN_WAITFRAME (0x00000003)
#define ISP_SMIARX3D_STATUS_ff_state_OFFSET (0x0000000a)
#define ISP_SMIARX3D_STATUS_ff_state_WIDTH (3)
#define ISP_SMIARX3D_STATUS_ff_state_MASK (0x00001C00)
#define ISP_SMIARX3D_STATUS_ff_state_FF_IDLE (0x00000000)
#define ISP_SMIARX3D_STATUS_ff_state_FF_WAIT_EOSD (0x00000001)
#define ISP_SMIARX3D_STATUS_ff_state_FF_FIRSTLINE (0x00000002)
#define ISP_SMIARX3D_STATUS_ff_state_FF_TRANSLATE (0x00000003)
#define ISP_SMIARX3D_STATUS_ff_state_FF_UPDATE (0x00000004)
#define ISP_SMIARX3D_STATUS_ff_state_FF_INTERFRAME (0x00000005)
#define ISP_SMIARX3D_STATUS_snoop_state_OFFSET (0x0000000d)
#define ISP_SMIARX3D_STATUS_snoop_state_WIDTH (3)
#define ISP_SMIARX3D_STATUS_snoop_state_MASK (0x0000E000)
#define ISP_SMIARX3D_STATUS_snoop_state_SNOOP_IDLE (0x00000000)
#define ISP_SMIARX3D_STATUS_snoop_state_SNOOP_TAG_LSN (0x00000001)
#define ISP_SMIARX3D_STATUS_snoop_state_SNOOP_TAG (0x00000002)
#define ISP_SMIARX3D_STATUS_snoop_state_SNOOP_REG_LSM (0x00000003)
#define ISP_SMIARX3D_STATUS_snoop_state_SNOOP_REG (0x00000004)
#define ISP_SMIARX3D_STATUS_fifo_rd_usedw_OFFSET (0x00000010)
#define ISP_SMIARX3D_STATUS_fifo_rd_usedw_WIDTH (5)
#define ISP_SMIARX3D_STATUS_fifo_rd_usedw_MASK (0x001F0000)
#define ISP_SMIARX3D_STATUS_fifo_empty_OFFSET (0x00000015)
#define ISP_SMIARX3D_STATUS_fifo_empty_WIDTH (1)
#define ISP_SMIARX3D_STATUS_fifo_empty_MASK (0x00200000)
#define ISP_SMIARX3D_STATUS_pixel_sync_error_OFFSET (0x00000018)
#define ISP_SMIARX3D_STATUS_pixel_sync_error_WIDTH (1)
#define ISP_SMIARX3D_STATUS_pixel_sync_error_MASK (0x01000000)
#define ISP_SMIARX3D_STATUS_aborted_iframe_OFFSET (0x00000019)
#define ISP_SMIARX3D_STATUS_aborted_iframe_WIDTH (1)
#define ISP_SMIARX3D_STATUS_aborted_iframe_MASK (0x02000000)
#define ISP_SMIARX3D_STATUS_insuff_iline_OFFSET (0x0000001a)
#define ISP_SMIARX3D_STATUS_insuff_iline_WIDTH (1)
#define ISP_SMIARX3D_STATUS_insuff_iline_MASK (0x04000000)
#define ISP_SMIARX3D_STATUS_fifo_under_OFFSET (0x0000001b)
#define ISP_SMIARX3D_STATUS_fifo_under_WIDTH (1)
#define ISP_SMIARX3D_STATUS_fifo_under_MASK (0x08000000)
#define ISP_SMIARX3D_STATUS_fifo_over_OFFSET (0x0000001c)
#define ISP_SMIARX3D_STATUS_fifo_over_WIDTH (1)
#define ISP_SMIARX3D_STATUS_fifo_over_MASK (0x10000000)

/*
* Register : ISP_SMIARX3D_TPAT_DATA_RG
*/

#define ISP_SMIARX3D_TPAT_DATA_RG_SIZE (32)
#define ISP_SMIARX3D_TPAT_DATA_RG_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x08)
#define ISP_SMIARX3D_TPAT_DATA_RG_RESET_VALUE (0x0000000)
#define ISP_SMIARX3D_TPAT_DATA_RG_BITFIELD_MASK (0x1FFF1FFF)
#define ISP_SMIARX3D_TPAT_DATA_RG_RWMASK (0x1FFF1FFF)
#define ISP_SMIARX3D_TPAT_DATA_RG_ROMASK (0x00000000)
#define ISP_SMIARX3D_TPAT_DATA_RG_WOMASK (0x00000000)
#define ISP_SMIARX3D_TPAT_DATA_RG_UNUSED_MASK (0xE000E000)
#define ISP_SMIARX3D_TPAT_DATA_RG_tpat_data_gir_OFFSET (0x00000000)
#define ISP_SMIARX3D_TPAT_DATA_RG_tpat_data_gir_WIDTH (13)
#define ISP_SMIARX3D_TPAT_DATA_RG_tpat_data_gir_MASK (0x00001FFF)
#define ISP_SMIARX3D_TPAT_DATA_RG_tpat_data_red_OFFSET (0x00000010)
#define ISP_SMIARX3D_TPAT_DATA_RG_tpat_data_red_WIDTH (13)
#define ISP_SMIARX3D_TPAT_DATA_RG_tpat_data_red_MASK (0x1FFF0000)

/*
* Register : ISP_SMIARX3D_TPAT_DATA_BG
*/

#define ISP_SMIARX3D_TPAT_DATA_BG_SIZE (32)
#define ISP_SMIARX3D_TPAT_DATA_BG_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x0a)
#define ISP_SMIARX3D_TPAT_DATA_BG_RESET_VALUE (0x0000000)
#define ISP_SMIARX3D_TPAT_DATA_BG_BITFIELD_MASK (0x1FFF1FFF)
#define ISP_SMIARX3D_TPAT_DATA_BG_RWMASK (0x1FFF1FFF)
#define ISP_SMIARX3D_TPAT_DATA_BG_ROMASK (0x00000000)
#define ISP_SMIARX3D_TPAT_DATA_BG_WOMASK (0x00000000)
#define ISP_SMIARX3D_TPAT_DATA_BG_UNUSED_MASK (0xE000E000)
#define ISP_SMIARX3D_TPAT_DATA_BG_tpat_data_gib_OFFSET (0x00000000)
#define ISP_SMIARX3D_TPAT_DATA_BG_tpat_data_gib_WIDTH (13)
#define ISP_SMIARX3D_TPAT_DATA_BG_tpat_data_gib_MASK (0x00001FFF)
#define ISP_SMIARX3D_TPAT_DATA_BG_tpat_data_blu_OFFSET (0x00000010)
#define ISP_SMIARX3D_TPAT_DATA_BG_tpat_data_blu_WIDTH (13)
#define ISP_SMIARX3D_TPAT_DATA_BG_tpat_data_blu_MASK (0x1FFF0000)

/*
* Register : ISP_SMIARX3D_TPAT_HCUR_WP
*/

#define ISP_SMIARX3D_TPAT_HCUR_WP_SIZE (32)
#define ISP_SMIARX3D_TPAT_HCUR_WP_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x0c)
#define ISP_SMIARX3D_TPAT_HCUR_WP_RESET_VALUE (0x0000000)
#define ISP_SMIARX3D_TPAT_HCUR_WP_BITFIELD_MASK (0x1FFF1FFF)
#define ISP_SMIARX3D_TPAT_HCUR_WP_RWMASK (0x1FFF1FFF)
#define ISP_SMIARX3D_TPAT_HCUR_WP_ROMASK (0x00000000)
#define ISP_SMIARX3D_TPAT_HCUR_WP_WOMASK (0x00000000)
#define ISP_SMIARX3D_TPAT_HCUR_WP_UNUSED_MASK (0xE000E000)
#define ISP_SMIARX3D_TPAT_HCUR_WP_tpat_hcur_posn_OFFSET (0x00000000)
#define ISP_SMIARX3D_TPAT_HCUR_WP_tpat_hcur_posn_WIDTH (13)
#define ISP_SMIARX3D_TPAT_HCUR_WP_tpat_hcur_posn_MASK (0x00001FFF)
#define ISP_SMIARX3D_TPAT_HCUR_WP_tpat_hcur_width_OFFSET (0x00000010)
#define ISP_SMIARX3D_TPAT_HCUR_WP_tpat_hcur_width_WIDTH (13)
#define ISP_SMIARX3D_TPAT_HCUR_WP_tpat_hcur_width_MASK (0x1FFF0000)

/*
* Register : ISP_SMIARX3D_TPAT_VCUR_WP
*/

#define ISP_SMIARX3D_TPAT_VCUR_WP_SIZE (32)
#define ISP_SMIARX3D_TPAT_VCUR_WP_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x0e)
#define ISP_SMIARX3D_TPAT_VCUR_WP_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_TPAT_VCUR_WP_BITFIELD_MASK (0x1FFF1FFF)
#define ISP_SMIARX3D_TPAT_VCUR_WP_RWMASK (0x1FFF1FFF)
#define ISP_SMIARX3D_TPAT_VCUR_WP_ROMASK (0x00000000)
#define ISP_SMIARX3D_TPAT_VCUR_WP_WOMASK (0x00000000)
#define ISP_SMIARX3D_TPAT_VCUR_WP_UNUSED_MASK (0xE000E000)
#define ISP_SMIARX3D_TPAT_VCUR_WP_tpat_vcur_posn_OFFSET (0x00000000)
#define ISP_SMIARX3D_TPAT_VCUR_WP_tpat_vcur_posn_WIDTH (13)
#define ISP_SMIARX3D_TPAT_VCUR_WP_tpat_vcur_posn_MASK (0x00001FFF)
#define ISP_SMIARX3D_TPAT_VCUR_WP_tpat_vcur_width_OFFSET (0x00000010)
#define ISP_SMIARX3D_TPAT_VCUR_WP_tpat_vcur_width_WIDTH (13)
#define ISP_SMIARX3D_TPAT_VCUR_WP_tpat_vcur_width_MASK (0x1FFF0000)

/*
* Register : ISP_SMIARX3D_CCP_STATUS
*/

#define ISP_SMIARX3D_CCP_STATUS_SIZE (16)
#define ISP_SMIARX3D_CCP_STATUS_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x10)
#define ISP_SMIARX3D_CCP_STATUS_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_CCP_STATUS_BITFIELD_MASK (0x070F)
#define ISP_SMIARX3D_CCP_STATUS_RWMASK (0x0000)
#define ISP_SMIARX3D_CCP_STATUS_ROMASK (0x070F)
#define ISP_SMIARX3D_CCP_STATUS_WOMASK (0x0000)
#define ISP_SMIARX3D_CCP_STATUS_UNUSED_MASK (0xF8F0)
#define ISP_SMIARX3D_CCP_STATUS_ccp_channel_OFFSET (0x0000)
#define ISP_SMIARX3D_CCP_STATUS_ccp_channel_WIDTH (4)
#define ISP_SMIARX3D_CCP_STATUS_ccp_channel_MASK (0x000F)
#define ISP_SMIARX3D_CCP_STATUS_ccp_false_sync_OFFSET (0x0008)
#define ISP_SMIARX3D_CCP_STATUS_ccp_false_sync_WIDTH (1)
#define ISP_SMIARX3D_CCP_STATUS_ccp_false_sync_MASK (0x0100)
#define ISP_SMIARX3D_CCP_STATUS_ccp_shift_sync_OFFSET (0x0009)
#define ISP_SMIARX3D_CCP_STATUS_ccp_shift_sync_WIDTH (1)
#define ISP_SMIARX3D_CCP_STATUS_ccp_shift_sync_MASK (0x0200)
#define ISP_SMIARX3D_CCP_STATUS_ccp_crc_error_OFFSET (0x000a)
#define ISP_SMIARX3D_CCP_STATUS_ccp_crc_error_WIDTH (1)
#define ISP_SMIARX3D_CCP_STATUS_ccp_crc_error_MASK (0x0400)

/*
* Register : ISP_SMIARX3D_HK_REQ_ADDR_0
*/

#define ISP_SMIARX3D_HK_REQ_ADDR_0_SIZE (16)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x12)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_RWMASK (0xFFFF)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_ROMASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_WOMASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_hk_req_addr_OFFSET (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_hk_req_addr_WIDTH (16)
#define ISP_SMIARX3D_HK_REQ_ADDR_0_hk_req_addr_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_HK_REQ_ADDR_1
*/

#define ISP_SMIARX3D_HK_REQ_ADDR_1_SIZE (16)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x14)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_RWMASK (0xFFFF)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_ROMASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_WOMASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_hk_req_addr_OFFSET (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_hk_req_addr_WIDTH (16)
#define ISP_SMIARX3D_HK_REQ_ADDR_1_hk_req_addr_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_HK_REQ_ADDR_2
*/

#define ISP_SMIARX3D_HK_REQ_ADDR_2_SIZE (16)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x16)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_RWMASK (0xFFFF)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_ROMASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_WOMASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_hk_req_addr_OFFSET (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_hk_req_addr_WIDTH (16)
#define ISP_SMIARX3D_HK_REQ_ADDR_2_hk_req_addr_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_HK_REQ_ADDR_3
*/

#define ISP_SMIARX3D_HK_REQ_ADDR_3_SIZE (16)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x18)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_RWMASK (0xFFFF)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_ROMASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_WOMASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_hk_req_addr_OFFSET (0x0000)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_hk_req_addr_WIDTH (16)
#define ISP_SMIARX3D_HK_REQ_ADDR_3_hk_req_addr_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_HK_REQ_DATA_0
*/

#define ISP_SMIARX3D_HK_REQ_DATA_0_SIZE (8)
#define ISP_SMIARX3D_HK_REQ_DATA_0_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x1a)
#define ISP_SMIARX3D_HK_REQ_DATA_0_RESET_VALUE (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_0_BITFIELD_MASK (0xFF)
#define ISP_SMIARX3D_HK_REQ_DATA_0_RWMASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_0_ROMASK (0xFF)
#define ISP_SMIARX3D_HK_REQ_DATA_0_WOMASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_0_UNUSED_MASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_0_hk_req_data_OFFSET (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_0_hk_req_data_WIDTH (8)
#define ISP_SMIARX3D_HK_REQ_DATA_0_hk_req_data_MASK (0xFF)

/*
* Register : ISP_SMIARX3D_HK_REQ_DATA_1
*/

#define ISP_SMIARX3D_HK_REQ_DATA_1_SIZE (8)
#define ISP_SMIARX3D_HK_REQ_DATA_1_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x1c)
#define ISP_SMIARX3D_HK_REQ_DATA_1_RESET_VALUE (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_1_BITFIELD_MASK (0xFF)
#define ISP_SMIARX3D_HK_REQ_DATA_1_RWMASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_1_ROMASK (0xFF)
#define ISP_SMIARX3D_HK_REQ_DATA_1_WOMASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_1_UNUSED_MASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_1_hk_req_data_OFFSET (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_1_hk_req_data_WIDTH (8)
#define ISP_SMIARX3D_HK_REQ_DATA_1_hk_req_data_MASK (0xFF)

/*
* Register : ISP_SMIARX3D_HK_REQ_DATA_2
*/

#define ISP_SMIARX3D_HK_REQ_DATA_2_SIZE (8)
#define ISP_SMIARX3D_HK_REQ_DATA_2_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x1e)
#define ISP_SMIARX3D_HK_REQ_DATA_2_RESET_VALUE (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_2_BITFIELD_MASK (0xFF)
#define ISP_SMIARX3D_HK_REQ_DATA_2_RWMASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_2_ROMASK (0xFF)
#define ISP_SMIARX3D_HK_REQ_DATA_2_WOMASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_2_UNUSED_MASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_2_hk_req_data_OFFSET (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_2_hk_req_data_WIDTH (8)
#define ISP_SMIARX3D_HK_REQ_DATA_2_hk_req_data_MASK (0xFF)

/*
* Register : ISP_SMIARX3D_HK_REQ_DATA_3
*/

#define ISP_SMIARX3D_HK_REQ_DATA_3_SIZE (8)
#define ISP_SMIARX3D_HK_REQ_DATA_3_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x20)
#define ISP_SMIARX3D_HK_REQ_DATA_3_RESET_VALUE (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_3_BITFIELD_MASK (0xFF)
#define ISP_SMIARX3D_HK_REQ_DATA_3_RWMASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_3_ROMASK (0xFF)
#define ISP_SMIARX3D_HK_REQ_DATA_3_WOMASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_3_UNUSED_MASK (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_3_hk_req_data_OFFSET (0x00)
#define ISP_SMIARX3D_HK_REQ_DATA_3_hk_req_data_WIDTH (8)
#define ISP_SMIARX3D_HK_REQ_DATA_3_hk_req_data_MASK (0xFF)

/*
* Register : ISP_SMIARX3D_INT_COUNT_0
*/

#define ISP_SMIARX3D_INT_COUNT_0_SIZE (32)
#define ISP_SMIARX3D_INT_COUNT_0_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x22)
#define ISP_SMIARX3D_INT_COUNT_0_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_0_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX3D_INT_COUNT_0_RWMASK (0xFFFFFFFF)
#define ISP_SMIARX3D_INT_COUNT_0_ROMASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_0_WOMASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_0_UNUSED_MASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_0_pix_count_OFFSET (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_0_pix_count_WIDTH (16)
#define ISP_SMIARX3D_INT_COUNT_0_pix_count_MASK (0x0000FFFF)
#define ISP_SMIARX3D_INT_COUNT_0_line_count_OFFSET (0x00000010)
#define ISP_SMIARX3D_INT_COUNT_0_line_count_WIDTH (16)
#define ISP_SMIARX3D_INT_COUNT_0_line_count_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX3D_INT_COUNT_1
*/

#define ISP_SMIARX3D_INT_COUNT_1_SIZE (32)
#define ISP_SMIARX3D_INT_COUNT_1_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x24)
#define ISP_SMIARX3D_INT_COUNT_1_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_1_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX3D_INT_COUNT_1_RWMASK (0xFFFFFFFF)
#define ISP_SMIARX3D_INT_COUNT_1_ROMASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_1_WOMASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_1_UNUSED_MASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_1_pix_count_OFFSET (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_1_pix_count_WIDTH (16)
#define ISP_SMIARX3D_INT_COUNT_1_pix_count_MASK (0x0000FFFF)
#define ISP_SMIARX3D_INT_COUNT_1_line_count_OFFSET (0x00000010)
#define ISP_SMIARX3D_INT_COUNT_1_line_count_WIDTH (16)
#define ISP_SMIARX3D_INT_COUNT_1_line_count_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX3D_INT_COUNT_2
*/

#define ISP_SMIARX3D_INT_COUNT_2_SIZE (32)
#define ISP_SMIARX3D_INT_COUNT_2_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x26)
#define ISP_SMIARX3D_INT_COUNT_2_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_2_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX3D_INT_COUNT_2_RWMASK (0xFFFFFFFF)
#define ISP_SMIARX3D_INT_COUNT_2_ROMASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_2_WOMASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_2_UNUSED_MASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_2_pix_count_OFFSET (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_2_pix_count_WIDTH (16)
#define ISP_SMIARX3D_INT_COUNT_2_pix_count_MASK (0x0000FFFF)
#define ISP_SMIARX3D_INT_COUNT_2_line_count_OFFSET (0x00000010)
#define ISP_SMIARX3D_INT_COUNT_2_line_count_WIDTH (16)
#define ISP_SMIARX3D_INT_COUNT_2_line_count_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX3D_INT_COUNT_3
*/

#define ISP_SMIARX3D_INT_COUNT_3_SIZE (32)
#define ISP_SMIARX3D_INT_COUNT_3_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x28)
#define ISP_SMIARX3D_INT_COUNT_3_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_3_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX3D_INT_COUNT_3_RWMASK (0xFFFFFFFF)
#define ISP_SMIARX3D_INT_COUNT_3_ROMASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_3_WOMASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_3_UNUSED_MASK (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_3_pix_count_OFFSET (0x00000000)
#define ISP_SMIARX3D_INT_COUNT_3_pix_count_WIDTH (16)
#define ISP_SMIARX3D_INT_COUNT_3_pix_count_MASK (0x0000FFFF)
#define ISP_SMIARX3D_INT_COUNT_3_line_count_OFFSET (0x00000010)
#define ISP_SMIARX3D_INT_COUNT_3_line_count_WIDTH (16)
#define ISP_SMIARX3D_INT_COUNT_3_line_count_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX3D_DFV
*/

#define ISP_SMIARX3D_DFV_SIZE      (8)
#define ISP_SMIARX3D_DFV_OFFSET    (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x2a)
#define ISP_SMIARX3D_DFV_RESET_VALUE (0x00)
#define ISP_SMIARX3D_DFV_BITFIELD_MASK (0x3F)
#define ISP_SMIARX3D_DFV_RWMASK    (0x3F)
#define ISP_SMIARX3D_DFV_ROMASK    (0x00)
#define ISP_SMIARX3D_DFV_WOMASK    (0x00)
#define ISP_SMIARX3D_DFV_UNUSED_MASK (0xC0)
#define ISP_SMIARX3D_DFV_dfv_enable_OFFSET (0x00)
#define ISP_SMIARX3D_DFV_dfv_enable_WIDTH (1)
#define ISP_SMIARX3D_DFV_dfv_enable_MASK (0x01)
#define ISP_SMIARX3D_DFV_dfv_count_0_interrupt_ctrl_OFFSET (0x01)
#define ISP_SMIARX3D_DFV_dfv_count_0_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX3D_DFV_dfv_count_0_interrupt_ctrl_MASK (0x02)
#define ISP_SMIARX3D_DFV_dfv_count_1_interrupt_ctrl_OFFSET (0x02)
#define ISP_SMIARX3D_DFV_dfv_count_1_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX3D_DFV_dfv_count_1_interrupt_ctrl_MASK (0x04)
#define ISP_SMIARX3D_DFV_dfv_count_2_interrupt_ctrl_OFFSET (0x03)
#define ISP_SMIARX3D_DFV_dfv_count_2_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX3D_DFV_dfv_count_2_interrupt_ctrl_MASK (0x08)
#define ISP_SMIARX3D_DFV_dfv_count_3_interrupt_ctrl_OFFSET (0x04)
#define ISP_SMIARX3D_DFV_dfv_count_3_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX3D_DFV_dfv_count_3_interrupt_ctrl_MASK (0x10)
#define ISP_SMIARX3D_DFV_dfv_seq_complete_interrupt_ctrl_OFFSET (0x05)
#define ISP_SMIARX3D_DFV_dfv_seq_complete_interrupt_ctrl_WIDTH (1)
#define ISP_SMIARX3D_DFV_dfv_seq_complete_interrupt_ctrl_MASK (0x20)

/*
* Register : ISP_SMIARX3D_COUNT_INT_EN
*/

#define ISP_SMIARX3D_COUNT_INT_EN_SIZE (8)
#define ISP_SMIARX3D_COUNT_INT_EN_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x2c)
#define ISP_SMIARX3D_COUNT_INT_EN_RESET_VALUE (0x00)
#define ISP_SMIARX3D_COUNT_INT_EN_BITFIELD_MASK (0x1F)
#define ISP_SMIARX3D_COUNT_INT_EN_RWMASK (0x1F)
#define ISP_SMIARX3D_COUNT_INT_EN_ROMASK (0x00)
#define ISP_SMIARX3D_COUNT_INT_EN_WOMASK (0x00)
#define ISP_SMIARX3D_COUNT_INT_EN_UNUSED_MASK (0xE0)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_0_int_en_OFFSET (0x00)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_0_int_en_WIDTH (1)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_0_int_en_MASK (0x01)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_1_int_en_OFFSET (0x01)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_1_int_en_WIDTH (1)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_1_int_en_MASK (0x02)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_2_int_en_OFFSET (0x02)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_2_int_en_WIDTH (1)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_2_int_en_MASK (0x04)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_3_int_en_OFFSET (0x03)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_3_int_en_WIDTH (1)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_line_count_3_int_en_MASK (0x08)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_seq_complete_int_en_OFFSET (0x04)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_seq_complete_int_en_WIDTH (1)
#define ISP_SMIARX3D_COUNT_INT_EN_rx_seq_complete_int_en_MASK (0x10)

/*
* Register : ISP_SMIARX3D_OVERRIDE
*/

#define ISP_SMIARX3D_OVERRIDE_SIZE (32)
#define ISP_SMIARX3D_OVERRIDE_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x2e)
#define ISP_SMIARX3D_OVERRIDE_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_OVERRIDE_BITFIELD_MASK (0x007FFFFF)
#define ISP_SMIARX3D_OVERRIDE_RWMASK (0x007FFFFF)
#define ISP_SMIARX3D_OVERRIDE_ROMASK (0x00000000)
#define ISP_SMIARX3D_OVERRIDE_WOMASK (0x00000000)
#define ISP_SMIARX3D_OVERRIDE_UNUSED_MASK (0xFF800000)
#define ISP_SMIARX3D_OVERRIDE_override_OFFSET (0x00000000)
#define ISP_SMIARX3D_OVERRIDE_override_WIDTH (23)
#define ISP_SMIARX3D_OVERRIDE_override_MASK (0x007FFFFF)

/*
* Register : ISP_SMIARX3D_SENSOR_ID
*/

#define ISP_SMIARX3D_SENSOR_ID_SIZE (16)
#define ISP_SMIARX3D_SENSOR_ID_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x30)
#define ISP_SMIARX3D_SENSOR_ID_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_SENSOR_ID_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_SENSOR_ID_RWMASK (0x0000)
#define ISP_SMIARX3D_SENSOR_ID_ROMASK (0xFFFF)
#define ISP_SMIARX3D_SENSOR_ID_WOMASK (0x0000)
#define ISP_SMIARX3D_SENSOR_ID_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_SENSOR_ID_sensor_id_OFFSET (0x0000)
#define ISP_SMIARX3D_SENSOR_ID_sensor_id_WIDTH (16)
#define ISP_SMIARX3D_SENSOR_ID_sensor_id_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_PIXEL_ORDER
*/

#define ISP_SMIARX3D_PIXEL_ORDER_SIZE (16)
#define ISP_SMIARX3D_PIXEL_ORDER_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x32)
#define ISP_SMIARX3D_PIXEL_ORDER_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_PIXEL_ORDER_BITFIELD_MASK (0x0303)
#define ISP_SMIARX3D_PIXEL_ORDER_RWMASK (0x0300)
#define ISP_SMIARX3D_PIXEL_ORDER_ROMASK (0x0003)
#define ISP_SMIARX3D_PIXEL_ORDER_WOMASK (0x0000)
#define ISP_SMIARX3D_PIXEL_ORDER_UNUSED_MASK (0xFCFC)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_OFFSET (0x0000)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_WIDTH (2)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_MASK (0x0003)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_B_0x0 (0x0000)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_B_0x1 (0x0001)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_B_0x2 (0x0002)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_B_0x3 (0x0003)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_ovr_OFFSET (0x0008)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_ovr_WIDTH (2)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_ovr_MASK (0x0300)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_ovr_B_0x0 (0x0000)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_ovr_B_0x1 (0x0001)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_ovr_B_0x2 (0x0002)
#define ISP_SMIARX3D_PIXEL_ORDER_pixel_order_ovr_B_0x3 (0x0003)

/*
* Register : ISP_SMIARX3D_AUTO_HENV_LENGTH
*/

#define ISP_SMIARX3D_AUTO_HENV_LENGTH_SIZE (16)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x34)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_BITFIELD_MASK (0x1FFF)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_RWMASK (0x1FFF)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_ROMASK (0x0000)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_WOMASK (0x0000)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_UNUSED_MASK (0xE000)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_auto_henv_length_OFFSET (0x0000)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_auto_henv_length_WIDTH (13)
#define ISP_SMIARX3D_AUTO_HENV_LENGTH_auto_henv_length_MASK (0x1FFF)

/*
* Register : ISP_SMIARX3D_FRAME_LENGTH
*/

#define ISP_SMIARX3D_FRAME_LENGTH_SIZE (32)
#define ISP_SMIARX3D_FRAME_LENGTH_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x36)
#define ISP_SMIARX3D_FRAME_LENGTH_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_FRAME_LENGTH_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX3D_FRAME_LENGTH_RWMASK (0xFFFF0000)
#define ISP_SMIARX3D_FRAME_LENGTH_ROMASK (0x0000FFFF)
#define ISP_SMIARX3D_FRAME_LENGTH_WOMASK (0x00000000)
#define ISP_SMIARX3D_FRAME_LENGTH_UNUSED_MASK (0x00000000)
#define ISP_SMIARX3D_FRAME_LENGTH_frame_length_OFFSET (0x00000000)
#define ISP_SMIARX3D_FRAME_LENGTH_frame_length_WIDTH (16)
#define ISP_SMIARX3D_FRAME_LENGTH_frame_length_MASK (0x0000FFFF)
#define ISP_SMIARX3D_FRAME_LENGTH_frame_length_ovr_OFFSET (0x00000010)
#define ISP_SMIARX3D_FRAME_LENGTH_frame_length_ovr_WIDTH (16)
#define ISP_SMIARX3D_FRAME_LENGTH_frame_length_ovr_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX3D_LINE_LENGTH
*/

#define ISP_SMIARX3D_LINE_LENGTH_SIZE (32)
#define ISP_SMIARX3D_LINE_LENGTH_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x38)
#define ISP_SMIARX3D_LINE_LENGTH_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_LINE_LENGTH_BITFIELD_MASK (0xFFFFFFFF)
#define ISP_SMIARX3D_LINE_LENGTH_RWMASK (0xFFFF0000)
#define ISP_SMIARX3D_LINE_LENGTH_ROMASK (0x0000FFFF)
#define ISP_SMIARX3D_LINE_LENGTH_WOMASK (0x00000000)
#define ISP_SMIARX3D_LINE_LENGTH_UNUSED_MASK (0x00000000)
#define ISP_SMIARX3D_LINE_LENGTH_line_length_OFFSET (0x00000000)
#define ISP_SMIARX3D_LINE_LENGTH_line_length_WIDTH (16)
#define ISP_SMIARX3D_LINE_LENGTH_line_length_MASK (0x0000FFFF)
#define ISP_SMIARX3D_LINE_LENGTH_line_length_ovr_OFFSET (0x00000010)
#define ISP_SMIARX3D_LINE_LENGTH_line_length_ovr_WIDTH (16)
#define ISP_SMIARX3D_LINE_LENGTH_line_length_ovr_MASK (0xFFFF0000)

/*
* Register : ISP_SMIARX3D_X_ADDR_START
*/

#define ISP_SMIARX3D_X_ADDR_START_SIZE (16)
#define ISP_SMIARX3D_X_ADDR_START_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x3a)
#define ISP_SMIARX3D_X_ADDR_START_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_X_ADDR_START_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_X_ADDR_START_RWMASK (0x0000)
#define ISP_SMIARX3D_X_ADDR_START_ROMASK (0xFFFF)
#define ISP_SMIARX3D_X_ADDR_START_WOMASK (0x0000)
#define ISP_SMIARX3D_X_ADDR_START_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_X_ADDR_START_x_addr_start_OFFSET (0x0000)
#define ISP_SMIARX3D_X_ADDR_START_x_addr_start_WIDTH (16)
#define ISP_SMIARX3D_X_ADDR_START_x_addr_start_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_Y_ADDR_START
*/

#define ISP_SMIARX3D_Y_ADDR_START_SIZE (16)
#define ISP_SMIARX3D_Y_ADDR_START_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x3c)
#define ISP_SMIARX3D_Y_ADDR_START_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_Y_ADDR_START_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_Y_ADDR_START_RWMASK (0x0000)
#define ISP_SMIARX3D_Y_ADDR_START_ROMASK (0xFFFF)
#define ISP_SMIARX3D_Y_ADDR_START_WOMASK (0x0000)
#define ISP_SMIARX3D_Y_ADDR_START_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_Y_ADDR_START_y_addr_start_OFFSET (0x0000)
#define ISP_SMIARX3D_Y_ADDR_START_y_addr_start_WIDTH (16)
#define ISP_SMIARX3D_Y_ADDR_START_y_addr_start_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_X_ADDR_END
*/

#define ISP_SMIARX3D_X_ADDR_END_SIZE (16)
#define ISP_SMIARX3D_X_ADDR_END_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x3e)
#define ISP_SMIARX3D_X_ADDR_END_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_X_ADDR_END_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_X_ADDR_END_RWMASK (0x0000)
#define ISP_SMIARX3D_X_ADDR_END_ROMASK (0xFFFF)
#define ISP_SMIARX3D_X_ADDR_END_WOMASK (0x0000)
#define ISP_SMIARX3D_X_ADDR_END_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_X_ADDR_END_x_addr_end_OFFSET (0x0000)
#define ISP_SMIARX3D_X_ADDR_END_x_addr_end_WIDTH (16)
#define ISP_SMIARX3D_X_ADDR_END_x_addr_end_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_Y_ADDR_END
*/

#define ISP_SMIARX3D_Y_ADDR_END_SIZE (16)
#define ISP_SMIARX3D_Y_ADDR_END_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x40)
#define ISP_SMIARX3D_Y_ADDR_END_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_Y_ADDR_END_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_Y_ADDR_END_RWMASK (0x0000)
#define ISP_SMIARX3D_Y_ADDR_END_ROMASK (0xFFFF)
#define ISP_SMIARX3D_Y_ADDR_END_WOMASK (0x0000)
#define ISP_SMIARX3D_Y_ADDR_END_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_Y_ADDR_END_y_addr_end_OFFSET (0x0000)
#define ISP_SMIARX3D_Y_ADDR_END_y_addr_end_WIDTH (16)
#define ISP_SMIARX3D_Y_ADDR_END_y_addr_end_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_X_OUTPUT_SIZE
*/

#define ISP_SMIARX3D_X_OUTPUT_SIZE_SIZE (16)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x42)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_RWMASK (0x0000)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_ROMASK (0xFFFF)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_WOMASK (0x0000)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_x_output_size_OFFSET (0x0000)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_x_output_size_WIDTH (16)
#define ISP_SMIARX3D_X_OUTPUT_SIZE_x_output_size_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_Y_OUTPUT_SIZE
*/

#define ISP_SMIARX3D_Y_OUTPUT_SIZE_SIZE (16)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x44)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_RWMASK (0x0000)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_ROMASK (0xFFFF)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_WOMASK (0x0000)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_y_output_size_OFFSET (0x0000)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_y_output_size_WIDTH (16)
#define ISP_SMIARX3D_Y_OUTPUT_SIZE_y_output_size_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_ADDR_INCREMENTS
*/

#define ISP_SMIARX3D_ADDR_INCREMENTS_SIZE (8)
#define ISP_SMIARX3D_ADDR_INCREMENTS_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x46)
#define ISP_SMIARX3D_ADDR_INCREMENTS_RESET_VALUE (0xFF)
#define ISP_SMIARX3D_ADDR_INCREMENTS_BITFIELD_MASK (0xFF)
#define ISP_SMIARX3D_ADDR_INCREMENTS_RWMASK (0xAA)
#define ISP_SMIARX3D_ADDR_INCREMENTS_ROMASK (0x55)
#define ISP_SMIARX3D_ADDR_INCREMENTS_WOMASK (0x00)
#define ISP_SMIARX3D_ADDR_INCREMENTS_UNUSED_MASK (0x00)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_even_inc_lsb_OFFSET (0x00)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_even_inc_lsb_WIDTH (1)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_even_inc_lsb_MASK (0x01)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_even_inc_lsb_ovr_OFFSET (0x01)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_even_inc_lsb_ovr_WIDTH (1)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_even_inc_lsb_ovr_MASK (0x02)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_odd_inc_lsb_OFFSET (0x02)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_odd_inc_lsb_WIDTH (1)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_odd_inc_lsb_MASK (0x04)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_odd_inc_lsb_ovr_OFFSET (0x03)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_odd_inc_lsb_ovr_WIDTH (1)
#define ISP_SMIARX3D_ADDR_INCREMENTS_x_odd_inc_lsb_ovr_MASK (0x08)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_even_inc_lsb_OFFSET (0x04)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_even_inc_lsb_WIDTH (1)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_even_inc_lsb_MASK (0x10)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_even_inc_lsb_ovr_OFFSET (0x05)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_even_inc_lsb_ovr_WIDTH (1)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_even_inc_lsb_ovr_MASK (0x20)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_odd_inc_lsb_OFFSET (0x06)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_odd_inc_lsb_WIDTH (1)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_odd_inc_lsb_MASK (0x40)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_odd_inc_lsb_ovr_OFFSET (0x07)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_odd_inc_lsb_ovr_WIDTH (1)
#define ISP_SMIARX3D_ADDR_INCREMENTS_y_odd_inc_lsb_ovr_MASK (0x80)

/*
* Register : ISP_SMIARX3D_FINE_EXPOSURE
*/

#define ISP_SMIARX3D_FINE_EXPOSURE_SIZE (16)
#define ISP_SMIARX3D_FINE_EXPOSURE_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x48)
#define ISP_SMIARX3D_FINE_EXPOSURE_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_FINE_EXPOSURE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_FINE_EXPOSURE_RWMASK (0x0000)
#define ISP_SMIARX3D_FINE_EXPOSURE_ROMASK (0xFFFF)
#define ISP_SMIARX3D_FINE_EXPOSURE_WOMASK (0x0000)
#define ISP_SMIARX3D_FINE_EXPOSURE_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_FINE_EXPOSURE_fine_exposure_OFFSET (0x0000)
#define ISP_SMIARX3D_FINE_EXPOSURE_fine_exposure_WIDTH (16)
#define ISP_SMIARX3D_FINE_EXPOSURE_fine_exposure_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_COARSE_EXPOSURE
*/

#define ISP_SMIARX3D_COARSE_EXPOSURE_SIZE (16)
#define ISP_SMIARX3D_COARSE_EXPOSURE_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x4a)
#define ISP_SMIARX3D_COARSE_EXPOSURE_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_COARSE_EXPOSURE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_COARSE_EXPOSURE_RWMASK (0x0000)
#define ISP_SMIARX3D_COARSE_EXPOSURE_ROMASK (0xFFFF)
#define ISP_SMIARX3D_COARSE_EXPOSURE_WOMASK (0x0000)
#define ISP_SMIARX3D_COARSE_EXPOSURE_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_COARSE_EXPOSURE_coarse_exposure_OFFSET (0x0000)
#define ISP_SMIARX3D_COARSE_EXPOSURE_coarse_exposure_WIDTH (16)
#define ISP_SMIARX3D_COARSE_EXPOSURE_coarse_exposure_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_ANALOG_GAIN
*/

#define ISP_SMIARX3D_ANALOG_GAIN_SIZE (16)
#define ISP_SMIARX3D_ANALOG_GAIN_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x4c)
#define ISP_SMIARX3D_ANALOG_GAIN_RESET_VALUE (0x00)
#define ISP_SMIARX3D_ANALOG_GAIN_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_ANALOG_GAIN_RWMASK (0x0000)
#define ISP_SMIARX3D_ANALOG_GAIN_ROMASK (0xFFFF)
#define ISP_SMIARX3D_ANALOG_GAIN_WOMASK (0x0000)
#define ISP_SMIARX3D_ANALOG_GAIN_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_ANALOG_GAIN_analog_gain_OFFSET (0x0000)
#define ISP_SMIARX3D_ANALOG_GAIN_analog_gain_WIDTH (16)
#define ISP_SMIARX3D_ANALOG_GAIN_analog_gain_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_MODEL_SUBTYPE
*/

#define ISP_SMIARX3D_MODEL_SUBTYPE_SIZE (16)
#define ISP_SMIARX3D_MODEL_SUBTYPE_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x4e)
#define ISP_SMIARX3D_MODEL_SUBTYPE_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_MODEL_SUBTYPE_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_MODEL_SUBTYPE_RWMASK (0xFF00)
#define ISP_SMIARX3D_MODEL_SUBTYPE_ROMASK (0x00FF)
#define ISP_SMIARX3D_MODEL_SUBTYPE_WOMASK (0x0000)
#define ISP_SMIARX3D_MODEL_SUBTYPE_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_MODEL_SUBTYPE_frame_format_model_subtype_OFFSET (0x0000)
#define ISP_SMIARX3D_MODEL_SUBTYPE_frame_format_model_subtype_WIDTH (8)
#define ISP_SMIARX3D_MODEL_SUBTYPE_frame_format_model_subtype_MASK (0x00FF)
#define ISP_SMIARX3D_MODEL_SUBTYPE_frame_format_model_subtype_ovr_OFFSET (0x0008)
#define ISP_SMIARX3D_MODEL_SUBTYPE_frame_format_model_subtype_ovr_WIDTH (8)
#define ISP_SMIARX3D_MODEL_SUBTYPE_frame_format_model_subtype_ovr_MASK (0xFF00)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_0
*/

#define ISP_SMIARX3D_DESCRIPTOR_0_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_0_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x50)
#define ISP_SMIARX3D_DESCRIPTOR_0_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_0_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_0_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_0_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_0_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_0_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_0_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_0_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_0_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_1
*/

#define ISP_SMIARX3D_DESCRIPTOR_1_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_1_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x51)
#define ISP_SMIARX3D_DESCRIPTOR_1_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_1_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_1_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_1_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_1_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_1_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_1_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_1_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_1_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_2
*/

#define ISP_SMIARX3D_DESCRIPTOR_2_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_2_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x52)
#define ISP_SMIARX3D_DESCRIPTOR_2_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_2_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_2_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_2_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_2_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_2_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_2_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_2_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_2_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_3
*/

#define ISP_SMIARX3D_DESCRIPTOR_3_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_3_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x53)
#define ISP_SMIARX3D_DESCRIPTOR_3_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_3_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_3_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_3_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_3_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_3_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_3_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_3_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_3_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_4
*/

#define ISP_SMIARX3D_DESCRIPTOR_4_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_4_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x54)
#define ISP_SMIARX3D_DESCRIPTOR_4_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_4_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_4_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_4_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_4_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_4_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_4_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_4_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_4_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_5
*/

#define ISP_SMIARX3D_DESCRIPTOR_5_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_5_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x55)
#define ISP_SMIARX3D_DESCRIPTOR_5_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_5_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_5_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_5_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_5_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_5_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_5_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_5_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_5_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_6
*/

#define ISP_SMIARX3D_DESCRIPTOR_6_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_6_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x56)
#define ISP_SMIARX3D_DESCRIPTOR_6_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_6_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_6_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_6_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_6_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_6_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_6_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_6_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_6_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_7
*/

#define ISP_SMIARX3D_DESCRIPTOR_7_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_7_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x57)
#define ISP_SMIARX3D_DESCRIPTOR_7_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_7_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_7_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_7_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_7_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_7_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_7_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_7_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_7_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_8
*/

#define ISP_SMIARX3D_DESCRIPTOR_8_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_8_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x58)
#define ISP_SMIARX3D_DESCRIPTOR_8_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_8_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_8_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_8_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_8_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_8_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_8_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_8_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_8_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_9
*/

#define ISP_SMIARX3D_DESCRIPTOR_9_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_9_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x59)
#define ISP_SMIARX3D_DESCRIPTOR_9_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_9_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_9_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_9_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_9_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_9_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_9_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_9_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_9_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_10
*/

#define ISP_SMIARX3D_DESCRIPTOR_10_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_10_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x5a)
#define ISP_SMIARX3D_DESCRIPTOR_10_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_10_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_10_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_10_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_10_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_10_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_10_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_10_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_10_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_11
*/

#define ISP_SMIARX3D_DESCRIPTOR_11_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_11_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x5b)
#define ISP_SMIARX3D_DESCRIPTOR_11_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_11_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_11_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_11_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_11_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_11_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_11_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_11_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_11_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_12
*/

#define ISP_SMIARX3D_DESCRIPTOR_12_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_12_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x5c)
#define ISP_SMIARX3D_DESCRIPTOR_12_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_12_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_12_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_12_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_12_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_12_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_12_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_12_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_12_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_13
*/

#define ISP_SMIARX3D_DESCRIPTOR_13_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_13_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x5d)
#define ISP_SMIARX3D_DESCRIPTOR_13_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_13_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_13_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_13_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_13_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_13_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_13_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_13_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_13_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_14
*/

#define ISP_SMIARX3D_DESCRIPTOR_14_SIZE (16)
#define ISP_SMIARX3D_DESCRIPTOR_14_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x5e)
#define ISP_SMIARX3D_DESCRIPTOR_14_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_14_BITFIELD_MASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_14_RWMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_14_ROMASK (0xFFFF)
#define ISP_SMIARX3D_DESCRIPTOR_14_WOMASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_14_UNUSED_MASK (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_14_frame_format_descriptor_OFFSET (0x0000)
#define ISP_SMIARX3D_DESCRIPTOR_14_frame_format_descriptor_WIDTH (16)
#define ISP_SMIARX3D_DESCRIPTOR_14_frame_format_descriptor_MASK (0xFFFF)

/*
* Register : ISP_SMIARX3D_TYPE_TRANS_1
*/

#define ISP_SMIARX3D_TYPE_TRANS_1_SIZE (16)
#define ISP_SMIARX3D_TYPE_TRANS_1_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x5f)
#define ISP_SMIARX3D_TYPE_TRANS_1_RESET_VALUE (0x0000)
#define ISP_SMIARX3D_TYPE_TRANS_1_BITFIELD_MASK (0x0777)
#define ISP_SMIARX3D_TYPE_TRANS_1_RWMASK (0x0777)
#define ISP_SMIARX3D_TYPE_TRANS_1_ROMASK (0x0000)
#define ISP_SMIARX3D_TYPE_TRANS_1_WOMASK (0x0000)
#define ISP_SMIARX3D_TYPE_TRANS_1_UNUSED_MASK (0xF888)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_4_OFFSET (0x0000)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_4_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_4_MASK (0x0007)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_4_BLANK (0x0000)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_4_BLACK (0x0001)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_4_DARK (0x0002)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_4_ACTIVE (0x0003)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_5_OFFSET (0x0004)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_5_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_5_MASK (0x0070)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_5_BLANK (0x0000)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_5_BLACK (0x0001)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_5_DARK (0x0002)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_5_ACTIVE (0x0003)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_6_OFFSET (0x0008)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_6_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_6_MASK (0x0700)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_6_BLANK (0x0000)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_6_BLACK (0x0001)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_6_DARK (0x0002)
#define ISP_SMIARX3D_TYPE_TRANS_1_type_trans_mspec_6_ACTIVE (0x0003)

/*
* Register : ISP_SMIARX3D_TYPE_TRANS_0
*/

#define ISP_SMIARX3D_TYPE_TRANS_0_SIZE (32)
#define ISP_SMIARX3D_TYPE_TRANS_0_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x60)
#define ISP_SMIARX3D_TYPE_TRANS_0_RESET_VALUE (0x00010320)
#define ISP_SMIARX3D_TYPE_TRANS_0_BITFIELD_MASK (0x77777777)
#define ISP_SMIARX3D_TYPE_TRANS_0_RWMASK (0x77777777)
#define ISP_SMIARX3D_TYPE_TRANS_0_ROMASK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_WOMASK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_UNUSED_MASK (0x88888888)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_black_OFFSET (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_black_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_black_MASK (0x00000007)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_black_BLANK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_black_BLACK (0x00000001)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_black_DARK (0x00000002)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_black_ACTIVE (0x00000003)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dark_OFFSET (0x00000004)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dark_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dark_MASK (0x00000070)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dark_BLANK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dark_BLACK (0x00000001)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dark_DARK (0x00000002)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dark_ACTIVE (0x00000003)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_visible_OFFSET (0x00000008)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_visible_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_visible_MASK (0x00000700)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_visible_BLANK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_visible_BLACK (0x00000001)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_visible_DARK (0x00000002)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_visible_ACTIVE (0x00000003)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dummy_OFFSET (0x0000000c)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dummy_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dummy_MASK (0x00007000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dummy_BLANK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dummy_BLACK (0x00000001)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dummy_DARK (0x00000002)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_dummy_ACTIVE (0x00000003)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_0_OFFSET (0x00000010)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_0_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_0_MASK (0x00070000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_0_BLANK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_0_BLACK (0x00000001)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_0_DARK (0x00000002)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_0_ACTIVE (0x00000003)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_1_OFFSET (0x00000014)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_1_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_1_MASK (0x00700000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_1_BLANK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_1_BLACK (0x00000001)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_1_DARK (0x00000002)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_1_ACTIVE (0x00000003)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_2_OFFSET (0x00000018)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_2_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_2_MASK (0x07000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_2_BLANK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_2_BLACK (0x00000001)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_2_DARK (0x00000002)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_2_ACTIVE (0x00000003)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_3_OFFSET (0x0000001c)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_3_WIDTH (3)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_3_MASK (0x70000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_3_BLANK (0x00000000)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_3_BLACK (0x00000001)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_3_DARK (0x00000002)
#define ISP_SMIARX3D_TYPE_TRANS_0_type_trans_mspec_3_ACTIVE (0x00000003)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_0
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x62)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_0_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_1
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x64)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_1_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_2
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x66)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_2_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_3
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x68)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_3_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_4
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x6a)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_4_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_5
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x6c)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_5_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_6
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x6e)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_6_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_7
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x70)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_7_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_8
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x72)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_8_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_9
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x74)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_9_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_10
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x76)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_10_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_11
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x78)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_11_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_12
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x7a)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_12_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_13
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x7c)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_13_frame_format_descriptor_ovr_MASK (0x0001FFFF)

/*
* Register : ISP_SMIARX3D_DESCRIPTOR_OVR_14
*/

#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_SIZE (32)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_OFFSET (pictorv2_in_ISP_SMIARX3D_BASE_ADDR + 0x7e)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_RESET_VALUE (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_BITFIELD_MASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_RWMASK (0x0001FFFF)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_ROMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_WOMASK (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_UNUSED_MASK (0xFFFE0000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_frame_format_descriptor_ovr_OFFSET (0x00000000)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_frame_format_descriptor_ovr_WIDTH (17)
#define ISP_SMIARX3D_DESCRIPTOR_OVR_14_frame_format_descriptor_ovr_MASK (0x0001FFFF)


/*
* Address Block : GRIDIRON_MEM
*/

#define pictorv2_in_GRIDIRON_MEM_BASE_ADDR                  (0x2000U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : GRIDIRON_MEM_PAGE
*/

#define GRIDIRON_MEM_PAGE_SIZE     (32)
#define GRIDIRON_MEM_PAGE_OFFSET   (pictorv2_in_GRIDIRON_MEM_BASE_ADDR + 0x00)
#define GRIDIRON_MEM_PAGE_RESET_VALUE (0x00000000)
#define GRIDIRON_MEM_PAGE_BITFIELD_MASK (0xFFFFFFFF)
#define GRIDIRON_MEM_PAGE_RWMASK   (0x00000000)
#define GRIDIRON_MEM_PAGE_ROMASK   (0xFFFFFFFF)
#define GRIDIRON_MEM_PAGE_WOMASK   (0x00000000)
#define GRIDIRON_MEM_PAGE_UNUSED_MASK (0x00000000)
#define GRIDIRON_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define GRIDIRON_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define GRIDIRON_MEM_PAGE_PAGE_INDEX_MASK (0xFFFFFFFF)

/*
* Register : GRIDIRON_MEM_ELT_CAST0
*/

#define GRIDIRON_MEM_ELT_CAST0_SIZE (32)
#define GRIDIRON_MEM_ELT_CAST0_OFFSET (pictorv2_in_GRIDIRON_MEM_BASE_ADDR + 0x02)
#define GRIDIRON_MEM_ELT_CAST0_RESET_VALUE (0x00000000)
#define GRIDIRON_MEM_ELT_CAST0_DIMENSION (6656)
#define GRIDIRON_MEM_ELT_CAST0_BITFIELD_MASK (0x000FFFFF)
#define GRIDIRON_MEM_ELT_CAST0_RWMASK (0x000FFFFF)
#define GRIDIRON_MEM_ELT_CAST0_ROMASK (0x00000000)
#define GRIDIRON_MEM_ELT_CAST0_WOMASK (0x00000000)
#define GRIDIRON_MEM_ELT_CAST0_UNUSED_MASK (0xFFF00000)
#define GRIDIRON_MEM_ELT_CAST0_RED_OR_GIB_OFFSET (0x00000000)
#define GRIDIRON_MEM_ELT_CAST0_RED_OR_GIB_WIDTH (10)
#define GRIDIRON_MEM_ELT_CAST0_RED_OR_GIB_MASK (0x000003FF)
#define GRIDIRON_MEM_ELT_CAST0_GIR_OR_BLUE_OFFSET (0x0000000a)
#define GRIDIRON_MEM_ELT_CAST0_GIR_OR_BLUE_WIDTH (10)
#define GRIDIRON_MEM_ELT_CAST0_GIR_OR_BLUE_MASK (0x000FFC00)

/*
* Register : GRIDIRON_MEM_ELT_CAST1
*/

#define GRIDIRON_MEM_ELT_CAST1_SIZE (32)
#define GRIDIRON_MEM_ELT_CAST1_OFFSET (pictorv2_in_GRIDIRON_MEM_BASE_ADDR + 0x4002)
#define GRIDIRON_MEM_ELT_CAST1_RESET_VALUE (0x00000000)
#define GRIDIRON_MEM_ELT_CAST1_DIMENSION (6656)
#define GRIDIRON_MEM_ELT_CAST1_BITFIELD_MASK (0x000FFFFF)
#define GRIDIRON_MEM_ELT_CAST1_RWMASK (0x000FFFFF)
#define GRIDIRON_MEM_ELT_CAST1_ROMASK (0x00000000)
#define GRIDIRON_MEM_ELT_CAST1_WOMASK (0x00000000)
#define GRIDIRON_MEM_ELT_CAST1_UNUSED_MASK (0xFFF00000)
#define GRIDIRON_MEM_ELT_CAST1_RED_OR_GIB_OFFSET (0x00000000)
#define GRIDIRON_MEM_ELT_CAST1_RED_OR_GIB_WIDTH (10)
#define GRIDIRON_MEM_ELT_CAST1_RED_OR_GIB_MASK (0x000003FF)
#define GRIDIRON_MEM_ELT_CAST1_GIR_OR_BLUE_OFFSET (0x0000000a)
#define GRIDIRON_MEM_ELT_CAST1_GIR_OR_BLUE_WIDTH (10)
#define GRIDIRON_MEM_ELT_CAST1_GIR_OR_BLUE_MASK (0x000FFC00)

/*
* Register : GRIDIRON_MEM_ELT_CAST2
*/

#define GRIDIRON_MEM_ELT_CAST2_SIZE (32)
#define GRIDIRON_MEM_ELT_CAST2_OFFSET (pictorv2_in_GRIDIRON_MEM_BASE_ADDR + 0x8002)
#define GRIDIRON_MEM_ELT_CAST2_RESET_VALUE (0x00000000)
#define GRIDIRON_MEM_ELT_CAST2_DIMENSION (6656)
#define GRIDIRON_MEM_ELT_CAST2_BITFIELD_MASK (0x000FFFFF)
#define GRIDIRON_MEM_ELT_CAST2_RWMASK (0x000FFFFF)
#define GRIDIRON_MEM_ELT_CAST2_ROMASK (0x00000000)
#define GRIDIRON_MEM_ELT_CAST2_WOMASK (0x00000000)
#define GRIDIRON_MEM_ELT_CAST2_UNUSED_MASK (0xFFF00000)
#define GRIDIRON_MEM_ELT_CAST2_RED_OR_GIB_OFFSET (0x00000000)
#define GRIDIRON_MEM_ELT_CAST2_RED_OR_GIB_WIDTH (10)
#define GRIDIRON_MEM_ELT_CAST2_RED_OR_GIB_MASK (0x000003FF)
#define GRIDIRON_MEM_ELT_CAST2_GIR_OR_BLUE_OFFSET (0x0000000a)
#define GRIDIRON_MEM_ELT_CAST2_GIR_OR_BLUE_WIDTH (10)
#define GRIDIRON_MEM_ELT_CAST2_GIR_OR_BLUE_MASK (0x000FFC00)

/*
* Register : GRIDIRON_MEM_ELT_CAST3
*/

#define GRIDIRON_MEM_ELT_CAST3_SIZE (32)
#define GRIDIRON_MEM_ELT_CAST3_OFFSET (pictorv2_in_GRIDIRON_MEM_BASE_ADDR + 0xc002)
#define GRIDIRON_MEM_ELT_CAST3_RESET_VALUE (0x00000000)
#define GRIDIRON_MEM_ELT_CAST3_DIMENSION (6656)
#define GRIDIRON_MEM_ELT_CAST3_BITFIELD_MASK (0x000FFFFF)
#define GRIDIRON_MEM_ELT_CAST3_RWMASK (0x000FFFFF)
#define GRIDIRON_MEM_ELT_CAST3_ROMASK (0x00000000)
#define GRIDIRON_MEM_ELT_CAST3_WOMASK (0x00000000)
#define GRIDIRON_MEM_ELT_CAST3_UNUSED_MASK (0xFFF00000)
#define GRIDIRON_MEM_ELT_CAST3_RED_OR_GIB_OFFSET (0x00000000)
#define GRIDIRON_MEM_ELT_CAST3_RED_OR_GIB_WIDTH (10)
#define GRIDIRON_MEM_ELT_CAST3_RED_OR_GIB_MASK (0x000003FF)
#define GRIDIRON_MEM_ELT_CAST3_GIR_OR_BLUE_OFFSET (0x0000000a)
#define GRIDIRON_MEM_ELT_CAST3_GIR_OR_BLUE_WIDTH (10)
#define GRIDIRON_MEM_ELT_CAST3_GIR_OR_BLUE_MASK (0x000FFC00)


/*
* Address Block : GLACE_MEM
*/

#define pictorv2_in_GLACE_MEM_BASE_ADDR                     (0x12200U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : GLACE_MEM_PAGE
*/

#define GLACE_MEM_PAGE_SIZE           (32)
#define GLACE_MEM_PAGE_OFFSET         (pictorv2_in_GLACE_MEM_BASE_ADDR + 0x00)
#define GLACE_MEM_PAGE_RESET_VALUE    (0x00000000)
#define GLACE_MEM_PAGE_BITFIELD_MASK  (0xFFFFFFFF)
#define GLACE_MEM_PAGE_RWMASK         (0x00000000)
#define GLACE_MEM_PAGE_ROMASK         (0xFFFFFFFF)
#define GLACE_MEM_PAGE_WOMASK         (0x00000000)
#define GLACE_MEM_PAGE_UNUSED_MASK    (0x00000000)
#define GLACE_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define GLACE_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define GLACE_MEM_PAGE_PAGE_INDEX_MASK (0xFFFFFFFF)

/*
* Register : GLACE_MEM_PIX_MEAN
*/

#define GLACE_MEM_PIX_MEAN_SIZE       (32)
#define GLACE_MEM_PIX_MEAN_OFFSET     (pictorv2_in_GLACE_MEM_BASE_ADDR + 0x02)
#define GLACE_MEM_PIX_MEAN_RESET_VALUE (0x00)
#define GLACE_MEM_PIX_MEAN_DIMENSION  (3888)
#define GLACE_MEM_PIX_MEAN_BITFIELD_MASK (0x00FFFFFF)
#define GLACE_MEM_PIX_MEAN_RWMASK     (0x00FFFFFF)
#define GLACE_MEM_PIX_MEAN_ROMASK     (0x00000000)
#define GLACE_MEM_PIX_MEAN_WOMASK     (0x00000000)
#define GLACE_MEM_PIX_MEAN_UNUSED_MASK (0xFF000000)
#define GLACE_MEM_PIX_MEAN_BLUE_MEAN_OFFSET (0x00000000)
#define GLACE_MEM_PIX_MEAN_BLUE_MEAN_WIDTH (8)
#define GLACE_MEM_PIX_MEAN_BLUE_MEAN_MASK (0x000000FF)
#define GLACE_MEM_PIX_MEAN_GREEN_MEAN_OFFSET (0x00000008)
#define GLACE_MEM_PIX_MEAN_GREEN_MEAN_WIDTH (8)
#define GLACE_MEM_PIX_MEAN_GREEN_MEAN_MASK (0x0000FF00)
#define GLACE_MEM_PIX_MEAN_RED_MEAN_OFFSET (0x00000010)
#define GLACE_MEM_PIX_MEAN_RED_MEAN_WIDTH (8)
#define GLACE_MEM_PIX_MEAN_RED_MEAN_MASK (0x00FF0000)

/*
* Register : GLACE_MEM_SAT_NUM
*/

#define GLACE_MEM_SAT_NUM_SIZE        (16)
#define GLACE_MEM_SAT_NUM_OFFSET      (pictorv2_in_GLACE_MEM_BASE_ADDR + 0x04)
#define GLACE_MEM_SAT_NUM_RESET_VALUE (0x00)
#define GLACE_MEM_SAT_NUM_DIMENSION   (3888)
#define GLACE_MEM_SAT_NUM_BITFIELD_MASK (0x0FFF)
#define GLACE_MEM_SAT_NUM_RWMASK      (0x0FFF)
#define GLACE_MEM_SAT_NUM_ROMASK      (0x0000)
#define GLACE_MEM_SAT_NUM_WOMASK      (0x0000)
#define GLACE_MEM_SAT_NUM_UNUSED_MASK (0xF000)
#define GLACE_MEM_SAT_NUM_GLACE_SAT_NUM_OFFSET (0x0000)
#define GLACE_MEM_SAT_NUM_GLACE_SAT_NUM_WIDTH (12)
#define GLACE_MEM_SAT_NUM_GLACE_SAT_NUM_MASK (0x0FFF)


/*
* Address Block : HIST_MEM
*/

#define pictorv2_in_HIST_MEM_BASE_ADDR                      (0x16400U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : HIST_MEM_PAGE
*/

#define HIST_MEM_PAGE_SIZE             (32)
#define HIST_MEM_PAGE_OFFSET           (pictorv2_in_HIST_MEM_BASE_ADDR + 0x00)
#define HIST_MEM_PAGE_RESET_VALUE      (0x00000000)
#define HIST_MEM_PAGE_BITFIELD_MASK    (0xFFFFFFFF)
#define HIST_MEM_PAGE_RWMASK           (0x00000000)
#define HIST_MEM_PAGE_ROMASK           (0xFFFFFFFF)
#define HIST_MEM_PAGE_WOMASK           (0x00000000)
#define HIST_MEM_PAGE_UNUSED_MASK      (0x00000000)
#define HIST_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define HIST_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define HIST_MEM_PAGE_PAGE_INDEX_MASK  (0xFFFFFFFF)

/*
* Register : HIST_MEM_GREEN_BIN
*/

#define HIST_MEM_GREEN_BIN_SIZE        (32)
#define HIST_MEM_GREEN_BIN_OFFSET      (pictorv2_in_HIST_MEM_BASE_ADDR + 0x02)
#define HIST_MEM_GREEN_BIN_RESET_VALUE (0x00000000)
#define HIST_MEM_GREEN_BIN_DIMENSION   (256)
#define HIST_MEM_GREEN_BIN_BITFIELD_MASK (0x007FFFFF)
#define HIST_MEM_GREEN_BIN_RWMASK      (0x007FFFFF)
#define HIST_MEM_GREEN_BIN_ROMASK      (0x00000000)
#define HIST_MEM_GREEN_BIN_WOMASK      (0x00000000)
#define HIST_MEM_GREEN_BIN_UNUSED_MASK (0xFF800000)
#define HIST_MEM_GREEN_BIN_GREEN_COUNT_OFFSET (0x00000000)
#define HIST_MEM_GREEN_BIN_GREEN_COUNT_WIDTH (23)
#define HIST_MEM_GREEN_BIN_GREEN_COUNT_MASK (0x007FFFFF)

/*
* Register : HIST_MEM_RED_BIN
*/

#define HIST_MEM_RED_BIN_SIZE          (32)
#define HIST_MEM_RED_BIN_OFFSET        (pictorv2_in_HIST_MEM_BASE_ADDR + 0x202)
#define HIST_MEM_RED_BIN_RESET_VALUE   (0x00000000)
#define HIST_MEM_RED_BIN_DIMENSION     (256)
#define HIST_MEM_RED_BIN_BITFIELD_MASK (0x003FFFFF)
#define HIST_MEM_RED_BIN_RWMASK        (0x003FFFFF)
#define HIST_MEM_RED_BIN_ROMASK        (0x00000000)
#define HIST_MEM_RED_BIN_WOMASK        (0x00000000)
#define HIST_MEM_RED_BIN_UNUSED_MASK   (0xFFC00000)
#define HIST_MEM_RED_BIN_RED_COUNT_OFFSET (0x00000000)
#define HIST_MEM_RED_BIN_RED_COUNT_WIDTH (22)
#define HIST_MEM_RED_BIN_RED_COUNT_MASK (0x003FFFFF)

/*
* Register : HIST_MEM_BLUE_BIN
*/

#define HIST_MEM_BLUE_BIN_SIZE         (32)
#define HIST_MEM_BLUE_BIN_OFFSET       (pictorv2_in_HIST_MEM_BASE_ADDR + 0x402)
#define HIST_MEM_BLUE_BIN_RESET_VALUE  (0x00000000)
#define HIST_MEM_BLUE_BIN_DIMENSION    (256)
#define HIST_MEM_BLUE_BIN_BITFIELD_MASK (0x003FFFFF)
#define HIST_MEM_BLUE_BIN_RWMASK       (0x003FFFFF)
#define HIST_MEM_BLUE_BIN_ROMASK       (0x00000000)
#define HIST_MEM_BLUE_BIN_WOMASK       (0x00000000)
#define HIST_MEM_BLUE_BIN_UNUSED_MASK  (0xFFC00000)
#define HIST_MEM_BLUE_BIN_BLUE_COUNT_OFFSET (0x00000000)
#define HIST_MEM_BLUE_BIN_BLUE_COUNT_WIDTH (22)
#define HIST_MEM_BLUE_BIN_BLUE_COUNT_MASK (0x003FFFFF)


/*
* Address Block : LINEAR_MEM
*/

#define pictorv2_in_LINEAR_MEM_BASE_ADDR                    (0x16e00U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : LINEAR_MEM_PAGE
*/

#define LINEAR_MEM_PAGE_SIZE         (32)
#define LINEAR_MEM_PAGE_OFFSET       (pictorv2_in_LINEAR_MEM_BASE_ADDR + 0x00)
#define LINEAR_MEM_PAGE_RESET_VALUE  (0x00000000)
#define LINEAR_MEM_PAGE_BITFIELD_MASK (0xFFFFFFFF)
#define LINEAR_MEM_PAGE_RWMASK       (0x00000000)
#define LINEAR_MEM_PAGE_ROMASK       (0xFFFFFFFF)
#define LINEAR_MEM_PAGE_WOMASK       (0x00000000)
#define LINEAR_MEM_PAGE_UNUSED_MASK  (0x00000000)
#define LINEAR_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define LINEAR_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define LINEAR_MEM_PAGE_PAGE_INDEX_MASK (0xFFFFFFFF)

/*
* Register : LINEAR_MEM_LUT_GINR_ELT
*/

#define LINEAR_MEM_LUT_GINR_ELT_SIZE (16)
#define LINEAR_MEM_LUT_GINR_ELT_OFFSET (pictorv2_in_LINEAR_MEM_BASE_ADDR + 0x02)
#define LINEAR_MEM_LUT_GINR_ELT_RESET_VALUE (0x00000000)
#define LINEAR_MEM_LUT_GINR_ELT_DIMENSION (256)
#define LINEAR_MEM_LUT_GINR_ELT_BITFIELD_MASK (0x0FFF)
#define LINEAR_MEM_LUT_GINR_ELT_RWMASK (0x0FFF)
#define LINEAR_MEM_LUT_GINR_ELT_ROMASK (0x0000)
#define LINEAR_MEM_LUT_GINR_ELT_WOMASK (0x0000)
#define LINEAR_MEM_LUT_GINR_ELT_UNUSED_MASK (0xF000)
#define LINEAR_MEM_LUT_GINR_ELT_GINR_REF_VALUE_OFFSET (0x0000)
#define LINEAR_MEM_LUT_GINR_ELT_GINR_REF_VALUE_WIDTH (12)
#define LINEAR_MEM_LUT_GINR_ELT_GINR_REF_VALUE_MASK (0x0FFF)

/*
* Register : LINEAR_MEM_LUT_RED_ELT
*/

#define LINEAR_MEM_LUT_RED_ELT_SIZE  (16)
#define LINEAR_MEM_LUT_RED_ELT_OFFSET (pictorv2_in_LINEAR_MEM_BASE_ADDR + 0x202)
#define LINEAR_MEM_LUT_RED_ELT_RESET_VALUE (0x00000000)
#define LINEAR_MEM_LUT_RED_ELT_DIMENSION (256)
#define LINEAR_MEM_LUT_RED_ELT_BITFIELD_MASK (0x0FFF)
#define LINEAR_MEM_LUT_RED_ELT_RWMASK (0x0FFF)
#define LINEAR_MEM_LUT_RED_ELT_ROMASK (0x0000)
#define LINEAR_MEM_LUT_RED_ELT_WOMASK (0x0000)
#define LINEAR_MEM_LUT_RED_ELT_UNUSED_MASK (0xF000)
#define LINEAR_MEM_LUT_RED_ELT_RED_REF_VALUE_OFFSET (0x0000)
#define LINEAR_MEM_LUT_RED_ELT_RED_REF_VALUE_WIDTH (12)
#define LINEAR_MEM_LUT_RED_ELT_RED_REF_VALUE_MASK (0x0FFF)

/*
* Register : LINEAR_MEM_LUT_BLUE_ELT
*/

#define LINEAR_MEM_LUT_BLUE_ELT_SIZE (16)
#define LINEAR_MEM_LUT_BLUE_ELT_OFFSET (pictorv2_in_LINEAR_MEM_BASE_ADDR + 0x402)
#define LINEAR_MEM_LUT_BLUE_ELT_RESET_VALUE (0x00000000)
#define LINEAR_MEM_LUT_BLUE_ELT_DIMENSION (256)
#define LINEAR_MEM_LUT_BLUE_ELT_BITFIELD_MASK (0x0FFF)
#define LINEAR_MEM_LUT_BLUE_ELT_RWMASK (0x0FFF)
#define LINEAR_MEM_LUT_BLUE_ELT_ROMASK (0x0000)
#define LINEAR_MEM_LUT_BLUE_ELT_WOMASK (0x0000)
#define LINEAR_MEM_LUT_BLUE_ELT_UNUSED_MASK (0xF000)
#define LINEAR_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_OFFSET (0x0000)
#define LINEAR_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_WIDTH (12)
#define LINEAR_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_MASK (0x0FFF)

/*
* Register : LINEAR_MEM_LUT_GINB_ELT
*/

#define LINEAR_MEM_LUT_GINB_ELT_SIZE (16)
#define LINEAR_MEM_LUT_GINB_ELT_OFFSET (pictorv2_in_LINEAR_MEM_BASE_ADDR + 0x602)
#define LINEAR_MEM_LUT_GINB_ELT_RESET_VALUE (0x00000000)
#define LINEAR_MEM_LUT_GINB_ELT_DIMENSION (256)
#define LINEAR_MEM_LUT_GINB_ELT_BITFIELD_MASK (0x0FFF)
#define LINEAR_MEM_LUT_GINB_ELT_RWMASK (0x0FFF)
#define LINEAR_MEM_LUT_GINB_ELT_ROMASK (0x0000)
#define LINEAR_MEM_LUT_GINB_ELT_WOMASK (0x0000)
#define LINEAR_MEM_LUT_GINB_ELT_UNUSED_MASK (0xF000)
#define LINEAR_MEM_LUT_GINB_ELT_GINB_REF_VALUE_OFFSET (0x0000)
#define LINEAR_MEM_LUT_GINB_ELT_GINB_REF_VALUE_WIDTH (12)
#define LINEAR_MEM_LUT_GINB_ELT_GINB_REF_VALUE_MASK (0x0FFF)


/*
* Address Block : CE0_SHARP_MEM
*/

#define pictorv2_in_CE0_SHARP_MEM_BASE_ADDR                 (0x17800U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : CE0_SHARP_MEM_PAGE
*/

#define CE0_SHARP_MEM_PAGE_SIZE   (32)
#define CE0_SHARP_MEM_PAGE_OFFSET (pictorv2_in_CE0_SHARP_MEM_BASE_ADDR + 0x00)
#define CE0_SHARP_MEM_PAGE_RESET_VALUE (0x00000000)
#define CE0_SHARP_MEM_PAGE_BITFIELD_MASK (0xFFFFFFFF)
#define CE0_SHARP_MEM_PAGE_RWMASK (0x00000000)
#define CE0_SHARP_MEM_PAGE_ROMASK (0xFFFFFFFF)
#define CE0_SHARP_MEM_PAGE_WOMASK (0x00000000)
#define CE0_SHARP_MEM_PAGE_UNUSED_MASK (0x00000000)
#define CE0_SHARP_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define CE0_SHARP_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define CE0_SHARP_MEM_PAGE_PAGE_INDEX_MASK (0xFFFFFFFF)

/*
* Register : CE0_SHARP_MEM_LUT_GREEN_ELT
*/

#define CE0_SHARP_MEM_LUT_GREEN_ELT_SIZE (16)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_OFFSET (pictorv2_in_CE0_SHARP_MEM_BASE_ADDR + 0x02)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_RESET_VALUE (0x00000000)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_DIMENSION (128)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_BITFIELD_MASK (0x03FF)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_RWMASK (0x03FF)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_ROMASK (0x0000)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_WOMASK (0x0000)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_UNUSED_MASK (0xFC00)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_OFFSET (0x0000)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_WIDTH (10)
#define CE0_SHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_MASK (0x03FF)

/*
* Register : CE0_SHARP_MEM_LUT_RED_ELT
*/

#define CE0_SHARP_MEM_LUT_RED_ELT_SIZE (16)
#define CE0_SHARP_MEM_LUT_RED_ELT_OFFSET (pictorv2_in_CE0_SHARP_MEM_BASE_ADDR + 0x102)
#define CE0_SHARP_MEM_LUT_RED_ELT_RESET_VALUE (0x00000000)
#define CE0_SHARP_MEM_LUT_RED_ELT_DIMENSION (128)
#define CE0_SHARP_MEM_LUT_RED_ELT_BITFIELD_MASK (0x03FF)
#define CE0_SHARP_MEM_LUT_RED_ELT_RWMASK (0x03FF)
#define CE0_SHARP_MEM_LUT_RED_ELT_ROMASK (0x0000)
#define CE0_SHARP_MEM_LUT_RED_ELT_WOMASK (0x0000)
#define CE0_SHARP_MEM_LUT_RED_ELT_UNUSED_MASK (0xFC00)
#define CE0_SHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_OFFSET (0x0000)
#define CE0_SHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_WIDTH (10)
#define CE0_SHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_MASK (0x03FF)

/*
* Register : CE0_SHARP_MEM_LUT_BLUE_ELT
*/

#define CE0_SHARP_MEM_LUT_BLUE_ELT_SIZE (16)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_OFFSET (pictorv2_in_CE0_SHARP_MEM_BASE_ADDR + 0x202)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_RESET_VALUE (0x00000000)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_DIMENSION (128)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_BITFIELD_MASK (0x03FF)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_RWMASK (0x03FF)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_ROMASK (0x0000)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_WOMASK (0x0000)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_UNUSED_MASK (0xFC00)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_OFFSET (0x0000)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_WIDTH (10)
#define CE0_SHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_MASK (0x03FF)


/*
* Address Block : CE0_UNSHARP_MEM
*/

#define pictorv2_in_CE0_UNSHARP_MEM_BASE_ADDR               (0x17e00U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : CE0_UNSHARP_MEM_PAGE
*/

#define CE0_UNSHARP_MEM_PAGE_SIZE (32)
#define CE0_UNSHARP_MEM_PAGE_OFFSET (pictorv2_in_CE0_UNSHARP_MEM_BASE_ADDR + 0x00)
#define CE0_UNSHARP_MEM_PAGE_RESET_VALUE (0x00000000)
#define CE0_UNSHARP_MEM_PAGE_BITFIELD_MASK (0xFFFFFFFF)
#define CE0_UNSHARP_MEM_PAGE_RWMASK (0x00000000)
#define CE0_UNSHARP_MEM_PAGE_ROMASK (0xFFFFFFFF)
#define CE0_UNSHARP_MEM_PAGE_WOMASK (0x00000000)
#define CE0_UNSHARP_MEM_PAGE_UNUSED_MASK (0x00000000)
#define CE0_UNSHARP_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define CE0_UNSHARP_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define CE0_UNSHARP_MEM_PAGE_PAGE_INDEX_MASK (0xFFFFFFFF)

/*
* Register : CE0_UNSHARP_MEM_LUT_GREEN_ELT
*/

#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_SIZE (16)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_OFFSET (pictorv2_in_CE0_UNSHARP_MEM_BASE_ADDR + 0x02)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_RESET_VALUE (0x00000000)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_DIMENSION (128)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_BITFIELD_MASK (0x03FF)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_RWMASK (0x03FF)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_ROMASK (0x0000)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_WOMASK (0x0000)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_UNUSED_MASK (0xFC00)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_OFFSET (0x0000)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_WIDTH (10)
#define CE0_UNSHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_MASK (0x03FF)

/*
* Register : CE0_UNSHARP_MEM_LUT_RED_ELT
*/

#define CE0_UNSHARP_MEM_LUT_RED_ELT_SIZE (16)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_OFFSET (pictorv2_in_CE0_UNSHARP_MEM_BASE_ADDR + 0x102)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_RESET_VALUE (0x00000000)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_DIMENSION (128)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_BITFIELD_MASK (0x03FF)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_RWMASK (0x03FF)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_ROMASK (0x0000)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_WOMASK (0x0000)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_UNUSED_MASK (0xFC00)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_OFFSET (0x0000)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_WIDTH (10)
#define CE0_UNSHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_MASK (0x03FF)

/*
* Register : CE0_UNSHARP_MEM_LUT_BLUE_ELT
*/

#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_SIZE (16)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_OFFSET (pictorv2_in_CE0_UNSHARP_MEM_BASE_ADDR + 0x202)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_RESET_VALUE (0x00000000)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_DIMENSION (128)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_BITFIELD_MASK (0x03FF)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_RWMASK (0x03FF)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_ROMASK (0x0000)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_WOMASK (0x0000)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_UNUSED_MASK (0xFC00)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_OFFSET (0x0000)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_WIDTH (10)
#define CE0_UNSHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_MASK (0x03FF)


/*
* Address Block : CE1_SHARP_MEM
*/

#define pictorv2_in_CE1_SHARP_MEM_BASE_ADDR                 (0x18400U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : CE1_SHARP_MEM_PAGE
*/

#define CE1_SHARP_MEM_PAGE_SIZE   (32)
#define CE1_SHARP_MEM_PAGE_OFFSET (pictorv2_in_CE1_SHARP_MEM_BASE_ADDR + 0x00)
#define CE1_SHARP_MEM_PAGE_RESET_VALUE (0x00000000)
#define CE1_SHARP_MEM_PAGE_BITFIELD_MASK (0xFFFFFFFF)
#define CE1_SHARP_MEM_PAGE_RWMASK (0x00000000)
#define CE1_SHARP_MEM_PAGE_ROMASK (0xFFFFFFFF)
#define CE1_SHARP_MEM_PAGE_WOMASK (0x00000000)
#define CE1_SHARP_MEM_PAGE_UNUSED_MASK (0x00000000)
#define CE1_SHARP_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define CE1_SHARP_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define CE1_SHARP_MEM_PAGE_PAGE_INDEX_MASK (0xFFFFFFFF)

/*
* Register : CE1_SHARP_MEM_LUT_GREEN_ELT
*/

#define CE1_SHARP_MEM_LUT_GREEN_ELT_SIZE (16)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_OFFSET (pictorv2_in_CE1_SHARP_MEM_BASE_ADDR + 0x02)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_RESET_VALUE (0x00000000)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_DIMENSION (128)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_BITFIELD_MASK (0x03FF)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_RWMASK (0x03FF)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_ROMASK (0x0000)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_WOMASK (0x0000)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_UNUSED_MASK (0xFC00)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_OFFSET (0x0000)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_WIDTH (10)
#define CE1_SHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_MASK (0x03FF)

/*
* Register : CE1_SHARP_MEM_LUT_RED_ELT
*/

#define CE1_SHARP_MEM_LUT_RED_ELT_SIZE (16)
#define CE1_SHARP_MEM_LUT_RED_ELT_OFFSET (pictorv2_in_CE1_SHARP_MEM_BASE_ADDR + 0x102)
#define CE1_SHARP_MEM_LUT_RED_ELT_RESET_VALUE (0x00000000)
#define CE1_SHARP_MEM_LUT_RED_ELT_DIMENSION (128)
#define CE1_SHARP_MEM_LUT_RED_ELT_BITFIELD_MASK (0x03FF)
#define CE1_SHARP_MEM_LUT_RED_ELT_RWMASK (0x03FF)
#define CE1_SHARP_MEM_LUT_RED_ELT_ROMASK (0x0000)
#define CE1_SHARP_MEM_LUT_RED_ELT_WOMASK (0x0000)
#define CE1_SHARP_MEM_LUT_RED_ELT_UNUSED_MASK (0xFC00)
#define CE1_SHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_OFFSET (0x0000)
#define CE1_SHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_WIDTH (10)
#define CE1_SHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_MASK (0x03FF)

/*
* Register : CE1_SHARP_MEM_LUT_BLUE_ELT
*/

#define CE1_SHARP_MEM_LUT_BLUE_ELT_SIZE (16)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_OFFSET (pictorv2_in_CE1_SHARP_MEM_BASE_ADDR + 0x202)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_RESET_VALUE (0x00000000)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_DIMENSION (128)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_BITFIELD_MASK (0x03FF)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_RWMASK (0x03FF)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_ROMASK (0x0000)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_WOMASK (0x0000)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_UNUSED_MASK (0xFC00)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_OFFSET (0x0000)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_WIDTH (10)
#define CE1_SHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_MASK (0x03FF)


/*
* Address Block : CE1_UNSHARP_MEM
*/

#define pictorv2_in_CE1_UNSHARP_MEM_BASE_ADDR               (0x18a00U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : CE1_UNSHARP_MEM_PAGE
*/

#define CE1_UNSHARP_MEM_PAGE_SIZE (32)
#define CE1_UNSHARP_MEM_PAGE_OFFSET (pictorv2_in_CE1_UNSHARP_MEM_BASE_ADDR + 0x00)
#define CE1_UNSHARP_MEM_PAGE_RESET_VALUE (0x00000000)
#define CE1_UNSHARP_MEM_PAGE_BITFIELD_MASK (0xFFFFFFFF)
#define CE1_UNSHARP_MEM_PAGE_RWMASK (0x00000000)
#define CE1_UNSHARP_MEM_PAGE_ROMASK (0xFFFFFFFF)
#define CE1_UNSHARP_MEM_PAGE_WOMASK (0x00000000)
#define CE1_UNSHARP_MEM_PAGE_UNUSED_MASK (0x00000000)
#define CE1_UNSHARP_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define CE1_UNSHARP_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define CE1_UNSHARP_MEM_PAGE_PAGE_INDEX_MASK (0xFFFFFFFF)

/*
* Register : CE1_UNSHARP_MEM_LUT_GREEN_ELT
*/

#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_SIZE (16)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_OFFSET (pictorv2_in_CE1_UNSHARP_MEM_BASE_ADDR + 0x02)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_RESET_VALUE (0x00000000)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_DIMENSION (128)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_BITFIELD_MASK (0x03FF)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_RWMASK (0x03FF)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_ROMASK (0x0000)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_WOMASK (0x0000)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_UNUSED_MASK (0xFC00)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_OFFSET (0x0000)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_WIDTH (10)
#define CE1_UNSHARP_MEM_LUT_GREEN_ELT_GREEN_REF_VALUE_MASK (0x03FF)

/*
* Register : CE1_UNSHARP_MEM_LUT_RED_ELT
*/

#define CE1_UNSHARP_MEM_LUT_RED_ELT_SIZE (16)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_OFFSET (pictorv2_in_CE1_UNSHARP_MEM_BASE_ADDR + 0x102)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_RESET_VALUE (0x00000000)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_DIMENSION (128)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_BITFIELD_MASK (0x03FF)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_RWMASK (0x03FF)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_ROMASK (0x0000)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_WOMASK (0x0000)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_UNUSED_MASK (0xFC00)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_OFFSET (0x0000)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_WIDTH (10)
#define CE1_UNSHARP_MEM_LUT_RED_ELT_RED_REF_VALUE_MASK (0x03FF)

/*
* Register : CE1_UNSHARP_MEM_LUT_BLUE_ELT
*/

#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_SIZE (16)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_OFFSET (pictorv2_in_CE1_UNSHARP_MEM_BASE_ADDR + 0x202)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_RESET_VALUE (0x00000000)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_DIMENSION (128)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_BITFIELD_MASK (0x03FF)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_RWMASK (0x03FF)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_ROMASK (0x0000)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_WOMASK (0x0000)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_UNUSED_MASK (0xFC00)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_OFFSET (0x0000)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_WIDTH (10)
#define CE1_UNSHARP_MEM_LUT_BLUE_ELT_BLUE_REF_VALUE_MASK (0x03FF)


/*
* Address Block : DUSTER_MEM
*/

#define pictorv2_in_DUSTER_MEM_BASE_ADDR                    (0x19000U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : DUSTER_MEM_PAGE
*/

#define DUSTER_MEM_PAGE_SIZE         (32)
#define DUSTER_MEM_PAGE_OFFSET       (pictorv2_in_DUSTER_MEM_BASE_ADDR + 0x00)
#define DUSTER_MEM_PAGE_RESET_VALUE  (0x00000000)
#define DUSTER_MEM_PAGE_BITFIELD_MASK (0xFFFFFFFF)
#define DUSTER_MEM_PAGE_RWMASK       (0x00000000)
#define DUSTER_MEM_PAGE_ROMASK       (0xFFFFFFFF)
#define DUSTER_MEM_PAGE_WOMASK       (0x00000000)
#define DUSTER_MEM_PAGE_UNUSED_MASK  (0x00000000)
#define DUSTER_MEM_PAGE_PAGE_INDEX_OFFSET (0x00000000)
#define DUSTER_MEM_PAGE_PAGE_INDEX_WIDTH (32)
#define DUSTER_MEM_PAGE_PAGE_INDEX_MASK (0xFFFFFFFF)

/*
* Register : DUSTER_MEM_POSITION_DEFECT
*/

#define DUSTER_MEM_POSITION_DEFECT_SIZE (32)
#define DUSTER_MEM_POSITION_DEFECT_OFFSET (pictorv2_in_DUSTER_MEM_BASE_ADDR + 0x02)
#define DUSTER_MEM_POSITION_DEFECT_RESET_VALUE (0x00000000)
#define DUSTER_MEM_POSITION_DEFECT_DIMENSION (512)
#define DUSTER_MEM_POSITION_DEFECT_BITFIELD_MASK (0x00FFF000)
#define DUSTER_MEM_POSITION_DEFECT_RWMASK (0x00FFF000)
#define DUSTER_MEM_POSITION_DEFECT_ROMASK (0x00000000)
#define DUSTER_MEM_POSITION_DEFECT_WOMASK (0x00000000)
#define DUSTER_MEM_POSITION_DEFECT_UNUSED_MASK (0xFF000FFF)
#define DUSTER_MEM_POSITION_DEFECT_Y_OFFSET (0x0000000c)
#define DUSTER_MEM_POSITION_DEFECT_Y_WIDTH (12)
#define DUSTER_MEM_POSITION_DEFECT_Y_MASK (0x00FFF000)


/*
* Address Block : XP70_L2_MEM
*/

#define pictorv2_in_XP70_L2_MEM_BASE_ADDR                   (0x20000U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : XP70_PROGL2_MEM_CELL
*/

#define XP70_PROGL2_MEM_CELL_SIZE   (32)
#define XP70_PROGL2_MEM_CELL_OFFSET (pictorv2_in_XP70_L2_MEM_BASE_ADDR + 0x00)
#define XP70_PROGL2_MEM_CELL_RESET_VALUE (0x00000000)
#define XP70_PROGL2_MEM_CELL_DIMENSION (16384)
#define XP70_PROGL2_MEM_CELL_BITFIELD_MASK (0xFFFFFFFF)
#define XP70_PROGL2_MEM_CELL_RWMASK (0xFFFFFFFF)
#define XP70_PROGL2_MEM_CELL_ROMASK (0x00000000)
#define XP70_PROGL2_MEM_CELL_WOMASK (0x00000000)
#define XP70_PROGL2_MEM_CELL_UNUSED_MASK (0x00000000)
#define XP70_PROGL2_MEM_CELL_L2_PROG_CELL_OFFSET (0x00000000)
#define XP70_PROGL2_MEM_CELL_L2_PROG_CELL_WIDTH (32)
#define XP70_PROGL2_MEM_CELL_L2_PROG_CELL_MASK (0xFFFFFFFF)


/*
* Address Block : XP70_TCDM_MEM
*/

#define pictorv2_in_XP70_TCDM_MEM_BASE_ADDR                 (0x30000U)

/*
* Register section
* Purpose : defines macros for register and
*           its associated fields specific
*           informations
*/

/*
* Register : XP70_TCDM_MEM_CELL
*/

#define XP70_TCDM_MEM_CELL_SIZE   (32)
#define XP70_TCDM_MEM_CELL_OFFSET (pictorv2_in_XP70_TCDM_MEM_BASE_ADDR + 0x00)
#define XP70_TCDM_MEM_CELL_RESET_VALUE (0x00000000)
#define XP70_TCDM_MEM_CELL_DIMENSION (2048)
#define XP70_TCDM_MEM_CELL_BITFIELD_MASK (0xFFFFFFFF)
#define XP70_TCDM_MEM_CELL_RWMASK (0xFFFFFFFF)
#define XP70_TCDM_MEM_CELL_ROMASK (0x00000000)
#define XP70_TCDM_MEM_CELL_WOMASK (0x00000000)
#define XP70_TCDM_MEM_CELL_UNUSED_MASK (0x00000000)
#define XP70_TCDM_MEM_CELL_TCDM_CELL_OFFSET (0x00000000)
#define XP70_TCDM_MEM_CELL_TCDM_CELL_WIDTH (32)
#define XP70_TCDM_MEM_CELL_TCDM_CELL_MASK (0xFFFFFFFF)

#endif /* _PICTORV2_IN_H_ */
