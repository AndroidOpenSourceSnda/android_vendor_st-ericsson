# This script tests the CS-Call in non-tunneled loopback mode (no use of modem) with AMR-NB algo.
#
# Audio Network Description:
# 
#                          +--------------+
#                          |              |
#    OUTPUT_MODEM_FILE <-- |           ..0| <-- INPUT_FILE
#                          |   CS-Call .  |
#     INPUT_MODEM_FILE --> |           ..1| --> OUTPUT_FILE
#                          |              |
#                          +--------------+
#
# Script's arguments:
#   $1 : ISI/MAI select protocol (ISI if not specified)
#   $2 : select trace level      (0 if not specified)

test_start CSCALL_1001
test_property TEST_NAME cscall_mrep_amrnb

# script parameter
if "$($1)" == "MAI"
  alias PROTOCOL AFM_AUDIO_PROTOCOL_MAI
  alias PROTO MAI 
else
  alias PROTOCOL AFM_AUDIO_PROTOCOL_ISI
  alias PROTO ISI
endif

if "$($2)" != ""
  alias TRACE_LEVEL $($2)
else
  alias TRACE_LEVEL 0
endif

#I/Os parameters
alias SAMPLING_RATE             8000
alias NB_CHANNELS            	1

alias INPUT_FILE                $(AUDIO_STREAMS)/cscall/streams/T04.INP
alias INPUT_MODEM_FILE          $(AUDIO_STREAMS)/cscall/streams/amrnb_gsm_515_dtxon.$(PROTO).mrp

alias OUTPUT_FILE               $(OUTPUT_DIR)/cscall_mrep_amrnb.$(PROTO).OUT
alias OUTPUT_MODEM_FILE         $(OUTPUT_DIR)/cscall_mrep_amrnb.$(PROTO).mrp.OUT
alias OUTPUT_SIZE               3000000
# OUTPUT_MODEM_SIZE = 320000 bytes ==> 10 secondes for PCM codec @16kHz
alias OUTPUT_MODEM_SIZE         3200000
# TIMING_DL : Delay in us before first modem DL message
alias TIMING_DL                 2000000

alias REF_FILE                  $(AUDIO_STREAMS)/cscall/streams/cscall_lpback_amrnb_515_dtxon.ref
alias REF_MODEM_FILE            $(AUDIO_STREAMS)/cscall/streams/cscall_mrep_amrnb.$(PROTO).mrp.ref

#Input Buffer parameters
alias INPUT_BUFFERCOUNT         nBufferCountActual=4

#Output Buffer parameters
alias OUTPUT_BUFFERCOUNT        nBufferCountActual=4

alias IN         1
alias OUT        0

#start test
OMX_GetHandle    CSCALL  OMX.ST.AFM.cscall
OMX_SendCommand  CSCALL  OMX_CommandPortDisable 2
MMTE_WaitEvent   CSCALL OMX_EventCmdComplete OMX_CommandPortDisable 2

# activate trace
if $(TRACE_LEVEL) > 0
  OMX_SetConfig CSCALL ENS_IndexConfigTraceSetting nTraceEnable=$(TRACE_LEVEL)
endif

#Setting Config for Loops
OMX_SetConfig    CSCALL  OMX_Symbian_IndexConfigAudioSpeechLoops bLoopUplinkDownlinkAlg=1
#Setting Config for Loops Complete

OMX_SetParameter CSCALL  OMX_IndexParamPortDefinition nPortIndex=$(IN) INPUT_BUFFERCOUNT
OMX_SetParameter CSCALL  OMX_IndexParamPortDefinition nPortIndex=$(OUT) OUTPUT_BUFFERCOUNT
OMX_SetParameter CSCALL  OMX_IndexParamAudioPcm nPortIndex=$(IN) nChannels=$(NB_CHANNELS) eEndian=OMX_EndianLittle nSamplingRate=$(SAMPLING_RATE)
OMX_SetParameter CSCALL  OMX_IndexParamAudioPcm nPortIndex=$(OUT) nChannels=$(NB_CHANNELS) eEndian=OMX_EndianLittle nSamplingRate=$(SAMPLING_RATE)
OMX_SetParameter CSCALL  AFM_IndexParamCscall nULRealTimeMode=OMX_FALSE nDLRealTimeMode=OMX_FALSE eProtocol=$(PROTOCOL)

#Setting Config for received callback when speech codec is enabled
OMX_SetConfig    CSCALL  OMX_IndexConfigCallbackRequest nIndex=OMX_Symbian_IndexConfigAudioCodecEnabled bEnable=OMX_TRUE
#Setting Config for received callback when speech codec is disabled
OMX_SetConfig    CSCALL  OMX_IndexConfigCallbackRequest nIndex=OMX_Symbian_IndexConfigAudioCodecDisabled bEnable=OMX_TRUE


#Set CSCall component in Idle state
OMX_SendCommand	CSCALL OMX_CommandStateSet OMX_StateIdle
MMTE_AllocateAndUseBuffers CSCALL IN
MMTE_AllocateAndUseBuffers CSCALL OUT
MMTE_WaitEvent CSCALL OMX_EventCmdComplete OMX_CommandStateSet OMX_StateIdle



ate_attach_io CSCALL IN MEM INPUT_FILE 0 1 0
ate_attach_io CSCALL OUT MEM OUTPUT_FILE OUTPUT_SIZE 1 0

#Start CS-CALL
OMX_SendCommand CSCALL OMX_CommandStateSet OMX_StateExecuting
MMTE_WaitEvent CSCALL OMX_EventCmdComplete OMX_CommandStateSet OMX_StateExecuting

#Set ModemRePlay Mode 
#mmte_check_test
ate_mrep_configuration CSCALL TIMING_DL INPUT_MODEM_FILE OUTPUT_MODEM_FILE OUTPUT_MODEM_SIZE

mmte_sleep 7000

#Get and check various of configurations
OMX_GetConfig 0 CSCALL OMX_Symbian_IndexConfigAudioUplinkTimingInfo

OMX_GetConfig 0 CSCALL OMX_Symbian_IndexConfigAudioDecoderStatus
MMTE_CheckConfig CSCALL OMX_Symbian_IndexConfigAudioDecoderStatus nCoding=OMX_AUDIO_CodingAMR nBitrate=5150

OMX_GetConfig 0 CSCALL OMX_Symbian_IndexConfigAudioEncoderStatus
MMTE_CheckConfig CSCALL OMX_Symbian_IndexConfigAudioDecoderStatus nCoding=OMX_AUDIO_CodingAMR nBitrate=5150

#Setting Config for Speech Codec Request
OMX_SetConfig    CSCALL  AFM_IndexConfigCscallSpeechCodecReq nCodingType=OMX_AUDIO_CodingUnused
MMTE_WaitEvent   CSCALL  OMX_EventBufferFlag OUT 0
#Setting Config for Speech Codec Request Complete

#Wait for callback when speech codec is disabled : CALL END!
MMTE_WaitEvent CSCALL OMX_EventIndexSettingChanged OMX_ALL OMX_Symbian_IndexConfigAudioCodecDisabled

#Check various of configurations
MMTE_CheckConfig CSCALL OMX_Symbian_IndexConfigAudioDecoderStatus nCoding=OMX_AUDIO_CodingUnused nBitrate=0
MMTE_CheckConfig CSCALL OMX_Symbian_IndexConfigAudioDecoderStatus nCoding=OMX_AUDIO_CodingUnused nBitrate=0

OMX_SendCommand	 CSCALL OMX_CommandStateSet OMX_StateIdle
MMTE_WaitEvent   CSCALL OMX_EventCmdComplete OMX_CommandStateSet OMX_StateIdle

OMX_SendCommand	 CSCALL OMX_CommandStateSet OMX_StateLoaded
MMTE_FreeBuffers CSCALL IN 
MMTE_FreeBuffers CSCALL OUT
ate_mrep_free
MMTE_WaitEvent   CSCALL OMX_EventCmdComplete OMX_CommandStateSet OMX_StateLoaded

OMX_FreeHandle   CSCALL

file_comp $(OUTPUT_FILE) REF_FILE
#We cannot compare modem files as upload data depends on ulrate timer
#file_comp $(OUTPUT_MODEM_FILE) REF_MODEM_FILE

MMTE_CheckMemoryStatus

unalias PROTO
unalias PROTOCOL
unalias TRACE_LEVEL
unalias SAMPLING_RATE
unalias NB_CHANNELS 
unalias INPUT_FILE
unalias INPUT_MODEM_FILE
unalias OUTPUT_FILE
unalias OUTPUT_SIZE
unalias OUTPUT_MODEM_SIZE
unalias REF_FILE
unalias REF_MODEM_FILE
unalias INPUT_BUFFERCOUNT
unalias OUTPUT_BUFFERCOUNT
unalias IN
unalias OUT
test_end
