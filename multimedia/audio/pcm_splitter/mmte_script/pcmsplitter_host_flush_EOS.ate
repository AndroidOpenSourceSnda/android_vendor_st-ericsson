# This script sends flush command to input and output ports of a component.
# !! OUTPUT_SIZE alias has to be defined 
# sequence is :
# - Start until EOS
# - Send Flush Command
# - attach again input/output files
# - Start until EOS

test_start PCM_SPL_021
test_property TEST_NAME pcmsplitter_host_flush_allports_EOS

alias TIMEOUT 0

# instantiate and configure pcmsplitter
OMX_GetHandle pcmsplitter OMX.ST.AFM.pcmsplitter_host

OMX_SetParameter    pcmsplitter OMX_IndexParamAudioPcm nPortIndex=0 nChannels=1 nSamplingRate=8000 eEndian=OMX_EndianBig eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter    pcmsplitter OMX_IndexParamAudioPcm nPortIndex=1 nChannels=1 nSamplingRate=8000 eEndian=OMX_EndianBig eChannelMapping[0]=OMX_AUDIO_ChannelCF
OMX_SetParameter    pcmsplitter OMX_IndexParamAudioPcm nPortIndex=2 nChannels=1 nSamplingRate=8000 eEndian=OMX_EndianBig eChannelMapping[0]=OMX_AUDIO_ChannelCF

alias INPUT_FILE    $(AUDIO_STREAMS)/pcm_splitter/streams/Portal_8m.pcm
ate_attach_io       pcmsplitter 0 MEM $(INPUT_FILE) 0 0 0

alias OUTPUT_FILE1  $(OUTPUT_DIR)/pcmsplitter_host_pcm_8k_mono_1.out
alias OUTPUT_SIZE   2000000
ate_attach_io       pcmsplitter 1 MEM $(OUTPUT_FILE1) $(OUTPUT_SIZE) 0 0

# 2nd output port
alias OUTPUT_FILE2  $(OUTPUT_DIR)/pcmsplitter_host_pcm_8k_mono_2.out
alias OUTPUT_SIZE   2000000
ate_attach_io       pcmsplitter 2 MEM $(OUTPUT_FILE2) $(OUTPUT_SIZE) 0 0

alias REF_FILE      $(AUDIO_STREAMS)/pcm_splitter/streams/Portal_8m.pcm
alias REF_DIGEST    $(AUDIO_STREAMS)/pcm_splitter/streams/Portal_host_8m_digest.hash

# test OMX state machine 
# Basic OMX checks
MMTE_CheckParameter pcmsplitter OMX_IndexParamAudioInit nPorts=3 nStartPortNumber=0
MMTE_CheckParameter pcmsplitter OMX_IndexParamVideoInit nPorts=0
MMTE_CheckParameter pcmsplitter OMX_IndexParamImageInit nPorts=0
MMTE_CheckParameter pcmsplitter OMX_IndexParamOtherInit nPorts=0

# Go to Idle
OMX_SendCommand pcmsplitter  OMX_CommandStateSet OMX_StateIdle
MMTE_AllocateBuffers pcmsplitter 0
MMTE_AllocateBuffers pcmsplitter 1
MMTE_AllocateBuffers pcmsplitter 2
MMTE_WaitEvent pcmsplitter OMX_EventCmdComplete OMX_CommandStateSet OMX_StateIdle

# Go to Executing
OMX_SendCommand pcmsplitter OMX_CommandStateSet OMX_StateExecuting
MMTE_WaitEvent  pcmsplitter OMX_EventCmdComplete OMX_CommandStateSet OMX_StateExecuting

#Wait EOS
MMTE_WaitEvent  pcmsplitter OMX_EventBufferFlag 1 TIMEOUT
MMTE_WaitEvent  pcmsplitter OMX_EventBufferFlag 2 TIMEOUT

# compare first decoded data
MMTE_detach_io pcmsplitter 1
file_comp OUTPUT_FILE1 REF_FILE
MMTE_detach_io pcmsplitter 2
file_comp OUTPUT_FILE2 REF_FILE

# flush buffers
OMX_SendCommand pcmsplitter OMX_CommandFlush 0
MMTE_WaitEvent  pcmsplitter OMX_EventCmdComplete OMX_CommandFlush 0
OMX_SendCommand pcmsplitter OMX_CommandFlush 1
MMTE_WaitEvent  pcmsplitter OMX_EventCmdComplete OMX_CommandFlush 1
OMX_SendCommand pcmsplitter OMX_CommandFlush 2
MMTE_WaitEvent  pcmsplitter OMX_EventCmdComplete OMX_CommandFlush 2

# flush MMTE Received Event List
MMTE_FlushReceivedEvent

# attach again input and output files
# !! attach output files
alias OUTPUT_FILE1_2   $(OUTPUT_FILE1).2
MMTE_attach_io         pcmsplitter 1 MEM $(OUTPUT_FILE1_2) $(OUTPUT_SIZE) 0 0
alias OUTPUT_FILE2_2   $(OUTPUT_FILE2).2
MMTE_attach_io         pcmsplitter 2 MEM $(OUTPUT_FILE2_2) $(OUTPUT_SIZE) 0 0

MMTE_attach_io pcmsplitter 0 MEM $(INPUT_FILE) 0 0 0

#Wait EOS
MMTE_WaitEvent pcmsplitter OMX_EventBufferFlag 1 TIMEOUT
MMTE_WaitEvent pcmsplitter OMX_EventBufferFlag 2 TIMEOUT

# compare second decoded data
MMTE_detach_io pcmsplitter 1
file_comp OUTPUT_FILE1_2 REF_FILE
hash_comp OUTPUT_FILE1_2 REF_DIGEST
MMTE_detach_io pcmsplitter 2
file_comp OUTPUT_FILE2_2 REF_FILE
hash_comp OUTPUT_FILE2_2 REF_DIGEST

# flush buffers
OMX_SendCommand pcmsplitter OMX_CommandFlush 1
MMTE_WaitEvent  pcmsplitter OMX_EventCmdComplete OMX_CommandFlush 1
OMX_SendCommand pcmsplitter OMX_CommandFlush 2
MMTE_WaitEvent  pcmsplitter OMX_EventCmdComplete OMX_CommandFlush 2

# flush MMTE Received Event List
MMTE_FlushReceivedEvent

# attach again input and output files
# !! attach output files
alias OUTPUT_FILE1_3   $(OUTPUT_FILE1).3
MMTE_attach_io         pcmsplitter 1 MEM $(OUTPUT_FILE1_3) $(OUTPUT_SIZE) 0 0
alias OUTPUT_FILE2_3   $(OUTPUT_FILE2).3
MMTE_attach_io         pcmsplitter 2 MEM $(OUTPUT_FILE2_3) $(OUTPUT_SIZE) 0 0

MMTE_attach_io  pcmsplitter 0 MEM $(INPUT_FILE) 0 0 0

#Wait EOS
MMTE_WaitEvent  pcmsplitter OMX_EventBufferFlag 1 TIMEOUT
MMTE_WaitEvent  pcmsplitter OMX_EventBufferFlag 2 TIMEOUT

# Go to Idle
OMX_SendCommand pcmsplitter OMX_CommandStateSet OMX_StateIdle
MMTE_WaitEvent  pcmsplitter OMX_EventCmdComplete OMX_CommandStateSet OMX_StateIdle

# Go to Loaded
OMX_SendCommand pcmsplitter OMX_CommandStateSet OMX_StateLoaded
MMTE_FreeBuffers pcmsplitter 0
MMTE_FreeBuffers pcmsplitter 1
MMTE_FreeBuffers pcmsplitter 2
MMTE_WaitEvent   pcmsplitter OMX_EventCmdComplete OMX_CommandStateSet OMX_StateLoaded

# compare third decoded data
file_comp OUTPUT_FILE1_3 REF_FILE
hash_comp OUTPUT_FILE1_3 REF_DIGEST
file_comp OUTPUT_FILE2_3 REF_FILE
hash_comp OUTPUT_FILE2_3 REF_DIGEST

# Free Handle
OMX_FreeHandle pcmsplitter

mmte_check_CBmessage

# check memory status
MMTE_CheckMemoryStatus

unalias INPUT_FILE
unalias OUTPUT_FILE1
unalias OUTPUT_FILE2
unalias OUTPUT_FILE1_2
unalias OUTPUT_FILE2_2
unalias OUTPUT_FILE1_3
unalias OUTPUT_FILE2_3
unalias OUTPUT_SIZE
unalias REF_FILE
unalias REF_DIGEST
unalias TIMEOUT

test_end
