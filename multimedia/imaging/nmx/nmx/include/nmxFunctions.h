/*
 * Copyright (C) ST-Ericsson SA 2010. All rights reserved.
 * This code is ST-Ericsson proprietary and confidential.
 * Any use of the code for whatever purpose is subject to
 * specific written permission of ST-Ericsson SA.
 */

/*
    File:     nmxFunctions.h
    Author:   Luigi Arnone (luigi.arnone@stericsson.com)  
    Created:  Mon Feb  6 16:33:56 2012
    Purpose:  This file is automatically produced
              In this file there are all function prototype of nmx library

    COPYRIGHT: This program is property of STEricsson Image Quality Team Agrate
*/

#ifndef H_nmxFunctions
#define H_nmxFunctions 1

extern nmxRCode_t nmxCopy_a(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxCrop_ai(nmxMatrix *inp,nmxMatrix *offsets,nmxMatrix *outsize,nmxMatrix *out);
extern nmxRCode_t nmxEnumerate_i(nmxSize_t start,nmxMatrix *a);
extern nmxRCode_t nmxEnumerate_id(nmxSize_t start,nmxMatrix *a);
extern nmxRCode_t nmxEnumerate_if(nmxSize_t start,nmxMatrix *a);
extern nmxRCode_t nmxEnumerate_ii16(nmxSize_t start,nmxMatrix *a);
extern nmxRCode_t nmxEnumerate_ii8(nmxSize_t start,nmxMatrix *a);
extern nmxRCode_t nmxEnumerate_iu(nmxSize_t start,nmxMatrix *a);
extern nmxRCode_t nmxEnumerate_iu16(nmxSize_t start,nmxMatrix *a);
extern nmxRCode_t nmxEnumerate_iu8(nmxSize_t start,nmxMatrix *a);
extern nmxRCode_t nmxFindFirstFn_di(nmxMatrix *inp,double val,uint32_t(*func)(double inp1,double inp2),nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstFn_fi(nmxMatrix *inp,float val,uint32_t(*func)(float inp1,float inp2),nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstFn_i(nmxMatrix *inp,int32_t val,uint32_t(*func)(int32_t inp1,int32_t inp2),nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstFn_i16i(nmxMatrix *inp,int16_t val,uint32_t(*func)(int16_t inp1,int16_t inp2),nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstFn_i8i(nmxMatrix *inp,int8_t val,uint32_t(*func)(int8_t inp1,int8_t inp2),nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstFn_u16i(nmxMatrix *inp,uint16_t val,uint32_t(*func)(uint16_t inp1,uint16_t inp2),nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstFn_u8i(nmxMatrix *inp,uint8_t val,uint32_t(*func)(uint8_t inp1,uint8_t inp2),nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstFn_ui(nmxMatrix *inp,uint32_t val,uint32_t(*func)(uint32_t inp1,uint32_t inp2),nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstGt_di(nmxMatrix *inp,double val,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstGt_fi(nmxMatrix *inp,float val,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstGt_i(nmxMatrix *inp,int32_t val,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstGt_i16i(nmxMatrix *inp,int16_t val,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstGt_i8i(nmxMatrix *inp,int8_t val,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstGt_u16i(nmxMatrix *inp,uint16_t val,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstGt_u8i(nmxMatrix *inp,uint8_t val,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindFirstGt_ui(nmxMatrix *inp,uint32_t val,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindMax_di(nmxMatrix *inp,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindMax_fi(nmxMatrix *inp,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindMax_i(nmxMatrix *inp,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindMax_i16i(nmxMatrix *inp,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindMax_i8i(nmxMatrix *inp,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindMax_u16i(nmxMatrix *inp,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindMax_u8i(nmxMatrix *inp,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxFindMax_ui(nmxMatrix *inp,nmxMatrix *idx,nmxMatrix *valout);
extern nmxRCode_t nmxGet2DMatrixVal_du(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,nmxMatrix *valout);
extern nmxRCode_t nmxGet2DMatrixVal_fu(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,nmxMatrix *valout);
extern nmxRCode_t nmxGet2DMatrixVal_i16u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,nmxMatrix *valout);
extern nmxRCode_t nmxGet2DMatrixVal_i8u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,nmxMatrix *valout);
extern nmxRCode_t nmxGet2DMatrixVal_iu(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,nmxMatrix *valout);
extern nmxRCode_t nmxGet2DMatrixVal_u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,nmxMatrix *valout);
extern nmxRCode_t nmxGet2DMatrixVal_u16u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,nmxMatrix *valout);
extern nmxRCode_t nmxGet2DMatrixVal_u8u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,nmxMatrix *valout);
extern nmxRCode_t nmxGet3DMatrixVal_du(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,nmxMatrix *valout);
extern nmxRCode_t nmxGet3DMatrixVal_fu(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,nmxMatrix *valout);
extern nmxRCode_t nmxGet3DMatrixVal_i16u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,nmxMatrix *valout);
extern nmxRCode_t nmxGet3DMatrixVal_i8u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,nmxMatrix *valout);
extern nmxRCode_t nmxGet3DMatrixVal_iu(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,nmxMatrix *valout);
extern nmxRCode_t nmxGet3DMatrixVal_u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,nmxMatrix *valout);
extern nmxRCode_t nmxGet3DMatrixVal_u16u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,nmxMatrix *valout);
extern nmxRCode_t nmxGet3DMatrixVal_u8u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,nmxMatrix *valout);
extern nmxRCode_t nmxGet4DMatrixVal_du(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,uint32_t idx3,nmxMatrix *valout);
extern nmxRCode_t nmxGet4DMatrixVal_fu(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,uint32_t idx3,nmxMatrix *valout);
extern nmxRCode_t nmxGet4DMatrixVal_i16u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,uint32_t idx3,nmxMatrix *valout);
extern nmxRCode_t nmxGet4DMatrixVal_i8u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,uint32_t idx3,nmxMatrix *valout);
extern nmxRCode_t nmxGet4DMatrixVal_iu(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,uint32_t idx3,nmxMatrix *valout);
extern nmxRCode_t nmxGet4DMatrixVal_u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,uint32_t idx3,nmxMatrix *valout);
extern nmxRCode_t nmxGet4DMatrixVal_u16u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,uint32_t idx3,nmxMatrix *valout);
extern nmxRCode_t nmxGet4DMatrixVal_u8u(nmxMatrix *inp,uint32_t idx0,uint32_t idx1,uint32_t idx2,uint32_t idx3,nmxMatrix *valout);
extern nmxRCode_t nmxGetVectorVal_du(nmxMatrix *inp,uint32_t idx,nmxMatrix *valout);
extern nmxRCode_t nmxGetVectorVal_fu(nmxMatrix *inp,uint32_t idx,nmxMatrix *valout);
extern nmxRCode_t nmxGetVectorVal_i16u(nmxMatrix *inp,uint32_t idx,nmxMatrix *valout);
extern nmxRCode_t nmxGetVectorVal_i8u(nmxMatrix *inp,uint32_t idx,nmxMatrix *valout);
extern nmxRCode_t nmxGetVectorVal_iu(nmxMatrix *inp,uint32_t idx,nmxMatrix *valout);
extern nmxRCode_t nmxGetVectorVal_u(nmxMatrix *inp,uint32_t idx,nmxMatrix *valout);
extern nmxRCode_t nmxGetVectorVal_u16u(nmxMatrix *inp,uint32_t idx,nmxMatrix *valout);
extern nmxRCode_t nmxGetVectorVal_u8u(nmxMatrix *inp,uint32_t idx,nmxMatrix *valout);
extern nmxRCode_t nmxInf_d(nmxMatrix *a);
extern nmxRCode_t nmxInf_f(nmxMatrix *a);
extern nmxRCode_t nmxInf_i(nmxMatrix *a);
extern nmxRCode_t nmxInf_i16(nmxMatrix *a);
extern nmxRCode_t nmxInf_i8(nmxMatrix *a);
extern nmxRCode_t nmxInf_u(nmxMatrix *a);
extern nmxRCode_t nmxInf_u16(nmxMatrix *a);
extern nmxRCode_t nmxInf_u8(nmxMatrix *a);
extern nmxRCode_t nmxMeshRGrid_d(nmxMatrix *grid);
extern nmxRCode_t nmxMeshgridRC_d(nmxMatrix *r,nmxMatrix *c,nmxMatrix *grid);
extern nmxRCode_t nmxMeshgridRC_f(nmxMatrix *r,nmxMatrix *c,nmxMatrix *grid);
extern nmxRCode_t nmxMeshgrid_d(nmxMatrix *x,nmxMatrix *y,nmxMatrix *grid);
extern nmxRCode_t nmxMeshgrid_f(nmxMatrix *x,nmxMatrix *y,nmxMatrix *grid);
extern nmxRCode_t nmxMinusInf_d(nmxMatrix *a);
extern nmxRCode_t nmxMinusInf_f(nmxMatrix *a);
extern nmxRCode_t nmxMinusInf_i(nmxMatrix *a);
extern nmxRCode_t nmxMinusInf_i16(nmxMatrix *a);
extern nmxRCode_t nmxMinusInf_i8(nmxMatrix *a);
extern nmxRCode_t nmxMinusInf_u(nmxMatrix *a);
extern nmxRCode_t nmxMinusInf_u16(nmxMatrix *a);
extern nmxRCode_t nmxMinusInf_u8(nmxMatrix *a);
extern nmxRCode_t nmxOnes_d(nmxMatrix *a);
extern nmxRCode_t nmxOnes_f(nmxMatrix *a);
extern nmxRCode_t nmxOnes_i(nmxMatrix *a);
extern nmxRCode_t nmxOnes_i16(nmxMatrix *a);
extern nmxRCode_t nmxOnes_i8(nmxMatrix *a);
extern nmxRCode_t nmxOnes_u(nmxMatrix *a);
extern nmxRCode_t nmxOnes_u16(nmxMatrix *a);
extern nmxRCode_t nmxOnes_u8(nmxMatrix *a);
extern nmxRCode_t nmxRamp_d(double start,double step,nmxMatrix *vout);
extern nmxRCode_t nmxRamp_f(float start,float step,nmxMatrix *vout);
extern void nmxRevision(uint32_t *major,uint32_t *minor,uint32_t *build);
extern nmxRCode_t nmxRevision_u(nmxMatrix *major,nmxMatrix *minor,nmxMatrix *build);
extern nmxRCode_t nmxSetVectorVal_du(nmxMatrix *inp,uint32_t idxin,uint32_t idxout,nmxMatrix *out);
extern nmxRCode_t nmxSetVectorVal_fu(nmxMatrix *inp,uint32_t idxin,uint32_t idxout,nmxMatrix *out);
extern nmxRCode_t nmxSet_a(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxZeros_d(nmxMatrix *a);
extern nmxRCode_t nmxZeros_f(nmxMatrix *a);
extern nmxRCode_t nmxZeros_i(nmxMatrix *a);
extern nmxRCode_t nmxZeros_i16(nmxMatrix *a);
extern nmxRCode_t nmxZeros_i8(nmxMatrix *a);
extern nmxRCode_t nmxZeros_u(nmxMatrix *a);
extern nmxRCode_t nmxZeros_u16(nmxMatrix *a);
extern nmxRCode_t nmxZeros_u8(nmxMatrix *a);
extern nmxRCode_t nmxLutComposeFunctions_d(nmxMatrix *xscale,nmxMatrix *glut,nmxMatrix *flut,nmxMatrix *fglut);
extern nmxRCode_t nmxLutComposeFunctions_f(nmxMatrix *xscale,nmxMatrix *glut,nmxMatrix *flut,nmxMatrix *fglut);
extern nmxRCode_t nmxLutDecimate_d(nmxMatrix *inx,nmxMatrix *iny,nmxMatrix *outx,nmxMatrix *outy);
extern nmxRCode_t nmxLutDecimate_f(nmxMatrix *inx,nmxMatrix *iny,nmxMatrix *outx,nmxMatrix *outy);
extern nmxRCode_t nmxLutInvFunction_d(nmxMatrix *xscale,nmxMatrix *lut,nmxMatrix *invlut);
extern nmxRCode_t nmxLutInvFunction_f(nmxMatrix *xscale,nmxMatrix *lut,nmxMatrix *invlut);
extern double nmxLutLookup_d(double x,double *inp,double *out,uint32_t len);
extern float nmxLutLookup_f(float x,float *inp,float *out,uint32_t len);
extern nmxRCode_t nmxLutMonotonicLinear_d(nmxMatrix *inx,nmxMatrix *iny,nmxMatrix *tgx,nmxMatrix *outy);
extern nmxRCode_t nmxLutMonotonicLinear_f(nmxMatrix *inx,nmxMatrix *iny,nmxMatrix *tgx,nmxMatrix *outy);
extern nmxRCode_t nmxLutOversamplingLinear_d(nmxMatrix *lut_in,nmxMatrix *lut_out);
extern nmxRCode_t nmxLutOversamplingLinear_f(nmxMatrix *lut_in,nmxMatrix *lut_out);
extern nmxRCode_t nmxLutStepLinear_d(nmxMatrix *inx,nmxMatrix *iny,nmxMatrix *tgx,nmxMatrix *outy);
extern nmxRCode_t nmxLutStepLinear_f(nmxMatrix *inx,nmxMatrix *iny,nmxMatrix *tgx,nmxMatrix *outy);
extern nmxRCode_t nmxAbs_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxAbs_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxAbs_i(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxAbs_i16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxAbs_i8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxCumsum_du(nmxMatrix *inp,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxCumsum_fu(nmxMatrix *inp,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxCumsum_i16ui(nmxMatrix *inp,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxCumsum_i8ui(nmxMatrix *inp,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxCumsum_iu(nmxMatrix *inp,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxCumsum_u(nmxMatrix *inp,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxCumsum_u16u(nmxMatrix *inp,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxCumsum_u8u(nmxMatrix *inp,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxDiff00_du(nmxMatrix *inp,uint32_t iter,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxDiff00_fu(nmxMatrix *inp,uint32_t iter,nmxDimension_t dim,nmxMatrix *out);
extern nmxRCode_t nmxEval1_d(double(*func)(double inp),nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxEval1_f(float(*func)(float inp),nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxEval1_i(int32_t(*func)(int32_t inp),nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxEval1_i16(int16_t(*func)(int16_t inp),nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxEval1_i8(int8_t(*func)(int8_t inp),nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxEval1_u(uint32_t(*func)(uint32_t inp),nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxEval1_u16(uint16_t(*func)(uint16_t inp),nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxEval1_u8(uint8_t(*func)(uint8_t inp),nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxEval2_d(double(*func)(double inp1,double inp2),nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxEval2_f(float(*func)(float inp1,float inp2),nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxEval2_i(int32_t(*func)(int32_t inp1,int32_t inp2),nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxEval2_i16(int16_t(*func)(int16_t inp1,int16_t inp2),nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxEval2_i8(int8_t(*func)(int8_t inp1,int8_t inp2),nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxEval2_u(uint32_t(*func)(uint32_t inp1,uint32_t inp2),nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxEval2_u16(uint16_t(*func)(uint16_t inp1,uint16_t inp2),nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxEval2_u8(uint8_t(*func)(uint8_t inp1,uint8_t inp2),nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxExp_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxExp_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxGamma_d(nmxMatrix *v,nmxMatrix *g,nmxMatrix *out);
extern nmxRCode_t nmxGamma_f(nmxMatrix *v,nmxMatrix *g,nmxMatrix *out);
extern nmxRCode_t nmxInterpolationLinear_d(nmxMatrix *a,nmxMatrix *b,double k,nmxMatrix *c);
extern nmxRCode_t nmxInterpolationLinear_f(nmxMatrix *a,nmxMatrix *b,float k,nmxMatrix *c);
extern nmxRCode_t nmxLog_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxLog_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax_i(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax_i16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax_i8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax_u(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax_u16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax_u8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMean_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMean_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMin_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMin_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMin_i(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMin_i16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMin_i8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMin_u(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMin_u16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMin_u8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxReciprocal_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxReciprocal_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_di(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_di16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_di8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_du(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_du16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_du8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_fi(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_fi16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_fi8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_fu(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_fu16(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRoundTypeConvert_fu8(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRound_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxRound_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxSigmoid_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxSigmoid_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxSqr_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxSqr_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxSqrt_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxSqrt_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxSum_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxSum_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Double_fd(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Double_i16d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Double_i8d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Double_id(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Double_u16d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Double_u8d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Double_ud(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Float_df(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Float_i16f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Float_i8f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Float_if(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Float_u16f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Float_u8f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxTypeConvert2Float_uf(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxAdd_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxAdd_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxAdd_i(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxAdd_i16(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxAdd_i8(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxAdd_u(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxAdd_u16(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxAdd_u8(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxDivideBy00_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxDivideBy00_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxDivideNan0_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxDivideNan0_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxDivide_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxDivide_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxDotT1_d(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDotT1_f(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDotT1_i(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDotT2_d(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDotT2_f(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDotT2_i(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDotTR_d(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDotTR_f(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDotTR_i(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDot_d(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDot_f(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxDot_i(nmxMatrix *x,nmxMatrix *y,nmxMatrix *out);
extern nmxRCode_t nmxInv3x3_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxInv3x3_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxMax2_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxMax2_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxMin2_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxMin2_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxMultiply_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxMultiply_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxPow_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxPow_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxSubtract_d(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern nmxRCode_t nmxSubtract_f(nmxMatrix *a,nmxMatrix *b,nmxMatrix *c);
extern void nmxCopyMatrixD_a(nmxMatrix *mati,nmxMatrix *mato);
extern void nmxCopyMatrixPDS_a(nmxMatrix *mati,nmxMatrix *mato);
extern nmxRCode_t nmxCropMatrix2D_a(nmxMatrix *inp,nmxSize_t offset0,nmxSize_t offset1,nmxSize_t size0,nmxSize_t size1,nmxMatrix *out);
extern nmxRCode_t nmxCropMatrix3D_a(nmxMatrix *inp,nmxSize_t offset0,nmxSize_t offset1,nmxSize_t offset2,nmxSize_t size0,nmxSize_t size1,nmxSize_t size2,nmxMatrix *out);
extern nmxRCode_t nmxCropMatrix_a(nmxMatrix *inp,nmxSize_t *offsets,nmxSize_t *outsize,nmxMatrix *out);
extern nmxRCode_t nmxDecodeSet_a(uint8_t *buffer,nmxSize_t len,nmxMatrix **mats,uint32_t nmats);
extern nmxRCode_t nmxDecode_a(uint8_t *buffer,nmxSize_t len,nmxMatrix *mat);
extern void nmxFlipMatrixD_a(nmxMatrix *mat,uint32_t dim);
extern nmxRCode_t nmxGet2Elements_d(nmxMatrix *mat,double *e1,double *e2);
extern nmxRCode_t nmxGet2Elements_f(nmxMatrix *mat,float *e1,float *e2);
extern nmxRCode_t nmxGet3Elements_d(nmxMatrix *mat,double *e1,double *e2,double *e3);
extern nmxRCode_t nmxGet3Elements_f(nmxMatrix *mat,float *e1,float *e2,float *e3);
extern double nmxGetElement2D_d(nmxMatrix *mat,nmxSize_t i0,nmxSize_t i1);
extern float nmxGetElement2D_f(nmxMatrix *mat,nmxSize_t i0,nmxSize_t i1);
extern nmxRCode_t nmxGetFirstElement_d(nmxMatrix *mat,double *e1);
extern nmxRCode_t nmxGetFirstElement_f(nmxMatrix *mat,float *e1);
extern void nmxGetMatrix2D(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1);
extern void nmxGetMatrix2S(nmxMatrix *mat,nmxStride_t *s0,nmxStride_t *s1);
extern void nmxGetMatrix3D(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2);
extern double* nmxGetMatrixP2DS_d(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxStride_t *s0,nmxStride_t *s1);
extern float* nmxGetMatrixP2DS_f(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxStride_t *s0,nmxStride_t *s1);
extern uint16_t* nmxGetMatrixP2DS_u16(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxStride_t *s0,nmxStride_t *s1);
extern uint8_t* nmxGetMatrixP2DS_u8(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxStride_t *s0,nmxStride_t *s1);
extern double* nmxGetMatrixP2D_d(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1);
extern float* nmxGetMatrixP2D_f(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1);
extern uint32_t* nmxGetMatrixP2D_u(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1);
extern double* nmxGetMatrixP3DS_d(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxStride_t *s0,nmxStride_t *s1,nmxStride_t *s2);
extern float* nmxGetMatrixP3DS_f(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxStride_t *s0,nmxStride_t *s1,nmxStride_t *s2);
extern uint16_t* nmxGetMatrixP3DS_u16(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxStride_t *s0,nmxStride_t *s1,nmxStride_t *s2);
extern uint8_t* nmxGetMatrixP3DS_u8(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxStride_t *s0,nmxStride_t *s1,nmxStride_t *s2);
extern double* nmxGetMatrixP3D_d(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2);
extern float* nmxGetMatrixP3D_f(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2);
extern double* nmxGetMatrixP4DS_d(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxSize_t *d3,nmxStride_t *s0,nmxStride_t *s1,nmxStride_t *s2,nmxStride_t *s3);
extern float* nmxGetMatrixP4DS_f(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxSize_t *d3,nmxStride_t *s0,nmxStride_t *s1,nmxStride_t *s2,nmxStride_t *s3);
extern uint32_t* nmxGetMatrixP4DS_u(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxSize_t *d3,nmxStride_t *s0,nmxStride_t *s1,nmxStride_t *s2,nmxStride_t *s3);
extern double* nmxGetMatrixP4D_d(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxSize_t *d3);
extern float* nmxGetMatrixP4D_f(nmxMatrix *mat,nmxSize_t *d0,nmxSize_t *d1,nmxSize_t *d2,nmxSize_t *d3);
extern int32_t nmxGetVectorDimension_a(nmxMatrix *mat);
extern nmxRCode_t nmxGetVectorPDSD_d(nmxMatrix *vector,double **pdata,nmxSize_t *len,nmxStride_t *stride,uint32_t *dim);
extern nmxRCode_t nmxGetVectorPDSD_f(nmxMatrix *vector,float **pdata,nmxSize_t *len,nmxStride_t *stride,uint32_t *dim);
extern void nmxMemInit(nmxMem *mem,uint32_t size,void *pdata);
extern void *nmxAlloc(nmxMem *mem,uint32_t size);
extern nmxRCode_t nmxCreateMatrix(nmxMem *mem,nmxMatrix *mat,uint32_t ndims,int32_t *dims,int32_t *strides,int32_t etype);
extern nmxRCode_t nmxAllocMatrix(nmxMem *mem,nmxMatrix *mat);
extern nmxRCode_t nmxSerialize_di(nmxMatrix *inp,nmxMatrix *order,nmxMatrix *out);
extern nmxRCode_t nmxSerialize_fi(nmxMatrix *inp,nmxMatrix *order,nmxMatrix *out);
extern nmxRCode_t nmxSerialize_i(nmxMatrix *inp,nmxMatrix *order,nmxMatrix *out);
extern nmxRCode_t nmxSerialize_i16i(nmxMatrix *inp,nmxMatrix *order,nmxMatrix *out);
extern nmxRCode_t nmxSerialize_i8i(nmxMatrix *inp,nmxMatrix *order,nmxMatrix *out);
extern nmxRCode_t nmxSerialize_u16i(nmxMatrix *inp,nmxMatrix *order,nmxMatrix *out);
extern nmxRCode_t nmxSerialize_u8i(nmxMatrix *inp,nmxMatrix *order,nmxMatrix *out);
extern nmxRCode_t nmxSerialize_ui(nmxMatrix *inp,nmxMatrix *order,nmxMatrix *out);
extern nmxRCode_t nmxSet2Elements_d(nmxMatrix *mat,double e1,double e2);
extern double nmxSetElement3D_d(nmxMatrix *mat,nmxSize_t i0,nmxSize_t i1,nmxSize_t i2,double e);
extern double nmxSetElement_d(nmxMatrix *mat,nmxSize_t i0,double e);
extern float nmxSetElement_f(nmxMatrix *mat,nmxSize_t i0,float e);
extern void nmxSetMatrix2D_a(nmxMatrix *mat,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP2DS_d(nmxMatrix *mat,double *pdata,nmxSize_t d0,nmxSize_t d1,nmxStride_t s0,nmxStride_t s1);
extern void nmxSetMatrixP2DS_f(nmxMatrix *mat,float *pdata,nmxSize_t d0,nmxSize_t d1,nmxStride_t s0,nmxStride_t s1);
extern void nmxSetMatrixP2DS_i(nmxMatrix *mat,int32_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxStride_t s0,nmxStride_t s1);
extern void nmxSetMatrixP2DS_i16(nmxMatrix *mat,int16_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxStride_t s0,nmxStride_t s1);
extern void nmxSetMatrixP2DS_i8(nmxMatrix *mat,int8_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxStride_t s0,nmxStride_t s1);
extern void nmxSetMatrixP2DS_u(nmxMatrix *mat,uint32_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxStride_t s0,nmxStride_t s1);
extern void nmxSetMatrixP2DS_u16(nmxMatrix *mat,uint16_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxStride_t s0,nmxStride_t s1);
extern void nmxSetMatrixP2DS_u8(nmxMatrix *mat,uint8_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxStride_t s0,nmxStride_t s1);
extern void nmxSetMatrixP2D_d(nmxMatrix *mat,double *pdata,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP2D_f(nmxMatrix *mat,float *pdata,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP2D_i(nmxMatrix *mat,int32_t *pdata,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP2D_i16(nmxMatrix *mat,int16_t *pdata,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP2D_i8(nmxMatrix *mat,int8_t *pdata,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP2D_u(nmxMatrix *mat,uint32_t *pdata,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP2D_u16(nmxMatrix *mat,uint16_t *pdata,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP2D_u8(nmxMatrix *mat,uint8_t *pdata,nmxSize_t d0,nmxSize_t d1);
extern void nmxSetMatrixP3DS_d(nmxMatrix *mat,double *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2,nmxStride_t s0,nmxStride_t s1,nmxStride_t s2);
extern void nmxSetMatrixP3DS_f(nmxMatrix *mat,float *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2,nmxStride_t s0,nmxStride_t s1,nmxStride_t s2);
extern void nmxSetMatrixP3DS_u8(nmxMatrix *mat,uint8_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2,nmxStride_t s0,nmxStride_t s1,nmxStride_t s2);
extern void nmxSetMatrixP3D_d(nmxMatrix *mat,double *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2);
extern void nmxSetMatrixP3D_f(nmxMatrix *mat,float *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2);
extern void nmxSetMatrixP3D_i(nmxMatrix *mat,int32_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2);
extern void nmxSetMatrixP3D_i16(nmxMatrix *mat,int16_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2);
extern void nmxSetMatrixP3D_i8(nmxMatrix *mat,int8_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2);
extern void nmxSetMatrixP3D_u(nmxMatrix *mat,uint32_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2);
extern void nmxSetMatrixP3D_u16(nmxMatrix *mat,uint16_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2);
extern void nmxSetMatrixP3D_u8(nmxMatrix *mat,uint8_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2);
extern void nmxSetMatrixP4DS_d(nmxMatrix *mat,double *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2,nmxSize_t d3,nmxStride_t s0,nmxStride_t s1,nmxStride_t s2,nmxStride_t s3);
extern void nmxSetMatrixP4DS_f(nmxMatrix *mat,float *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2,nmxSize_t d3,nmxStride_t s0,nmxStride_t s1,nmxStride_t s2,nmxStride_t s3);
extern void nmxSetMatrixP4D_d(nmxMatrix *mat,double *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2,nmxSize_t d3);
extern void nmxSetMatrixP4D_f(nmxMatrix *mat,float *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2,nmxSize_t d3);
extern void nmxSetMatrixP4D_u(nmxMatrix *mat,uint32_t *pdata,nmxSize_t d0,nmxSize_t d1,nmxSize_t d2,nmxSize_t d3);
extern void nmxSetScalar_d(nmxMatrix *mat,double *pdata);
extern void nmxSetScalar_f(nmxMatrix *mat,float *pdata);
extern void nmxSetScalar_i(nmxMatrix *mat,int32_t *pdata);
extern void nmxSetScalar_i16(nmxMatrix *mat,int16_t *pdata);
extern void nmxSetScalar_i8(nmxMatrix *mat,int8_t *pdata);
extern void nmxSetScalar_u(nmxMatrix *mat,uint32_t *pdata);
extern void nmxSetScalar_u16(nmxMatrix *mat,uint16_t *pdata);
extern void nmxSetScalar_u8(nmxMatrix *mat,uint8_t *pdata);
extern void nmxTransposeDims_a(nmxMatrix *mat,nmxDimension_t dx,nmxDimension_t dy);
extern void nmxTranspose_a(nmxMatrix *mat);
extern void nmxPrintMatrix_d(nmxMatrix *mat);
extern void nmxPrintMatrix_f(nmxMatrix *mat);
extern void nmxPrintMatrix_u8(nmxMatrix *mat);
extern nmxRCode_t nmxFilter121_du(nmxMatrix *inp,nmxDimension_t d,uint32_t iter,nmxMatrix *out);
extern nmxRCode_t nmxFilter121_fu(nmxMatrix *inp,nmxDimension_t d,uint32_t iter,nmxMatrix *out);
extern nmxRCode_t nmxXorconv_u8(nmxMatrix *inp,nmxMatrix *kk,nmxMatrix *out);
extern nmxRCode_t nmxLinearIntersection_d(nmxMatrix *inp,double coord,nmxMatrix *out);
extern nmxRCode_t nmxLinearIntersection_f(nmxMatrix *inp,float coord,nmxMatrix *out);
extern nmxRCode_t nmxPlaneRGridSd_d(nmxMatrix *origin,nmxMatrix *planesd);
extern nmxRCode_t nmxPlaneRGridSd_f(nmxMatrix *origin,nmxMatrix *planesd);
extern nmxRCode_t nmxPlaneRGrid_d(nmxMatrix *coef,double dc,nmxMatrix *origin,nmxMatrix *plane);
extern nmxRCode_t nmxPlaneRGrid_f(nmxMatrix *coef,float dc,nmxMatrix *origin,nmxMatrix *plane);
extern nmxRCode_t nmxPoint2PieceWiseLinearProjection_di(double pi0,double pi1,nmxMatrix *pwl,double *po0,double *po1,double *d2p,int32_t *idx,double *ph);
extern nmxRCode_t nmxPoint2PieceWiseLinearProjection_fi(float pi0,float pi1,nmxMatrix *pwl,float *po0,float *po1,float *d2p,int32_t *idx,float *ph);
extern nmxRCode_t nmxPoint2SegmentProjection_d(double pi0,double pi1,nmxMatrix *pwl,double *po0,double *po1,double *d2p,double *ph);
extern nmxRCode_t nmxPoint2SegmentProjection_f(float pi0,float pi1,nmxMatrix *pwl,float *po0,float *po1,float *d2p,float *ph);
extern nmxRCode_t nmxPoints2PieceWiseLinearProjection_di(nmxMatrix *points,nmxMatrix *pwl,nmxMatrix *pmin,nmxMatrix *d2p,nmxMatrix *idx,nmxMatrix *ph);
extern nmxRCode_t nmxPoints2PieceWiseLinearProjection_fi(nmxMatrix *points,nmxMatrix *pwl,nmxMatrix *pmin,nmxMatrix *d2p,nmxMatrix *idx,nmxMatrix *ph);
extern nmxRCode_t nmxBlur124_du(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur124_fu(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur124_i16u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur124_i8u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur124_iu(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur124_u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur124_u16u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur124_u8u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur14_du(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur14_fu(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur14_i16u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur14_i8u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur14_iu(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur14_u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur14_u16u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur14_u8u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur18_du(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur18_fu(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur18_i16u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur18_i8u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur18_iu(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur18_u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur18_u16u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxBlur18_u8u(nmxMatrix *inp,uint32_t iter,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxConvIdx2D_du8(nmxMatrix *inp,nmxMatrix *idxs,nmxMatrix *kernels,uint8_t iter,nmxMatrix *out);
extern nmxRCode_t nmxEdge_du8(nmxMatrix *inp,uint8_t m2,double th,uint8_t radius,double rat,nmxMatrix *out);
extern nmxRCode_t nmxGridIronBayer_d(nmxMatrix *bayer_in,nmxMatrix *grid_iron,double hst,double vst,nmxMatrix *bayer_out);
extern nmxRCode_t nmxGridIronBayer_f(nmxMatrix *bayer_in,nmxMatrix *grid_iron,float hst,float vst,nmxMatrix *bayer_out);
extern nmxRCode_t nmxGridIron_d(nmxMatrix *inp,nmxMatrix *gridiron,double hst,double vst,nmxMatrix *out);
extern nmxRCode_t nmxGridIron_f(nmxMatrix *inp,nmxMatrix *gridiron,float hst,float vst,nmxMatrix *out);
extern nmxRCode_t nmxGridOffsetBayer_d(nmxMatrix *bayer_in,nmxMatrix *grid_iron,double hst,double vst,nmxMatrix *bayer_out);
extern nmxRCode_t nmxGridOffsetBayer_f(nmxMatrix *bayer_in,nmxMatrix *grid_iron,float hst,float vst,nmxMatrix *bayer_out);
extern nmxRCode_t nmxGridOffset_d(nmxMatrix *inp,nmxMatrix *gridiron,double hst,double vst,nmxMatrix *out);
extern nmxRCode_t nmxGridOffset_f(nmxMatrix *inp,nmxMatrix *gridiron,float hst,float vst,nmxMatrix *out);
extern nmxRCode_t nmxGridStatFp_du(nmxMatrix *Bayer,uint32_t BayerType,uint32_t HorizontalRoiStart,uint32_t VerticalRoiStart,uint32_t HorizontalBlkSize,uint32_t VerticalBlkSize,double MaxLevel,double RedSaturationLevel,double GreenSaturationLevel,double BlueSaturationLevel,double Gain,uint32_t LogFlag,nmxMatrix *LogTable,nmxMatrix *GridStat);
extern nmxRCode_t nmxGridStatFp_fu(nmxMatrix *Bayer,uint32_t BayerType,uint32_t HorizontalRoiStart,uint32_t VerticalRoiStart,uint32_t HorizontalBlkSize,uint32_t VerticalBlkSize,float MaxLevel,float RedSaturationLevel,float GreenSaturationLevel,float BlueSaturationLevel,float Gain,uint32_t LogFlag,nmxMatrix *LogTable,nmxMatrix *GridStat);
extern nmxRCode_t nmxGridStat_duu8(nmxMatrix *Bayer,uint32_t BayerType,uint32_t HorizontalRoiStart,uint32_t VerticalRoiStart,double HorizontalBlkSize,double VerticalBlkSize,double MaxLevel,double RedSaturationLevel,double GreenSaturationLevel,double BlueSaturationLevel,double Gain,uint32_t LogFlag,nmxMatrix *LogTable,nmxMatrix *GridStat);
extern nmxRCode_t nmxGridStat_fuu8(nmxMatrix *Bayer,uint32_t BayerType,uint32_t HorizontalRoiStart,uint32_t VerticalRoiStart,float HorizontalBlkSize,float VerticalBlkSize,float MaxLevel,float RedSaturationLevel,float GreenSaturationLevel,float BlueSaturationLevel,float Gain,uint32_t LogFlag,nmxMatrix *LogTable,nmxMatrix *GridStat);
extern nmxRCode_t nmxIiSumAreaBayer_du(nmxMatrix *iimg,nmxSize_t sy,nmxSize_t sx,nmxMatrix *simg);
extern nmxRCode_t nmxIiSumAreaBayer_fu(nmxMatrix *iimg,nmxSize_t sy,nmxSize_t sx,nmxMatrix *simg);
extern nmxRCode_t nmxIiSumArea_du(nmxMatrix *iimg,nmxSize_t sy,nmxSize_t sx,nmxMatrix *simg);
extern nmxRCode_t nmxIiSumArea_fu(nmxMatrix *iimg,nmxSize_t sy,nmxSize_t sx,nmxMatrix *simg);
extern nmxRCode_t nmxImDenoisingBayer_d(nmxMatrix *img,double blackLevel,double whiteLevel,double blackSigma,double whiteSigma,nmxMatrix *imgout,nmxMatrix *weight,nmxMatrix *bsigma2s,nmxMatrix *wsigma2s);
extern nmxRCode_t nmxImHessian_d(nmxMatrix *sdi,nmxMatrix *hess);
extern nmxRCode_t nmxImHessian_f(nmxMatrix *sdi,nmxMatrix *hess);
extern nmxRCode_t nmxImPatchComputeWeightsBayer_d(nmxMatrix *img,nmxMatrix *patch,double sqrSigma,nmxMatrix *weight);
extern nmxRCode_t nmxImPatchComputeWeights_d(nmxMatrix *img,nmxMatrix *patch,nmxMatrix *factors,double sqrSigma,nmxMatrix *weight);
extern nmxRCode_t nmxImSdUpdate_d(nmxMatrix *sdi,nmxMatrix *err,nmxMatrix *sdu);
extern nmxRCode_t nmxImSdUpdate_f(nmxMatrix *sdi,nmxMatrix *err,nmxMatrix *sdu);
extern nmxRCode_t nmxImresizeBicubic05X_d(nmxMatrix *img,nmxMatrix *wimg,nmxMatrix *timg);
extern nmxRCode_t nmxImresizeBicubic2XPh_d(nmxMatrix *img,double ph0,double ph1,nmxMatrix *wimg);
extern nmxRCode_t nmxImresizeBicubic2XPh_f(nmxMatrix *img,float ph0,float ph1,nmxMatrix *wimg);
extern nmxRCode_t nmxImresizeBicubic2X_d(nmxMatrix *img,nmxMatrix *wimg);
extern nmxRCode_t nmxImresizeBicubicR_du(nmxMatrix *img,uint32_t num,uint32_t den,nmxMatrix *wimg,nmxMatrix *timg,nmxMatrix *hmat);
extern nmxRCode_t nmxImresizeBilinear_d(nmxMatrix *img,nmxMatrix *wimg);
extern nmxRCode_t nmxIntegralImage_d(nmxMatrix *img,nmxMatrix *iimg);
extern nmxRCode_t nmxIntegralImage_f(nmxMatrix *img,nmxMatrix *iimg);
extern nmxRCode_t nmxScytheBayer_d(nmxMatrix *bayer_in,double th0,double th1,double tol0,double tol1,nmxMatrix *bayer_out,nmxMatrix *sup);
extern nmxRCode_t nmxScytheBayer_f(nmxMatrix *bayer_in,float th0,float th1,float tol0,float tol1,nmxMatrix *bayer_out,nmxMatrix *sup);
extern nmxRCode_t nmxScythe_d(nmxMatrix *inp,double th0,double th1,double tol0,double tol1,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxScythe_f(nmxMatrix *inp,float th0,float th1,float tol0,float tol1,nmxMatrix *out,nmxMatrix *sup);
extern nmxRCode_t nmxToneMappingLut_d(nmxMatrix *imgin,nmxMatrix *lutx,nmxMatrix *gainlut,double maxval,double valsat,nmxMatrix *imgout);
extern nmxRCode_t nmxToneMappingLut_f(nmxMatrix *imgin,nmxMatrix *lutx,nmxMatrix *gainlut,float maxval,float valsat,nmxMatrix *imgout);
extern nmxRCode_t nmxXTalkBayer_d(nmxMatrix *bayer_in,nmxMatrix *hXTalk,nmxMatrix *vXTalk,double hst,double vst,nmxMatrix *bayer_out);
extern nmxRCode_t nmxImreadPnmHeader_au(char *filename,nmxMatrix *header);
extern nmxRCode_t nmxImreadPnm_au(char *filename,nmxMatrix* img,nmxMatrix *header,char *comments);
extern nmxRCode_t nmxImwritePnm_u16a(nmxMatrix* img,char *filename,uint16_t maxval,char *comments,nmxMatrix *ret);
extern nmxRCode_t nmxImwritePnm_u8a(nmxMatrix* img,char *filename,uint8_t maxval,char *comments,nmxMatrix *ret);
extern nmxRCode_t nmxLoadSet_a(char *filename,nmxMatrix **mats);
extern nmxRCode_t nmxLoad_a(char *filename,nmxMatrix *mat);
extern nmxRCode_t nmxReadHeaderSet_au(char *filename,uint32_t *nmat,uint32_t *hsize,nmxMatrix *headers);
extern nmxRCode_t nmxReadHeader_au(char *filename,nmxMatrix *header);
extern nmxRCode_t nmxSaveSet_a(nmxMatrix **mats,char *filename,uint32_t nmat);
extern nmxRCode_t nmxSave_a(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxSave_dF(nmxMatrix *mat,FILE *outfile,nmxMatrix *ret);
extern nmxRCode_t nmxSave_da(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxSave_fF(nmxMatrix *mat,FILE *outfile,nmxMatrix *ret);
extern nmxRCode_t nmxSave_fa(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxSave_i16F(nmxMatrix *mat,FILE *outfile,nmxMatrix *ret);
extern nmxRCode_t nmxSave_i16a(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxSave_i8F(nmxMatrix *mat,FILE *outfile,nmxMatrix *ret);
extern nmxRCode_t nmxSave_i8a(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxSave_iF(nmxMatrix *mat,FILE *outfile,nmxMatrix *ret);
extern nmxRCode_t nmxSave_ia(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxSave_u16F(nmxMatrix *mat,FILE *outfile,nmxMatrix *ret);
extern nmxRCode_t nmxSave_u16a(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxSave_u8F(nmxMatrix *mat,FILE *outfile,nmxMatrix *ret);
extern nmxRCode_t nmxSave_u8a(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxSave_uF(nmxMatrix *mat,FILE *outfile,nmxMatrix *ret);
extern nmxRCode_t nmxSave_ua(nmxMatrix *mat,char *filename,nmxMatrix *ret);
extern nmxRCode_t nmxPlane2SurfFit_di(nmxMatrix *surf,nmxMatrix *center,int32_t iter,nmxMatrix *res,nmxMatrix *sdi,nmxMatrix *err);
extern nmxRCode_t nmxPlane2SurfFit_fi(nmxMatrix *surf,nmxMatrix *center,int32_t iter,nmxMatrix *res,nmxMatrix *sdi,nmxMatrix *err);
extern nmxRCode_t nmxCubicMax_du(nmxMatrix *valin,nmxMatrix *coordsin,uint32_t md,nmxMatrix *maxvalout,nmxMatrix *maxcoordsout,nmxMatrix *maxflagsout);
extern nmxRCode_t nmxCubicMax_fu(nmxMatrix *valin,nmxMatrix *coordsin,uint32_t md,nmxMatrix *maxvalout,nmxMatrix *maxcoordsout,nmxMatrix *maxflagsout);
extern nmxRCode_t nmxExtendBoundaryGrid_d(nmxMatrix *gridin,nmxMatrix *d0coords,nmxMatrix *d1coords,nmxMatrix *boundary,nmxMatrix *gridout,nmxMatrix *d0out,nmxMatrix *d1out);
extern nmxRCode_t nmxExtendBoundaryGrid_f(nmxMatrix *gridin,nmxMatrix *d0coords,nmxMatrix *d1coords,nmxMatrix *boundary,nmxMatrix *gridout,nmxMatrix *d0out,nmxMatrix *d1out);
extern nmxRCode_t nmxResampleCubic_du(nmxMatrix *valin,nmxMatrix *coordsin,nmxMatrix *coordsout,uint32_t md,nmxMatrix *valout);
extern nmxRCode_t nmxResampleCubic_fu(nmxMatrix *valin,nmxMatrix *coordsin,nmxMatrix *coordsout,uint32_t md,nmxMatrix *valout);
extern nmxRCode_t nmxResampleGridBicubic_du(nmxMatrix *gridin,nmxMatrix *d0coords,nmxMatrix *d1coords,nmxMatrix *d0out,nmxMatrix *d1out,uint32_t md,nmxMatrix *gridout,nmxMatrix *gridtmp);
extern nmxRCode_t nmxResampleGridBicubic_fu(nmxMatrix *gridin,nmxMatrix *d0coords,nmxMatrix *d1coords,nmxMatrix *d0out,nmxMatrix *d1out,uint32_t md,nmxMatrix *gridout,nmxMatrix *gridtmp);
extern nmxRCode_t nmxResampleGrid_d(nmxMatrix *gridin,nmxMatrix *d0coords,nmxMatrix *d1coords,nmxMatrix *d0out,nmxMatrix *d1out,nmxMatrix *gridout);
extern nmxRCode_t nmxResampleGrid_f(nmxMatrix *gridin,nmxMatrix *d0coords,nmxMatrix *d1coords,nmxMatrix *d0out,nmxMatrix *d1out,nmxMatrix *gridout);
extern nmxRCode_t nmxCentroid1_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxCentroid1_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxCentroid_d(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxCentroid_f(nmxMatrix *inp,nmxMatrix *out);
extern nmxRCode_t nmxGaussMix_d(nmxMatrix *inp,nmxMatrix *mix,nmxMatrix *out);
extern nmxRCode_t nmxGaussMix_f(nmxMatrix *inp,nmxMatrix *mix,nmxMatrix *out);
extern nmxRCode_t nmxGaussMixtures2Pdfs_d(nmxMatrix *inp,nmxMatrix *mixtures,nmxMatrix *pdfs);
extern nmxRCode_t nmxGaussMixtures2Pdfs_f(nmxMatrix *inp,nmxMatrix *mixtures,nmxMatrix *pdfs);
extern nmxRCode_t nmxHistColorMatrixTransform_d(nmxMatrix *RgbHistInput,nmxMatrix *Scale,nmxMatrix *ColorMatrix,nmxMatrix *RgbHistOutput,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOutput,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistColorMatrixTransform_f(nmxMatrix *RgbHistInput,nmxMatrix *Scale,nmxMatrix *ColorMatrix,nmxMatrix *RgbHistOutput,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOutput,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistGainTransform_d(nmxMatrix *RgbHistInput,nmxMatrix *Scale,double Gain,nmxMatrix *RgbHistOutput,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOutput,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistGainTransform_f(nmxMatrix *RgbHistInput,nmxMatrix *Scale,float Gain,nmxMatrix *RgbHistOutput,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOutput,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistGainsRgbTransform_d(nmxMatrix *RgbHistInput,nmxMatrix *Scale,nmxMatrix *AwbGains,nmxMatrix *RgbHistGain,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistGain,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistGainsRgbTransform_f(nmxMatrix *RgbHistInput,nmxMatrix *Scale,nmxMatrix *AwbGains,nmxMatrix *RgbHistGain,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistGain,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistMinMaxPeakPoints_d(nmxMatrix *Histograms,nmxMatrix *Scale,double BlackPointPrecentile,double WhitePointPrecentile,nmxMatrix *MinMax,nmxMatrix *CumHistograms);
extern nmxRCode_t nmxHistMinMaxPeakPoints_f(nmxMatrix *Histograms,nmxMatrix *Scale,float BlackPointPrecentile,float WhitePointPrecentile,nmxMatrix *MinMax,nmxMatrix *CumHistograms);
extern nmxRCode_t nmxHistMinMaxPoints_d(nmxMatrix *Histograms,nmxMatrix *Scale,double BlackPointPrecentile,double WhitePointPrecentile,nmxMatrix *MinMax,nmxMatrix *CumHistograms);
extern nmxRCode_t nmxHistMinMaxPoints_f(nmxMatrix *Histograms,nmxMatrix *Scale,float BlackPointPrecentile,float WhitePointPrecentile,nmxMatrix *MinMax,nmxMatrix *CumHistograms);
extern nmxRCode_t nmxHistNlRgbTransform_d(nmxMatrix *RgbHistInput,nmxMatrix *scale,nmxMatrix *Nl,nmxMatrix *RgbHistOutput,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOutput);
extern nmxRCode_t nmxHistNlRgbTransform_f(nmxMatrix *RgbHistInput,nmxMatrix *scale,nmxMatrix *Nl,nmxMatrix *RgbHistOutput,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOutput);
extern nmxRCode_t nmxHistNlTransform_d(nmxMatrix *hin,nmxMatrix *scale,nmxMatrix *nlt,nmxMatrix *hout,nmxMatrix *chin,nmxMatrix *chout);
extern nmxRCode_t nmxHistNlTransform_f(nmxMatrix *hin,nmxMatrix *scale,nmxMatrix *nlt,nmxMatrix *hout,nmxMatrix *chin,nmxMatrix *chout);
extern nmxRCode_t nmxHistSubtractOffsetTransform_d(nmxMatrix *RgbHistInput,nmxMatrix *Scale,double Offset,nmxMatrix *RgbHistOutput,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOutput,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistSubtractOffsetTransform_f(nmxMatrix *RgbHistInput,nmxMatrix *Scale,float Offset,nmxMatrix *RgbHistOutput,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOutput,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistSubtractOffsetsRgbTransform_d(nmxMatrix *RgbHistInput,nmxMatrix *Scale,nmxMatrix *Offsets,nmxMatrix *RgbHistOffset,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOffset,nmxMatrix *Scale2);
extern nmxRCode_t nmxHistSubtractOffsetsRgbTransform_f(nmxMatrix *RgbHistInput,nmxMatrix *Scale,nmxMatrix *Offsets,nmxMatrix *RgbHistOffset,nmxMatrix *CumRgbHistInput,nmxMatrix *CumRgbHistOffset,nmxMatrix *Scale2);

#endif /* H_nmxFunctions */
