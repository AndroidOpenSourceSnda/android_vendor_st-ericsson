<?xml version="1.0"?>
<project name="sign-tool-cli" basedir="." default="sign-tool-cli_release">

	<property name="sign-tool-cli_src_folder" value="./src" />
	<property name="sign-tool-cli_build_folder" value="./build" />
	<property name="libs_jar" value="./../flash_tool_backend/com.stericsson.sdk.common/build/jar/com.stericsson.sdk.common.jar" />
	<property name="signing_jar" value="./../flash_tool_backend/com.stericsson.sdk.signing/build/jar/com.stericsson.sdk.signing.jar" />
	<property name="signing_build" value="./../flash_tool_backend/com.stericsson.sdk.signing" />
	<property name="sign-tool-cli_doc_folder" value="./doc/" />
	<property name="sign-tool-cli_script_folder" value="./scripts" />
	<property name="sign-tool-cli_classes_folder" value="${sign-tool-cli_build_folder}/classes" />
	<property name="sign-tool-cli_test_classes_folder" value="${sign-tool-cli_build_folder}/tests" />
	<property name="sign-tool-cli_jar_folder" value="${sign-tool-cli_build_folder}/jar" />
	<property name="sign-tool-cli_release_folder" value="${sign-tool-cli_build_folder}/release" />
	<property name="sign-tool-cli_jar_name" value="com.stericsson.sdk.signing.cli.jar" />
	<property name="sign-tool-cli_lib_folder" value="./lib" />
	<property name="sign-tool-cli_test_src_folder" value="./test" />
	<property name="sign-tool-cli_test_reports_folder" value="${sign-tool-cli_build_folder}/reports" />
	<property name="install_path" value="" />
	<property name="sign-tool-cli_kpi_folder" value="./kpi" />
	<property name="sign-tool-cli_instrumented_classes" value="${sign-tool-cli_build_folder}/instrumented" />
	<property name="sign-tool-cli_checkstyle_conf_folder" value="${sign-tool-cli_kpi_folder}/checkstyle" />
	<property name="sign-tool-cli_junit_jar" value="${sign-tool-cli_lib_folder}/junit-4.6.jar" />
	<property name="sign-tool-cli_easymock_jar" value="${sign-tool-cli_lib_folder}/easymock.jar" />
	<property name="bc_jar" value="./../flash_tool_backend/com.stericsson.sdk.signing/lib/bcprov-ext-jdk15-143.jar" />

	<path id="sign-tool-cli_build_classpath">
		<pathelement location="${sign-tool-cli_lib_folder}/commons-cli-1.2.jar" />
		<pathelement location="${sign-tool-cli_lib_folder}/log4j-1.2.15.jar" />
		<pathelement location="${libs_jar}" />
		<pathelement location="${signing_jar}" />
		<pathelement location="${bc_jar}" />
	</path>

	<path id="sign-tool-cli_build_test_classpath">
		<pathelement location="${sign-tool-cli_junit_jar}" />
		<pathelement location="${sign-tool-cli_lib_folder}/commons-cli-1.2.jar" />
		<pathelement location="${sign-tool-cli_easymock_jar}" />
		<pathelement location="${sign-tool-cli_lib_folder}/log4j-1.2.15.jar" />
		<pathelement location="${libs_jar}" />
		<pathelement location="${signing_jar}" />
		<pathelement location="${bc_jar}" />
		<pathelement path="${sign-tool-cli_classes_folder}" />
	</path>

	<!-- configure cobertura ant task -->

	<property name="sign-tool-cli_cobertura_dir" value="${sign-tool-cli_kpi_folder}/cobertura" />

	<path id="sign-tool-cli_cobertura_classpath">
		<fileset dir="${sign-tool-cli_cobertura_dir}">
			<include name="cobertura.jar" />
			<include name="lib/**/*.jar" />
		</fileset>
	</path>

	<taskdef classpathref="sign-tool-cli_cobertura_classpath" resource="tasks.properties" />

	<!-- end configure cobertura ant task -->

	<!-- configure checkstyle ant task -->

	<property name="sign-tool-cli_checkstyle_jar_folder" value="${sign-tool-cli_kpi_folder}/checkstyle" />

	<path id="sign-tool-cli.checkstyle_classpath">
		<fileset dir="${sign-tool-cli_checkstyle_jar_folder}">
			<include name="checkstyle-all-4.4.jar" />
		</fileset>
	</path>

	<taskdef classpathref="sign-tool-cli.checkstyle_classpath" resource="checkstyletask.properties" />

	<!-- end configure checkstyle ant task -->

	<target name="sign-tool-cli_release_test" depends="sign-tool-cli_test, sign-tool-cli_release" />

	<target name="sign-tool-cli_release" depends="sign-tool-cli_jar, sign-tool-cli_test_compile">
		<!-- copy libraries produced by this project -->
		<copy file="${sign-tool-cli_jar_folder}/${sign-tool-cli_jar_name}" todir="${sign-tool-cli_release_folder}" />
		<!-- copy dependency libraries -->
		<copy file="${sign-tool-cli_lib_folder}/commons-cli-1.2.jar" todir="${sign-tool-cli_release_folder}" />
		<copy file="${sign-tool-cli_lib_folder}/log4j-1.2.15.jar" todir="${sign-tool-cli_release_folder}" />
		<copy file="${libs_jar}" todir="${sign-tool-cli_release_folder}" />
		<copy file="${signing_jar}" todir="${sign-tool-cli_release_folder}" />
		<copy file="${bc_jar}" todir="${sign-tool-cli_release_folder}" />

		<!--copy scripts to release folder-->
		<copy todir="${sign-tool-cli_release_folder}">
			<fileset dir="${sign-tool-cli_script_folder}/" />
		</copy>

		<!--copy docs to release folder-->
		<copy todir="${sign-tool-cli_release_folder}/doc">
			<fileset dir="${sign-tool-cli_doc_folder}" />
		</copy>
	</target>


	<target name="sign-tool-cli_jar" depends="sign-tool-cli_compile">
		<!-- create jar of compiled files -->
		<jar destfile="${sign-tool-cli_jar_folder}/${sign-tool-cli_jar_name}" basedir="${sign-tool-cli_classes_folder}" />
	</target>

	<target name="sign-tool-cli_compile" depends="sign-tool-cli_init">
		<ant antfile="${signing_build}/build-release.xml" inheritAll="false" />
		<!-- compile java sources -->
		<javac srcdir="${sign-tool-cli_src_folder}" destdir="${sign-tool-cli_classes_folder}" classpathref="sign-tool-cli_build_classpath" debug="true" />
	</target>

	<target name="sign-tool-cli_test_compile" depends="sign-tool-cli_compile">
		<ant antfile="${signing_build}/build-release.xml" inheritAll="false" />
		<!-- compile java sources -->
		<javac srcdir="${sign-tool-cli_test_src_folder}" destdir="${sign-tool-cli_test_classes_folder}" classpathref="sign-tool-cli_build_test_classpath" debug="true" />
	</target>

	<target name="sign-tool-cli_init" depends="sign-tool-cli_clean">
		<!-- create output directories -->
		<mkdir dir="${sign-tool-cli_jar_folder}" />
		<mkdir dir="${sign-tool-cli_classes_folder}" />
		<mkdir dir="${sign-tool-cli_release_folder}" />
		<mkdir dir="${sign-tool-cli_test_classes_folder}" />
		<mkdir dir="${sign-tool-cli_test_reports_folder}" />
		<mkdir dir="${sign-tool-cli_release_folder}/doc" />
	</target>

	<target name="sign-tool-cli_clean">
		<!-- delete output directories -->
		<delete dir="${sign-tool-cli_jar_folder}" />
		<delete dir="${sign-tool-cli_classes_folder}" />
		<delete dir="${sign-tool-cli_release_folder}" />
		<delete dir="${sign-tool-cli_test_classes_folder}" />
		<delete dir="${sign-tool-cli_test_reports_folder}" />
	</target>

	<target name="sign-tool-cli_test" depends="sign-tool-cli_test_compile">
		<mkdir dir="${sign-tool-cli_test_reports_folder}/junit" />
		<junit fork="yes" forkmode="once" printsummary="yes" haltonfailure="no" showoutput="yes">
			<!--jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y" /-->
			<classpath>
				<pathelement location="${sign-tool-cli_junit_jar}" />
				<pathelement location="${sign-tool-cli_easymock_jar}" />
				<pathelement location="${sign-tool-cli_lib_folder}/commons-cli-1.2.jar" />
				<pathelement location="${sign-tool-cli_lib_folder}/log4j-1.2.15.jar" />
				<pathelement location="${libs_jar}" />
				<pathelement location="${signing_jar}" />
				<pathelement location="${bc_jar}" />
				<pathelement path="${sign-tool-cli_classes_folder}" />
				<pathelement path="${sign-tool-cli_test_classes_folder}" />
			</classpath>

			<formatter type="xml" />

			<batchtest fork="yes" todir="${sign-tool-cli_test_reports_folder}/junit">
				<fileset dir="${sign-tool-cli_test_src_folder}">
					<include name="**/*Test*.java" />
					<exclude name="**/AllTest*.java" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${sign-tool-cli_test_reports_folder}/junit">
			<fileset dir="${sign-tool-cli_test_reports_folder}/junit">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${sign-tool-cli_test_reports_folder}/junit/html" />
		</junitreport>
	</target>

	<target name="sign-tool-cli.ALL_REPORTS" depends="sign-tool-cli.COBERTURA_REPORT, sign-tool-cli.CHECKSTYLE" />

	<!-- cobertura targets -->

	<target name="sign-tool-cli.TEST_INSTRUMENTED" depends="sign-tool-cli.COBERTURA_INSTRUMENT">
		<mkdir dir="${sign-tool-cli_test_reports_folder}/junit" />
		<junit fork="yes" forkmode="once" printsummary="yes" haltonfailure="no" showoutput="yes">
			<!--jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=y" /-->
			<classpath>
				<pathelement path="${sign-tool-cli_instrumented_classes}" />
				<pathelement location="${sign-tool-cli_junit_jar}" />
				<pathelement location="${sign-tool-cli_easymock_jar}" />
				<pathelement location="${sign-tool-cli_lib_folder}/commons-cli-1.2.jar" />
				<pathelement location="${sign-tool-cli_lib_folder}/log4j-1.2.15.jar" />
				<pathelement location="${libs_jar}" />
				<pathelement location="${signing_jar}" />
				<pathelement location="${bc_jar}" />
				<pathelement path="${sign-tool-cli_classes_folder}" />
				<pathelement path="${sign-tool-cli_test_classes_folder}" />
			</classpath>
			<classpath refid="sign-tool-cli_cobertura_classpath" />

			<formatter type="xml" />

			<batchtest todir="${sign-tool-cli_test_reports_folder}/junit">
				<fileset dir="${sign-tool-cli_test_src_folder}">
					<include name="**/*Test*.java" />
					<exclude name="**/AllTest*.java" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${sign-tool-cli_test_reports_folder}/junit">
			<fileset dir="${sign-tool-cli_test_reports_folder}/junit">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${sign-tool-cli_test_reports_folder}/junit/html" />
		</junitreport>
	</target>

	<target name="sign-tool-cli.COBERTURA_REPORT" depends="sign-tool-cli.TEST_INSTRUMENTED">

		<delete dir="${sign-tool-cli_test_reports_folder}/code-coverage" />

		<!-- create coverage report -->
		<cobertura-report format="html" destdir="${sign-tool-cli_test_reports_folder}/code-coverage">
			<!-- include every source folder for instrumented classes -->
			<fileset dir="${sign-tool-cli_src_folder}" includes="**/*.java" />
		</cobertura-report>
	</target>

	<target name="sign-tool-cli.COBERTURA_INSTRUMENT" depends="sign-tool-cli_test_compile">

		<delete file="cobertura.ser" />
		<delete dir="${sign-tool-cli_instrumented_classes}" />

		<mkdir dir="${sign-tool-cli_instrumented_classes}" />

		<!-- execute the instrumentation task on release bundles -->
		<cobertura-instrument todir="${sign-tool-cli_instrumented_classes}">
			<fileset dir="${sign-tool-cli_classes_folder}" />
		</cobertura-instrument>
	</target>

	<!-- end cobertura targets -->

	<!-- checkstyle targets -->

	<target name="sign-tool-cli.CHECKSTYLE" depends="sign-tool-cli_compile">
		<mkdir dir="${sign-tool-cli_test_reports_folder}/checkstyle" />
		<checkstyle config="${sign-tool-cli_checkstyle_conf_folder}/ruleset.xml" failOnViolation="false">
			<classpath>
				<pathelement location="${sign-tool-cli_classes_folder}" />
				<pathelement location="${sign-tool-cli_lib_folder}/commons-cli-1.2.jar" />
				<pathelement location="${signing_jar}" />
			</classpath>
			<!-- every .java file that should be checked -->
			<fileset dir="${sign-tool-cli_src_folder}" includes="**/*.java" />
			<formatter type="xml" toFile="${sign-tool-cli_test_reports_folder}/checkstyle/report.xml" />
		</checkstyle>
		<xslt in="${sign-tool-cli_test_reports_folder}/checkstyle/report.xml" out="${sign-tool-cli_test_reports_folder}/checkstyle/report.html" style="${sign-tool-cli_checkstyle_conf_folder}/checkstyle-noframes-sorted.xsl" />
	</target>

	<!-- end checkstyle targets -->

</project>
