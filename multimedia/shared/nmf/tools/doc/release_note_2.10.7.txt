***************************************
* Nomadik Multiprocessing Framework   *
***************************************
    "Compile, c'est gagne" (M. Guene)
    "La doc, c'est le code" (J.-P. Fassino)

Author:         Jean-Philippe Fassino & NMF Team
Organization:   MMD

1   GENERAL INFORMATIONS

1.1 Release number:

Release number: 2.10.7 "Pietra"
Date:           January 14th, 2011

1.2 Board configuration:

    Successfully tested configuration:
        - STn8500 SVA & SIA (Only flashed with UBoot)
            * MOP500-ED & HREF-ED V1.0
            * MOP500 V1.0 & HREF V1.0
            * MOP500 V1.1 & HREF V1.1
            * MOP500 V2.0

    Not 100% successfully tested configuration:

    Not (or no more) supported configuration:
        - STn8500 SVA & SIA
            * SVP 2.0 (only 90% of test suite passed !)
                Issue in TLM IP HSEM
                STM IP trace not available
            * SVP 2.2 (only 90% of test suite passed !)
                Issue in TLM IP HSEM
                Argc/Argv not supported
            * SVP 2.3 (No more tested)
            * SVP 2.4 (No more tested)
            * SVP 3.2.0
                Issue in MMDSP simulator where code execution in ESRAM failed
            * SVP 3.2.4
                Issue in MMDSP simulator where 16bits based accessed failed
            * PEPS 8500
                PEPS SIA with an ED mapping + MMDSP V1


1.3 First level support contact:

1.4 Symbian baseport version:

    Not relevant

1.5 Tools versioning:

    See MMENV for more information.

    ARM compiler version:
        - RVCT 4.0 for 8500

    MMDSP compiler version
        - MMDSP Toolset 4.3.0

    - Java SE Runtime Environment
        http://java.sun.com
        At least JRE 1.5 or JRE 6 (on Linux please use at least JRE 6 due to JVM bug regarding execution access rights)


2   COMMON COMPONENT LIST VERSIONING:

    - RODOS
        http://gnx772:8080/dokuwiki/doku.php?id=mmf:tools:rodos


3   RELEASE CONTENT

    See tools/doc/file_hierarchies.txt about file tree organization !

    - Toolbox

    - Component Manager

    - Execution Engine


3.1 Component Manager

    - Add CM_ReleaseComponent API in order to allow release of component file previously 
      pushed by CM_PushComponent in CM
    
    - Fix memory leak in case of error in CM_Bindxxx

    - Fix Fido 318803; Domain crash in CM in case of wrong usage by user


3.2 MPC Execution Engine

    
3.3 Host Execution Engine


3.4 OS integration guidelines

    - pushComponent no more used in standard deployment, use only as locked cache

    - ENGINE API change (All dataFile could be null if file already in cache):
         CM_ENGINE_BindComponent
                +    const char                     *dataFileTrace
         CM_ENGINE_BindComponentAsynchronous
                +    const char                     *dataFileSkeletonOrEvent
                +    const char                     *dataFileStub
        CM_ENGINE_BindComponentFromCMCore
                +    const char                     *dataFileSkeleton
        CM_ENGINE_BindComponentToCMCore
                +    const char                     *dataFileStub
        CM_ENGINE_GetRequiredComponentFiles
                -    t_uint32                       *listSize
                +    t_uint32                       listSize
        CM_ENGINE_PushComponent 
                -    t_uint8                        locked
              
    - OS API change (All dataFile could be null if file already in cache):
        CM_OS_BindComponent
                +    const char                     *dataFileTrace
                +    t_uint32                       dataFileTraceSize
        CM_OS_BindComponentAsynchronous
                +    const char                     *dataFileSkeletonOrEvent
                +    t_uint32                       dataFileSkeletonOrEventSize
                +    const char                     *dataFileStub 
                +    t_uint32                       dataFileStubSize
        CM_OS_BindComponentFromCMCore
                +    const char                     *dataFileSkeleton
                +    t_uint32                       dataFileSkeletonSize
        CM_OS_BindComponentToCMCore
                +    const char                     *dataFileStub
                +    t_uint32                       dataFileStubSize
        CM_OS_GetRequiredComponentFiles
                -    t_uint32                       *listSize
                +    t_uint32                       listSize
        CM_OS_PushComponent
                -    t_uint8 locked
    

3.5 Tools


3.6 Programming model


3.7 Linux & Symbian


3.8 Examples


3.9 Packaging


4   DEFECT STATUS

    Defects must be logged on VI:
        http://gnb500137.gnb.st.com/VIWebDev/default.asp
            /Dev/OS and Platform/Multimedia/COMMON/NMF/**
            _Support if category unknown


4.1 Fixed defect list


4.2 Active defect list


5   COMPILATION RULES

5.1 Compilation procedure & options

    Compilation options is fully based on MMENV.


5.2 Compilation configurability

    EXPORT_SHARED: can be re-defined for exporting API in a specific manner
    IMPORT_SHARED: can be re-defined for importing API in a specific manner


5.3 Installation

    Please define components.txt using RODOS.


6   QA CHECK STATUS

6.1 Compilation warning / error

    - Component manager
        All warnings and errors removed.


6.2 Code Static analysis result

    - Component manager
        Coverity done (each remaining issue could be explained).


6.3 Symbian Creasy scheduler check (valid until dual core ED mode supported)

    Done.

6.4 Confidentiality safe

    Done.

7   DOCUMENTS

    Test report available at:
        http://gnx2487:9000/
