/*
 * Copyright (C) ST-Ericsson SA 2010. All rights reserved.
 * This code is ST-Ericsson proprietary and confidential.
 * Any use of the code for whatever purpose is subject to
 * specific written permission of ST-Ericsson SA.
 */ 

/*F(*************************************************************************** 
* File name  : lsimcp.him
* Module     : LSIMCP
*----------------------------------------------------------------------------* 
*----------------------------------------------------------------------------* 
*                             DESCRIPTION
*  This file contains the macros used by LSIMCP-RRC and LSIMCP-RRLP.
*
* 
*----------------------------------------------------------------------------* 
***************************************************************************)F*/
/* == HISTORY ===============================================================*/
/*  Name     |    Date       |     Action                                    */
/*---------------------------------------------------------------------------*/ 
/*  Balaji   | 16-JUL-2008   | Creation                                      */
/*  Balaji   | 05-AUG-2008   | Modified                                      */
/*  Archana  | 05-AUG-2008   | Modified                                      */
/*  Balaji  | 19-AUG-2008   | Modified                                      */
/*  Balaji  | 22-AUG-2008   | Modified                                      */
/*---------------------------------------------------------------------------*/

#ifndef LSIMCP_HIM
#define LSIMCP_HIM

/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_GET_TRANSACTION_IDENTIFFIER
 *-----------------------------------------------------------------------------
 * Purpose
 *
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_VALID_POINTER( a )        ( NULL != (a) ) 


/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_GET_TRANSACTION_IDENTIFFIER
 *-----------------------------------------------------------------------------
 * Purpose
 *
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_INVALID_POINTER( a )      ( NULL == (a) ) 


/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_GET_TRANSACTION_IDENTIFFIER
 *-----------------------------------------------------------------------------
 * Purpose
 *
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_SET_FLAG_IN_A( a , b )    ( a ) = ( a ) | ( b )


/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_GET_TRANSACTION_IDENTIFFIER
 *-----------------------------------------------------------------------------
 * Purpose
 *
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_RESET_FLAG_IN_A( a , b )      ( a ) = ( a ) & ( ~ ( b ) )


/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_GET_TRANSACTION_IDENTIFFIER
 *-----------------------------------------------------------------------------
 * Purpose
 *
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_IS_FLAG_SET_IN_A( a , b )     ( ( ( a ) & ( b ) ) != 0 )


/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_GET_TRANSACTION_IDENTIFFIER
 *-----------------------------------------------------------------------------
 * Purpose
 *
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_TOGGLE_FLAG_IN_A( a , b )     ( a ) = ( ( a ) ^ ( b ) )


/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_GET_TRANSACTION_IDENTIFFIER
 *-----------------------------------------------------------------------------
 * Purpose
 *
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_FREE_MEMORY(x)  do {if (MC_LSIMCP_VALID_POINTER(x)) \
                        { MC_RTK_FREE_MEMORY(x);      \
                        x = NULL;} }while(0)


/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_GET_TRANSACTION_IDENTIFFIER
 *-----------------------------------------------------------------------------
 * Purpose
 * Macro used to retrieve data pointer from a message
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_GET_MSG_POINTER(p_FsmObject)  p_FsmObject->u_ReceivedObj.p_MessageAddress


#ifdef LSIMCP_TIME_STAMP_ACTIVATE
/*MN(**************************************************************************
 *
 * Macro name : MC_LSIMCP_TRACE_TIMESTAMP
 *-----------------------------------------------------------------------------
 * Purpose
 *
 *-----------------------------------------------------------------------------
**************************************************************************)MN*/
#define MC_LSIMCP_TRACE_TIMESTAMP    do { uint64_t vl_timer = 0;                 \
                                     MC_UTSER_GET_SYSTEM_TICK(&vl_timer);      \
                                     sprintf((char*)a_lsimcp_TraceErrorBuffer, "\nTimeStamp = %ld", vl_timer); \
                                     MC_LSIMCP_TRACE_STRING(a_lsimcp_TraceErrorBuffer);                        \
                                     memset(a_lsimcp_TraceErrorBuffer, '\0', sizeof(a_lsimcp_TraceErrorBuffer)); } while(0)
#else /* LSIMCP_TIME_STAMP_ACTIVATE */

#define MC_LSIMCP_TRACE_TIMESTAMP

#endif /* LSIMCP_TIME_STAMP_ACTIVATE */


#endif /* LSIMCP_HIM */
