# if previously in pause state, just restart move to executing

if IN_PAUSE == OMX_TRUE
	alias IN_PAUSE OMX_FALSE
else
OMX_SetConfig my_sink_VPB0  OMX_IndexConfigCaptureMode bContinuous=0 bFrameLimited=0 nFrameLimit=0
OMX_SetConfig my_sink_VPB0  IFM_IndexParamFakesinkPathname contentURI=RAMDISK_PATH_VF_LR
if VF_DISPLAY_ACTIVATION == OMX_TRUE
	OMX_SetConfig my_sink_VPB0  IFM_IndexConfigIqtCaptureMode nSaveMode=NORMAL_SAVE_MODE bSaveFrameCount=VF_SAVE_FRAME_COUNT nSaveFirstFrame=VF_SAVE_FIRST_FRAME bSaveFrameByFrame=SAVING_FRAME_BY_FRAME nFrameSkippingNumber=VF_FRAME_SKIPPING_NUMBER nInstanceNumber=FAKESINK_VF_INSTANCE_0 nAcknowledge=OMX_FALSE
	OMX_SetConfig my_sink_VPB0  OMX_IndexConfigCapturing bEnabled=VF_DISPLAY_ACTIVATION
else
	OMX_SetConfig my_sink_VPB0  IFM_IndexConfigIqtCaptureMode nSaveMode=VF_SAVE_MODE bSaveFrameCount=VF_SAVE_FRAME_COUNT nSaveFirstFrame=VF_SAVE_FIRST_FRAME bSaveFrameByFrame=SAVING_FRAME_BY_FRAME nFrameSkippingNumber=0 nInstanceNumber=FAKESINK_VF_INSTANCE_0 nAcknowledge=OMX_FALSE
	if VF_SAVE_ACTIVATION == OMX_TRUE
		OMX_SetConfig my_sink_VPB0  OMX_IndexConfigCapturing bEnabled=VF_SAVE_RESOLUTION_LR
	else
		OMX_SetConfig my_sink_VPB0  OMX_IndexConfigCapturing bEnabled=VF_SAVE_ACTIVATION
	endif  
endif

endif
#IN PAUSE

do $(IMG_SCRIPT)/unitary/statemachine/network_executing.ite

echo File_saved
