# vim:syntax=make:
# -*- Mode: Makefile -*-

#-------------------------------
# Default Config
#-------------------------------
## The MMDSP code is board specific
MMDSP_CODE_IS_BOARD_SPECIFIC:=true

include $(MMROOT)/shared/makefiles/Make.config
include $(MMROOT)/video/makefiles/Make.config

TARGET=rvct
COMPONENT_TOP_DIR=..

#----------------------------
#     Entry for Make.rules
#
#VPATH    : Search Path for prerequisites.(see default value in Make.rules)
#CFLAGS   : Extra flags to give to the C compiler. (see default value in Make.rules)
#CXXFLAGS : Extra flags to give to the C++ compiler. (see default value in Make.rules)
#CPPFLAGS : Extra flags to give to the C preprocessor.(see default value in Make.rules)
#
#DEP_DEP  : Dependencies of dependency files. 
#           (for example generated header file before generating *.d)
#TOBECLEAN: List of files you want to delete on realclean target.
#
#LIBNAME  : Name of the library without the prefix lib.
#LIBOBJ   : List of object file to put in the lib
#
#EXENAME  : Name of executable
#EXEOBJ   : List of object file needed to build executable
#         For multiple executable, suffix these to variable with _1, _2 ...  
#
#LOCALLIBS: list of local libraries to be linked with executable
#
#----------------------------

ifdef NO_HAMAC
CPPFLAGS   += -DNO_HAMAC
SUFFIX      = _sw
else
SUFFIX      = 
endif


# OST trace capability
include $(COMPONENT_TOP_DIR)/make.ost_conf
OST_SRC_DIR = src 
OST_COMPONENT_ID = $(OST_COMPONENT_ID_HOST)
OST_DICO_NAME = $(OST_COMPONENT_NAME)_host
CPPFLAGS  += -I$(COMPONENT_TOP_DIR)/inc/autogentraces


CPPFLAGS  += -Iinc
CPPFLAGS  += -I$(COMPONENT_TOP_DIR)/..
CPPFLAGS  += -I$(COMPONENT_TOP_DIR)/$(BASE_REPOSITORY_HOST)
CPPFLAGS  += -I$(COMPONENT_TOP_DIR)/$(BASE_REPOSITORY_MPC)
CPPFLAGS  += -I$(MM_IDT_DIR)
CPPFLAGS  += -I$(MMROOT)/video/components/vc1dec/nmf_repository/$(MMPLATFORM)
#CPPFLAGS  += -I$(MMROOT)/video/components/vc1dec/nmf_repository/$(MMPLATFORM)/vc1dec_arm_nmf_proxynmf$(SUFFIX)/src 
CPPFLAGS  += -I$(MMROOT)/video/components/common/inc 
CPPFLAGS  += -I$(MMROOT)/video/components/common/nmf/arm/inc
CPPFLAGS  += -I../arm_nmf
CPPFLAGS  += -I../arm_nmf/inc
CPPFLAGS  += -I$(MMROOT)/video/components/vc1dec/mpc/share
ifeq ($(MYMMSYSTEM),symbian)
CPPFLAGS  += -I../nmf_repository/$(MMDSPPROCESSOR)
else
CPPFLAGS  += -I$(MMROOT)/shared/ens/nmf/host/nmf_repository/$(MMPROCESSOR)-x-$(MMCOMPILER)-x/host
endif
CPPFLAGS  += -I$(BUILD_INTERMEDIATES_DIR)/../$(NMF_REPO_DIR)/$(MMPLATFORM)

CPPFLAGS+= -DNMF_BUILD 
CPPFLAGS += -D_CACHE_OPT_

// CPPFLAGS += -DPACKET_VIDEO_SUPPORT

LIBOBJ   = \
		vc1Dec_Proxy \
		vc1Dec_ParamAndConfig \
		vc1Dec_Port \
		vc1Dec_NmfHost_ProcessingComponent

# Stubs and Skeletons                
VPATH += ../nmf_repository/$(MMDSPPROCESSOR)/host
ifndef NO_HAMAC
LIBOBJ += video_vc1dec_ddep_cpp-mpc2user-skels
LIBOBJ += video_vc1dec_ddep_cpp-user2mpc-stubs
#LIBOBJ += video_debug_dsp_printf_cpp-mpc2user-skels
LIBOBJ += video_vc1dec_vc1dec-mpc2user-skels
endif

OBJ_EXT     = o$(SUFFIX)
CPPFLAGS   += -O3
#CPPFLAGS   += -I$(MMROOT)/video/components/vc1dec/nmf_repository/$(MMPLATFORM)/vc1dec_arm_nmf_vc1dec$(SUFFIX)/src
LIBNAME     = st_vc1dec_ddep$(SUFFIX)
INSTALL_LIB = libst_vc1dec_ddep$(SUFFIX).a
LIBTOADD    = $(MMROOT)/video/nmf_repository/$(MMPLATFORM)/vc1dec/arm_nmf/proxynmf$(SUFFIX).a



HEADER=

GROUP_PATH = $(MMROOT)/video/components/vc1dec
ifdef NO_HAMAC
GROUP_NAME = $(SYMBIAN_VARIANT_NAME)/group/sw
SYMBIAN_PRJNAME = vc1swdecoder
SYMBIAN_BLD_EXTRA_MMP += "vc1swproxynmf_$(SYMBIAN_VARIANT_NAME).mmp"
SYMBIAN_SYSTEMSTATICLIB += vc1swproxynmf_$(SYMBIAN_VARIANT_NAME).lib
#elf4nmf_EXPORT_DIR =    # Define empty because nothing to export
else
GROUP_NAME = $(SYMBIAN_VARIANT_NAME)/group/hw
SYMBIAN_PRJNAME = vc1hwdecoder
SYMBIAN_BLD_EXTRA_MMP += "vc1hwproxynmf_$(SYMBIAN_VARIANT_NAME).mmp"
SYMBIAN_SYSTEMSTATICLIB += vc1hwproxynmf_$(SYMBIAN_VARIANT_NAME).lib
elf4nmf_EXPORT_DIR = nmf
endif
SYMBIAN_EXTRA_MMP_FLAG += "EPOCALLOWDLLDATA"
SYMBIAN_EXTRA_MMP_FLAG += "SMPSAFE"
SYMBIAN_EXTRA_MMP_FLAG += "OPTION armcc --cpp"
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/assp/nomadik/nmf/share
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/osi/shared
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/osi/shared/nmf
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/osi/shared/host
SYMBIAN_SYSTEMINCLUDE +=/epoc32/include/osi/video
SYMBIAN_USERINCLUDE_EXTRA += "../../../arm_nmf/api"
SYMBIAN_SYSTEMLIB += omxilenswrapper.lib
SYMBIAN_SYSTEMLIB += omxilmmhwbuffer.lib
SYMBIAN_SYSTEMLIB += hostee.lib
SYMBIAN_SYSTEMLIB += st_vfm.lib
SYMBIAN_SYSTEMLIB += st_ens.lib
SYMBIAN_SYSTEMLIB += cm_user_api.lib
SYMBIAN_SYSTEMLIB += euser.lib
SYMBIAN_SYSTEMLIB += stuutils.lib
SYMBIAN_SYSTEMSTATICLIB += omxilensservices.lib
SYMBIAN_SYSTEMSTATICLIB += omxilosalservices.lib
video_EXPORTDIR = inc



ifeq ($(MYMMSYSTEM),symbian)
ifndef NO_HAMAC
SYMBIAN_ALL=symb-prj
todo: lib SYMBIAN_ALL
endif
else
EXTRA_ALL=merge
todo: lib merge
endif

  $(info CPPFLAGS= $(CPPFLAGS))
#-------------------------------
# Generic Rules
#-------------------------------
include $(MMROOT)/shared/makefiles/Make.rules
ifndef NO_HAMAC
include $(MMROOT)/video/makefiles/Make.symbian.rules
endif

#-------------------------------
# local Rules
#-------------------------------
merge:
	@echo Merging codec and proxy in the same library
	\rm -rf libtmp;mkdir libtmp;cd libtmp;$(AR) -x $(LIBTOADD)
	$(VERCHAR)$(AR) $(AR_OPTION) $(LIBRARY)  libtmp/*;\rm -rf libtmp

