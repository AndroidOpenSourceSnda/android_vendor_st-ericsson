<?xml version="1.0"?>
<dthapi>
  <module name="tatltest">
	  <argument path="/DTH/TEST/config/panels/range.xml" type="FILE" user_data="ACT_TEST_RANGE_PANEL_FILE">
	  <info>Automatic Procedure\nFilepath=/var/local/tat/tatltest/config/panels\nFilename=range.xml</info> 
	  </argument>
    <argument path="/DTH/TEST/U8/U8FULLRANGE" type="U8" user_data="UFULLRANGE:0" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/U8/U8MIDDLEMAX" type="U8" user_data="MIDDLEMAX:1" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x7F" max="0xFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/U8/U8RANGE" type="U8" user_data="URANGE:2" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x7F" max="0xF0"/>
      <info></info>
    </argument>
    
    <argument path="/DTH/TEST/U16/U16FULLRANGE" type="U16" user_data="UFULLRANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/U16/U16MIDDLEMAX" type="U16" user_data="MIDDLEMAX" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x7F00" max="0xFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/U16/U16RANGE" type="U16" user_data="URANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x7F00" max="0xFF00"/>
      <info></info>
    </argument>
    
    <argument path="/DTH/TEST/U32/U32FULLRANGE" type="U32" user_data="UFULLRANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/U32/U32MIDDLEMAX" type="U32" user_data="MIDDLEMAX" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x7F000000" max="0xFFFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/U32/U32RANGE" type="U32" user_data="URANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x7F000000" max="0xF0000000"/>
      <info></info>
    </argument>
    
    <argument path="/DTH/TEST/U64/U64FULLRANGE" type="U64" user_data="UFULLRANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFFFFFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/U64/U64MIDDLEMAX" type="U64" user_data="MIDDLEMAX" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x7F00000000000000" max="0xFFFFFFFFFFFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/U64/U64RANGE" type="U64" user_data="URANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x7F00000000000000" max="0xF000000000000000"/>
      <info></info>
    </argument>

    <argument path="/DTH/TEST/S8/S8FULLRANGE" type="S8" user_data="FULLRANGE:0" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x81" max="0x7F"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S8/S8POSITIV" type="S8" user_data="POSITIV:1" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x1" max="0x7F"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S8/S8NEGATIV" type="S8" user_data="NEGATIV:2" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x81" max="0xFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S8/S8RANGE" type="S8" user_data="RANGE:3" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x8F" max="0x70"/>
      <info></info>
    </argument>
    
    <argument path="/DTH/TEST/S16/S16FULLRANGE" type="S16" user_data="FULLRANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x8001" max="0x7FFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S16/S16POSITIV" type="S16" user_data="POSITIV" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x1" max="0x7FFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S16/S16NEGATIV" type="S16" user_data="NEGATIV" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x8001" max="0xFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S16/S16RANGE" type="S16" user_data="RANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x8F00" max="0x7000"/>
      <info></info>
    </argument>
    
    <argument path="/DTH/TEST/S32/S32FULLRANGE" type="S32" user_data="FULLRANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x80000001" max="0x7FFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S32/S32POSITIV" type="S32" user_data="POSITIV" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x1" max="0x7FFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S32/S32NEGATIV" type="S32" user_data="NEGATIV" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x80000001" max="0xFFFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S32/S32RANGE" type="S32" user_data="RANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x8F000000" max="0x70000000"/>
      <info></info>
    </argument>
    
     <argument path="/DTH/TEST/S64/S64FULLRANGE" type="S64" user_data="FULLRANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S64/S64POSITIV" type="S64" user_data="POSITIV" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x1" max="0x7FFFFFFFFFFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S64/S64NEGATIV" type="S64" user_data="NEGATIV" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x8000000000000001" max="0xFFFFFFFFFFFFFFFF"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/S64/S64RANGE" type="S64" user_data="RANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x8F00000000000001" max="0x7000000000000000"/>
      <info></info>
    </argument>
    
    <argument path="/DTH/TEST/Float/FLOATFULLRANGE" type="FLOAT" user_data="FULLRANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <info></info>
    </argument>
    <argument path="/DTH/TEST/Float/FLOATPOSITIV" type="FLOAT" user_data="POSITIV" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0x1" max="1000"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/Float/FLOATNEGATIV" type="FLOAT" user_data="NEGATIV" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="-1000" max="-1"/>
      <info></info>
    </argument>
    <argument path="/DTH/TEST/Float/FLOATRANGE" type="FLOAT" user_data="RANGE" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="-1000" max="1000"/>
      <info></info>
    </argument>
    
    <argument path="/DTH/TEST/File/EMPTYFILE" type="FILE" user_data="IN_FILESTORAGE">
        <info>Automatic Procedure\nFilepath=/var/local/tat/tatltest\nFilename=emptyfile.txt</info>
    </argument>   
    <argument path="/DTH/TEST/File/ONEBYTEFILE" type="FILE" user_data="IN_FILESTORAGE">
        <info>Automatic Procedure\nFilepath=/var/local/tat/tatltest\nFilename=onebytefile.txt</info>
    </argument>    
    <argument path="/DTH/TEST/File/HUNDREDBYTEFILE" type="FILE" user_data="IN_FILESTORAGE">
        <info>Automatic Procedure\nFilepath=/var/local/tat/tatltest\nFilename=hundredfile.txt</info>
    </argument>
    
     <argument path="/DTH/TEST/String/EMPTYSTRING" type="STRING" user_data="STRINGEMPTY:0" get="Dth_Test_Get" set="Dth_Test_Set">
		 <info></info>
		 <range min="-1" max="0"/>
    </argument>    
    <argument path="/DTH/TEST/String/ONEBYTESTRING" type="STRING" user_data="STRINGONEBYTE:1" get="Dth_Test_Get" set="Dth_Test_Set">
        <info>?</info>
		<range min="0x0" max="1"/>
	</argument>
    <argument path="/DTH/TEST/String/SIXTEENBYTESTRING" type="STRING" user_data="STRINGSIXTEENBYTE:2" get="Dth_Test_Get" set="Dth_Test_Set">
		<info>0123456789ABCDEF</info>
		<range min="0x0" max="16"/>
    </argument>
     <argument path="/DTH/TEST/String/FULLSTRING" type="STRING" user_data="STRINGFULL:3" get="Dth_Test_Get" set="Dth_Test_Set">
		<info>Full String</info>
	</argument>

    <argument path="/DTH/TEST/BitField/BITFIELDU8BONEGROUP" type="U8B" user_data="ONEGROUP:0" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFF"/>
      <info>Label Bitfield: BIT FIELD U8B ONE GROUP\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU8BONEGROUP/8BITS" type="BITFIELD_8_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/BitField/BITFIELDU8BTWOGROUPS" type="U8B" user_data="TWOGROUPS:1" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x1F"/>
      <info>Label Bitfield: BIT FIELD U8B TWO GROUPS\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU8BTWOGROUPS/1BIT" type="BITFIELD_1_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="1" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU8BTWOGROUPS/4BITS" type="BITFIELD_4_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x7" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/BitField/BITFIELDU8BTHREEGROUPS" type="U8B" user_data="THREEGROUPS:3" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFF"/>
      <info>Label Bitfield: BIT FIELD U8B THREE GROUPS\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU8BTHREEGROUPS/1BIT" type="BITFIELD_1_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="1" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU8BTHREEGROUPS/4BITS" type="BITFIELD_4_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xF" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU8BTHREEGROUPS/3BITS" type="BITFIELD_3_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x7" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    
    <argument path="/DTH/TEST/BitField/BITFIELDU16BONEGROUP" type="U16B" user_data="ONEGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFF"/>
      <info>Label Bitfield: BIT FIELD U16B ONE GROUP\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU16BONEGROUP/16BITS" type="BITFIELD_16_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/BitField/BITFIELDU16BTWOGROUPS" type="U16B" user_data="TWOGROUPS" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x1F"/>
      <info>Label Bitfield: BIT FIELD U16B TWO GROUPS\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU16BTWOGROUPS/1BIT" type="BITFIELD_1_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="1" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU16BTWOGROUPS/4BITS" type="BITFIELD_4_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/BitField/BITFIELDU16BTHREEGROUPS" type="U16B" user_data="THREEGROUPS" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFF"/>
      <info>Label Bitfield: BIT FIELD U16B THREE GROUPS\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU16BTHREEGROUPS/1BIT" type="BITFIELD_1_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="1" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU16BTHREEGROUPS/4BITS" type="BITFIELD_4_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xF" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU16BTHREEGROUPS/11BITS" type="BITFIELD_11_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x7FF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    
    <argument path="/DTH/TEST/BitField/BITFIELDU32BONEGROUP" type="U32B" user_data="ONEGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFF"/>
      <info>Label Bitfield: BIT FIELD U32B ONE GROUP\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU32BONEGROUP/32BITS" type="BITFIELD_16_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/BitField/BITFIELDU32BTWOGROUPS" type="U32B" user_data="TWOGROUPS" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x1F"/>
      <info>Label Bitfield: BIT FIELD U32B TWO GROUPS\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU32BTWOGROUPS/1BIT" type="BITFIELD_1_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="1" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU32BTWOGROUPS/4BITS" type="BITFIELD_4_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/BitField/BITFIELDU32BTHREEGROUPS" type="U32B" user_data="THREEGROUPS" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFF"/>
      <info>Label Bitfield: BIT FIELD U32B THREE GROUPS\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU32BTHREEGROUPS/1BIT" type="BITFIELD_1_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="1" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU32BTHREEGROUPS/4BITS" type="BITFIELD_4_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xF" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU32BTHREEGROUPS/27BITS" type="BITFIELD_27_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x7FFFFF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    
    <argument path="/DTH/TEST/BitField/BITFIELDU64BONEGROUP" type="U64B" user_data="ONEGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFFFFFFFFFF"/>
      <info>Label Bitfield: BIT FIELD U64B ONE GROUP\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU64BONEGROUP/64BITS" type="BITFIELD_64_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFFFFFFFFFF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/BitField/BITFIELDU64BTWOGROUPS" type="U64B" user_data="TWOGROUPS" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x1F"/>
      <info>Label Bitfield: BIT FIELD U64B TWO GROUPS\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU64BTWOGROUPS/1BIT" type="BITFIELD_1_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="1" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU64BTWOGROUPS/4BITS" type="BITFIELD_4_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/BitField/BITFIELDU64BTHREEGROUPS" type="U64B" user_data="THREEGROUPS" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFFFFFFFFFF"/>
      <info>Label Bitfield: BIT FIELD U64B THREE GROUPS\nElementperline : 4\ndynamic Control : true</info>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU64BTHREEGROUPS/1BIT" type="BITFIELD_1_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="1" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU64BTHREEGROUPS/4BITS" type="BITFIELD_4_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xF" />
      <info>Display : spinbox</info>
      </argument>
      
      <argument path="/DTH/TEST/BitField/BITFIELDU64BTHREEGROUPS/59BITS" type="BITFIELD_59_bits" user_data="BITFIELDSUBGROUP" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0x7FFFFFFFFFFFFFF" />
      <info>Display : spinbox</info>
      </argument>
    </argument>
    
    <argument path="/DTH/TEST/Array/U8/U8OneRowOneCol" type="U8" user_data="U8_1_ROW_1COL" get="Dth_Test_Get" set="Dth_Test_Set">
      <array rows="1" cols="1"/>
      <info>Label Box:u8[1][1] value\n</info>
    </argument>
    
    <argument path="/DTH/TEST/Array/U16/U16OneRowOneCol" type="U16" user_data="U16_1_ROW_1COL" get="Dth_Test_Get" set="Dth_Test_Set">
      <array rows="1" cols="1"/>
      <info>Label Box:u16[1][1] value\n</info>
    </argument>
    
    <argument path="/DTH/TEST/Array/U32/U32OneRowOneCol" type="U32" user_data="U32_1_ROW_1COL" get="Dth_Test_Get" set="Dth_Test_Set">
      <array rows="1" cols="1"/>
      <info>Label Box:u32[1][1] value\n</info>
    </argument>
    
    <argument path="/DTH/TEST/Array/U64/U32OneRowOneCol" type="U64" user_data="U64_1_ROW_1COL" get="Dth_Test_Get" set="Dth_Test_Set">
      <array rows="1" cols="1"/>
      <info>Label Box:u64[1][1] value\n</info>
    </argument>
    
     <argument path="/DTH/TEST/Array/U8/U8TwoRowsTwoCols" type="U8" user_data="U8_2_ROW_2COL" get="Dth_Test_Get" set="Dth_Test_Set">
      <array rows="2" cols="2"/>
      <info>Label Box:u8[2][2] value\n</info>
    </argument>
    
    <argument path="/DTH/TEST/Array/U16/U16TwoRowsTwoCols" type="U16" user_data="U16_2_ROW_2COL" get="Dth_Test_Get" set="Dth_Test_Set">
      <array rows="2" cols="2"/>
      <info>Label Box:u16[2][2] value\n</info>
    </argument>
    
    <argument path="/DTH/TEST/Array/U32/U32TwoRowsTwoCols" type="U32" user_data="U32_2_ROW_2COL" get="Dth_Test_Get" set="Dth_Test_Set">
      <array rows="2" cols="2"/>
      <info>Label Box:u32[2][2] value\n</info>
    </argument>
    
    <argument path="/DTH/TEST/Array/U64/U64TwoRowsTwoCols" type="U64" user_data="U64_2_ROW_2COL" get="Dth_Test_Get" set="Dth_Test_Set">
      <array rows="2" cols="2"/>
      <info>Label Box:u64[2][2] value\n</info>
    </argument>
    
     <argument path="/DTH/TEST/DEBUG/TRACE" type="U8" user_data="DEBUG_TATLTEST" get="Dth_Test_Get" set="Dth_Test_Set">
      <enum>
          <enum_item value="DISABLE_TATLTEST_TRACE">Disable Trace</enum_item>
          <enum_item value="ENABLE_TATLTEST_TRACE">Enable trace</enum_item>
        </enum>
      <info>Label Box: Trace activation</info>
    </argument>
    
     <action path="/DTH/TEST/DB/ActionRegister" type="U8" user_data="ACT_DB_ACTION_REGISTER" set="DthDBAction_set" exec="DthDBAction_exec">
          <info>Label Action:DB Action Register</info>
	  <enum>
	  <enum_item value="DB_READ:0">READ</enum_item>
	  <enum_item value="DB_WRITE:1">WRITE</enum_item>
	  </enum>
	  <info>Label Action:Action Register</info>
	  <argument path="/DTH/TEST/DB/ActionRegister/Address" type="U32" user_data="ACT_DB_ADDRESS_REGISTER" set="DthDBAction_set">
          <info>Label Box:DB Register Address</info>
          </argument>
          <argument path="/DTH/TEST/DB/ActionRegister/Value" type="U32" user_data="ACT_DB_VALUE_REGISTER" set="DthDBAction_set" get="DthDBAction_get">
          <info>Label Box:DB Register Value</info>
          </argument>
          </action>
          
          <action path="/DTH/TEST/AB/ActionRegister" type="U8" user_data="ACT_AB_ACTION_REGISTER" set="DthABAction_set" exec="DthABAction_exec">
          <info>Label Action:AB Action Register</info>
	  <enum>
	  <enum_item value="AB_READ:0">READ</enum_item>
	  <enum_item value="AB_WRITE:1">WRITE</enum_item>
	  </enum>
	  <info>Label Action:Action Register</info>
	  <argument path="/DTH/TEST/AB/ActionRegister/Address" type="U32" user_data="ACT_AB_ADDRESS_REGISTER" set="DthABAction_set">
          <info>Label Box:AB Register Address</info>
          </argument>
          <argument path="/DTH/TEST/AB/ActionRegister/Value" type="U8" user_data="ACT_AB_VALUE_REGISTER" set="DthABAction_set" get="DthABAction_get">
          <info>Label Box:AB Register value</info>
          </argument>
	  </action>
	  <argument path="/DTH/TEST/Error/Numeric" type="U32" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
		  <info></info>
	  </argument>
	  <argument path="/DTH/TEST/Error/String" type="STRING" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
		  <info></info>
	  </argument>
	  <argument path="/DTH/TEST/Error/File" type="FILE" user_data="ERROR_CASE">
		<info>Automatic Procedure\nFilepath=\nFilename=range.xml</info>
	  </argument>
	  <argument path="/DTH/TEST/Error/Array" type="U8" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
		  <array rows="2" cols="2"/>
		  <info>Label Box:u8[2][2] value\n</info>
	  </argument>
	  <argument path="/DTH/TEST/Error/BitField/" type="U8B" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
		  <range min="0" max="0xFF"/>
		  <info>Label Bitfield: BIT FIELD U8B ONE GROUP\nElementperline : 4\ndynamic Control : true</info>
		  <argument path="/DTH/TEST/Error/BitField/8BITS" type="BITFIELD_8_bits" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
			  <range min="0" max="0xFF" />
			  <info>Display : spinbox</info>
		  </argument>
	  </argument>
	  <action path="/DTH/TEST/Error/Action/" type="STRING" user_data="ERROR_CASE" exec="Dth_Test_ExecError">
		  <info>Label Action:used to test performance of 9PDTH\ntest:Performance\n</info>
		  <argument path="/DTH/TEST/Error/Action/IO_1" type="U8" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
			  <range min="0" max="255"/>
			  <info>test:Performance\n</info>
		  </argument>
      <argument path="/DTH/TEST/Error/Action/IO_2" type="U8" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
        <range min="0" max="255"/>
        <info>test:Performance\n</info>
      </argument>
      <argument path="/DTH/TEST/Error/Action/IO_3" type="U8" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
        <range min="0" max="255"/>
        <info>test:Performance\n</info>
      </argument>
      <argument path="/DTH/TEST/Error/Action/IO_4" type="U8" user_data="ERROR_CASE" get="Dth_Test_GetError" set="Dth_Test_SetError">
        <range min="0" max="255"/>
        <info>test:Performance\n</info>
      </argument>
    </action>
    <argument path="/DTH/TEST/Async/U32Loop" type="U32" user_data="ASYNC_EVENT" get="Dth_Test_Get" set="Dth_Test_Set">
      <range min="0" max="0xFFFFFFFF"/>
      <info></info>
    </argument>

  </module>
</dthapi>
